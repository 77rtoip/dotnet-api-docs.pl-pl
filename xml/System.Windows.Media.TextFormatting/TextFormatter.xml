<Type Name="TextFormatter" FullName="System.Windows.Media.TextFormatting.TextFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ecec9d8061270f30b1841250241c6359899f6f47" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69447275" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextFormatter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextFormatter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextFormatter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFormatter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type TextFormatter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia usługi do formatowania tekstu i łamania wierszy tekstu przy użyciu niestandardowego układu tekstu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.TextFormatting.TextFormatter>jest aparatem [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] tekstu, który zapewnia usługi do formatowania tekstu i przerywania wierszy tekstu. <xref:System.Windows.Media.TextFormatting.TextFormatter>może obsługiwać różne formaty znaków tekstu i style akapitów, a także obsługę międzynarodowego układu tekstu.  
  
 [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] W<xref:System.Windows.Media.TextFormatting.TextFormatter> przeciwieństwie do tradycyjnego tekstu, współdziała z klientem układu tekstu za pomocą zestawu metod wywołania zwrotnego. Wymaga, aby klient dostarczał te metody w implementacji <xref:System.Windows.Media.TextFormatting.TextSource> klasy. Na poniższym diagramie przedstawiono interakcje klienta programu formatującego tekstu i klienta układu tekstu.  
  
 ![Diagram klienta układu tekstu i elementu Textformatującego] (~/add/media/textformatter01.png "Diagram klienta układu tekstu i elementu Textformatującego")  
Interakcja między klientem układu tekstu a obiektem textformatującego  
  
## <a name="text-formatting-services"></a>Usługi formatowania tekstu  
 <xref:System.Windows.Media.TextFormatting.TextFormatter>zapewnia obsługę funkcji tekstowych, takich jak Typografia OpenType, a także obsługę funkcji tekstowych, wierszy i poziomów akapitu.  
  
 Poniższa tabela zawiera listę najważniejszych <xref:System.Windows.Media.TextFormatting.TextFormatter> usług dla funkcji tekstowych.  
  
|Funkcja|Opis|  
|-------------|-----------------|  
|Pędzel tła|<xref:System.Windows.Media.Brush> Używany na potrzeby koloru tła. <xref:System.Windows.Media.TextFormatting.TextRunProperties.BackgroundBrush%2A> Zobacz właściwość.|  
|Wyrównanie linii bazowej|Określa odległość linii bazowej w wierszu. <xref:System.Windows.Media.TextFormatting.TextRunProperties.BaselineAlignment%2A> Zobacz właściwość.|  
|Łączenie czcionek|Zapewnia łączenie czcionek za pomocą czcionek złożonych.|  
|Pędzel pierwszego planu|<xref:System.Windows.Media.Brush> Używany na potrzeby koloru pierwszego planu. <xref:System.Windows.Media.TextFormatting.TextRunProperties.ForegroundBrush%2A> Zobacz właściwość.|  
|OpenType|Zaawansowane funkcje typograficzne OpenType, takie jak alternatywy kontekstowe i Ligatury standardowe. Zobacz właściwości <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties> klasy.|  
|Rodzaj|Określa krój pisma, a także grubość, styl i rozciąganie. <xref:System.Windows.Media.TextFormatting.TextRunProperties.Typeface%2A> Zobacz właściwość.|  
|Dekoracja tekstu|Zapewnia obsługę <xref:System.Windows.TextDecoration> obiektów, takich jak podkreślenie lub przekreślenie. <xref:System.Windows.Media.TextFormatting.TextRunProperties.TextDecorations%2A> Zobacz właściwość.|  
|Efekty tekstu|Zapewnia obsługę <xref:System.Windows.Media.TextEffect> obiektów. <xref:System.Windows.Media.TextFormatting.TextRunProperties.TextEffects%2A> Zobacz właściwość.|  
  
 Poniższa tabela zawiera listę najważniejszych <xref:System.Windows.Media.TextFormatting.TextFormatter> usług obsługiwanych przez funkcje na poziomie akapitu.  
  
|Funkcja|Opis|  
|-------------|-----------------|  
|Kierunek przepływu|Kierunek przepływu w akapicie — od lewej do prawej lub od prawej do lewej. <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.FlowDirection%2A> Zobacz właściwość.|  
|Wcięcie wiersza|Wcięcie dla każdego wiersza w akapicie. <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.Indent%2A> Zobacz właściwość.|  
|Obrys|Charakterystyki znacznika pierwszego wiersza w akapicie. <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextMarkerProperties%2A> Zobacz właściwość.|  
|Wcięcie akapitu|Wcięcie pierwszego wiersza w akapicie. <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.ParagraphIndent%2A> Zobacz właściwość.|  
|Karty|Obejmuje obsługę wyrównania karty i lidera kart.|  
|Szerokość|Określ minimalną i maksymalną szerokość akapitu. <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth%2A> Zobacz metody.|  
|Zawijanie wierszy|Określ sposób zawijania tekstu po osiągnięciu krawędzi przepływu. <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextWrapping%2A> Zobacz właściwość.|  
  
 Poniższa tabela zawiera listę najważniejszych <xref:System.Windows.Media.TextFormatting.TextFormatter> usług obsługiwanych przez funkcje na poziomie wiersza.  
  
|Funkcja|Opis|  
|-------------|-----------------|  
|Wyrównanie|Wyrównanie tekstu — do lewej, do prawej, do środka lub do justowania. <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextAlignment%2A> Zobacz właściwość.|  
|Wysokość wiersza|Wysokość wiersza. <xref:System.Windows.Media.TextFormatting.TextLine.Height%2A> Zobacz właściwość.|  
|Zwijanie linii|Obsługa zwijania wierszy. <xref:System.Windows.Media.TextFormatting.TextLine.Collapse%2A> Zobacz metodę.|  
|Pomiar czarnych pól|Przedstawia metryki używane do układania znaku w czcionce urządzenia. Zapoznaj <xref:System.Windows.Media.CharacterMetrics> się z klasą.|  
|Obsługa karetki|Obsługa nawigacji karetki i edycji. Zobacz właściwości trafień <xref:System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit%2A> <xref:System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit%2A>znaku, takie jak i. <xref:System.Windows.Media.TextFormatting.TextLine>|  
  
 Poniższa tabela zawiera listę najważniejszych <xref:System.Windows.Media.TextFormatting.TextFormatter> usług dla funkcji tekstowych na poziomie uruchomienia.  
  
|Funkcja|Opis|  
|-------------|-----------------|  
|Ukryty przebieg|Zakres znaków, które nie są widoczne. <xref:System.Windows.Media.TextFormatting.TextHidden> Zobacz obiekt.|  
|Kluczowa|Podział wiersza i akapitu.|  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Windows.Media.TextFormatting.TextFormatter> obiektu do generowania sformatowanych wierszy tekstu, które mogą być wyświetlane jako obiekty rysunkowe.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet1)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet1)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">Przykład zaawansowanego formatowania tekstu</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.TextFormatter Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.TextFormatting.TextFormatter Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As TextFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::TextFormatting::TextFormatter ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Windows.Media.TextFormatting.TextFormatter" Usage="System.Windows.Media.TextFormatting.TextFormatter.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> klasy. Jest to metoda statyczna.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.TextFormatter Create (System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.TextFormatting.TextFormatter Create(valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Create(System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::TextFormatting::TextFormatter ^ Create(System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="F#" Value="static member Create : System.Windows.Media.TextFormattingMode -&gt; System.Windows.Media.TextFormatting.TextFormatter" Usage="System.Windows.Media.TextFormatting.TextFormatter.Create textFormattingMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textFormattingMode"><see cref="T:System.Windows.Media.TextFormattingMode" /> Określa układ <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />tekstu.</param>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> klasy z określonym trybem formatowania. Jest to metoda statyczna.</summary>
        <returns>Nowe wystąpienie <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.TextFormattingMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textFormatter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zarządzane i niezarządzane zasoby używane przez <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> obiekt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatLine">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy obiekt <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> , który służy do formatowania i wyświetlania zawartości dokumentu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatLine">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine FormatLine (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, double paragraphWidth, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine FormatLine(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, float64 paragraphWidth, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ FormatLine(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, double paragraphWidth, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextLineBreak ^ previousLineBreak);" />
      <MemberSignature Language="F#" Value="abstract member FormatLine : System.Windows.Media.TextFormatting.TextSource * int * double * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextLineBreak -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textFormatter.FormatLine (textSource, firstCharIndex, paragraphWidth, paragraphProperties, previousLineBreak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphWidth" Type="System.Double" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="previousLineBreak" Type="System.Windows.Media.TextFormatting.TextLineBreak" />
      </Parameters>
      <Docs>
        <param name="textSource"><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> Wartość, która reprezentuje źródło tekstu dla wiersza.</param>
        <param name="firstCharIndex"><see cref="T:System.Int32" /> Wartość określająca indeks znaku początkowego w wierszu.</param>
        <param name="paragraphWidth"><see cref="T:System.Double" /> Wartość określająca szerokość akapitu wypełnianego linią.</param>
        <param name="paragraphProperties"><see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> Wartość, która reprezentuje właściwości akapitu, na przykład kierunek przepływu, wyrównanie lub wcięcia.</param>
        <param name="previousLineBreak"><see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> Wartość określająca stan programu formatującego tekst w warunkach, w których poprzedni wiersz w akapicie został przerwany przez proces formatowania tekstu.</param>
        <summary>Tworzy obiekt <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> , który służy do formatowania i wyświetlania zawartości dokumentu.</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.TextLine" /> Wartość, która reprezentuje wiersz tekstu, który może być wyświetlany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A> jak używać metody do zwrócenia sformatowanego. <xref:System.Windows.Media.TextFormatting.TextLine>  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet2)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatLine">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine FormatLine (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, double paragraphWidth, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak, System.Windows.Media.TextFormatting.TextRunCache textRunCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine FormatLine(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, float64 paragraphWidth, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak, class System.Windows.Media.TextFormatting.TextRunCache textRunCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ FormatLine(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, double paragraphWidth, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextLineBreak ^ previousLineBreak, System::Windows::Media::TextFormatting::TextRunCache ^ textRunCache);" />
      <MemberSignature Language="F#" Value="abstract member FormatLine : System.Windows.Media.TextFormatting.TextSource * int * double * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextLineBreak * System.Windows.Media.TextFormatting.TextRunCache -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textFormatter.FormatLine (textSource, firstCharIndex, paragraphWidth, paragraphProperties, previousLineBreak, textRunCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphWidth" Type="System.Double" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="previousLineBreak" Type="System.Windows.Media.TextFormatting.TextLineBreak" />
        <Parameter Name="textRunCache" Type="System.Windows.Media.TextFormatting.TextRunCache" />
      </Parameters>
      <Docs>
        <param name="textSource"><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> Obiekt, który reprezentuje źródło tekstu dla wiersza.</param>
        <param name="firstCharIndex"><see cref="T:System.Int32" /> Wartość określająca indeks znaku początkowego w wierszu.</param>
        <param name="paragraphWidth"><see cref="T:System.Double" /> Wartość określająca szerokość akapitu wypełnianego linią.</param>
        <param name="paragraphProperties"><see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> Obiekt, który reprezentuje właściwości akapitu, na przykład kierunek przepływu, wyrównanie lub wcięcia.</param>
        <param name="previousLineBreak"><see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> Obiekt, który określa stan programu formatującego tekstu, pod warunkiem, że poprzedni wiersz w akapicie został przerwany przez proces formatowania tekstu.</param>
        <param name="textRunCache"><see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> Obiekt, który reprezentuje mechanizm buforowania dla układu tekstu.</param>
        <summary>Tworzy obiekt <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> , który służy do formatowania i wyświetlania zawartości dokumentu.</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.TextLine" /> Wartość, która reprezentuje wiersz tekstu, który może być wyświetlany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do poprawiania wydajności w aplikacjach, w <xref:System.Windows.Media.TextFormatting.TextLine> których ma znaczący wpływ na wydajność.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatMinMaxParagraphWidth">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca wartość reprezentującą najmniejszą i największą możliwą szerokość akapitu, która może całkowicie zawierać określoną zawartość tekstową.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatMinMaxParagraphWidth">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::MinMaxParagraphWidth FormatMinMaxParagraphWidth(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties);" />
      <MemberSignature Language="F#" Value="abstract member FormatMinMaxParagraphWidth : System.Windows.Media.TextFormatting.TextSource * int * System.Windows.Media.TextFormatting.TextParagraphProperties -&gt; System.Windows.Media.TextFormatting.MinMaxParagraphWidth" Usage="textFormatter.FormatMinMaxParagraphWidth (textSource, firstCharIndex, paragraphProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.MinMaxParagraphWidth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
      </Parameters>
      <Docs>
        <param name="textSource"><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> Obiekt, który reprezentuje źródło tekstu dla wiersza.</param>
        <param name="firstCharIndex"><see cref="T:System.Int32" /> Wartość określająca indeks znaku początkowego w wierszu.</param>
        <param name="paragraphProperties"><see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> Obiekt, który reprezentuje właściwości akapitu, na przykład kierunek przepływu, wyrównanie lub wcięcia.</param>
        <summary>Zwraca wartość reprezentującą najmniejszą i największą możliwą szerokość akapitu, która może całkowicie zawierać określoną zawartość tekstową.</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> Wartość, która reprezentuje najmniejszą i największą możliwą szerokość akapitu, która może całkowicie zawierać określoną zawartość tekstową.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy tekst używa minimalnej szerokości akapitu dla tekstu źródłowego, który jest wyświetlany jako wiele wierszy. Minimalna szerokość akapitu odnosi się do wyrazu o największej szerokości — w tym przypadku wyraz "skoku". Zauważ, że wiele wyrazów może pojawić się w tym samym wierszu, o ile łączna szerokość nie przekracza minimalnej szerokości akapitu.  
  
 Program ![formatujący tekst z minimalną szerokością akapitu] Program (~/add/media/textformatter03.png "formatujący tekst z minimalną szerokością akapitu")  
Minimalna szerokość akapitu  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak używać <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth%2A> metody do generowania minimalnej szerokości akapitu dla sformatowanych wierszy tekstu.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet3)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatMinMaxParagraphWidth">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextRunCache textRunCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextRunCache textRunCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextRunCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::MinMaxParagraphWidth FormatMinMaxParagraphWidth(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextRunCache ^ textRunCache);" />
      <MemberSignature Language="F#" Value="abstract member FormatMinMaxParagraphWidth : System.Windows.Media.TextFormatting.TextSource * int * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextRunCache -&gt; System.Windows.Media.TextFormatting.MinMaxParagraphWidth" Usage="textFormatter.FormatMinMaxParagraphWidth (textSource, firstCharIndex, paragraphProperties, textRunCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.MinMaxParagraphWidth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="textRunCache" Type="System.Windows.Media.TextFormatting.TextRunCache" />
      </Parameters>
      <Docs>
        <param name="textSource"><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> Obiekt, który reprezentuje źródło tekstu dla wiersza.</param>
        <param name="firstCharIndex"><see cref="T:System.Int32" /> Wartość określająca indeks znaku początkowego w wierszu.</param>
        <param name="paragraphProperties"><see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> Obiekt, który reprezentuje właściwości akapitu, na przykład kierunek przepływu, wyrównanie lub wcięcia.</param>
        <param name="textRunCache"><see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> Obiekt, który reprezentuje mechanizm buforowania dla układu tekstu.</param>
        <summary>Zwraca wartość reprezentującą najmniejszą i największą możliwą szerokość akapitu, która może całkowicie zawierać określoną zawartość tekstową.</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> Wartość, która reprezentuje najmniejszą i największą możliwą szerokość akapitu, która może całkowicie zawierać określoną zawartość tekstową.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
