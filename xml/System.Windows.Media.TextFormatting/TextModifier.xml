<Type Name="TextModifier" FullName="System.Windows.Media.TextFormatting.TextModifier">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd4b3882c36a6bc9d998cba18d5aa37a27dce26b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69437126" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextModifier : System.Windows.Media.TextFormatting.TextRun" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextModifier extends System.Windows.Media.TextFormatting.TextRun" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextModifier" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextModifier&#xA;Inherits TextRun" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextModifier abstract : System::Windows::Media::TextFormatting::TextRun" />
  <TypeSignature Language="F#" Value="type TextModifier = class&#xA;    inherit TextRun" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.TextFormatting.TextRun</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje wyspecjalizowany przebieg tekstowy, który może służyć do modyfikowania właściwości tekstu uruchamianego w jego zakresie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakres <xref:System.Windows.Media.TextFormatting.TextModifier> rozszerza do następnego pasującego <xref:System.Windows.Media.TextFormatting.TextEndOfSegment> tekstu lub do następnego <xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>. Należy zauważyć <xref:System.Windows.Media.TextFormatting.TextModifier> , że obiekty mogą być zagnieżdżane.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">Przykład zaawansowanego formatowania tekstu</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextModifier ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextModifier.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextModifier();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.TextFormatting.TextModifier" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterBufferReference">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.TextFormatting.CharacterBufferReference CharacterBufferReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextFormatting.CharacterBufferReference CharacterBufferReference" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextModifier.CharacterBufferReference" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property CharacterBufferReference As CharacterBufferReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::TextFormatting::CharacterBufferReference CharacterBufferReference { System::Windows::Media::TextFormatting::CharacterBufferReference get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterBufferReference : System.Windows.Media.TextFormatting.CharacterBufferReference" Usage="System.Windows.Media.TextFormatting.TextModifier.CharacterBufferReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.CharacterBufferReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> Pobiera<see cref="T:System.Windows.Media.TextFormatting.TextModifier" />dla.</summary>
        <value>Wartość typu <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public abstract System.Windows.FlowDirection FlowDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextModifier.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection" Usage="System.Windows.Media.TextFormatting.TextModifier.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.FlowDirection" /> Pobiera<see cref="T:System.Windows.Media.TextFormatting.TextModifier" />dla.</summary>
        <value>Wartość typu <see cref="T:System.Windows.FlowDirection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FlowDirection>Określa kierunek przepływu zawartości dla elementów tekstu i interfejsu użytkownika. może być albo <xref:System.Windows.FlowDirection.LeftToRight>. <xref:System.Windows.FlowDirection.RightToLeft>  
  
 Ta wartość jest ignorowana, <xref:System.Windows.Media.TextFormatting.TextModifier.HasDirectionalEmbedding%2A> Jeśli właściwość `true`nie zostanie zwrócona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDirectionalEmbedding">
      <MemberSignature Language="C#" Value="public abstract bool HasDirectionalEmbedding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDirectionalEmbedding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextModifier.HasDirectionalEmbedding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasDirectionalEmbedding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasDirectionalEmbedding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasDirectionalEmbedding : bool" Usage="System.Windows.Media.TextFormatting.TextModifier.HasDirectionalEmbedding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Media.TextFormatting.TextModifier" /> obsługuje <see cref="T:System.Windows.FlowDirection" /> bieżący zakres tekstu.</summary>
        <value><see langword="true" />Jeśli <see cref="T:System.Windows.Media.TextFormatting.TextModifier" /> <see langword="false" />obsługuje <see cref="T:System.Windows.FlowDirection" /> bieżący zakres tekstu; w przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wartość zwracana jest `true`, używa <xref:System.Windows.Media.TextFormatting.TextFormatter> <xref:System.Windows.Media.TextFormatting.TextModifier.FlowDirection%2A> właściwości, aby określić kierunek przepływu zawartości dla bieżącego zakresu tekstu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyProperties">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRunProperties ModifyProperties (System.Windows.Media.TextFormatting.TextRunProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRunProperties ModifyProperties(class System.Windows.Media.TextFormatting.TextRunProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextModifier.ModifyProperties(System.Windows.Media.TextFormatting.TextRunProperties)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ModifyProperties (properties As TextRunProperties) As TextRunProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRunProperties ^ ModifyProperties(System::Windows::Media::TextFormatting::TextRunProperties ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member ModifyProperties : System.Windows.Media.TextFormatting.TextRunProperties -&gt; System.Windows.Media.TextFormatting.TextRunProperties" Usage="textModifier.ModifyProperties properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRunProperties</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Windows.Media.TextFormatting.TextRunProperties" />
      </Parameters>
      <Docs>
        <param name="properties">Dla uruchomienia tekstu lub <see cref="M:System.Windows.Media.TextFormatting.TextModifier.ModifyProperties(System.Windows.Media.TextFormatting.TextRunProperties)" /> wartości zwracanej dla zagnieżdżonego modyfikatora tekstu. <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /></param>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> Pobiera dla uruchomienia tekstu.</summary>
        <returns>Wartość rzeczywista <see cref="T:System.Windows.Media.TextFormatting.TextRunProperties" /> <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />, która ma być używana przez, <see cref="T:System.Windows.Media.TextFormatting.TextModifier" /> podlega dalszemu modyfikowaniu obiektów w zewnętrznych zakresach.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
