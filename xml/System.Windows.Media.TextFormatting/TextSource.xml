<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="071e64e5956e8901f263682e8a214081bd7cb90f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69447325" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę abstrakcyjną służącą do określania danych znakowych i właściwości formatowania, które <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> mają być używane przez obiekt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cały dostęp do tekstu w <xref:System.Windows.Media.TextFormatting.TextSource> obiekcie odbywa się <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>za pomocą, który został zaprojektowany tak, aby umożliwić klientowi układu tekstu wirtualizację tekstu w dowolny sposób.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter>jest aparatem [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] tekstu, który zapewnia usługi do formatowania tekstu i przerywania wierszy tekstu. <xref:System.Windows.Media.TextFormatting.TextFormatter>może obsługiwać różne formaty znaków tekstu i style akapitów, a także obsługę międzynarodowego układu tekstu. [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] W<xref:System.Windows.Media.TextFormatting.TextFormatter> przeciwieństwie do tradycyjnego tekstu, współdziała z klientem układu tekstu za pomocą zestawu metod wywołania zwrotnego. Wymaga, aby klient dostarczał te metody w implementacji <xref:System.Windows.Media.TextFormatting.TextSource> klasy. Na poniższej liście opisano trzy elementy członkowskie, które należy zastąpić:  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Pobiera rozpoczęcie od określonej <xref:System.Windows.Media.TextFormatting.TextSource> pozycji. <xref:System.Windows.Media.TextFormatting.TextRun>  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Pobiera tekst z przedziału bezpośrednio przed <xref:System.Windows.Media.TextFormatting.TextSource> określoną pozycją.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Pobiera wartość, która mapuje <xref:System.Windows.Media.TextFormatting.TextSource> indeks znaku <xref:System.Windows.Media.TextEffect> na indeks znaków.  
  
> [!NOTE]
>  Aby uzyskać kompletny przykład kodu, który pokazuje, jak zaimplementować klasę <xref:System.Windows.Media.TextFormatting.TextSource> pochodną, zobacz [przykład zaawansowanego formatowania tekstu](https://go.microsoft.com/fwlink/?LinkID=159965) .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">Przykład zaawansowanego formatowania tekstu</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">Pozycja indeksu znaków, w którym ma zostać zatrzymane pobieranie tekstu.</param>
        <summary>Pobiera tekst z przedziału bezpośrednio przed <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> określoną pozycją.</summary>
        <returns>Wartość, która reprezentuje przedział tekstu bezpośrednio przed <paramref name="textSourceCharacterIndexLimit" />. <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca wartość pustą <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> , jeśli tekst przedziału `textSourceCharacterIndexLimit` bezpośrednio przed nie zawiera żadnego tekstu, takiego jak obiekt wbudowany lub ukryty. <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>  
  
 Ta metoda zwraca tekst o zerowej długości, jeśli nie ma żadnych wartości `textSourceCharacterIndexLimit`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Indeks <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> znaków do zamapowania.</param>
        <summary>Pobiera wartość, która mapuje <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> indeks znaku <see cref="T:System.Windows.Media.TextEffect" /> na indeks znaków.</summary>
        <returns>Wartość, która <see cref="T:System.Windows.Media.TextEffect" /> reprezentuje indeks znaku. <see cref="T:System.Int32" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Określa pozycję indeksu znaków w <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> lokalizacji, <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> w której ma zostać pobrany.</param>
        <summary>Pobiera rozpoczęcie od określonej <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> pozycji. <see cref="T:System.Windows.Media.TextFormatting.TextRun" /></summary>
        <returns>Wartość, która reprezentuje lub <see cref="T:System.Windows.Media.TextFormatting.TextRun" />obiekt <see cref="T:System.Windows.Media.TextFormatting.TextRun" />pochodny elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uruchomienie tekstu to sekwencja znaków udostępniająca pojedynczy zestaw właściwości. Każda zmiana formatu, taka jak Rodzina czcionek, styl czcionki, kolor pierwszego planu, Dekoracja tekstu lub inny efekt formatowania, powoduje przerwanie działania tekstu. Klasa jest korzeniem hierarchii typów reprezentującej kilka typów zawartości tekstowej przetwarzane przez <xref:System.Windows.Media.TextFormatting.TextFormatter>. <xref:System.Windows.Media.TextFormatting.TextRun> Każda klasa, która pochodzi od <xref:System.Windows.Media.TextFormatting.TextRun> , reprezentuje odrębny typ zawartości tekstowej.  
  
|Class|Opis|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|Katalog główny hierarchii. Definiuje grupę znaków, które mają ten sam zestaw właściwości znaku.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Definiuje kolekcję symboli znaków z odrębnego kroju pisma fizycznego.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Definiuje typ zawartości tekstowej, w której pomiary, testowanie trafień i rysowanie całej zawartości odbywa się jako odrębna jednostka. Przykładem tego typu zawartości jest przycisk w środku wiersza tekstu.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Definiuje kod znaku podziału wiersza.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Definiuje kod znaku podziału akapitu. Pochodzi od <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Definiuje znacznik podziału segmentu.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|Definiuje zakres niewidocznych znaków.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|Definiuje początek zakresu modyfikacji.|  
  
   
  
## Examples  
 W poniższym przykładzie zaimplementowano przesłonięcie <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> dla metody.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia PixelsPerDip, w którym powinien być renderowany tekst.</summary>
        <value>Bieżąca <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każda klasa, która <xref:System.Windows.Media.TextFormatting.TextSource> rozszerza, <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> powinna być aktualizowana za każdym razem, gdy zmienia się wartość dpi dla każdej aplikacji obsługującej rozdzielczość DPI.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
