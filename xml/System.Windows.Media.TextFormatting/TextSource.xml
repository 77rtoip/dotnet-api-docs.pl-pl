<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f4d98a4477350ba7c77c7a5d57c007fc943547ed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30711896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę abstrakcyjną do określania danych znakowych i formatowania właściwości, które mają być używane przez <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do tekstu w <xref:System.Windows.Media.TextFormatting.TextSource> obiekt jest za pośrednictwem <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, który umożliwia klienta układu tekstu do wirtualizacji w dowolny sposób wybiera tekstu.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> jest [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aparat tekst, który udostępnia usługi dla formatowania tekstu i dzielenie wierszy tekstu. <xref:System.Windows.Media.TextFormatting.TextFormatter> może obsłużyć w różnych formatach znaków i akapitu style i obsługuje układ międzynarodowe tekstu. W przeciwieństwie do tradycyjnych tekst [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], <xref:System.Windows.Media.TextFormatting.TextFormatter> wchodzi w interakcję z klientem układu tekstu za pomocą zestawu metod wywołania zwrotnego. Wymaga od klienta zapewnienia tych metod w celu wykonania <xref:System.Windows.Media.TextFormatting.TextSource> klasy. Poniższa lista zawiera opis trzech elementów członkowskich, należy zastąpić:  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Pobiera <xref:System.Windows.Media.TextFormatting.TextRun> zaczynając od określonej <xref:System.Windows.Media.TextFormatting.TextSource> pozycji.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Pobiera zakres tekstu bezpośrednio przed określonego <xref:System.Windows.Media.TextFormatting.TextSource> pozycji.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Pobiera wartość, która mapuje <xref:System.Windows.Media.TextFormatting.TextSource> indeks znaków do <xref:System.Windows.Media.TextEffect> indeks znaków.  
  
> [!NOTE]
>  Na przykład kompletny kod, który zawiera implementowania pochodnego <xref:System.Windows.Media.TextFormatting.TextSource> , zobacz [zaawansowane próbki formatowania tekstu](http://go.microsoft.com/fwlink/?LinkID=159965) .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">
          <see cref="T:System.Int32" /> Wartość, która określa indeks znaków, gdzie zatrzymuje pobieranie tekstu.</param>
        <summary>Pobiera zakres tekstu bezpośrednio przed określonego <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> pozycji.</summary>
        <returns>A <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> wartość, która reprezentuje zakres tekstu bezpośrednio przed <paramref name="textSourceCharacterIndexLimit" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> Metoda zwraca pustą <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> gdy bezpośrednio przed tekstem `textSourceCharacterIndexLimit` nie zawiera żadnych tekstu, na przykład obiekt wbudowany lub ukryte Uruchom.  
  
 Ta metoda zwraca zakres tekstu o zerowej długości, jeśli nie znajdują się wartości poprzedzających `textSourceCharacterIndexLimit`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">
          <see cref="T:System.Int32" /> Wartość, która określa <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> indeks znaków do mapowania.</param>
        <summary>Pobiera wartość, która mapuje <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> indeks znaków do <see cref="T:System.Windows.Media.TextEffect" /> indeks znaków.</summary>
        <returns>
          <see cref="T:System.Int32" /> Wartość, która reprezentuje <see cref="T:System.Windows.Media.TextEffect" /> indeks znaków.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Określa położenie znaku indeksu w <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> gdzie <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> są pobierane.</param>
        <summary>Pobiera <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> zaczynając od określonej <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> pozycji.</summary>
        <returns>Wartość, która reprezentuje <see cref="T:System.Windows.Media.TextFormatting.TextRun" />, lub typ pochodzący od obiektu <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tekst, uruchom jest sekwencji znaków udostępnianie zestaw jednej właściwości. Wszelkie zmiany do formatu, takie jak rodziny czcionek, styl czcionki, kolor pierwszego planu, dekoracji tekstu lub dowolnego innego formatowania efektu, podziały Uruchom tekst. <xref:System.Windows.Media.TextFormatting.TextRun> Klasa jest elementem głównym hierarchii typów, reprezentująca różne typy zawartości tekstu przetworzone przez <xref:System.Windows.Media.TextFormatting.TextFormatter>. Każda klasa, która jest pochodną <xref:System.Windows.Media.TextFormatting.TextRun> reprezentuje różne typ zawartości tekstowej.  
  
|Class|Opis|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|Element główny hierarchii. Definiuje grupę znaków, które mają ten sam zestaw właściwości znaku.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Definiuje kolekcję symboli znaków z różnych kroju fizycznych.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Określa typ zawartości, w których pomiaru trafień testowania i rysowanie całej zawartości odbywa się jako odrębne jednostki tekstu. Przykładem tego typu zawartości jest przycisk pośrodku wiersza tekstu.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Definiuje kod znaku podziału wiersza.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Definiuje kod znak akapitu break. Pochodną <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Definiuje znacznika podziału segmentu.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|Definiuje zakres znaków niewidoczne.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|Określa początek zakresu modyfikacji.|  
  
   
  
## Examples  
 W poniższym przykładzie zastąpienie <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> metoda jest zaimplementowana.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia PixelsPerDip tekst powinien być renderowany.</summary>
        <value>Bieżący <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> wartość.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każda klasa, która rozszerza <xref:System.Windows.Media.TextFormatting.TextSource> należy zaktualizować <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> zawsze, gdy zmienia wartości DPI na Monitor DPI pamiętać aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>