<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28ca51d3fcd5eb0cc2a433181e378fa047fcb526" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69388254" /></Metadata><TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje abstrakcyjne źródło danych, z którym powiązane są formanty powiązane z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET obsługuje architekturę powiązania danych formantu, która umożliwia kontrolom serwera sieci Web powiązanie z danymi w spójny sposób. Kontrolki serwera sieci Web, które wiążą się z danymi, są nazywane kontrolkami związanymi z danymi, a klasy, które ułatwiają to powiązanie, są nazywane kontrolkami źródła danych. Kontrolki źródła danych mogą reprezentować dowolne źródło danych: relacyjną bazę danych, plik, strumień, obiekt biznesowy itd. Kontrolki źródła danych przedstawiają dane w spójny sposób z kontrolkami związanymi z danymi, niezależnie od źródła lub formatu danych źródłowych.  
  
 Interfejs jest implementowany, <xref:System.Web.UI.IDataSource> gdy chcesz zaimplementować własną niestandardową kontrolkę źródła danych ASP.NET.  
  
 Każda klasa implementująca <xref:System.Web.UI.IDataSource> interfejs jest formantem źródła danych. Interfejs służy jako podstawa dla wszystkich kontrolek źródła danych ASP.NET i definiuje jedną z podstawowych koncepcji dotyczących architektury powiązań danych z dwiema metodami <xref:System.Web.UI.IDataSource.GetView%2A> : Metoda i <xref:System.Web.UI.IDataSource.GetViewNames%2A> Metoda. <xref:System.Web.UI.IDataSource> Pojęcie to polega na tym, że wszystkie kontrolki źródła danych obsługują co najmniej jeden nazwany widok na swoich danych. Obiekt widoku źródła danych jest podobny do <xref:System.Data.DataView> abstrakcji <xref:System.Data> w przestrzeni nazw: można powiązać z danymi, dostosowany widok danych do sortowania, filtrowania i innych operacji na danych, które definiuje widok. W swoim rdzeniu kontrola źródła danych nie robi niczego więcej niż pobieranie widoków danych.  
  
 Kontrolka źródła danych może mieć jeden lub więcej skojarzonych obiektów widoku źródła danych. Niektóre kontrolki źródła danych, w tym te, które reprezentują relacyjne <xref:System.Web.UI.WebControls.AccessDataSource>bazy danych, takie jak <xref:System.Web.UI.WebControls.SqlDataSource> i, obsługują tylko jeden widok. Inne kontrolki źródła danych, w tym hierarchiczne kontrolki <xref:System.Web.UI.WebControls.SiteMapDataSource>źródła danych, takie jak, obsługują wiele widoków. Widok źródła danych definiuje możliwości źródła danych i obsługiwane przez niego operacje.  
  
 W obszarze Podsumowanie kontrolki źródła danych implementują <xref:System.Web.UI.IDataSource> interfejs, obsługują co najmniej jeden nazwany widok na danych, które reprezentują, i zawsze obsługuje pobieranie danych ze źródła danych, które reprezentują. Kontrolki źródła danych zawsze pobierają dane na żądanie, na `DataBind` przykład gdy jest wywoływana w formancie związanym z danymi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak Klasa może zaimplementować metody zdefiniowane przez <xref:System.Web.UI.IDataSource> interfejs, aby zapewnić dane formantom powiązanym z danymi. Kontrolka źródła danych w tym przykładzie działa jako źródło danych w pliku wartości rozdzielanych przecinkami i może być używana przez dowolną kontrolkę powiązaną z danymi do wyświetlania danych plików rozdzielanych przecinkami. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant źródła danych został zmieniony w jakiś sposób, który ma wpływ na formanty powiązane z danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IDataSource.DataSourceChanged> Zdarzenie jest zgłaszane, gdy właściwości kontrolki powiązanej z danymi lub dane bazowe uległy zmianie w jakiś sposób, który wpływa na powiązania danych między kontrolką powiązaną z danymi a danymi. Na przykład zdarzenie jest zgłaszane, jeśli właściwość Nazwa pliku, taka jak <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> właściwość, jest zmieniana w formancie źródła danych opartym na plikach.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku do pobrania.</param>
        <summary>Pobiera nazwany widok źródła danych skojarzony z formantem źródła danych.</summary>
        <returns>Zwraca nazwę <see cref="T:System.Web.UI.DataSourceView" /> skojarzoną <see cref="T:System.Web.UI.IDataSource" />z.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy kontroli źródła danych mogą obsługiwać jeden lub więcej widoków na ich danych źródłowych. Te widoki są reprezentowane przez wystąpienia <xref:System.Web.UI.DataSourceView> klasy. Widok źródła danych definiuje możliwości kontroli źródła danych i wykonuje wszystkie czynności niezbędne do pobrania danych z bazowego magazynu danych i wykonywania operacji, takich jak sortowanie, wstawianie, usuwanie i aktualizowanie.  
  
 Klasy kontroli źródła danych, które implementują <xref:System.Web.UI.IDataSource> Interfejs <xref:System.Web.UI.IDataSource.GetView%2A> implementuje metodę w celu zwrócenia obiektów widoku silnie określonego typu skojarzonych z klasą.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak Klasa kontroli źródła danych implementująca <xref:System.Web.UI.IDataSource> Interfejs <xref:System.Web.UI.IDataSource.GetView%2A> implementuje metodę, zwracając <xref:System.Web.UI.DataSourceView> silnie wpisaną wystąpienie klasy. Ponieważ kontrolka źródła danych obsługuje tylko jeden widok, ignoruje nazwę i zwraca widok o nazwie z domyślną nazwą widoku. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw reprezentujących listę obiektów widoku skojarzonych z <see cref="T:System.Web.UI.IDataSource" /> interfejsem.</summary>
        <returns>Zawiera nazwy widoków skojarzonych <see cref="T:System.Web.UI.IDataSource" />z. <see cref="T:System.Collections.ICollection" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy kontroli źródła danych mogą obsługiwać co najmniej jeden nazwany widok na ich danych źródłowych. <xref:System.Web.UI.IDataSource.GetViewNames%2A> Metoda zwraca kolekcję nazw widoku aktualnie skojarzonych z wystąpieniem kontroli źródła danych. Obiekty wywołujące mogą wykonywać iterację w kolekcji nazw widoku i pobierać <xref:System.Web.UI.DataSourceView> poszczególnych obiektów <xref:System.Web.UI.IDataSource.GetView%2A> przy użyciu metody.  
  
 Klasy kontroli źródła danych, które implementują <xref:System.Web.UI.IDataSource> Interfejs <xref:System.Web.UI.IDataSource.GetViewNames%2A> implementuje metodę w celu zwrócenia kolekcji nazw reprezentujących wszystkie obiekty widoku źródła danych aktualnie skojarzone z klasą kontroli źródła danych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak kontrolka źródła danych implementująca <xref:System.Web.UI.IDataSource> Interfejs <xref:System.Web.UI.IDataSource.GetViewNames%2A> implementuje metodę, zwracając <xref:System.Collections.ICollection> kolekcję nazw. Ponieważ źródło danych obsługuje tylko jeden widok, metoda zwraca kolekcję jednego elementu przy użyciu domyślnej nazwy widoku. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>
