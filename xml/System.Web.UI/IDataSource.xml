<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9bc745508e22af28c1bf4d51ec95afad4d0656fb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37588644" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje źródło danych abstrakcyjną, która powiązać formanty powiązane z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET obsługuje architekturę powiązanie danych kontrolki, która umożliwia formanty serwera sieci Web w celu utworzenia powiązania z danymi w spójny sposób. Formanty serwera sieci Web, powiąż z danymi, które są określane jako formanty powiązane z danymi i klas, które ułatwiają, że powiązanie noszą nazwę kontrolki źródła danych. Kontrolki źródła danych może reprezentować dowolnego źródła danych: relacyjną bazę danych, plik, strumień, obiektem biznesowym i tak dalej. Źródło danych kontrolki danych obecnych w spójny sposób formantów powiązanych z danymi, niezależnie od tego, czy źródło lub formatu danych źródłowych.  
  
 Możesz wdrożyć <xref:System.Web.UI.IDataSource> interfejs, gdy chcesz zaimplementować własny niestandardowy formant źródła danych programu ASP.NET.  
  
 Każda klasa implementująca <xref:System.Web.UI.IDataSource> interfejs jest kontrola źródła danych. <xref:System.Web.UI.IDataSource> Interfejsu służy jako podstawa wszystkich źródło danych ASP.NET kontroluje i definiuje jedną podstawowe pojęcia dotyczące architektury powiązanie danych z jego dwóch metod: <xref:System.Web.UI.IDataSource.GetView%2A> metody i <xref:System.Web.UI.IDataSource.GetViewNames%2A> metody. Takie podejście jest, że wszystkie kontrolki źródła danych obsługuje jeden lub więcej nazwanych widoków danych. Obiekt widoku źródła danych jest podobne do <xref:System.Data.DataView> abstrakcji w <xref:System.Data> przestrzeni nazw: dane — może być powiązana, dostosowanego widoku danych, sortowanie, filtrowanie i inne operacje na danych, które definiuje widoku. Zasadniczo źródła danych kontrolować, nic nie robi więcej niż pobrania widoków danych.  
  
 Kontrola źródła danych może mieć co najmniej jeden obiekt widoku źródła danych skojarzone. Niektóre dane źródła kontrolki, w tym te, które reprezentują relacyjnych baz danych, takich jak <xref:System.Web.UI.WebControls.SqlDataSource> i <xref:System.Web.UI.WebControls.AccessDataSource>, obsługują tylko jeden widok. Inne dane źródła formantów, w tym kontrolki źródła danych hierarchicznych, takich jak <xref:System.Web.UI.WebControls.SiteMapDataSource>, obsługi wielu widoków. Widok źródła danych określa możliwości źródła danych i obsługiwanych operacji.  
  
 Podsumowując, implementowanie kontrolki źródła danych <xref:System.Web.UI.IDataSource> interfejsu, obsługuje jeden lub więcej nazwanych widoków danych reprezentują i zawsze obsługuje pobieranie danych ze źródła danych reprezentują one. Kontrolki źródła danych zawsze pobierają dane na żądanie, takie jak czas `DataBind` nazywa się kontrolki powiązane z danymi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak klasa może implementować metody zdefiniowane przez <xref:System.Web.UI.IDataSource> interfejsu do dostarczania danych do kontrolek powiązanych z danymi. Formant źródła danych, w tym przykładzie działa jako źródła danych z pliku wartości rozdzielanych przecinkami i może służyć przez dowolny formant powiązany z danymi do wyświetlania danych z pliku rozdzielanego przecinkami. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy kontrola źródła danych został zmieniony w jakiś sposób, który wpływa na formantów powiązanych z danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IDataSource.DataSourceChanged> Zdarzenie jest zgłaszane właściwości kontrolki powiązania danych lub danych bazowych ma zmiany w jakiś sposób, który ma wpływ na powiązania danych pomiędzy kontrolki powiązania danych i jego danych. Na przykład, zdarzenie jest wywoływane, jeśli plik nazwy właściwości, takie jak <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> w kontroli źródła opartych na plikach danych zostanie zmieniona właściwość.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku do pobrania.</param>
        <summary>Pobiera widok źródła danych o nazwie, które są skojarzone z kontrolą źródła danych.</summary>
        <returns>Zwraca nazwany <see cref="T:System.Web.UI.DataSourceView" /> skojarzone z <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy formantów źródła danych może obsługiwać jeden lub więcej widoków w swoje dane źródłowe. Widoki te są reprezentowane przez wystąpienia <xref:System.Web.UI.DataSourceView> klasy. Widok źródła danych definiuje możliwości kontroli źródła danych i wykonuje całą pracę niezbędne do pobierania danych z magazynu danych i wykonywać operacje takie jak sortowanie, wstawianie, usuwanie i aktualizowanie.  
  
 Kontrola źródła danych klas, które implementują <xref:System.Web.UI.IDataSource> implementują interfejs <xref:System.Web.UI.IDataSource.GetView%2A> metodę, aby zwrócić silnie typizowaną wyświetlić obiekty skojarzone z klasą.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób klasa kontroli źródła danych, który implementuje <xref:System.Web.UI.IDataSource> implementuje interfejs <xref:System.Web.UI.IDataSource.GetView%2A> metody, zwracając wystąpienie silnie typizowanej <xref:System.Web.UI.DataSourceView> klasy. Ponieważ do kontroli źródła danych obsługuje tylko jeden widok, ignoruje nazwę i zwraca widok o nazwie z domyślną nazwą widoku. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw reprezentujący listę widoku obiektów skojarzonych z <see cref="T:System.Web.UI.IDataSource" /> interfejsu.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> Zawierający nazwy widoków skojarzonych z <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy formantów źródła danych może obsługiwać jeden lub więcej nazwanych widoków swoje dane źródłowe. <xref:System.Web.UI.IDataSource.GetViewNames%2A> Metoda zwraca kolekcję nazwy widoków obecnie skojarzony z wystąpieniem kontroli źródła danych. Obiekty wywołujące mogą iterowania po kolekcji nazwy widoków i pobierania poszczególnych <xref:System.Web.UI.DataSourceView> obiekty z <xref:System.Web.UI.IDataSource.GetView%2A> metody.  
  
 Kontrola źródła danych klas, które implementują <xref:System.Web.UI.IDataSource> implementują interfejs <xref:System.Web.UI.IDataSource.GetViewNames%2A> metoda zwraca kolekcję nazw, która reprezentuje źródło danych przeglądania obiektów, które aktualnie skojarzone z klasy formantu źródła danych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób kontroli źródła danych, który implementuje <xref:System.Web.UI.IDataSource> implementuje interfejs <xref:System.Web.UI.IDataSource.GetViewNames%2A> metody, zwracając <xref:System.Collections.ICollection> kolekcję nazw. Ponieważ źródło danych obsługuje tylko jeden widok, metoda zwraca kolekcję z jednym elementem przy użyciu domyślnej nazwy dla tego widoku. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>