<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="252ef0d66fedc6af1672ad08d2fb87ba95a104b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36576838" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje źródło danych abstrakcyjny powiązać z formantów powiązanych z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET obsługuje architekturę wiązania danych formantu, która umożliwia kontrolki serwera sieci Web można powiązać z danymi w spójny sposób. Formanty serwera sieci Web, które należy powiązać dane są określane jako formanty powiązane z danymi i klasy, które ułatwiają, że powiązanie są nazywane kontrolki źródła danych. Kontrolki źródła danych może reprezentować dowolnego źródła danych: relacyjnej bazy danych, pliku, strumienia, obiektu biznesowego i tak dalej. Źródło danych określa danych obecnych w spójny sposób formanty powiązane z danymi, niezależnie od tego, czy źródło lub format danych źródłowych.  
  
 Można zaimplementować <xref:System.Web.UI.IDataSource> interfejs, gdy należy wdrożyć własne niestandardowe kontroli źródła danych programu ASP.NET.  
  
 Każda klasa implementująca <xref:System.Web.UI.IDataSource> interfejs jest formantem źródła danych. <xref:System.Web.UI.IDataSource> Interfejs stanowi podstawę dla wszystkich źródło danych ASP.NET formanty i definiuje jeden z podstawowych pojęciach architektura powiązanie danych z jego dwóch metod: <xref:System.Web.UI.IDataSource.GetView%2A> — metoda i <xref:System.Web.UI.IDataSource.GetViewNames%2A> metody. Ta koncepcja jest, że wszystkie kontrolki źródła danych obsługuje co najmniej jeden widok o nazwie na ich danych. Obiekt widoku źródła danych jest podobny do <xref:System.Data.DataView> abstrakcji w <xref:System.Data> przestrzeni nazw: danych — może być powiązana, dostosowany widok danych sortowanie, filtrowanie i innych operacji danych, które definiuje widoku. Zasadniczo źródła danych kontrolować nie robi nic więcej niż pobrać widoków danych.  
  
 Formant źródła danych może mieć co najmniej jeden obiekt widoku źródła danych. Formanty, łącznie z tymi, które reprezentują relacyjnych baz danych, takich jak źródła niektórych danych <xref:System.Web.UI.WebControls.SqlDataSource> i <xref:System.Web.UI.WebControls.AccessDataSource>, obsługuje tylko jeden widok. Inne dane źródła formantów, w tym kontrolki źródła hierarchiczne dane, takie jak <xref:System.Web.UI.WebControls.SiteMapDataSource>, obsługuje wiele widoków. Widok źródła danych definiuje możliwości źródła danych i operacje, które obsługuje.  
  
 Podsumowując, kontrolki źródła danych implementuje <xref:System.Web.UI.IDataSource> interfejsu, obsługuje jeden lub więcej o nazwie widoków danych reprezentują i zawsze obsługuje pobieranie danych ze źródła danych, które reprezentują. Kontrolki źródła danych zawsze pobierają dane na żądanie, takie jak kiedy `DataBind` jest wywoływana w formancie powiązane z danymi.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak zaimplementować metody zdefiniowane przez klasę <xref:System.Web.UI.IDataSource> interfejs do dostarczania danych do kontrolek z danymi. Formant źródła danych, w tym przykładzie działa jako źródła danych z pliku wartości rozdzielanych przecinkami i sterowania wszystkie powiązane z danymi można do wyświetlania danych z pliku rozdzielanego przecinkami. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant źródła danych została zmieniona w inny sposób, który wpływa na formanty powiązane z danymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IDataSource.DataSourceChanged> Zdarzenie jest zgłaszane, gdy właściwości formantu powiązanego z danymi lub dane źródłowe została zmieniona w jakiś sposób wpływającym powiązania danych między formantu powiązanego z danymi i jego dane. Na przykład, zdarzenie jest wywoływane, jeśli plik nazwa właściwości, takie jak <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> w kontroli źródła danych zostanie zmieniona właściwość.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku do pobrania.</param>
        <summary>Pobiera widok źródła danych o nazwie skojarzony z formantem źródła danych.</summary>
        <returns>Zwraca nazwany <see cref="T:System.Web.UI.DataSourceView" /> skojarzone z <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy formantów źródła danych może obsługiwać co najmniej jeden widok na ich danych. Widoki te są reprezentowane przez wystąpień <xref:System.Web.UI.DataSourceView> klasy. Widok źródła danych definiuje możliwości kontroli źródła danych, a następnie wykonuje całą pracę niezbędne do pobierania danych z odpowiedni magazyn danych i wykonywanie operacji takich jak sortowanie, wstawianie, usuwanie i aktualizowanie.  
  
 Formant źródła danych klas, które implementują <xref:System.Web.UI.IDataSource> zaimplementuj interfejs <xref:System.Web.UI.IDataSource.GetView%2A> metodę, aby zwrócić jednoznacznie wyświetlić obiekty skojarzone z klasą.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób klasy formantu źródła danych, która implementuje <xref:System.Web.UI.IDataSource> implementuje interfejs <xref:System.Web.UI.IDataSource.GetView%2A> metody zwracanie jednoznacznie wystąpienia <xref:System.Web.UI.DataSourceView> klasy. Ponieważ kontroli źródła danych obsługuje tylko jeden widok, ignoruje nazwę i zwraca widok o nazwie z domyślną nazwą widoku. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera kolekcję nazw reprezentujący listę wyświetlanie obiektów skojarzonych z <see cref="T:System.Web.UI.IDataSource" /> interfejsu.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> Zawierający nazwy widoków skojarzonych z <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy formantów źródła danych może obsługiwać co najmniej jeden widok o nazwie na ich danych. <xref:System.Web.UI.IDataSource.GetViewNames%2A> Metoda zwraca kolekcję nazwy widoków obecnie skojarzony z wystąpieniem kontroli źródła danych. Obiekty wywołujące mogą iteracji kolekcji nazwy widoku i pobierania poszczególnych <xref:System.Web.UI.DataSourceView> obiekty z <xref:System.Web.UI.IDataSource.GetView%2A> metody.  
  
 Formant źródła danych klas, które implementują <xref:System.Web.UI.IDataSource> zaimplementuj interfejs <xref:System.Web.UI.IDataSource.GetViewNames%2A> metody zwrócić kolekcję nazw, które reprezentuje źródło danych wyświetlić obiekty, które aktualnie skojarzony z klasy formantu źródła danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób kontroli źródła danych, który implementuje <xref:System.Web.UI.IDataSource> implementuje interfejs <xref:System.Web.UI.IDataSource.GetViewNames%2A> metody zwracanie <xref:System.Collections.ICollection> Kolekcja nazw. Ponieważ źródło danych obsługuje tylko jeden widok, metoda zwraca zbiór jeden element przy użyciu domyślnej nazwy widoku. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>