<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d6770b0d7a212cda366dd57ecf6b74facaf78e20" />
    <Meta Name="ms.sourcegitcommit" Value="78b53877672f179ce9714e2e55e55afe30312465" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/15/2018" />
    <Meta Name="ms.locfileid" Value="51682252" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cda49-101">Definiuje metody do zarządzania skryptów klienta w aplikacjach sieci Web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cda49-101">Defines methods for managing client scripts in Web applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-102"><xref:System.Web.UI.ClientScriptManager> Klasa jest używana do zarządzania skryptów klienta i dodać je do aplikacji sieci Web.</span><span class="sxs-lookup"><span data-stu-id="cda49-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="cda49-103">Możesz uzyskać odwołanie do <xref:System.Web.UI.ClientScriptManager> klasy z <xref:System.Web.UI.Page.ClientScript%2A> właściwość <xref:System.Web.UI.Page> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cda49-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="cda49-104">Możesz dodać skrypt klienta do strony sieci Web deklaratywnie przez skrypt w kod znaczników HTML strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="cda49-105">W razie dynamiczne dodawanie skrypt po stronie klienta jest istnieją jednak sytuacje.</span><span class="sxs-lookup"><span data-stu-id="cda49-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="cda49-106">Aby dynamicznie dodać skrypt, należy użyć <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody lub <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody, w zależności od tego, kiedy i w jaki sposób chcesz dodać skrypt.</span><span class="sxs-lookup"><span data-stu-id="cda49-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="cda49-107">Aby uzyskać więcej informacji, zobacz [porady: Dodawanie klienta skryptu dynamicznie do stron ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="cda49-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="cda49-108"><xref:System.Web.UI.ClientScriptManager> Klasy unikatowo identyfikuje skryptów przy użyciu klucza <xref:System.String> i <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="cda49-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="cda49-109">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-110">Przy użyciu typu skrypt pomaga uniknąć pomylenia podobne skryptów z formantów innego użytkownika, które mogą być używane na stronie.</span><span class="sxs-lookup"><span data-stu-id="cda49-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="cda49-111"><xref:System.Web.UI.ClientScriptManager> Klasy może służyć do wywołania zwrotne klienta w sytuacjach, gdy istnieje potrzeba uruchomienia kodu serwera z klienta bez przeprowadzania ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="cda49-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="cda49-112">Jest to określane jako wykonywania wywołanie zwrotne out-of-band do serwera.</span><span class="sxs-lookup"><span data-stu-id="cda49-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="cda49-113">W wywołaniu zwrotnym klienta funkcji skryptu klienta wysyła żądania asynchronicznego do strony sieci Web platformy ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="cda49-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="cda49-114">Strony sieci Web uruchamia zmodyfikowanej wersji cyklu życia procesu wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="cda49-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="cda49-115">Użyj <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodę, aby uzyskać odwołanie do funkcji klienta, gdy wywoływany, inicjuje wywołanie zwrotne klienta w celu zdarzeń serwera.</span><span class="sxs-lookup"><span data-stu-id="cda49-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="cda49-116">Aby uzyskać więcej informacji, zobacz [Implementowanie klienta wywołania zwrotne bez ogłaszania zwrotnego](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="cda49-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cda49-117">Wywołania zwrotne skryptu nie będzie działać w starszych przeglądarkach, które nie obsługują Document Object Model (DOM), i wymagają one, że ECMAScript jest włączona na komputerze klienckim.</span><span class="sxs-lookup"><span data-stu-id="cda49-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="cda49-118">Aby sprawdzić, czy przeglądarka obsługuje wywołań zwrotnych, należy użyć <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> właściwość, która jest dostępna za pośrednictwem <xref:System.Web.HttpRequest.Browser%2A> właściwości wewnętrzne ASP.NET <xref:System.Web.HttpContext.Request%2A> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cda49-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="cda49-119">Użyj <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metody i <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> metodę, aby zdefiniować zdarzenie do zwrotu klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="cda49-120">Te metody umożliwiają funkcji skryptu klienta, gdy wywoływany, aby spowodować, że serwer, który można opublikować wróć do strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="cda49-121">To zdarzenie ogłaszania wstecznego klienta różni się od klienta wywołania zwrotnego, strona sieci Web kończy normalne cyklu życia procesu zdarzenie ogłaszania wstecznego klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cda49-122">Jeśli używasz <xref:System.Web.UI.WebControls.Button> kontroli i <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość jest ustawiona na `false`, wówczas można użyć <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodę, aby zwrócić klienta ogłaszanie zwrotne zdarzenie <xref:System.Web.UI.WebControls.Button> kontroli.</span><span class="sxs-lookup"><span data-stu-id="cda49-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="cda49-123"><xref:System.Web.UI.WebControls.Button.OnClientClick%2A> Właściwość <xref:System.Web.UI.WebControls.Button> kontroli <xref:System.Web.UI.WebControls.ImageButton> kontroli i <xref:System.Web.UI.WebControls.LinkButton> sterowania można uruchomić skrypt po stronie klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-124">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody <xref:System.Web.UI.ClientScriptManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="cda49-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="cda49-125">Dwa skrypty klienta zostały zdefiniowane na stronie: `PopupScript`, powoduje wyświetlenie komunikat ostrzegawczy, gdy strona jest ładowany, i `ButtonClickScript`, definiujący Obsługa klienta dla przycisku HTML `onClick` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="cda49-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
    <related type="Article" href="http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">
      <span data-ttu-id="cda49-126">Skrypt po stronie klienta w programie ASP.NET Web Pages</span>
      <span class="sxs-lookup">
        <span data-stu-id="cda49-126">Client Script in ASP.NET Web Pages</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
      <span data-ttu-id="cda49-127">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
      <span class="sxs-lookup">
        <span data-stu-id="cda49-127">Client Callbacks Without Postbacks in ASP.NET Pages</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-128">Pobiera odwołanie do funkcji klienta, gdy wywoływany, inicjuje przez klienta wywołania zwrotnego do zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-128">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="cda49-129">Serwer <see cref="T:System.Web.UI.Control" /> obsługująca wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-129">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="cda49-130">Kontrolka musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejs i dostarczyć <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-130">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-131">Argument przekazywany ze skryptu klienta do serwera</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-131">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="cda49-132">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> Metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-132">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="cda49-133">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik zdarzenia pomyślnego serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-133">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="cda49-134">Skrypt klienta, który jest oceniany na komputerze klienckim przed zainicjowaniem wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-134">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="cda49-135">Wynik skryptu jest przekazywany do obsługi zdarzeń klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-135">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-136">Pobiera odwołanie do funkcji klienta, gdy wywoływany, inicjuje przez klienta wywołania zwrotnego do zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-136">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
          <span data-ttu-id="cda49-137">Funkcja klienta dla tej przeciążonej metody obejmuje określoną kontrolkę, argument, skrypt po stronie klienta i kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-137">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-138">Nazwa funkcji klienta, który wywołuje wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-138">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-139"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Metoda wykonuje wywołanie zwrotne out-of-band do serwera, który jest zmodyfikowana wersja normalne cyklu życia strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-139">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="cda49-140">Aby uzyskać więcej informacji, zobacz [Implementowanie klienta wywołania zwrotne bez ogłaszania zwrotnego](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="cda49-140">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cda49-141">Gdy przeglądarka jest Microsoft Internet Explorer (wersja 5.0 lub nowszy), mechanizm wywołania zwrotnego skryptu jest implementowane za pośrednictwem obiektu Microsoft.XmlHttp COM i wymaga przeglądarki, należy ustawić, aby uruchomić formanty ActiveX.</span><span class="sxs-lookup"><span data-stu-id="cda49-141">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="cda49-142">W przypadku innych przeglądarek XMLHttpRequest za pomocą przeglądarki w lokalnym modelu DOM (Document Object) jest używany.</span><span class="sxs-lookup"><span data-stu-id="cda49-142">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="cda49-143">Aby sprawdzić, czy przeglądarka obsługuje wywołania zwrotne klienta, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cda49-143">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="cda49-144">Aby sprawdzić, czy przeglądarka obsługuje XML przy użyciu protokołu HTTP, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="cda49-144">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="cda49-145">Obie te właściwości są dostępne za pośrednictwem <xref:System.Web.HttpRequest.Browser%2A> właściwości wewnętrzne ASP.NET <xref:System.Web.HttpContext.Request%2A> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cda49-145">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="cda49-146"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda wykonuje wywołanie zwrotne synchronicznie za pomocą języka XML przy użyciu protokołu HTTP.</span><span class="sxs-lookup"><span data-stu-id="cda49-146">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="cda49-147">Podczas wysyłania danych synchronicznie w scenariuszu wywołania zwrotnego, synchroniczne wywołania zwrotne zwrócenia natychmiast i nie blokują przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="cda49-147">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="cda49-148">Wywołanie zwrotne nie dwa synchroniczne wywołania zwrotne można wykonać w tym samym czasie w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="cda49-148">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="cda49-149">Jeśli drugi synchroniczne wywołanie zwrotne jest wywoływane, gdy jeden znajduje się obecnie w stanie oczekiwania, drugi synchroniczne wywołanie zwrotne anuluje pierwszy i zwróci tylko drugie wywołanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="cda49-149">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="cda49-150">Aby wysyłać dane asynchronicznie, użyj jednego z przeciążeń, które przyjmuje `useAsync` parametr, który jest wartością logiczną wartość kontroli tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="cda49-150">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="cda49-151">W tym scenariuszu asynchronicznej może mieć wielu wywołań zwrotnych oczekujące; kolejność ich zwrotu nie jest gwarantowana odpowiadającej kolejności, w którym zostały zainicjowane.</span><span class="sxs-lookup"><span data-stu-id="cda49-151">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="cda49-152">Ponadto to przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody określa Brak funkcji klienta, aby obsłużyć przypadek jest w stanie błędu generowane przez <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-152">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="cda49-153">Aby określić procedurę obsługi wywołania zwrotnego klienta błędów, użyj jednego z przeciążeń, które przyjmuje `clientErrorCallback` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-153">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="cda49-154"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Metoda przyjmuje opcjonalny ciąg `argument` parametr i zwraca ciąg.</span><span class="sxs-lookup"><span data-stu-id="cda49-154">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="cda49-155">Aby przekazać do odbierania wielu wartości, połączyć wartości w danych wejściowych lub zwraca ciąg, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="cda49-155">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cda49-156">Należy unikać używania stan widoku w celu wykonania strona lub kontrolka właściwości, które muszą zostać zaktualizowane podczas operacji wywołania zwrotnego skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-156">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="cda49-157">W przypadku właściwości przetrwać żądań strony, można użyć stanu sesji.</span><span class="sxs-lookup"><span data-stu-id="cda49-157">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-158">Poniższy przykład kodu demonstruje sposób używania dwa przeciążenia metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody w przypadku wywołania zwrotnego klienta, który zwiększa liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="cda49-158">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="cda49-159">Dwa mechanizmy wywołania zwrotnego są wyświetlane; Różnica między nimi polega na użyciu `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-159">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="cda49-160">A `ReceiveServerData1` funkcji wywołania zwrotnego klienta jest realizowane przy użyciu `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-160">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="cda49-161">Z kolei `ReceiveServerData2` funkcji wywołania zwrotnego klienta jest zdefiniowany w `<script>` na stronie.</span><span class="sxs-lookup"><span data-stu-id="cda49-161">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="cda49-162">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metodą jest program obsługi serwera, który zwiększa wartość, która jest przekazywana do niego i <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> metoda zwraca zwiększona wartość jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="cda49-162">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="cda49-163">Jeśli <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metoda zwraca błąd, a następnie `ProcessCallBackError` klienta funkcja jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cda49-163">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-164">
            <see cref="T:System.Web.UI.Control" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-164">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cda49-165">
            <see cref="T:System.Web.UI.Control" /> Określonego nie implementuje <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-165">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
          <span data-ttu-id="cda49-166">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-166">Client Callbacks Without Postbacks in ASP.NET Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="cda49-167">Serwer <see cref="T:System.Web.UI.Control" /> obsługująca wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-167">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="cda49-168">Kontrolka musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejs i dostarczyć <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-168">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-169">Argument przekazywany ze skryptu klienta do serwera</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-169">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="cda49-170">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> Metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-170">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="cda49-171">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik zdarzenia pomyślnego serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-171">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="cda49-172">Skrypt klienta, który jest oceniany na komputerze klienckim przed zainicjowaniem wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-172">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="cda49-173">Wynik skryptu jest przekazywany do obsługi zdarzeń klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-173">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="cda49-174">
            <see langword="true" /> Aby wykonać wywołanie zwrotne asynchronicznie; <see langword="false" /> do wykonania wywołania zwrotnego synchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-174">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-175">Pobiera odwołanie do funkcji klienta, gdy wywoływany, inicjuje przez klienta wywołania zwrotnego do zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-175">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="cda49-176">Funkcja klienta dla tej przeciążonej metody obejmuje określoną kontrolkę, argument, skrypt po stronie klienta, kontekstu i wartość logiczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-176">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-177">Nazwa funkcji klienta, który wywołuje wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-177">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-178">To przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda wymaga `useAsync` parametr, który umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie, ustawiając wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="cda49-178">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="cda49-179">Wersje przeciążenia tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="cda49-179">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="cda49-180">Aby uzyskać więcej informacji na temat tej metody, zobacz uwagi dla przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-180">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-181">
            <see cref="T:System.Web.UI.Control" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-181">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cda49-182">
            <see cref="T:System.Web.UI.Control" /> Określonego nie implementuje <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-182">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
          <span data-ttu-id="cda49-183">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-183">Client Callbacks Without Postbacks in ASP.NET Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : string * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (target, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="cda49-184">Nazwa serwera <see cref="T:System.Web.UI.Control" /> obsługująca wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-184">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="cda49-185">Kontrolka musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejs i dostarczyć <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-185">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-186">Argument przekazywany ze skryptu klienta do serwera</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-186">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="cda49-187">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> Metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-187">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="cda49-188">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik zdarzenia pomyślnego serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-188">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="cda49-189">Skrypt klienta, który jest oceniany na komputerze klienckim przed zainicjowaniem wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-189">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="cda49-190">Wynik skryptu jest przekazywany do obsługi zdarzeń klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-190">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="cda49-191">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik w przypadku wystąpienia błędu programu obsługi zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-191">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="cda49-192">
            <see langword="true" /> Aby wykonać wywołanie zwrotne asynchronicznie; <see langword="false" /> do wykonania wywołania zwrotnego synchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-192">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-193">Pobiera odwołanie do funkcji klienta, gdy wywoływany, inicjuje przez klienta wywołania zwrotnego do zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-193">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="cda49-194">Funkcja klienta dla tej przeciążonej metody zawiera określonego obiektu docelowego, argument, skrypt po stronie klienta, kontekstu, procedura obsługi błędów i wartość logiczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-194">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-195">Nazwa funkcji klienta, który wywołuje wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-195">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-196">To przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda przyjmuje `target` ciągu parametr zamiast <xref:System.Web.UI.Control> parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-196">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="cda49-197">Użyj tego przeciążenia, wywołanie zwrotne, aby przejść z powrotem na coś innego niż ciąg zawierający <xref:System.Web.UI.Control.UniqueID%2A> formantu.</span><span class="sxs-lookup"><span data-stu-id="cda49-197">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="cda49-198">Ponadto to przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda wymaga `useAsync` i `clientErrorCallback` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-198">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="cda49-199">`useAsync` Parametr umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie, ustawiając wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="cda49-199">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="cda49-200">Wersje przeciążenia tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="cda49-200">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="cda49-201">`clientErrorCallback` Parametru pozwala na zdefiniowanie nazwy funkcji klienta, która jest wywoływana, gdy obsługi serwera <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metody zwraca błąd.</span><span class="sxs-lookup"><span data-stu-id="cda49-201">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="cda49-202">Wersje przeciążenia tej metody, które nie wymagają `clientErrorCallback` ustawiona wartość null.</span><span class="sxs-lookup"><span data-stu-id="cda49-202">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="cda49-203">Aby uzyskać więcej informacji na temat tej metody, zobacz uwagi dla przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-203">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-204">Poniższy przykład kodu demonstruje sposób używania dwa przeciążenia metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody w przypadku wywołania zwrotnego klienta, który zwiększa liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="cda49-204">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="cda49-205">Dwa mechanizmy wywołania zwrotnego są wyświetlane; Różnica między nimi polega na użyciu `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-205">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="cda49-206">A `ReceiveServerData1` funkcji wywołania zwrotnego klienta jest realizowane przy użyciu `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-206">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="cda49-207">Z kolei `ReceiveServerData2` funkcji wywołania zwrotnego klienta jest zdefiniowany w `<script>` na stronie.</span><span class="sxs-lookup"><span data-stu-id="cda49-207">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="cda49-208">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metodą jest program obsługi serwera, który zwiększa wartość, która jest przekazywana do niego i <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> metoda zwraca zwiększona wartość jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="cda49-208">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="cda49-209">Jeśli <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metoda zwraca błąd, a następnie funkcja klienta `ProcessCallBackError` jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="cda49-209">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
          <span data-ttu-id="cda49-210">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-210">Client Callbacks Without Postbacks in ASP.NET Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="cda49-211">Serwer <see cref="T:System.Web.UI.Control" /> obsługująca wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-211">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="cda49-212">Kontrolka musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejs i dostarczyć <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-212">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-213">Argument przekazywany ze skryptu klienta do serwera <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-213">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="cda49-214">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik zdarzenia pomyślnego serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-214">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="cda49-215">Skrypt klienta, który jest oceniany na komputerze klienckim przed zainicjowaniem wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-215">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="cda49-216">Wynik skryptu jest przekazywany do obsługi zdarzeń klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-216">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="cda49-217">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik w przypadku wystąpienia błędu programu obsługi zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-217">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="cda49-218">
            <see langword="true" /> Aby wykonać wywołanie zwrotne asynchronicznie; <see langword="false" /> do wykonania wywołania zwrotnego synchronicznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-218">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-219">Pobiera odwołanie do funkcji klienta, gdy wywoływany, inicjuje przez klienta wywołania zwrotnego do zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-219">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="cda49-220">Funkcja klienta dla tej przeciążonej metody obejmuje określoną kontrolkę, argument, skrypt po stronie klienta, kontekstu, procedura obsługi błędów i wartość logiczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-220">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-221">Nazwa funkcji klienta, który wywołuje wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-221">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-222">To przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda wymaga `useAsync` i `clientErrorCallback` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-222">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="cda49-223">`useAsync` Parametr umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie, ustawiając wartość `true`.</span><span class="sxs-lookup"><span data-stu-id="cda49-223">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="cda49-224">Wersje przeciążenia tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="cda49-224">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="cda49-225">`clientErrorCallback` Parametru pozwala na zdefiniowanie nazwy funkcji klienta, która jest wywoływana, gdy obsługi serwera ( <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metoda) zwraca błąd.</span><span class="sxs-lookup"><span data-stu-id="cda49-225">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="cda49-226">Wersje przeciążenia tej metody, które nie wymagają `clientErrorCallback` ustawiona wartość null.</span><span class="sxs-lookup"><span data-stu-id="cda49-226">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="cda49-227">Aby uzyskać więcej informacji na temat tej metody, zobacz uwagi dla przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-227">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-228">
            <see cref="T:System.Web.UI.Control" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-228">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cda49-229">
            <see cref="T:System.Web.UI.Control" /> Określonego nie implementuje <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-229">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
          <span data-ttu-id="cda49-230">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-230">Client Callbacks Without Postbacks in ASP.NET Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-231">Pobiera odwołanie, za pomocą <see langword="javascript:" /> dołączany na początku, który może służyć w zdarzeniu klienta można opublikować na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-231">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="cda49-232">Formant serwera przetwarzania zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-232">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-233">Parametr przekazany do kontrolki serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-233">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-234">Pobiera odwołanie, za pomocą <see langword="javascript:" /> dołączany na początku, który może służyć w zdarzeniu klienta można opublikować na serwerze, na określoną kontrolkę i argumentów określonego zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-234">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-235">Ciąg reprezentujący wywołanie JavaScript do zwrotu funkcji, która zawiera argumenty formantu docelowego Identyfikatora i zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-235">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-236">Za pomocą <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda wymaga formantu, który obsługuje zwrot do zaimplementowania <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cda49-236">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="cda49-237">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, można użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="cda49-237">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-238">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-238">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="cda49-239">Kontrolka niestandardowa, `MyControl`, implementuje <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cda49-239">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="cda49-240">Po kliknięciu elementu zakotwiczenia kodu HTML na stronie <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> wywoływana jest metoda formantu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="cda49-240">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="cda49-241">Poniższy przykładowy kod ma taką samą funkcjonalność, jak poprzedni, chyba że zamiast formant niestandardowy <xref:System.Web.UI.Page> klasy implementuje <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cda49-241">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="cda49-242">Formant serwera przetwarzania zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-242">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-243">Parametr przekazany do kontrolki serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-243">The parameter passed to the server control.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="cda49-244">
            <see langword="true" /> Aby zarejestrować zdarzenie ogłaszania wstecznego do weryfikacji; <see langword="false" /> nie zarejestrować zdarzenie wstecz post do sprawdzania poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-244">
              <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-245">Pobiera odwołanie, za pomocą <see langword="javascript:" /> dołączany na początku, który może służyć w zdarzeniu klienta można opublikować na serwerze dla określonego kontrolką argumenty określonego zdarzenia i wskazanie logiczna czy rejestrować wpis ją ponownie, aby zdarzenia Sprawdzanie poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-245">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-246">Ciąg reprezentujący wywołanie JavaScript do zwrotu funkcji, która zawiera argumenty formantu docelowego Identyfikatora i zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-246">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-247">Za pomocą <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda wymaga formantu, który obsługuje zwrot do zaimplementowania <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cda49-247">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="cda49-248">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, można użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="cda49-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-249">Zwraca ciąg, który może służyć w zdarzeniu klienta, aby spowodować ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-249">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions -&gt; string" Usage="clientScriptManager.GetPostBackEventReference options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="cda49-250">A <see cref="T:System.Web.UI.PostBackOptions" /> definiujący zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-250">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-251">Zwraca ciąg, który może służyć w zdarzeniu klienta, aby spowodować ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-251">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="cda49-252">Ciąg odwołania jest definiowany przez określony <see cref="T:System.Web.UI.PostBackOptions" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-252">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-253">Ciąg, który, gdy traktowane jako skrypt na kliencie, ogłaszanie zwrotne klienta inicjuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-253">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-254">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, można użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="cda49-254">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="cda49-255"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metody mogą być używane z <xref:System.Web.UI.WebControls.Button> decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="cda49-255">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="cda49-256">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda zwraca klienta ogłaszanie zwrotne zdarzenie <xref:System.Web.UI.WebControls.Button> kontroli.</span><span class="sxs-lookup"><span data-stu-id="cda49-256">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-257">
            <see cref="T:System.Web.UI.PostBackOptions" /> Parametr <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-257">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
          <span data-ttu-id="cda49-258">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-258">Client Callbacks Without Postbacks in ASP.NET Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="cda49-259">Serwer <see cref="T:System.Web.UI.Control" /> która przetwarza ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-259">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-260">Ciąg opcjonalne argumenty do przekazania do formantu, który przetwarza zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-260">A string of optional arguments to pass to the control that processes the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-261">Zwraca ciąg, który może służyć w zdarzeniu klienta, aby spowodować ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-261">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="cda49-262">Ciąg odwołania jest definiowany przez określony formant, który obsługuje odświeżenie strony i argument ciągu informacji dodatkowych zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-262">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-263">Ciąg, który, gdy traktowane jako skrypt na kliencie, inicjuje zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-263">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-264">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, można użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="cda49-264">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="cda49-265"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metody mogą być używane z <xref:System.Web.UI.WebControls.Button> decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="cda49-265">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="cda49-266">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda zwraca klienta ogłaszanie zwrotne zdarzenie <xref:System.Web.UI.WebControls.Button> kontroli.</span><span class="sxs-lookup"><span data-stu-id="cda49-266">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-267">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-267">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="cda49-268">Kontrolka niestandardowa, `MyControl`, implementuje <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cda49-268">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="cda49-269">Po kliknięciu przycisku na stronie <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> wywoływana jest metoda formantu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="cda49-269">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="cda49-270">Poniższy przykładowy kod ma taką samą funkcjonalność, jak poprzedni, chyba że zamiast formant niestandardowy <xref:System.Web.UI.Page> klasy implementuje <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cda49-270">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-271">Określony <see cref="T:System.Web.UI.Control" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-271">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
          <span data-ttu-id="cda49-272">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-272">Client Callbacks Without Postbacks in ASP.NET Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (options, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="cda49-273">A <see cref="T:System.Web.UI.PostBackOptions" /> definiujący zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-273">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="cda49-274">
            <see langword="true" /> Aby zarejestrować odwołanie zdarzenia do weryfikacji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-274">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-275">Zwraca ciąg, który może służyć w zdarzeniu klienta, aby spowodować ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-275">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="cda49-276">Ciąg odwołania jest definiowany przez określony <see cref="T:System.Web.UI.PostBackOptions" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-276">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          </span>
          <span data-ttu-id="cda49-277">Opcjonalnie rejestruje odwołanie zdarzenia do sprawdzania poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-277">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-278">Ciąg, który, gdy traktowane jako skrypt na kliencie, ogłaszanie zwrotne klienta inicjuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-278">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-279">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page> obiektu, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="cda49-279">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="cda49-280"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metody mogą być używane z <xref:System.Web.UI.WebControls.Button> decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="cda49-280">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="cda49-281">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda zwraca klienta ogłaszanie zwrotne zdarzenie <xref:System.Web.UI.WebControls.Button> kontroli.</span><span class="sxs-lookup"><span data-stu-id="cda49-281">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="cda49-282">Jeśli `registerForEventValidation` jest `true`, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> wywołania metody <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> metody do rejestrowania zdarzeń odwołanie do sprawdzania poprawności przy użyciu Identyfikatora unikatowy kontroli, który reprezentuje kontrolkę klienta, które generuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="cda49-282">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-283">
            <see cref="T:System.Web.UI.PostBackOptions" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-283">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
          <span data-ttu-id="cda49-284">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-284">Client Callbacks Without Postbacks in ASP.NET Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="cda49-285">Serwer <see cref="T:System.Web.UI.Control" /> która przetwarza ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-285">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-286">Parametry opcjonalne argumenty do przekazania do <c>kontroli</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-286">A string of optional arguments to pass to <c>control</c>.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="cda49-287">
            <see langword="true" /> Aby zarejestrować odwołanie zdarzenia do weryfikacji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-287">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-288">Zwraca ciąg do użycia w przypadku klienta spowodować ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-288">Returns a string to use in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="cda49-289">Ciąg odwołania jest definiowany przez określony formant, który obsługuje odświeżenie strony i argument ciągu informacji dodatkowych zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-289">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
          <span data-ttu-id="cda49-290">Opcjonalnie rejestruje odwołanie zdarzenia do sprawdzania poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-290">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-291">Ciąg, który, gdy traktowane jako skrypt na kliencie, inicjuje zwrotu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-291">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-292">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, można użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="cda49-292">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="cda49-293"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metody mogą być używane z <xref:System.Web.UI.WebControls.Button> decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="cda49-293">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="cda49-294">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda zwraca klienta ogłaszanie zwrotne zdarzenie <xref:System.Web.UI.WebControls.Button> kontroli.</span><span class="sxs-lookup"><span data-stu-id="cda49-294">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="cda49-295">Jeśli `registerForEventValidation` ma wartość true, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> wywołania metody <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> metody do rejestrowania zdarzeń odwołanie do sprawdzania poprawności przy użyciu Identyfikatora unikatowy kontroli, który reprezentuje kontrolkę klienta, które generuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="cda49-295">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-296">Określony <see cref="T:System.Web.UI.Control" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-296">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185">
          <span data-ttu-id="cda49-297">Wywołania zwrotne klienta, bez ogłaszania zwrotnego na stronach ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-297">Client Callbacks Without Postbacks in ASP.NET Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.GetWebResourceUrl : Type * string -&gt; string" Usage="clientScriptManager.GetWebResourceUrl (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-298">Typ zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-298">The type of the resource.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="cda49-299">W pełni kwalifikowana nazwa zasobu w zestawie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-299">The fully qualified name of the resource in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-300">Pobiera odwołanie adresu URL do zasobu w zestawie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-300">Gets a URL reference to a resource in an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-301">Odwołanie adresu URL do zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-301">The URL reference to the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-302"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Metoda zwraca odwołanie adresu URL do zasobu osadzonego w zestawie.</span><span class="sxs-lookup"><span data-stu-id="cda49-302">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="cda49-303">Zwracane odwołanie nie jest zakodowany w adresie URL.</span><span class="sxs-lookup"><span data-stu-id="cda49-303">The returned reference is not URL encoded.</span></span> <span data-ttu-id="cda49-304">Zasoby mogą być pliki skryptów, obrazów ani żadnych plików statycznych.</span><span class="sxs-lookup"><span data-stu-id="cda49-304">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="cda49-305">Należy określić typ bazując na obiekt, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="cda49-305">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="cda49-306">Zarejestrowane przy użyciu strony zasobów sieci Web jest unikatowo identyfikowana przez jej typ i nazwa.</span><span class="sxs-lookup"><span data-stu-id="cda49-306">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="cda49-307">Można zarejestrować tylko jeden zasób z danego typu i nazwy pary ze stroną.</span><span class="sxs-lookup"><span data-stu-id="cda49-307">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="cda49-308">Próby rejestracji zasobów, która jest już zarejestrowana nie tworzy zduplikowane zarejestrowanego zasobu.</span><span class="sxs-lookup"><span data-stu-id="cda49-308">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="cda49-309"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Metoda jest używana w połączeniu z <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> metody uzyskania dostępu do zasobów osadzonych w zestawach.</span><span class="sxs-lookup"><span data-stu-id="cda49-309">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="cda49-310">Aby uzyskać więcej informacji na temat korzystania z zasobów w aplikacjach, zobacz [omówienie zasoby strony sieci Web programu ASP.NET](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="cda49-310">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-311">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-311">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="cda49-312">*Typu* parametr w tym przykładzie jest ustawiony na typ klasy w zestawie, zawierające zasób.</span><span class="sxs-lookup"><span data-stu-id="cda49-312">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="cda49-313">`resourceName` Parametr jest określony za pomocą w pełni kwalifikowana ścieżka do zasobu, który zawiera domyślny obszar nazw.</span><span class="sxs-lookup"><span data-stu-id="cda49-313">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="cda49-314">Poniższy przykład kodu pokazuje, jak programowe stosowanie <xref:System.Web.UI.WebResourceAttribute> atrybutu metadanych do oznaczenia zestawu dla zasobów, które będą obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="cda49-314">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="cda49-315">Skompilować następujące klasy w bibliotece klas z domyślnej przestrzeni nazw, ustaw `Samples.AspNet.CS.Controls` lub `Samples.AspNet.VB.Controls`, w zależności od jakiego języka używasz.</span><span class="sxs-lookup"><span data-stu-id="cda49-315">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="cda49-316">W tym przykładzie wymaga plik JavaScript o nazwie `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="cda49-316">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="cda49-317">Plik .js jest osadzony zasób w zestawie, który zawiera `ClientScriptResourceLabel` obiektu.</span><span class="sxs-lookup"><span data-stu-id="cda49-317">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="cda49-318">Jeśli używasz programu Visual Studio, w oknie dialogowym właściwości projektu biblioteki klas, ustaw **Build Action** do **zasób osadzony** po wybraniu pliku skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-318">If you are using Visual Studio, in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="cda49-319">Jeśli kompilacja biblioteki w wierszu polecenia, należy użyć przełącznika do zasobu osadzonego.</span><span class="sxs-lookup"><span data-stu-id="cda49-319">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-320">Nazwa zasobu sieci web jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-320">The web resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cda49-321">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-321">\- or -</span>
          </span>
          <span data-ttu-id="cda49-322">Nazwa zasobu sieci web ma długość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-322">The web resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <related type="Article" href="http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd">
          <span data-ttu-id="cda49-323">Omówienie zasoby strony sieci Web programu ASP.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-323">ASP.NET Web Page Resources Overview</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/5212666e-98ab-47e4-a497-b5545ab15c7f">
          <span data-ttu-id="cda49-324">/ Resource (osadzanie pliku zasobów do danych wyjściowych) (opcje kompilatora C#)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-324">/resource (Embed Resource File to Output) (C# Compiler Options)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/eee2f227-91f2-4f2b-a9d6-1c51c5320858">
          <span data-ttu-id="cda49-325">/resource (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-325">/resource (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-326">Określa, czy jest zarejestrowany w bloku skryptu klienta <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-326">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cda49-327">Klucz bloku skryptu klienta do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-327">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-328">Określa, czy jest zarejestrowany w bloku skryptu klienta <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-328">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-329">
            <see langword="true" /> Jeśli blok skryptu klienta jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-329">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-330">Wywołanie tej metody, przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="cda49-330">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="cda49-331">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cda49-331">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="cda49-332">Skrypt klienta jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-332">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-333">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-333">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="cda49-334">To przeciążenie <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metoda wywołuje przeciążenia przyjmującego zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page> obiektu</span><span class="sxs-lookup"><span data-stu-id="cda49-334">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-335">Typ bloku skryptu klienta do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-335">The type of the client script block to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-336">Klucz bloku skryptu klienta do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-336">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-337">Określa, czy jest zarejestrowany w bloku skryptu klienta <see cref="T:System.Web.UI.Page" /> obiektu przy użyciu klucza i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-337">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-338">
            <see langword="true" /> Jeśli blok skryptu klienta jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-338">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-339">Wywołanie tej metody, przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="cda49-339">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="cda49-340">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cda49-340">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="cda49-341">Skrypt klienta jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-341">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-342">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-342">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-343">Należy określić typ bazując na obiekt, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="cda49-343">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="cda49-344">Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-344">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-345">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-345">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="cda49-346">Należy pamiętać, że jeśli logika do wyszukania istniejącego bloku skryptu klienta zostały usunięte, nie będzie mieć dwa skrypty zduplikowane klienta w kodzie źródłowym HTML renderowanej strony ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metoda sprawdza, czy duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-346">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="cda49-347">Zaletą sprawdzanie jest ograniczyć niepotrzebne obliczeń.</span><span class="sxs-lookup"><span data-stu-id="cda49-347">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-348">Typ skryptu klienta jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-348">The client script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-349">Określa, czy skrypt po stronie klienta obejmują jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-349">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cda49-350">Klucz skryptu klienta obejmują do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-350">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-351">Określa, czy skrypt po stronie klienta obejmują jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-351">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-352">
            <see langword="true" /> Jeśli uwzględniony skrypt po stronie klienta jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-352">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-353">Wywołanie tej metody, przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="cda49-353">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="cda49-354">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cda49-354">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="cda49-355">Skrypt klienta obejmują jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-355">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-356">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-356">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="cda49-357">To przeciążenie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metoda wywołuje przeciążenia przyjmującego zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cda49-357">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-358">Typ skryptu klienta obejmują do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-358">The type of the client script include to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-359">Klucz skryptu klienta obejmują do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-359">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-360">Określa, czy skrypt po stronie klienta obejmują jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu przy użyciu klucza i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-360">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-361">
            <see langword="true" /> Jeśli uwzględniony skrypt po stronie klienta jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-361">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-362">Wywołanie tej metody, przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> zawiera metody w celu uniknięcia, rejestrowanie skryptu, zduplikowane klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-362">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="cda49-363">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cda49-363">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="cda49-364">Skrypt klienta obejmują jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-364">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-365">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-365">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-366">Należy określić typ bazując na obiekt, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="cda49-366">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="cda49-367">Na przykład podczas dostępu do zasobu, przy użyciu wystąpienia strony, należy określić `Page` typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-367">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-368">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-368">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="cda49-369">Należy pamiętać, że jeśli logika poszukaj obejmują istniejącego skryptu klienta zostały usunięte, nie będzie mieć dwa skrypty zduplikowane klienta w kodzie źródłowym HTML renderowanej strony ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metoda sprawdza, czy duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-369">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="cda49-370">Zaletą sprawdzanie jest ograniczyć niepotrzebne obliczeń.</span><span class="sxs-lookup"><span data-stu-id="cda49-370">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="cda49-371">W tym przykładzie wymaga plik JavaScript o nazwie `Script_include.js`, z następującą zawartością:</span><span class="sxs-lookup"><span data-stu-id="cda49-371">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-372">Skrypt po stronie klienta jest dołączana jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-372">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-373">Określa, czy oświadczenie OnSubmit jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-373">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cda49-374">Klucz instrukcji OnSubmit do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-374">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-375">Określa, czy oświadczenie OnSubmit jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-375">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-376">
            <see langword="true" /> Jeśli instrukcja OnSubmit jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-376">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-377">Wywołanie tej metody, przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metodę, aby uniknąć zduplikowanych OnSubmit instrukcje rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="cda49-377">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="cda49-378">Jest to szczególnie ważne, jeśli instrukcja wymaga dużej ilości zasobów serwera w celu tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cda49-378">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="cda49-379">Instrukcja jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-379">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-380">Instrukcje z tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-380">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="cda49-381">To przeciążenie <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metoda wywołuje przeciążenia przyjmującego zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page> obiektu</span><span class="sxs-lookup"><span data-stu-id="cda49-381">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-382">Typ instrukcji OnSubmit do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-382">The type of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-383">Klucz instrukcji OnSubmit do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-383">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-384">Określa, czy oświadczenie OnSubmit jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu przy użyciu określonego klucza i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-384">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-385">
            <see langword="true" /> Jeśli instrukcja OnSubmit jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-385">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-386">Wywołanie tej metody, przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metodę, aby uniknąć zduplikowanych instrukcje rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="cda49-386">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="cda49-387">Jest to szczególnie ważne, jeśli instrukcja wymaga dużej ilości zasobów serwera w celu tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cda49-387">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="cda49-388">Instrukcja jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-388">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-389">Instrukcje z tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-389">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-390">Należy określić typ bazując na obiekt, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="cda49-390">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="cda49-391">Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-391">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-392">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-392">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="cda49-393">Skrypt o nazwie `OnSubmitScript` jest zarejestrowane w usłudze <xref:System.Web.UI.Page> tak, aby po stronie przesłaniu formularza skrypt zostanie wywołany.</span><span class="sxs-lookup"><span data-stu-id="cda49-393">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-394">Typ instrukcji OnSubmit jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-394">The OnSubmit statement type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-395">Określa, czy skrypt uruchamiania jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-395">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cda49-396">Klucz skryptu uruchamiania do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-396">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-397">Określa, czy skrypt uruchamiania jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-397">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-398">
            <see langword="true" /> Jeśli skrypt uruchamiania jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-398">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-399">Wywołanie tej metody, przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="cda49-399">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="cda49-400">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cda49-400">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="cda49-401">Skrypt uruchamiania jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-401">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-402">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-402">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="cda49-403">To przeciążenie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metoda wywołuje przeciążenia przyjmującego oba parametry `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page> obiektu</span><span class="sxs-lookup"><span data-stu-id="cda49-403">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-404">Typ skryptu uruchamiania do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-404">The type of the startup script to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-405">Klucz skryptu uruchamiania do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-405">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-406">Określa, czy skrypt uruchamiania jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu przy użyciu określonego klucza i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-406">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cda49-407">
            <see langword="true" /> Jeśli skrypt uruchamiania jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-407">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-408">Wywołanie tej metody, przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="cda49-408">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="cda49-409">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu tworzenia.</span><span class="sxs-lookup"><span data-stu-id="cda49-409">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="cda49-410">Skrypt uruchamiania klienta jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-410">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-411">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-411">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-412">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-412">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="cda49-413">Należy pamiętać, że jeśli logika do wyszukania istniejącego bloku skryptu uruchamiania zostały usunięte, nie będzie mieć dwa skrypty uruchamiania duplikatów w kodzie źródłowym HTML renderowanej strony ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metoda sprawdza, czy duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-413">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="cda49-414">Zaletą sprawdzanie jest ograniczyć niepotrzebne obliczeń.</span><span class="sxs-lookup"><span data-stu-id="cda49-414">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-415">Typ skryptu uruchamiania jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-415">The startup script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterArrayDeclaration : string * string -&gt; unit" Usage="clientScriptManager.RegisterArrayDeclaration (arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="cda49-416">Nazwa tablicy do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-416">The array name to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="cda49-417">Tablica wartości lub wartości, które można zarejestrować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-417">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-418">Rejestruje deklarację tablicy języka JavaScript przy użyciu <see cref="T:System.Web.UI.Page" /> obiektu przy użyciu tablicy nazwy i wartości tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-418">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-419"><xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> Sprawdza, czy tablica zarejestrowanych istnieje o takiej samej nazwie jak nazwa określona w `arrayName` parametru i jeśli tak, dodaje wartości określone w `arrayValue` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-419">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="cda49-420">Ponieważ podstawowego mechanizmu przechowywania jest oparta na <xref:System.Collections.ArrayList>, duplikaty są dozwolone.</span><span class="sxs-lookup"><span data-stu-id="cda49-420">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="cda49-421">Jeśli zarejestrowane macierzy o takiej samej nazwie jak `arrayName` parametr nie istnieje, jest on tworzony i wartościami w `arrayValue` dodano do niego parametr.</span><span class="sxs-lookup"><span data-stu-id="cda49-421">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="cda49-422">Literał ciągu w tablica wynikowa JavaScript, zawierają znaki pojedynczego cudzysłowu (') lub poprzedzone znakiem zmiany znaczenia podwójnego cudzysłowu (\\") w `arrayValue` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-422">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="cda49-423">Wartość `arrayValue` parametr powinien mieć pojedynczy element.</span><span class="sxs-lookup"><span data-stu-id="cda49-423">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="cda49-424">Jeśli więcej niż jedną wartość musi zostać dodane do tablicy, należy wprowadzić wiele wywołań przy użyciu <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-424">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-425">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> i <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-425">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="cda49-426">W przykładzie rejestruje tablicy i wartości ukryte i definiuje `OnClick` zdarzenia `<input>` przycisk, aby obliczyć sumę dwóch wartości tablicy i wartości ukryte.</span><span class="sxs-lookup"><span data-stu-id="cda49-426">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-427">
            <paramref name="arrayName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-427">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-428">Rejestruje skryptu klienta za pomocą <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-428">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-429">Typ skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-429">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-430">Klucz skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-430">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="cda49-431">Literał do zarejestrowania skrypt klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-431">The client script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-432">Rejestruje skryptu klienta za pomocą <see cref="T:System.Web.UI.Page" /> obiektu, używając typu, klucza i skrypt literału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-432">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-433">Skrypt klienta jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-433">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-434">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-434">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-435">Na stronie można zarejestrować tylko jeden skrypt za pomocą danego typu i pary kluczy.</span><span class="sxs-lookup"><span data-stu-id="cda49-435">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="cda49-436">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy zduplikowane skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-436">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="cda49-437">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metodę, aby określić, czy skrypt klienta przy użyciu podanej pary klucza i typu jest już zarejestrowany i uniknąć niepotrzebnego podjęto próbę dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-437">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="cda49-438">W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody, należy się upewnić, że skrypt w `script` parametru jest opakowana w `<script>` bloku elementu.</span><span class="sxs-lookup"><span data-stu-id="cda49-438">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="cda49-439"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Metoda dodaje blok skryptu do góry renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-439">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="cda49-440">Bloki skryptu nie musi być danych wyjściowych w kolejności, w której są one zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="cda49-440">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="cda49-441">Jeśli kolejność Bloki skryptu jest ważne, użyj <xref:System.Text.StringBuilder> do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestrować je w bloku skryptu jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-441">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-442">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-442">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-443">Typ skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-443">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-444">Klucz skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-444">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="cda49-445">Literał do zarejestrowania skrypt klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-445">The client script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="cda49-446">Wartość logiczna wskazująca, czy należy dodać tagów skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-446">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-447">Rejestruje skryptu klienta za pomocą <see cref="T:System.Web.UI.Page" /> przy użyciu typu, kluczy skryptu literału i logicznych wartość wskazującą, czy można dodać tagów skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-447">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-448">Skrypt klienta jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-448">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-449">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-449">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-450">Na stronie można zarejestrować tylko jeden skrypt za pomocą danego typu i pary kluczy.</span><span class="sxs-lookup"><span data-stu-id="cda49-450">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="cda49-451">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy zduplikowane skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-451">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="cda49-452">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metodę pozwala ustalić, czy skrypt klienta przy użyciu podanej pary klucza i typu jest już zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="cda49-452">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="cda49-453">Dzięki temu można uniknąć niepotrzebnego podjęto próbę dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-453">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="cda49-454">W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody, można wskazać, czy skrypt jest dostarczany w `script` parametru jest ujęte w nawiasy `<script>` bloku elementu za pomocą `addScriptTags` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-454">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="cda49-455">Ustawienie `addScriptTags` do `true` wskazuje, że tagi skryptu zostanie dodana automatycznie.</span><span class="sxs-lookup"><span data-stu-id="cda49-455">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="cda49-456"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Metoda dodaje blok skryptu do góry renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-456">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="cda49-457">Bloki skryptu nie musi być danych wyjściowych w kolejności, w której są one zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="cda49-457">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="cda49-458">Jeśli kolejność Bloki skryptu jest ważne, użyj <xref:System.Text.StringBuilder> do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestrować je w bloku skryptu jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-458">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-459">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-459">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="cda49-460">Należy pamiętać, że `addScriptTags` parametr ma wartość `true` tak początkowe i skrypt taga zamykającego nie są dołączone `script` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-460">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-461">Typ bloku skryptu klienta jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-461">The client script block type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-462">Skrypt po stronie klienta obejmują z rejestrów <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-462">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="cda49-463">Obejmują klucz skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-463">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="cda49-464">Adres URL skryptu klienta obejmują do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-464">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-465">Rejestruje skryptu klienta za pomocą <see cref="T:System.Web.UI.Page" /> przy użyciu klucza i adres URL, co umożliwia skryptu, który ma być wywoływana z klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-465">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-466">Skrypt klienta obejmują jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-466">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-467">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-467">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-468">Na stronie można zarejestrować tylko jeden skrypt za pomocą danego typu i pary kluczy.</span><span class="sxs-lookup"><span data-stu-id="cda49-468">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="cda49-469">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy zduplikowane skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-469">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="cda49-470">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> metodę, aby określić, czy skrypt klienta obejmują z danym kluczem i pary typ jest już zarejestrowany i uniknąć niepotrzebnego podjęto próbę dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-470">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cda49-471">Aby rozwiązać adres URL klienta, użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-471">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="cda49-472">Ta metoda używa kontekstu adresu URL, na którym jest wywoływana, aby rozpoznać ścieżki.</span><span class="sxs-lookup"><span data-stu-id="cda49-472">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="cda49-473">To przeciążenie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metoda wywołuje przeciążenia przyjmującego `key`, `URL`, a `type` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-473">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="cda49-474">Metoda dodaje blok skryptu, u góry renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-474">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-475">Aby uzyskać powiązane informacje o składni, użycia i przykłady, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="cda49-475">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-476">Typ skryptu klienta obejmują do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-476">The type of the client script include to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-477">Obejmują klucz skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-477">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="cda49-478">Adres URL skryptu klienta obejmują do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-478">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-479">Skrypt po stronie klienta obejmują z rejestrów <see cref="T:System.Web.UI.Page" /> przy użyciu typu, klucza i adresu URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-479">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-480">To przeciążenie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metoda przyjmuje *klucz* i *adresu url* parametry, aby zidentyfikować skryptu, a także `type` obejmują parametru, aby określić identyfikator skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-480">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="cda49-481">Należy określić typ bazując na obiekt, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="cda49-481">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="cda49-482">Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-482">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cda49-483">Aby rozwiązać adres URL klienta, użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-483">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="cda49-484">Ta metoda używa kontekstu adresu URL, na którym jest wywoływana, aby rozpoznać ścieżki.</span><span class="sxs-lookup"><span data-stu-id="cda49-484">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="cda49-485">Metoda ta umożliwia dodanie bloku skryptu w górnej części renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-485">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-486">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-486">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="cda49-487">Należy pamiętać, że jeśli logika poszukaj obejmują istniejącego skryptu klienta zostały usunięte, nadal nie będzie mieć skrypty klienta zduplikowane na renderowanej stronie ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metoda sprawdza, czy duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-487">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="cda49-488">Zaletą sprawdzanie jest ograniczyć niepotrzebne obliczeń.</span><span class="sxs-lookup"><span data-stu-id="cda49-488">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="cda49-489">Ten przykład wymaga plik JavaScript o nazwie Script_include.js z następującą zawartością:</span><span class="sxs-lookup"><span data-stu-id="cda49-489">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-490">Skrypt po stronie klienta jest dołączana jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-490">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cda49-491">Adres URL jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-491">The URL is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cda49-492">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-492">\- or -</span>
          </span>
          <span data-ttu-id="cda49-493">Adres URL jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-493">The URL is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptResource : Type * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptResource (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-494">Typ zasobu skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-494">The type of the client script resource to register.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="cda49-495">Nazwa zasobu skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-495">The name of the client script resource to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-496">Rejestruje zasób skryptu klienta za pomocą <see cref="T:System.Web.UI.Page" /> przy użyciu typ i nazwę zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-496">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-497"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Metoda jest używana podczas uzyskiwania dostępu do zasobów skompilowanego z zestawów przy użyciu programu obsługi WebResource.axd HTTP.</span><span class="sxs-lookup"><span data-stu-id="cda49-497">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="cda49-498"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Metoda rejestruje skrypt za pomocą <xref:System.Web.UI.Page> obiektu i uniemożliwia zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="cda49-498">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="cda49-499">Ta metoda opakowuje zawartość adresu URL zasobu `<script>` bloku elementu.</span><span class="sxs-lookup"><span data-stu-id="cda49-499">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-500">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-500">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="cda49-501">Poniższy przykład kodu pokazuje, jak programowe stosowanie <xref:System.Web.UI.WebResourceAttribute> atrybutu metadanych do oznaczenia zestawu dla zasobów, które będą obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="cda49-501">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="cda49-502">W tym przykładzie wymaga plik JavaScript o nazwie `Script_include.js`, z następującą zawartością:</span><span class="sxs-lookup"><span data-stu-id="cda49-502">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="cda49-503">Skompilować `Script_include.js` plików jako zasób w `Samples.AspNet.CS.Controls` zestawu, który zawiera `ClientScriptResourceLabel` klasy.</span><span class="sxs-lookup"><span data-stu-id="cda49-503">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-504">Nazwa zasobu klienta jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-504">The client resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="cda49-505">\- lub —</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-505">\- or -</span>
          </span>
          <span data-ttu-id="cda49-506">Nazwa zasobu klienta ma długość zerową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-506">The client resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-507">Rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) z określoną kontrolkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-507">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="cda49-508">
            <see cref="T:System.Web.UI.Control" /> Na stronie, która zawiera atrybut niestandardowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-508">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="cda49-509">Nazwa niestandardowego atrybutu w celu zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-509">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="cda49-510">Wartość atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-510">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-511">Rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) z określoną kontrolkę podany identyfikator kontrolki, nazwę i wartość atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-511">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-512"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Metoda rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) na określonym <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="cda49-512">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="cda49-513">Ten atrybut expando ustawiono dynamicznie poziomu języka JavaScript w celu zachowania zgodności XHTML dla kodu znaczników kontrolki renderowany.</span><span class="sxs-lookup"><span data-stu-id="cda49-513">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="cda49-514">Cudzysłowów i ukośników odwrotnych w wartości atrybutów niestandardowych (expando) będą miały zmienione znaczenie.</span><span class="sxs-lookup"><span data-stu-id="cda49-514">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="cda49-515">Jeśli użytkownik nie chce jako znak ucieczki dla cudzysłowów i ukośników odwrotnych, wywołaj <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> przeciążyć metodę i ustawić `encode` parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="cda49-515">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="cda49-516">Jeśli nie odnaleziono atrybutu expando lub kontrolki, Dodaj atrybut expando, aby nie zostanie znaleziony, skrypt po stronie klienta jest nadal emitowane, ale nie wpłynie to na formant.</span><span class="sxs-lookup"><span data-stu-id="cda49-516">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="cda49-517">
            <see cref="T:System.Web.UI.Control" /> Na stronie, która zawiera atrybut niestandardowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-517">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="cda49-518">Nazwa niestandardowego atrybutu w celu zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-518">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="cda49-519">Wartość atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-519">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="cda49-520">Wartość logiczną wskazującą, czy kodowanie niestandardowego atrybutu w celu zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-520">A Boolean value indicating whether to encode the custom attribute to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-521">Rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) z określoną kontrolkę podany identyfikator kontrolki, nazwę atrybutu, wartość atrybutu i wartość logiczną wskazującą, czy należy zakodować wartości atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-521">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-522"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Metoda rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) na określonym <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="cda49-522">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="cda49-523">Ten atrybut expando ustawiono dynamicznie poziomu języka JavaScript w celu zachowania zgodności XHTML dla kodu znaczników kontrolki renderowany.</span><span class="sxs-lookup"><span data-stu-id="cda49-523">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="cda49-524">Ustaw `encode` parametr `true` Jeśli potrzebujesz jako znak ucieczki dla cudzysłowów i ukośników odwrotnych w wartości atrybutu z expando.</span><span class="sxs-lookup"><span data-stu-id="cda49-524">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="cda49-525">Jeśli nie odnaleziono atrybutu expando lub kontrolki, Dodaj atrybut expando, aby nie zostanie znaleziony, skrypt po stronie klienta jest nadal emitowane, ale nie wpłynie to na formant.</span><span class="sxs-lookup"><span data-stu-id="cda49-525">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-526">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> metody <xref:System.Web.UI.ClientScriptManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="cda49-526">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="cda49-527">Skrypt klienta w zestawach renderowanej strony `title` atrybutu `<span>` elementu.</span><span class="sxs-lookup"><span data-stu-id="cda49-527">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-528">Rejestruje odwołanie zdarzenia do sprawdzania poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-528">Registers an event reference for validation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="cda49-529">Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-529">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-530">Rejestruje identyfikator unikatowy formantu reprezentujący kontroli klienta generowania zdarzenia odwołanie zdarzenia do sprawdzania poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-530">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-531">Aby uzyskać więcej informacji i przykładów, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-531">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-532">Poniższy przykład pokazuje, jak używać <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody i <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metody, aby zarejestrować wywołanie zwrotne do sprawdzania poprawności i jak weryfikować, że wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-532">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : System.Web.UI.PostBackOptions -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="cda49-533">A <see cref="T:System.Web.UI.PostBackOptions" /> obiekt określający, jak klienta JavaScript jest generowany w celu zainicjowania zwrotu zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-533">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-534">Rejestruje odwołanie zdarzenia do weryfikacji za pomocą <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-534">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-535">Aby uzyskać więcej informacji i przykładów, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-535">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string * string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="cda49-536">Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-536">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-537">Argumenty zdarzenia wykryto zdarzenie klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-537">Event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-538">Rejestruje odwołanie zdarzenia do weryfikacji za pomocą kontrolki Unikatowy identyfikator zdarzenia argumentów i reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-538">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cda49-539">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody i <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metody, aby zarejestrować wywołanie zwrotne weryfikacji i aby zweryfikować, że wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-539">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="cda49-540">W celu weryfikacji, jak pokazano w przykładzie, można zmodyfikować weryfikacji `argument` parametru, aby zawierać informacje specyficzne dla użytkownika, takich jak tożsamość lub roli</span><span class="sxs-lookup"><span data-stu-id="cda49-540">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="cda49-541">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metodę, aby zarejestrować wywołanie zwrotne w celu weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="cda49-541">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cda49-542">Metoda jest wywoływana przed <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-542">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
        <related type="Article" href="http://msdn.microsoft.com/library/18fc94c9-56fc-46c3-9f29-7358f18667df">
          <span data-ttu-id="cda49-543">Wywołania zwrotnego klienta w przykładzie realizacji sprawdzania poprawności</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-543">Client Callback with Validation Implementation Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterHiddenField : string * string -&gt; unit" Usage="clientScriptManager.RegisterHiddenField (hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="cda49-544">Nazwa pola ukrytego do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-544">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="cda49-545">Początkowa wartość pola do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-545">The initial value of the field to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-546">Rejestruje ukryte wartością <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-546">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-547"><xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> Metoda tworzy ukryty `<input>` element na renderowanej stronie HTML.</span><span class="sxs-lookup"><span data-stu-id="cda49-547">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-548">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> i <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-548">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="cda49-549">W przykładzie rejestruje tablicy i wartości ukryte i definiuje `OnClick` zdarzenia `<input>` przycisk, aby obliczyć sumę dwóch wartości tablicy i wartości ukryte.</span><span class="sxs-lookup"><span data-stu-id="cda49-549">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-550">
            <paramref name="hiddenFieldName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-550">
              <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterOnSubmitStatement : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterOnSubmitStatement (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-551">Typ instrukcji OnSubmit do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-551">The type of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-552">Klucz instrukcji OnSubmit do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-552">The key of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="cda49-553">Literał skryptu instrukcji OnSubmit do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-553">The script literal of the OnSubmit statement to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-554">Rejestruje OnSubmit instrukcją <see cref="T:System.Web.UI.Page" /> przy użyciu typu, klucza i skrypt literału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-554">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
          <span data-ttu-id="cda49-555">Podczas wykonywania instrukcji <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> zostanie przesłany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-555">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-556">Instrukcja OnSubmit jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-556">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-557">Instrukcje z tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-557">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-558">Na stronie można zarejestrować tylko jednej instrukcji z danego typu i pary kluczy.</span><span class="sxs-lookup"><span data-stu-id="cda49-558">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="cda49-559">Podjęto próbę zarejestrowania instrukcję, która jest już zarejestrowana nie można utworzyć duplikat instrukcji.</span><span class="sxs-lookup"><span data-stu-id="cda49-559">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="cda49-560">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metodę, aby określić, czy instrukcji OnSubmit jest już zarejestrowany z daną parą klucza i typu i uniknąć niepotrzebnego podjęto próbę dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-560">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="cda49-561">`script` Parametru <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metoda może zawierać kilka poleceń skryptu, tak długo, jak są one prawidłowo rozdzielanych średnikami (;).</span><span class="sxs-lookup"><span data-stu-id="cda49-561">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="cda49-562"><xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Dodaje skryptu, który jest wykonywany przed strona zostanie przesłany i daje możliwość anulowania przesyłania.</span><span class="sxs-lookup"><span data-stu-id="cda49-562">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="cda49-563">Aby uzyskać więcej informacji na temat formularzy HTML i `OnSubmit` atrybutów, zobacz [witryny sieci Web konsorcjum World Wide Web Consortium (W3C)](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="cda49-563">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-564">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-564">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-565">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-565">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-566">Rejestruje skryptu uruchamiania przy użyciu <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-566">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-567">Typ skryptu uruchamiania do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-567">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-568">Klucz skryptu uruchamiania do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-568">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="cda49-569">Literał do zarejestrowania skrypt uruchamiania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-569">The startup script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-570">Rejestruje skryptu uruchamiania przy użyciu <see cref="T:System.Web.UI.Page" /> przy użyciu typu, klucza i skrypt literału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-570">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-571">Skrypt klienta jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-571">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-572">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-572">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-573">Na stronie można zarejestrować tylko jeden skrypt za pomocą danego typu i pary kluczy.</span><span class="sxs-lookup"><span data-stu-id="cda49-573">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="cda49-574">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy zduplikowane skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-574">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="cda49-575">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metodę, aby określić, czy skryptu uruchamiania przy użyciu podanej pary klucza i typu jest już zarejestrowane i uniknąć niepotrzebnego podjęto próbę dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-575">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="cda49-576">W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody, należy się upewnić, że skrypt w `script` parametru jest ujęte w nawiasy `<script>` bloku elementu.</span><span class="sxs-lookup"><span data-stu-id="cda49-576">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="cda49-577">Blok skryptu dodawany przez <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metoda jest wykonywana po zakończenie ładowania strony ale przed stroną <xref:System.Web.UI.Control.OnLoad%2A> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="cda49-577">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="cda49-578">Bloki skryptu nie musi być danych wyjściowych w kolejności, w której są one zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="cda49-578">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="cda49-579">Jeśli kolejność Bloki skryptu jest ważne, użyj <xref:System.Text.StringBuilder> do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestrować je w bloku skryptu jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-579">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-580">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-580">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="cda49-581">Należy zauważyć, że początkowe i skrypt taga zamykającego znajdują się w obrębie `script` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-581">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="cda49-582">Aby skrypt, tagi dodane na podstawie ustawienia dodatkowych parametrów, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-582">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="cda49-583">Typ skryptu uruchamiania do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-583">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="cda49-584">Klucz skryptu uruchamiania do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-584">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="cda49-585">Literał do zarejestrowania skrypt uruchamiania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-585">The startup script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="cda49-586">Wartość logiczna wskazująca, czy należy dodać tagów skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-586">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-587">Rejestruje skryptu uruchamiania przy użyciu <see cref="T:System.Web.UI.Page" /> przy użyciu typu, klucz, skrypt literału i wartość logiczną wskazującą, czy należy dodać tagów skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-587">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cda49-588">Skrypt uruchamiania jest unikatowo identyfikowane za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="cda49-588">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="cda49-589">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="cda49-589">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="cda49-590">Na stronie można zarejestrować tylko jeden skrypt za pomocą danego typu i pary kluczy.</span><span class="sxs-lookup"><span data-stu-id="cda49-590">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="cda49-591">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy zduplikowane skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-591">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="cda49-592">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metodę, aby określić, czy skryptu uruchamiania przy użyciu podanej pary klucza i typu jest już zarejestrowane i uniknąć niepotrzebnego podjęto próbę dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="cda49-592">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="cda49-593">W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody, można wskazać, czy skrypt jest dostarczany w `script` parametru jest ujęte w nawiasy `<script>` bloku elementu za pomocą `addScriptTags` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-593">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="cda49-594">Ustawienie `addScriptTags` do `true` wskazuje, że tagi skryptu zostanie dodana automatycznie.</span><span class="sxs-lookup"><span data-stu-id="cda49-594">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="cda49-595">Blok skryptu dodawany przez <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metoda jest wykonywana po zakończenie ładowania strony ale przed stroną <xref:System.Web.UI.Control.OnLoad%2A> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="cda49-595">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="cda49-596">Bloki skryptu nie musi być danych wyjściowych w kolejności, w której są one zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="cda49-596">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="cda49-597">Jeśli kolejność Bloki skryptu jest ważne, użyj <xref:System.Text.StringBuilder> do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestrować je w bloku skryptu jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="cda49-597">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cda49-598">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="cda49-598">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="cda49-599">Należy pamiętać, że `addScriptTags` parametr ma wartość `false` tak początku i zamykanie tagów skryptu są dołączone `script` parametru.</span><span class="sxs-lookup"><span data-stu-id="cda49-599">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cda49-600">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-600">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cda49-601">Sprawdza poprawność zdarzenie klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-601">Validates a client event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string -&gt; unit" Usage="clientScriptManager.ValidateEvent uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="cda49-602">Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-602">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-603">Sprawdza poprawność zdarzenie klienta, który został zarejestrowany używania weryfikacji zdarzeń <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-603">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string * string -&gt; unit" Usage="clientScriptManager.ValidateEvent (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="cda49-604">Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-604">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="cda49-605">Argumenty zdarzenia wykryto zdarzenie klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-605">The event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cda49-606">Sprawdza poprawność zdarzenie klienta, który został zarejestrowany używania weryfikacji zdarzeń <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-606">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cda49-607">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody i <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metody, aby zarejestrować wywołanie zwrotne weryfikacji i aby zweryfikować, że wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="cda49-607">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="cda49-608">W celu weryfikacji, pokazano poniżej, można zmodyfikować weryfikacji `argument` parametru, aby zawierać informacje specyficzne dla użytkownika, takich jak tożsamość lub roli</span><span class="sxs-lookup"><span data-stu-id="cda49-608">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cda49-609">
            <paramref name="uniqueId" /> jest <see langword="null" /> ani być pustym ciągiem ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="cda49-609">
              <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>