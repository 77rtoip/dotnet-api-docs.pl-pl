<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e19ff5181caa07c458ad6ff38334f4d37a7d0917" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c70ec-101">Definiuje metody do zarządzania skrypty klienta w aplikacji sieci Web.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c70ec-101">Defines methods for managing client scripts in Web applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-102"><xref:System.Web.UI.ClientScriptManager> Klasa jest używana do zarządzania skrypty klienta i dodaj je do aplikacji sieci Web.</span><span class="sxs-lookup"><span data-stu-id="c70ec-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="c70ec-103">Można pobrać odwołania do <xref:System.Web.UI.ClientScriptManager> klasę z <xref:System.Web.UI.Page.ClientScript%2A> właściwość <xref:System.Web.UI.Page> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="c70ec-104">Przez dołączenie skrypt do kod znaczników HTML strony, można dodać skrypt klienta deklaratywnie do strony sieci Web.</span><span class="sxs-lookup"><span data-stu-id="c70ec-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="c70ec-105">Istnieją sytuacje, kiedy dynamiczne dodawanie skrypt po stronie klienta są potrzebne.</span><span class="sxs-lookup"><span data-stu-id="c70ec-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="c70ec-106">Aby dodać skrypt dynamicznie, użyj <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody, <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody, <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody, lub <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody, w zależności od tego, kiedy i w jaki sposób chcesz dodać skrypt.</span><span class="sxs-lookup"><span data-stu-id="c70ec-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="c70ec-107">Aby uzyskać więcej informacji, zobacz [porady: Dodawanie klienta skryptu dynamicznie do składnika ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="c70ec-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="c70ec-108"><xref:System.Web.UI.ClientScriptManager> Klasy unikatowo identyfikuje skrypty przy użyciu klucza <xref:System.String> i <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="c70ec-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="c70ec-109">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-110">Przy użyciu typu skrypt pomaga uniknąć mylące podobne Skrypty formantów innego użytkownika, które mogą być używane na stronie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="c70ec-111"><xref:System.Web.UI.ClientScriptManager> Klasa może być używana do wywołania wywołania zwrotne klienta w sytuacjach, gdy jest pożądane, aby uruchomić kod serwera z klienta bez wykonywania odświeżania strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="c70ec-112">Jest to określane jako wykonywania wywołania zwrotnego poza pasmem do serwera.</span><span class="sxs-lookup"><span data-stu-id="c70ec-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="c70ec-113">W wywołaniu zwrotnym klienta funkcji skryptu klienta wysyła żądanie asynchroniczne do strony sieci Web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="c70ec-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="c70ec-114">Strony sieci Web uruchamia zmodyfikowanej wersji cyklu życia procesu wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c70ec-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="c70ec-115">Użyj <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metodę, aby otrzymać odwołanie do funkcji klienta, gdy została wywołana, inicjuje wywołania zwrotnego klienta do zdarzeń serwera.</span><span class="sxs-lookup"><span data-stu-id="c70ec-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="c70ec-116">Aby uzyskać więcej informacji, zobacz [implementacja klienta wywołania zwrotne bez ogłaszania zwrotnego](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="c70ec-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c70ec-117">Wywołania zwrotne skryptu nie będzie działać w starszych przeglądarek, które nie obsługują modelu DOM (Document Object) i wymagają włączenia ECMAScript na kliencie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="c70ec-118">Aby sprawdzić, czy przeglądarka obsługuje wywołań zwrotnych, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> właściwość, która jest dostępna za pośrednictwem <xref:System.Web.HttpRequest.Browser%2A> właściwość wewnętrzna ASP.NET <xref:System.Web.HttpContext.Request%2A> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="c70ec-119">Użyj <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> — metoda i <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> metodę, aby zdefiniować zdarzenie ogłaszania zwrotnego strony klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="c70ec-120">Te metody włączyć funkcje skryptu klienta, gdy została wywołana, aby spowodować, że serwer publikowania wróć do strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="c70ec-121">Zdarzenie ogłaszania zwrotnego strony klienta różni się od wywołania zwrotnego klienta, w tym strony sieci Web zakończeniu cyklu życia procesu zdarzenia odświeżania strony klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c70ec-122">Jeśli używasz <xref:System.Web.UI.WebControls.Button> kontroli i <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość jest ustawiona na `false`, możesz użyć <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metodę, aby zwrócić klienta ogłaszanie zdarzeń dla <xref:System.Web.UI.WebControls.Button> formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="c70ec-123"><xref:System.Web.UI.WebControls.Button.OnClientClick%2A> Właściwość <xref:System.Web.UI.WebControls.Button> kontroli, <xref:System.Web.UI.WebControls.ImageButton> kontroli, i <xref:System.Web.UI.WebControls.LinkButton> formant może służyć do uruchamiania skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-124">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody <xref:System.Web.UI.ClientScriptManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="c70ec-125">Dwa skrypty klienta są zdefiniowane na stronie: `PopupScript`, podczas ładowania strony, który zawiera komunikat ostrzegawczy i `ButtonClickScript`, który definiuje obsługi klienta dla przycisku HTML `onClick` zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c70ec-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-126">Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje, kiedy klient wywołania zwrotnego zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="c70ec-127">Serwer <see cref="T:System.Web.UI.Control" /> obsługująca wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="c70ec-128">Formant musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu i podaj <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-129">Argument przekazywany ze skryptu klienta do serwera</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-129">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="c70ec-130">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> Metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-130">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="c70ec-131">Nazwa programu obsługi zdarzeń klienta odbierająca wynik zdarzenia pomyślnego serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-131">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c70ec-132">Skrypt klienta, które jest obliczane na komputerze klienckim przed zainicjowaniem wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-132">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="c70ec-133">Wynik skryptu jest przekazywane z powrotem do klienta programu obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-133">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-134">Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje, kiedy klient wywołania zwrotnego zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-134">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
          <span data-ttu-id="c70ec-135">Funkcja klienta dla tej przeciążonej metody zawiera określony formant, argument, skrypt po stronie klienta i kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-135">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-136">Nazwa funkcji klienta, która wywołuje metodę wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-136">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-137"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Metoda wykonuje wywołanie zwrotne poza pasmem do serwera, który to zmodyfikowana wersja normalnego cyklu życia strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-137">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="c70ec-138">Aby uzyskać więcej informacji, zobacz [implementacja klienta wywołania zwrotne bez ogłaszania zwrotnego](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="c70ec-138">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c70ec-139">Jeśli przeglądarka Microsoft Internet Explorer (w wersji 5.0 lub nowszej), mechanizm wywołania zwrotnego skryptu jest implementowane za pośrednictwem obiektu Microsoft.XmlHttp COM i wymaga przeglądarki, aby ustawić uruchamianie formantów ActiveX.</span><span class="sxs-lookup"><span data-stu-id="c70ec-139">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="c70ec-140">W przypadku innych przeglądarek XMLHttpRequest przy użyciu przeglądarki lokalnego modelu DOM (Document Object) jest używany.</span><span class="sxs-lookup"><span data-stu-id="c70ec-140">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="c70ec-141">Aby sprawdzić, czy przeglądarka obsługuje wywołań zwrotnych klienta, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c70ec-141">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="c70ec-142">Aby sprawdzić, czy przeglądarka obsługuje XML za pośrednictwem protokołu HTTP, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c70ec-142">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="c70ec-143">Obie właściwości są dostępne za pośrednictwem <xref:System.Web.HttpRequest.Browser%2A> właściwość wewnętrzna ASP.NET <xref:System.Web.HttpContext.Request%2A> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-143">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="c70ec-144"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Przeciążenia z <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda wykonuje wywołanie zwrotne synchronicznie przy użyciu XML za pośrednictwem protokołu HTTP.</span><span class="sxs-lookup"><span data-stu-id="c70ec-144">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="c70ec-145">Podczas wysyłania danych synchronicznie w scenariuszu wywołania zwrotnego, synchroniczne wywołania zwrotne wróć natychmiast i nie blokują przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="c70ec-145">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="c70ec-146">Bez wywołania zwrotnego dwóch synchroniczne wywołania zwrotne można wykonać w tym samym czasie w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="c70ec-146">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="c70ec-147">Jeśli drugi synchroniczne wywołania zwrotnego jest wywoływane, gdy jedna jest aktualnie oczekujący, pierwszy anuluje drugie synchroniczne wywołania zwrotnego i zwróci tylko drugi wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="c70ec-147">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="c70ec-148">Aby wysyłać dane asynchronicznie, użyj jednego z przeciążeń, które przyjmuje `useAsync` parametr, który jest wartością logiczną wartość kontroli tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="c70ec-148">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="c70ec-149">W scenariuszu asynchroniczne może mieć wielu wywołań zwrotnych oczekujące; kolejności, w którym zwracają nie jest gwarantowana odpowiadające kolejności, w którym zostały zainicjowane.</span><span class="sxs-lookup"><span data-stu-id="c70ec-149">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="c70ec-150">Ponadto to przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody określa żadnej funkcji klienta do obsługi w przypadku błędu generowane przez <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-150">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="c70ec-151">Aby określić obsługi wywołania zwrotnego błąd klienta, użyj jednego z przeciążeń, które przyjmuje `clientErrorCallback` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-151">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="c70ec-152"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Metoda przyjmuje opcjonalny ciąg `argument` parametrów i zwraca wartość typu ciąg.</span><span class="sxs-lookup"><span data-stu-id="c70ec-152">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="c70ec-153">Umożliwia przekazywanie do odbierania wielu wartości złączenia wartości w danych wejściowych lub zwraca ciąg, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="c70ec-153">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c70ec-154">Unikaj używania stan widoku w celu wykonania strona lub kontrolka właściwości, które muszą zostać zaktualizowane podczas operacji wywołania zwrotnego skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-154">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="c70ec-155">Jeśli po żądań strony właściwości, można użyć stanu sesji.</span><span class="sxs-lookup"><span data-stu-id="c70ec-155">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-156">Poniższy przykład kodu pokazuje sposób użycia dwa przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody w scenariuszu wywołania zwrotnego klienta, który zwiększa liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="c70ec-156">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="c70ec-157">Wyświetlane są dwa mechanizmy wywołania zwrotnego; Różnica między nimi jest używanie `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-157">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="c70ec-158">A `ReceiveServerData1` funkcja wywołania zwrotnego klienta jest realizowane przy użyciu `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-158">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="c70ec-159">Z kolei `ReceiveServerData2` funkcja wywołania zwrotnego klienta jest zdefiniowany w `<script>` na stronie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-159">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="c70ec-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metoda jest obsługi serwera, która zwiększa wartość, która została przekazana do niej i <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> metoda zwraca wartość zwiększany jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="c70ec-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="c70ec-161">Jeśli <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metoda zwraca błąd, a następnie `ProcessCallBackError` została wywołana funkcja klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-161">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-162">
            <see cref="T:System.Web.UI.Control" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-162">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c70ec-163">
            <see cref="T:System.Web.UI.Control" /> Określonego nie implementuje <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-163">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="c70ec-164">Serwer <see cref="T:System.Web.UI.Control" /> obsługująca wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-164">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="c70ec-165">Formant musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu i podaj <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-165">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-166">Argument przekazywany ze skryptu klienta do serwera</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-166">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="c70ec-167">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> Metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-167">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="c70ec-168">Nazwa programu obsługi zdarzeń klienta odbierająca wynik zdarzenia pomyślnego serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-168">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c70ec-169">Skrypt klienta, które jest obliczane na komputerze klienckim przed zainicjowaniem wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-169">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="c70ec-170">Wynik skryptu jest przekazywane z powrotem do klienta programu obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-170">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="c70ec-171">
            <see langword="true" /> Aby wykonać wywołania zwrotnego asynchronicznie; <see langword="false" /> można synchronicznie wykonać wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-171">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-172">Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje a klienta wywołania zwrotnego zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-172">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="c70ec-173">Funkcja klienta dla tej przeciążonej metody zawiera określony formant, argument, skrypt po stronie klienta, kontekst oraz wartość logiczna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-173">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-174">Nazwa funkcji klienta, która wywołuje metodę wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-174">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-175">To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda wymaga `useAsync` parametr, który umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie przez ustawienie wartości `true`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-175">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="c70ec-176">Wersje przeciążenie tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-176">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="c70ec-177">Aby uzyskać więcej informacji na tej metody, zobacz uwagi do przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-177">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-178">
            <see cref="T:System.Web.UI.Control" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-178">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c70ec-179">
            <see cref="T:System.Web.UI.Control" /> Określonego nie implementuje <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-179">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="c70ec-180">Nazwa serwera <see cref="T:System.Web.UI.Control" /> obsługująca wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-180">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="c70ec-181">Formant musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu i podaj <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-181">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-182">Argument przekazywany ze skryptu klienta do serwera</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-182">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="c70ec-183">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> Metoda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-183">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="c70ec-184">Nazwa programu obsługi zdarzeń klienta odbierająca wynik zdarzenia pomyślnego serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-184">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c70ec-185">Skrypt klienta, które jest obliczane na komputerze klienckim przed zainicjowaniem wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-185">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="c70ec-186">Wynik skryptu jest przekazywane z powrotem do klienta programu obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-186">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="c70ec-187">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik po wystąpieniu błędu w obsłudze zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-187">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="c70ec-188">
            <see langword="true" /> Aby wykonać wywołania zwrotnego asynchronicznie; <see langword="false" /> można synchronicznie wykonać wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-188">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-189">Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje a klienta wywołania zwrotnego zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-189">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="c70ec-190">Funkcja klienta dla tej przeciążonej metody zawiera określony element docelowy, argument, skrypt po stronie klienta, kontekstu, program obsługi błędów oraz wartość logiczna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-190">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-191">Nazwa funkcji klienta, która wywołuje metodę wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-191">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-192">To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> ma metody `target` ciągu parametru zamiast <xref:System.Web.UI.Control> parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-192">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="c70ec-193">To przeciążenie należy użyć wywołania zwrotnego, aby powrócić do czegoś innego niż ciąg zawierający <xref:System.Web.UI.Control.UniqueID%2A> formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-193">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="c70ec-194">Ponadto to przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda wymaga `useAsync` i `clientErrorCallback` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-194">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="c70ec-195">`useAsync` Parametr umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie przez ustawienie wartości `true`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-195">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="c70ec-196">Wersje przeciążenie tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-196">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="c70ec-197">`clientErrorCallback` Parametrów można zdefiniować nazwę funkcji klienta, która jest wywoływana, gdy program obsługi serwera <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> , zwraca błąd.</span><span class="sxs-lookup"><span data-stu-id="c70ec-197">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="c70ec-198">Wersje przeciążenie tej metody, które nie wymagają `clientErrorCallback` ustawiona wartość null.</span><span class="sxs-lookup"><span data-stu-id="c70ec-198">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="c70ec-199">Aby uzyskać więcej informacji na tej metody, zobacz uwagi do przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-199">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-200">Poniższy przykład kodu pokazuje sposób użycia dwa przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody w scenariuszu wywołania zwrotnego klienta, który zwiększa liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="c70ec-200">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="c70ec-201">Wyświetlane są dwa mechanizmy wywołania zwrotnego; Różnica między nimi jest używanie `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-201">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="c70ec-202">A `ReceiveServerData1` funkcja wywołania zwrotnego klienta jest realizowane przy użyciu `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-202">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="c70ec-203">Z kolei `ReceiveServerData2` funkcja wywołania zwrotnego klienta jest zdefiniowany w `<script>` na stronie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-203">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="c70ec-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metoda jest obsługi serwera, która zwiększa wartość, która została przekazana do niej i <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> metoda zwraca wartość zwiększany jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="c70ec-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="c70ec-205">Jeśli <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metoda zwraca błąd, a następnie funkcja klienta `ProcessCallBackError` jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="c70ec-205">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="c70ec-206">Serwer <see cref="T:System.Web.UI.Control" /> obsługująca wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-206">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="c70ec-207">Formant musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu i podaj <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-207">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-208">Argument przekazywany ze skryptu klienta do serwera <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-208">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="c70ec-209">Nazwa programu obsługi zdarzeń klienta odbierająca wynik zdarzenia pomyślnego serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-209">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="c70ec-210">Skrypt klienta, które jest obliczane na komputerze klienckim przed zainicjowaniem wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-210">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="c70ec-211">Wynik skryptu jest przekazywane z powrotem do klienta programu obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-211">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="c70ec-212">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik po wystąpieniu błędu w obsłudze zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-212">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="c70ec-213">
            <see langword="true" /> Aby wykonać wywołania zwrotnego asynchronicznie; <see langword="false" /> można synchronicznie wykonać wywołania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-213">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-214">Pobiera odwołanie do funkcji klienta, gdy została wywołana, inicjuje a klienta wywołania zwrotnego zdarzeń serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-214">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="c70ec-215">Funkcja klienta dla tej przeciążonej metody obejmuje określonego formantu, argument, skrypt po stronie klienta, kontekstu, program obsługi błędów i wartość logiczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-215">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-216">Nazwa funkcji klienta, która wywołuje metodę wywołania zwrotnego klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-216">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-217">To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metoda wymaga `useAsync` i `clientErrorCallback` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-217">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="c70ec-218">`useAsync` Parametr umożliwia wykonywanie wywołania zwrotnego klienta asynchronicznie przez ustawienie wartości `true`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-218">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="c70ec-219">Wersje przeciążenie tej metody, które nie wymagają `useAsync` ustawiona wartość `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-219">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="c70ec-220">`clientErrorCallback` Parametrów można zdefiniować nazwę funkcji klienta, która jest wywoływana, gdy program obsługi serwera ( <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metody) zwraca błąd.</span><span class="sxs-lookup"><span data-stu-id="c70ec-220">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="c70ec-221">Wersje przeciążenie tej metody, które nie wymagają `clientErrorCallback` ustawiona wartość null.</span><span class="sxs-lookup"><span data-stu-id="c70ec-221">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="c70ec-222">Aby uzyskać więcej informacji na tej metody, zobacz uwagi do przeciążenia <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-222">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-223">
            <see cref="T:System.Web.UI.Control" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-223">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c70ec-224">
            <see cref="T:System.Web.UI.Control" /> Określonego nie implementuje <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-224">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-225">Pobiera odwołanie, z <see langword="javascript:" /> dołączany na początku, używanym w przypadku klienta można opublikować na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="c70ec-226">Kontrolki serwera do przetworzenia ogłaszania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-226">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-227">Parametr przekazany do kontrolki serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-227">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-228">Pobiera odwołanie, z <see langword="javascript:" /> dołączany na początku, używany w przypadku klienta w publikowania na serwerze dla określonego formantu i z argumentami określone zdarzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-228">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-229">Ciąg reprezentujący wywołanie JavaScript do funkcji odświeżania strony, która zawiera argumenty Formant docelowy identyfikator i zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-229">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-230">Przy użyciu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda wymaga formantu, który obsługuje ogłaszania zwrotnego do zaimplementowania <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-230">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="c70ec-231">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-231">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-232">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-232">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="c70ec-233">Formant niestandardowy `MyControl`, implementuje <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-233">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="c70ec-234">Po kliknięciu elementu zakotwiczenia kodu HTML na stronie <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> wywoływana jest metoda kontrolki niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="c70ec-234">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="c70ec-235">Poniższy przykładowy kod ma te same funkcje co mieszanego, z wyjątkiem zamiast kontrolkę niestandardową <xref:System.Web.UI.Page> klasa implementuje <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-235">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="c70ec-236">Kontrolki serwera do przetworzenia ogłaszania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-236">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-237">Parametr przekazany do kontrolki serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-237">The parameter passed to the server control.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="c70ec-238">
            <see langword="true" /> Aby zarejestrować zdarzenie ogłaszania zwrotnego strony do weryfikacji; <see langword="false" /> nie zarejestrować zdarzenie ogłaszania zwrotnego do walidacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-238">
              <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-239">Pobiera odwołanie, z <see langword="javascript:" /> dołączany na początku, używanym w przypadku klienta można opublikować na serwerze dla określonego sterować za pomocą określonego zdarzenia argumentów i logiczna wskazuje czy rejestrować post wstecz dla zdarzenia Sprawdzanie poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-239">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-240">Ciąg reprezentujący wywołanie JavaScript do funkcji odświeżania strony, która zawiera argumenty Formant docelowy identyfikator i zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-240">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-241">Przy użyciu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metoda wymaga formantu, który obsługuje ogłaszania zwrotnego do zaimplementowania <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-241">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="c70ec-242">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-242">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-243">Zwraca ciąg, który może być używany w przypadku klienta, powoduje odświeżenie strony do serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-243">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="c70ec-244">A <see cref="T:System.Web.UI.PostBackOptions" /> definiuje ogłaszania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-244">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-245">Zwraca ciąg, który może być używany w przypadku klienta, powoduje odświeżenie strony do serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-245">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="c70ec-246">Ciąg odwołania jest zdefiniowany przez określony <see cref="T:System.Web.UI.PostBackOptions" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-246">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-247">Ciąg znaków, gdy traktowane jako skryptu na komputerze klienckim, ogłaszanie klienta inicjuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-247">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-248">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="c70ec-249"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metoda może być używana z <xref:System.Web.UI.WebControls.Button> decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> jest właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-249">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="c70ec-250">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> zwraca zdarzenia dla ogłaszanie klienta <xref:System.Web.UI.WebControls.Button> formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-250">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-251">
            <see cref="T:System.Web.UI.PostBackOptions" /> Parametr jest <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-251">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="c70ec-252">Serwer <see cref="T:System.Web.UI.Control" /> która przetwarza ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-252">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-253">Ciąg opcjonalne argumenty do przekazania do formantu, który przetwarza ogłaszania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-253">A string of optional arguments to pass to the control that processes the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-254">Zwraca ciąg, który może być używany w przypadku klienta, powoduje odświeżenie strony do serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-254">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="c70ec-255">Ciąg odwołania jest określony przez określony formant, który obsługuje ogłaszania zwrotnego i argument ciągu informacji dodatkowych zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-255">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-256">Ciąg znaków, gdy traktowane jako skryptu po stronie klienta, inicjuje ogłaszania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-256">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-257">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-257">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="c70ec-258"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metoda może być używana z <xref:System.Web.UI.WebControls.Button> decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> jest właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-258">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="c70ec-259">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> zwraca zdarzenia dla ogłaszanie klienta <xref:System.Web.UI.WebControls.Button> formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-259">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-260">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-260">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="c70ec-261">Formant niestandardowy `MyControl`, implementuje <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-261">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="c70ec-262">Po kliknięciu przycisku na stronie <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> wywoływana jest metoda kontrolki niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="c70ec-262">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="c70ec-263">Poniższy przykładowy kod ma te same funkcje co mieszanego, z wyjątkiem zamiast kontrolkę niestandardową <xref:System.Web.UI.Page> klasa implementuje <xref:System.Web.UI.IPostBackEventHandler> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-263">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-264">Określony <see cref="T:System.Web.UI.Control" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-264">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="c70ec-265">A <see cref="T:System.Web.UI.PostBackOptions" /> definiuje ogłaszania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-265">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="c70ec-266">
            <see langword="true" /> Aby zarejestrować zdarzenie odwołanie do weryfikacji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-266">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-267">Zwraca ciąg, który może być używany w przypadku klienta, powoduje odświeżenie strony do serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-267">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="c70ec-268">Ciąg odwołania jest zdefiniowany przez określony <see cref="T:System.Web.UI.PostBackOptions" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-268">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          </span>
          <span data-ttu-id="c70ec-269">Opcjonalnie rejestruje zdarzenia odwołanie do sprawdzania poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-269">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-270">Ciąg znaków, gdy traktowane jako skryptu na komputerze klienckim, ogłaszanie klienta inicjuje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-270">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-271">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page> obiektów, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-271">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="c70ec-272"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metoda może być używana z <xref:System.Web.UI.WebControls.Button> decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> jest właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-272">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="c70ec-273">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> zwraca zdarzenia dla ogłaszanie klienta <xref:System.Web.UI.WebControls.Button> formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-273">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="c70ec-274">Jeśli `registerForEventValidation` jest `true`, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> wywołania metody <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> metoda rejestrowania zdarzeń odwołanie do sprawdzania poprawności z identyfikator unikatowy formantu reprezentujący kontrolkę klienta, który generuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-274">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-275">
            <see cref="T:System.Web.UI.PostBackOptions" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-275">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="c70ec-276">Serwer <see cref="T:System.Web.UI.Control" /> która przetwarza ogłaszania zwrotnego na serwerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-276">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-277">Parametry opcjonalne argumenty do przekazania do <c>kontroli</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-277">A string of optional arguments to pass to <c>control</c>.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="c70ec-278">
            <see langword="true" /> Aby zarejestrować zdarzenie odwołanie do weryfikacji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-278">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-279">Zwraca ciąg do użycia w przypadku klienta powoduje odświeżenie strony do serwera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-279">Returns a string to use in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="c70ec-280">Ciąg odwołania jest określony przez określony formant, który obsługuje ogłaszania zwrotnego i argument ciągu informacji dodatkowych zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-280">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
          <span data-ttu-id="c70ec-281">Opcjonalnie rejestruje zdarzenia odwołanie do sprawdzania poprawności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-281">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-282">Ciąg znaków, gdy traktowane jako skryptu po stronie klienta, inicjuje ogłaszania zwrotnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-282">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-283">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs na potrzeby <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-283">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="c70ec-284"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metoda może być używana z <xref:System.Web.UI.WebControls.Button> decyduje o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> jest właściwość `false`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-284">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="c70ec-285">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> zwraca zdarzenia dla ogłaszanie klienta <xref:System.Web.UI.WebControls.Button> formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-285">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="c70ec-286">Jeśli `registerForEventValidation` ma wartość true, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> wywołania metody <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> metoda rejestrowania zdarzeń odwołanie do sprawdzania poprawności z identyfikator unikatowy formantu reprezentujący kontrolkę klienta, który generuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-286">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-287">Określony <see cref="T:System.Web.UI.Control" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-287">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-288">Typ zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-288">The type of the resource.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="c70ec-289">Pełna nazwa zasobu w zestawie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-289">The fully qualified name of the resource in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-290">Pobiera adres URL odwołania do zasobu w zestawie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-290">Gets a URL reference to a resource in an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-291">Adres URL odwołania do zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-291">The URL reference to the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-292"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Metoda zwraca URL odwołania do zasobu osadzonego w zestawie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-292">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="c70ec-293">Zwracane odwołanie nie jest zakodowane w adresie URL.</span><span class="sxs-lookup"><span data-stu-id="c70ec-293">The returned reference is not URL encoded.</span></span> <span data-ttu-id="c70ec-294">Zasoby mogą być plików skryptów, obrazy lub żadnych plików statycznych.</span><span class="sxs-lookup"><span data-stu-id="c70ec-294">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="c70ec-295">Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-295">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="c70ec-296">Zasób sieci Web zarejestrowane na stronie jest unikatowo identyfikowana przez jego typem i nazwą.</span><span class="sxs-lookup"><span data-stu-id="c70ec-296">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="c70ec-297">Może być zarejestrowany tylko jeden zasób z danego typu i pary nazwa ze stroną.</span><span class="sxs-lookup"><span data-stu-id="c70ec-297">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="c70ec-298">Podjęto próbę zarejestrowania z zasobem, który jest już zarejestrowany nie tworzy duplikat zarejestrowanych zasobów.</span><span class="sxs-lookup"><span data-stu-id="c70ec-298">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="c70ec-299"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Metoda jest używana w połączeniu z <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> metodę dostępu do zasobów osadzonych w zestawach.</span><span class="sxs-lookup"><span data-stu-id="c70ec-299">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="c70ec-300">Aby uzyskać więcej informacji o użyciu zasobów w aplikacjach, zobacz [Omówienie zasobów strony sieci Web programu ASP.NET](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="c70ec-300">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-301">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-301">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="c70ec-302">*Typu* parametr w tym przykładzie jest ustawiony na typ klasy w zestawie zawiera zasób.</span><span class="sxs-lookup"><span data-stu-id="c70ec-302">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="c70ec-303">`resourceName` z w pełni kwalifikowana ścieżka do zasobu, który zawiera domyślnej przestrzeni nazw jest określony parametr.</span><span class="sxs-lookup"><span data-stu-id="c70ec-303">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="c70ec-304">W poniższym przykładzie pokazano, jak programowane stosowanie <xref:System.Web.UI.WebResourceAttribute> atrybutu metadanych do zestawu zasobów, które zostanie obsłużona oznaczyć.</span><span class="sxs-lookup"><span data-stu-id="c70ec-304">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="c70ec-305">Skompiluj następujące klasy w bibliotece klas z ustawioną domyślną przestrzeń nazw `Samples.AspNet.CS.Controls` lub `Samples.AspNet.VB.Controls`, w zależności od języka, jakiego używasz.</span><span class="sxs-lookup"><span data-stu-id="c70ec-305">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="c70ec-306">W tym przykładzie wymaga plik JavaScript o nazwie `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-306">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="c70ec-307">Plik js jest osadzony zasób w zestawie, który zawiera `ClientScriptResourceLabel` obiektu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-307">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="c70ec-308">Jeśli używasz programu Visual Studio], w oknie właściwości projektu biblioteki klas, ustaw **Akcja kompilacji** do **osadzonego zasobu** po wybraniu pliku skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-308">If you are using Visual Studio], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="c70ec-309">Jeśli kompilacja biblioteki w wierszu polecenia, użyj przełącznika ma zostać osadzony zasób.</span><span class="sxs-lookup"><span data-stu-id="c70ec-309">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-310">Nazwa zasobu sieci web jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-310">The web resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c70ec-311">\- lub -</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-311">\- or -</span>
          </span>
          <span data-ttu-id="c70ec-312">Nazwa zasobu sieci web ma długość równą zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-312">The web resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-313">Określa, czy blok skryptu klienta jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-313">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c70ec-314">Klucz do wyszukania bloku skryptu klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-314">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-315">Określa, czy blok skryptu klienta jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-315">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-316">
            <see langword="true" /> Jeśli blok skryptu klienta jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-316">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-317">Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="c70ec-317">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="c70ec-318">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-318">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="c70ec-319">Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-319">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-320">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-320">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="c70ec-321">To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metoda wywołuje przeciążenia, które przyjmuje zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page> obiektu</span><span class="sxs-lookup"><span data-stu-id="c70ec-321">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-322">Typ bloku skryptu klienta do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-322">The type of the client script block to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-323">Klucz do wyszukania bloku skryptu klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-323">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-324">Określa, czy blok skryptu klienta jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu klucza i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-324">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-325">
            <see langword="true" /> Jeśli blok skryptu klienta jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-325">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-326">Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="c70ec-326">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="c70ec-327">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-327">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="c70ec-328">Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-328">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-329">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-329">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-330">Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-330">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="c70ec-331">Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-331">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-332">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-332">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="c70ec-333">Należy pamiętać, że jeśli logikę do wyszukania istniejącego bloku skryptu klienta zostały usunięte, nie nie byłoby dwa skrypty zduplikowane klienta w kodzie źródłowym HTML renderowanej strony ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metoda sprawdza, czy duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-333">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="c70ec-334">Zaletą sprawdzanie jest ograniczyć niepotrzebne obliczeń.</span><span class="sxs-lookup"><span data-stu-id="c70ec-334">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-335">Typ skryptu klienta jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-335">The client script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-336">Określa, czy skrypt po stronie klienta obejmują został zarejestrowany za pomocą <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-336">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c70ec-337">Klucz skrypt po stronie klienta obejmują do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-337">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-338">Określa, czy skrypt po stronie klienta obejmują został zarejestrowany za pomocą <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-338">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-339">
            <see langword="true" /> Jeśli dołączysz skrypt po stronie klienta jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-339">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-340">Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="c70ec-340">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="c70ec-341">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-341">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="c70ec-342">Skrypt po stronie klienta obejmują jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-342">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-343">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-343">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="c70ec-344">To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metoda wywołuje przeciążenia, które przyjmuje zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page> obiektu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-344">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-345">Typ skryptu klienta obejmują do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-345">The type of the client script include to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-346">Klucz skrypt po stronie klienta obejmują do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-346">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-347">Określa, czy skrypt po stronie klienta obejmują został zarejestrowany za pomocą <see cref="T:System.Web.UI.Page" /> przy użyciu klucza i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-347">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-348">
            <see langword="true" /> Jeśli dołączysz skrypt po stronie klienta jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-348">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-349">Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> zawiera metody w celu uniknięcia rejestrowanie skrypt po stronie klienta zduplikowane.</span><span class="sxs-lookup"><span data-stu-id="c70ec-349">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="c70ec-350">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-350">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="c70ec-351">Skrypt po stronie klienta obejmują jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-351">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-352">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-352">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-353">Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-353">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="c70ec-354">Na przykład podczas dostępu do zasobu, przy użyciu wystąpienia strony, należy określić `Page` typu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-354">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-355">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-355">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="c70ec-356">Należy pamiętać, że jeśli logika Sprawdź, czy istniejący skrypt klienta obejmują zostały usunięte, nie nie byłoby dwa skrypty klienta duplikatów w kodzie źródłowym HTML renderowanej strony ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metoda sprawdza, czy duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-356">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="c70ec-357">Zaletą sprawdzanie jest ograniczyć niepotrzebne obliczeń.</span><span class="sxs-lookup"><span data-stu-id="c70ec-357">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="c70ec-358">W tym przykładzie wymaga plik JavaScript o nazwie `Script_include.js`, z następującą zawartość:</span><span class="sxs-lookup"><span data-stu-id="c70ec-358">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-359">Skrypt po stronie klienta obejmują typ jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-359">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-360">Określa, czy oświadczenie OnSubmit jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-360">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c70ec-361">Klucz instrukcji OnSubmit do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-361">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-362">Określa, czy oświadczenie OnSubmit jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-362">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-363">
            <see langword="true" /> Jeśli nie zarejestrowano instrukcji OnSubmit; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-363">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-364">Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metodę, aby uniknąć zduplikowanych OnSubmit instrukcje rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="c70ec-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="c70ec-365">Jest to szczególnie ważne, jeśli jest wymagany dużą ilość zasobów serwera w celu utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-365">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="c70ec-366">Instrukcja jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-366">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-367">Instrukcje z tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-367">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="c70ec-368">To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metoda wywołuje przeciążenia, które przyjmuje zarówno `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page> obiektu</span><span class="sxs-lookup"><span data-stu-id="c70ec-368">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-369">Typ instrukcji OnSubmit do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-369">The type of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-370">Klucz instrukcji OnSubmit do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-370">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-371">Określa, czy oświadczenie OnSubmit jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-371">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-372">
            <see langword="true" /> Jeśli nie zarejestrowano instrukcji OnSubmit; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-372">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-373">Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metodę, aby uniknąć zduplikowanych instrukcje rejestrowania.</span><span class="sxs-lookup"><span data-stu-id="c70ec-373">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="c70ec-374">Jest to szczególnie ważne, jeśli jest wymagany dużą ilość zasobów serwera w celu utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-374">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="c70ec-375">Instrukcja jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-375">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-376">Instrukcje z tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-376">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-377">Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-377">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="c70ec-378">Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-378">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-379">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-379">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="c70ec-380">Skrypt o nazwie `OnSubmitScript` został zarejestrowany za pomocą <xref:System.Web.UI.Page> tak, aby po stronie przesłaniu formularza skrypt zostanie wywołany.</span><span class="sxs-lookup"><span data-stu-id="c70ec-380">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-381">Typ instrukcji OnSubmit jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-381">The OnSubmit statement type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-382">Określa, czy skrypt uruchamiania jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-382">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c70ec-383">Klucz uruchomienia skryptu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-383">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-384">Określa, czy skrypt uruchamiania jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-384">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-385">
            <see langword="true" /> Jeśli skrypt uruchamiania jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-385">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-386">Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="c70ec-386">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="c70ec-387">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-387">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="c70ec-388">Skrypt uruchamiania jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-388">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-389">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-389">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="c70ec-390">To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metoda wywołuje przeciążenia, które przyjmuje zarówno ciąg `key` i `type` z typem ustawiona jako <xref:System.Web.UI.Page> obiektu</span><span class="sxs-lookup"><span data-stu-id="c70ec-390">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-391">Typ uruchomienia skryptu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-391">The type of the startup script to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-392">Klucz uruchomienia skryptu do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-392">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-393">Określa, czy skrypt uruchamiania jest zarejestrowane w usłudze <see cref="T:System.Web.UI.Page" /> przy użyciu określonego klucza i typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-393">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c70ec-394">
            <see langword="true" /> Jeśli skrypt uruchamiania jest zarejestrowany; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-394">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-395">Wywołanie tej metody przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody w celu uniknięcia zarejestrowanie zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="c70ec-395">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="c70ec-396">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera w celu utworzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-396">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="c70ec-397">Skrypt uruchamiania klienta jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-397">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-398">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-398">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-399">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-399">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="c70ec-400">Należy pamiętać, że jeśli logiki, aby wyszukać istniejący blok skryptu uruchamiania zostały usunięte, nie nie byłoby dwa skrypty uruchamiania duplikatów w kodzie źródłowym HTML renderowanej strony ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metoda sprawdza, czy duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-400">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="c70ec-401">Zaletą sprawdzanie jest ograniczyć niepotrzebne obliczeń.</span><span class="sxs-lookup"><span data-stu-id="c70ec-401">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-402">Typ uruchamiania skryptu jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-402">The startup script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="c70ec-403">Nazwa tablicy do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-403">The array name to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="c70ec-404">Tablica wartości lub wartości do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-404">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-405">Rejestruje deklaracji tablicy JavaScript z <see cref="T:System.Web.UI.Page" /> przy użyciu tablicy nazwy i wartości tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-405">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-406"><xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> Sprawdza, czy tablica zarejestrowanych istnieje o takiej samej nazwie jak nazwa określona w `arrayName` parametru i jeśli tak, dodaje wartości określone w `arrayValue` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-406">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="c70ec-407">Ponieważ podstawowy mechanizm magazynu jest oparta na <xref:System.Collections.ArrayList>, duplikaty są dozwolone.</span><span class="sxs-lookup"><span data-stu-id="c70ec-407">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="c70ec-408">Jeśli zarejestrowane tablicy o takiej samej nazwie jak `arrayName` parametr nie istnieje, jest tworzona i wartościami w `arrayValue` parametru do niego dodana.</span><span class="sxs-lookup"><span data-stu-id="c70ec-408">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="c70ec-409">Literał ciągu w tablicy wynikowej JavaScript, obejmują pojedynczy znaki cudzysłowu (') lub wpisywany podwójny cudzysłów (\\") w `arrayValue` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-409">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="c70ec-410">Wartość `arrayValue` parametr powinien być pojedynczym elementem.</span><span class="sxs-lookup"><span data-stu-id="c70ec-410">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="c70ec-411">Jeśli więcej niż jedną wartość musi być dodawane do tablicy, wywołań wielu przy użyciu <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-411">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-412">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> i <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-412">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="c70ec-413">W przykładzie rejestruje tablicy i wartość ukryte i definiuje `OnClick` zdarzenie `<input>` przycisk, aby obliczyć sumę dwóch wartości w tablicy wartości hidden.</span><span class="sxs-lookup"><span data-stu-id="c70ec-413">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-414">
            <paramref name="arrayName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-414">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-415">Rejestruje klienta skryptu <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-416">Typ skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-416">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-417">Klucz skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-417">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="c70ec-418">Literał zarejestrować skryptu klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-418">The client script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-419">Rejestruje klienta skryptu <see cref="T:System.Web.UI.Page" /> przy użyciu typu, klucz i skryptu literału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-419">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-420">Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-420">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-421">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-421">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-422">Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-422">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="c70ec-423">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-423">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="c70ec-424">Wywołanie <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metody w celu określenia, czy skrypt po stronie klienta z danego typu parę klucz jest już zarejestrowany i uniknąć niepotrzebnego próby dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-424">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="c70ec-425">W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody, należy się upewnić, że skrypt jest dostarczany w `script` parametru jest ujęte w `<script>` bloku elementu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-425">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="c70ec-426"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Metoda dodaje blok skryptu na początku renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-426">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="c70ec-427">W blokach skryptu nie ma gwarancji jako dane wyjściowe w kolejności, które są zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="c70ec-427">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="c70ec-428">Jeśli kolejność blokach skryptu odgrywa ważną rolę, użyj <xref:System.Text.StringBuilder> do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestruj je w bloku skryptu jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-428">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-429">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-429">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-430">Typ skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-430">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-431">Klucz skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-431">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="c70ec-432">Literał zarejestrować skryptu klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-432">The client script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="c70ec-433">Wartość logiczna wskazująca, czy dodać tagi skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-433">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-434">Rejestruje klienta skryptu <see cref="T:System.Web.UI.Page" /> przy użyciu typu, kluczy skryptu literału i logicznych wartość wskazującą, czy można dodać tagów skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-435">Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-436">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-437">Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="c70ec-438">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="c70ec-439">Wywołanie <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metodę, aby określić, czy skrypt po stronie klienta z danego typu parę klucz jest już zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="c70ec-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="c70ec-440">Dzięki temu można uniknąć niepotrzebnego próby dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-440">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="c70ec-441">W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody, można określić, czy skrypt jest dostarczany w `script` parametru jest ujęte w `<script>` bloku elementu przy użyciu `addScriptTags` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-441">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="c70ec-442">Ustawienie `addScriptTags` do `true` wskazuje automatycznie dodawane tagów skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-442">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="c70ec-443"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Metoda dodaje blok skryptu na początku renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-443">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="c70ec-444">W blokach skryptu nie ma gwarancji jako dane wyjściowe w kolejności, które są zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="c70ec-444">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="c70ec-445">Jeśli kolejność blokach skryptu odgrywa ważną rolę, użyj <xref:System.Text.StringBuilder> do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestruj je w bloku skryptu jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-445">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-446">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-446">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="c70ec-447">Należy pamiętać, że `addScriptTags` ustawiono parametr `true` tak początku i zamykanie tagów skryptu nie są dołączone `script` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-447">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-448">Typ bloku skryptu klienta jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-448">The client script block type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-449">Skrypt po stronie klienta obejmują z rejestrów <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-449">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c70ec-450">Klucz skrypt po stronie klienta obejmują do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-450">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="c70ec-451">Adres URL skryptu klienta obejmują do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-451">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-452">Rejestruje klienta skryptu <see cref="T:System.Web.UI.Page" /> przy użyciu klucza i adresu URL, który umożliwia uruchomienie skryptu można wywoływać z klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-452">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-453">Skrypt po stronie klienta obejmują jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-453">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-454">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-454">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-455">Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-455">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="c70ec-456">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-456">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="c70ec-457">Wywołanie <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> metodę, aby ustalić, czy skrypt po stronie klienta obejmują z danym kluczem oraz pary typu jest już zarejestrowany i uniknąć niepotrzebnego próby dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-457">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c70ec-458">Aby usunąć adres URL klienta, użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-458">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="c70ec-459">Ta metoda używa kontekstu adres URL, na którym jest ona wywoływana, aby rozpoznać ścieżki.</span><span class="sxs-lookup"><span data-stu-id="c70ec-459">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="c70ec-460">To przeciążenie metody <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metoda wywołuje przeciążenia, które przyjmuje `key`, `URL`, a `type` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-460">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="c70ec-461">Metoda dodaje blok skryptu w górnej części renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-461">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-462">Powiązane informacje, wraz ze składnią, użycia i przykładem, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="c70ec-462">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-463">Typ skryptu klienta obejmują do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-463">The type of the client script include to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-464">Klucz skrypt po stronie klienta obejmują do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-464">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="c70ec-465">Adres URL skryptu klienta obejmują do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-465">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-466">Skrypt po stronie klienta obejmują z rejestrów <see cref="T:System.Web.UI.Page" /> przy użyciu typu klucza i adres URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-466">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-467">Tego przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> przyjmuje — metoda *klucza* i *adres url* parametrów, aby określić skrypt, a także `type` obejmują parametr, aby określić identyfikator skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-467">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="c70ec-468">Należy określić typ oparte na obiekcie, który będą uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-468">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="c70ec-469">Na przykład korzystając z `Page` wystąpienia dostępu do zasobu, należy określić `Page` typu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-469">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c70ec-470">Aby usunąć adres URL klienta, użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-470">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="c70ec-471">Ta metoda używa kontekstu adres URL, na którym jest ona wywoływana, aby rozpoznać ścieżki.</span><span class="sxs-lookup"><span data-stu-id="c70ec-471">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="c70ec-472">Ta metoda dodaje blok skryptu w górnej części renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-472">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-473">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-473">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="c70ec-474">Jeśli logika Sprawdź, czy istniejący skrypt klienta obejmują zostały usunięte, będzie nadal nie będzie skrypty zduplikowane klienta na renderowanej stronie ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metoda sprawdza, czy duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-474">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="c70ec-475">Zaletą sprawdzanie jest ograniczyć niepotrzebne obliczeń.</span><span class="sxs-lookup"><span data-stu-id="c70ec-475">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="c70ec-476">W tym przykładzie wymaga plik JavaScript o nazwie Script_include.js z następującą zawartość:</span><span class="sxs-lookup"><span data-stu-id="c70ec-476">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-477">Skrypt po stronie klienta obejmują typ jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-477">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c70ec-478">Adres URL jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-478">The URL is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c70ec-479">\- lub -</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-479">\- or -</span>
          </span>
          <span data-ttu-id="c70ec-480">Adres URL jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-480">The URL is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-481">Typ zasobu skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-481">The type of the client script resource to register.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="c70ec-482">Nazwa zasobu skryptu klienta do rejestracji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-482">The name of the client script resource to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-483">Rejestruje klienta zasobu skryptu z <see cref="T:System.Web.UI.Page" /> przy użyciu typu i nazwy zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-483">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-484"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Metoda jest używana podczas uzyskiwania dostępu do zasobów skompilowanego z zestawów przy użyciu programu obsługi WebResource.axd HTTP.</span><span class="sxs-lookup"><span data-stu-id="c70ec-484">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="c70ec-485"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Metoda rejestruje skryptu <xref:System.Web.UI.Page> obiektu i uniemożliwia zduplikowane skryptów.</span><span class="sxs-lookup"><span data-stu-id="c70ec-485">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="c70ec-486">Ta metoda opakowuje zawartość adresu URL zasobu z `<script>` bloku elementu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-486">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-487">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-487">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="c70ec-488">W poniższym przykładzie pokazano, jak programowane stosowanie <xref:System.Web.UI.WebResourceAttribute> atrybutu metadanych do zestawu zasobów, które zostanie obsłużona oznaczyć.</span><span class="sxs-lookup"><span data-stu-id="c70ec-488">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="c70ec-489">W tym przykładzie wymaga plik JavaScript o nazwie `Script_include.js`, z następującą zawartość:</span><span class="sxs-lookup"><span data-stu-id="c70ec-489">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="c70ec-490">Kompiluj `Script_include.js` pliku jako zasób w `Samples.AspNet.CS.Controls` zestaw zawierający `ClientScriptResourceLabel` klasy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-490">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-491">Nazwa zasobu klienta jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-491">The client resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="c70ec-492">\- lub -</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-492">\- or -</span>
          </span>
          <span data-ttu-id="c70ec-493">Nazwa zasobu klienta ma długość równą zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-493">The client resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-494">Rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) określonego formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-494">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="c70ec-495">
            <see cref="T:System.Web.UI.Control" /> Na stronie zawierającej atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-495">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="c70ec-496">Nazwa atrybutu niestandardowego do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-496">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="c70ec-497">Wartość atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-497">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-498">Rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) określonego formantu podany identyfikator formantu, atrybut nazwy i wartości atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-498">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-499"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Metoda rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) na określony <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="c70ec-499">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="c70ec-500">Atrybut expando ustawiono dynamicznie z poziomu języka JavaScript w celu zachowania zgodności XHTML dla znacznika renderowanych formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-500">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="c70ec-501">Cudzysłowy i ukośników odwrotnych w wartości atrybutu niestandardowego (expando) będą miały zmienione znaczenie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-501">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="c70ec-502">Jeśli nie chcesz escape cudzysłowy i ukośników odwrotnych, wywołanie <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> przeciążyć metodę i ustawić `encode` parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="c70ec-502">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="c70ec-503">Jeśli nie odnaleziono atrybutu expando lub Dodaj atrybut expando do formantu nie zostanie odnaleziony, nadal jest emitowany skryptu klienta, ale nie wpłynie formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-503">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="c70ec-504">
            <see cref="T:System.Web.UI.Control" /> Na stronie zawierającej atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-504">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="c70ec-505">Nazwa atrybutu niestandardowego do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-505">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="c70ec-506">Wartość atrybutu niestandardowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-506">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="c70ec-507">Wartość logiczna wskazująca, czy kodowanie atrybutu niestandardowego do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-507">A Boolean value indicating whether to encode the custom attribute to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-508">Rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) określonego formantu podany identyfikator formantu, nazwę atrybutu, wartość atrybutu i wartość logiczną wskazującą, czy do kodowania wartości atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-508">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-509"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Metoda rejestruje pary nazwa/wartość jako atrybut niestandardowy (expando) na określony <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="c70ec-509">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="c70ec-510">Atrybut expando ustawiono dynamicznie z poziomu języka JavaScript w celu zachowania zgodności XHTML dla znacznika renderowanych formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-510">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="c70ec-511">Ustaw `encode` parametr `true` Chcąc escape cudzysłowy i ukośników odwrotnych w wartości atrybutu z expando.</span><span class="sxs-lookup"><span data-stu-id="c70ec-511">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="c70ec-512">Jeśli nie odnaleziono atrybutu expando lub Dodaj atrybut expando do formantu nie zostanie odnaleziony, nadal jest emitowany skryptu klienta, ale nie wpłynie formantu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-512">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-513">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> metody <xref:System.Web.UI.ClientScriptManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-513">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="c70ec-514">Skrypt po stronie klienta w zestawach renderowanej strony `title` atrybutu `<span>` elementu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-514">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-515">Rejestruje odwołanie do zdarzenia do weryfikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-515">Registers an event reference for validation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="c70ec-516">Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-516">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-517">Rejestruje identyfikator unikatowy formantu reprezentujący kontroli klienta generowania zdarzenia odwołanie do zdarzenia do weryfikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-517">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-518">Aby uzyskać dodatkowe informacje i przykłady, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-518">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-519">Poniższy przykład przedstawia użycie <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> — metoda i <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metody, aby można było zarejestrować wywołanie zwrotne weryfikacji i sprawdzania poprawności, że wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-519">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="c70ec-520">A <see cref="T:System.Web.UI.PostBackOptions" /> obiekt, który określa, jak jest generowany klienta JavaScript do zainicjowania zdarzenia odświeżania strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-520">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-521">Rejestruje odwołanie do zdarzenia do sprawdzania poprawności z <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-521">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-522">Aby uzyskać dodatkowe informacje i przykłady, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-522">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="c70ec-523">Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-523">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-524">Przekazano argumentów zdarzenia ze zdarzeniem klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-524">Event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-525">Rejestruje odwołanie do zdarzenia do walidacji formantu Unikatowy identyfikator zdarzenia argumenty i reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-525">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c70ec-526">Poniższy przykład kodu pokazuje, za pomocą <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> — metoda i <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metody do rejestrowania wywołań zwrotnych dla sprawdzania poprawności i do sprawdzania, czy wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-526">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="c70ec-527">Zwiększające weryfikacji pokazano w przykładzie można zmodyfikować walidacji `argument` parametr zawiera informacje specyficzne dla użytkownika, takich jak tożsamość lub roli</span><span class="sxs-lookup"><span data-stu-id="c70ec-527">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="c70ec-528">Poniższy przykład kodu pokazuje, przy użyciu <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody do rejestrowania wywołania zwrotnego do walidacji.</span><span class="sxs-lookup"><span data-stu-id="c70ec-528">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c70ec-529">Metoda jest wywoływana przed <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-529">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="c70ec-530">Nazwa pola ukrytego do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-530">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="c70ec-531">Wartość początkowa pola, aby zarejestrować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-531">The initial value of the field to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-532">Rejestruje ukryte wartości z <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-532">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-533"><xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> Metoda tworzy ukryty `<input>` elementu na stronie HTML renderowanych.</span><span class="sxs-lookup"><span data-stu-id="c70ec-533">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-534">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> i <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-534">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="c70ec-535">W przykładzie rejestruje tablicy i wartość ukryte i definiuje `OnClick` zdarzenie `<input>` przycisk, aby obliczyć sumę dwóch wartości w tablicy wartości hidden.</span><span class="sxs-lookup"><span data-stu-id="c70ec-535">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-536">
            <paramref name="hiddenFieldName" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-536">
              <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-537">Typ instrukcji OnSubmit do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-537">The type of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-538">Klucz instrukcji OnSubmit do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-538">The key of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="c70ec-539">Literał skryptu instrukcji OnSubmit do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-539">The script literal of the OnSubmit statement to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-540">Rejestruje instrukcję OnSubmit z <see cref="T:System.Web.UI.Page" /> przy użyciu typu klucza i skrypt literału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-540">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
          <span data-ttu-id="c70ec-541">Podczas wykonywania instrukcji <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> zostało przesłane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-541">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-542">Instrukcja OnSubmit jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-542">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-543">Instrukcje z tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-543">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-544">Na stronie można zarejestrować tylko jednej instrukcji z danego typu i parę kluczy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-544">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="c70ec-545">Podjęto próbę zarejestrowania instrukcję, która jest już zarejestrowany nie utworzy duplikat instrukcji.</span><span class="sxs-lookup"><span data-stu-id="c70ec-545">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="c70ec-546">Wywołanie <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metody w celu określenia, czy instrukcji OnSubmit jest już zarejestrowany z daną parą klucza i typ i uniknąć niepotrzebnego próby dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-546">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="c70ec-547">`script` Parametr <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> — metoda może zawierać wielu poleceń skryptu, jak długo są poprawnie rozdzielone średnikami (;).</span><span class="sxs-lookup"><span data-stu-id="c70ec-547">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="c70ec-548"><xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Dodaje skrypt, który jest wykonywany przed przesłaniem strony daje możliwość anulowanie przesyłania.</span><span class="sxs-lookup"><span data-stu-id="c70ec-548">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="c70ec-549">Aby uzyskać więcej informacji na temat formularzy HTML i `OnSubmit` atrybutów, zobacz [witryny sieci Web w sieci World Wide Web konsorcjum W3C](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="c70ec-549">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-550">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-550">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-551">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-551">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-552">Rejestruje uruchomienia skryptu <see cref="T:System.Web.UI.Page" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-552">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-553">Typ uruchomienia skryptu do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-553">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-554">Klucz uruchomienia skryptu do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-554">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="c70ec-555">Skrypt uruchamiania literału do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-555">The startup script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-556">Rejestruje uruchomienia skryptu <see cref="T:System.Web.UI.Page" /> przy użyciu typu klucza i skrypt literału.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-556">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-557">Skrypt po stronie klienta jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-557">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-558">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-558">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-559">Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-559">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="c70ec-560">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-560">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="c70ec-561">Wywołanie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metody w celu określenia, czy skryptu z daną parą klucza i typ uruchamiania jest już zarejestrowany i uniknąć niepotrzebnego próby dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-561">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="c70ec-562">W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody, należy się upewnić, że skrypt jest dostarczany w `script` parametru jest ujęte w `<script>` bloku elementu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-562">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="c70ec-563">Blok skryptu dodawany przez <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metoda jest wykonywana po stronie zakończeniu ładowania, ale przed stroną <xref:System.Web.UI.Control.OnLoad%2A> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-563">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="c70ec-564">W blokach skryptu nie ma gwarancji jako dane wyjściowe w kolejności, które są zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="c70ec-564">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="c70ec-565">Jeśli kolejność blokach skryptu odgrywa ważną rolę, użyj <xref:System.Text.StringBuilder> do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestruj je w bloku skryptu jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-565">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-566">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-566">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="c70ec-567">Należy pamiętać, że początku i zamykanie tagów skryptu znajdują się w obrębie `script` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-567">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="c70ec-568">Aby skrypt tagi dodane na podstawie ustawienia dodatkowych parametrów, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-568">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="c70ec-569">Typ uruchomienia skryptu do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-569">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c70ec-570">Klucz uruchomienia skryptu do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-570">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="c70ec-571">Skrypt uruchamiania literału do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-571">The startup script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="c70ec-572">Wartość logiczna wskazująca, czy dodać tagi skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-572">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-573">Rejestruje uruchomienia skryptu <see cref="T:System.Web.UI.Page" /> przy użyciu typu, klucz skrypt literału i wartość logiczną wskazującą, czy dodać tagi skryptu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-573">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70ec-574">Skrypt uruchamiania jest unikatowo identyfikowana przez jego klucza i jej typie.</span><span class="sxs-lookup"><span data-stu-id="c70ec-574">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="c70ec-575">Skrypty za pomocą tego samego klucza i typ są traktowane jako duplikaty.</span><span class="sxs-lookup"><span data-stu-id="c70ec-575">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="c70ec-576">Na stronie może być zarejestrowany tylko jeden skrypt z danego typu i parę kluczy.</span><span class="sxs-lookup"><span data-stu-id="c70ec-576">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="c70ec-577">Podjęto próbę zarejestrowania skrypt, który jest już zarejestrowany nie tworzy duplikat skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-577">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="c70ec-578">Wywołanie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metody w celu określenia, czy skryptu z daną parą klucza i typ uruchamiania jest już zarejestrowany i uniknąć niepotrzebnego próby dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-578">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="c70ec-579">W tym przeciążenia <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody, można określić, czy skrypt jest dostarczany w `script` parametru jest ujęte w `<script>` bloku elementu przy użyciu `addScriptTags` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-579">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="c70ec-580">Ustawienie `addScriptTags` do `true` wskazuje automatycznie dodawane tagów skryptu.</span><span class="sxs-lookup"><span data-stu-id="c70ec-580">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="c70ec-581">Blok skryptu dodawany przez <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metoda jest wykonywana po stronie zakończeniu ładowania, ale przed stroną <xref:System.Web.UI.Control.OnLoad%2A> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="c70ec-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="c70ec-582">W blokach skryptu nie ma gwarancji jako dane wyjściowe w kolejności, które są zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="c70ec-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="c70ec-583">Jeśli kolejność blokach skryptu odgrywa ważną rolę, użyj <xref:System.Text.StringBuilder> do grupowania skrypty w ciągu jednego obiektu, a następnie zarejestruj je w bloku skryptu jednego klienta.</span><span class="sxs-lookup"><span data-stu-id="c70ec-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c70ec-584">Poniższy przykład kodu pokazuje użycie <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="c70ec-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="c70ec-585">Należy pamiętać, że `addScriptTags` ustawiono parametr `false` tak początku i zamykania tagów skryptu są dołączone do `script` parametru.</span><span class="sxs-lookup"><span data-stu-id="c70ec-585">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c70ec-586">
            <paramref name="type" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-586">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c70ec-587">Weryfikuje zdarzeń klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-587">Validates a client event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="c70ec-588">Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-588">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-589">Weryfikuje zdarzenie klienta, który został zarejestrowany dla zdarzeń weryfikacji przy użyciu <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-589">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="c70ec-590">Unikatowy identyfikator reprezentujący kontroli klienta generowania zdarzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-590">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c70ec-591">Argumenty przekazywane ze zdarzeniem klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-591">The event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c70ec-592">Weryfikuje zdarzenie klienta, który został zarejestrowany dla zdarzeń weryfikacji przy użyciu <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-592">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c70ec-593">Poniższy przykład kodu pokazuje, za pomocą <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> — metoda i <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> metody do rejestrowania wywołań zwrotnych dla sprawdzania poprawności i do sprawdzania, czy wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="c70ec-593">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="c70ec-594">Zwiększające weryfikacji pokazanych tu można zmodyfikować walidacji `argument` parametr zawiera informacje specyficzne dla użytkownika, takich jak tożsamość lub roli</span><span class="sxs-lookup"><span data-stu-id="c70ec-594">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c70ec-595">
            <paramref name="uniqueId" /> jest <see langword="null" /> lub ciąg pusty ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="c70ec-595">
              <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>