<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6168b3c68c5da16b52610f467bf142b8c7177fe9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69398993" /></Metadata><TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="97ed3-101">Definiuje metody zarządzania skryptami klienta w aplikacjach sieci Web.</span><span class="sxs-lookup"><span data-stu-id="97ed3-101">Defines methods for managing client scripts in Web applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-102"><xref:System.Web.UI.ClientScriptManager> Klasa służy do zarządzania skryptami klienta i dodawania ich do aplikacji sieci Web.</span><span class="sxs-lookup"><span data-stu-id="97ed3-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="97ed3-103">Możesz uzyskać odwołanie do <xref:System.Web.UI.ClientScriptManager> klasy <xref:System.Web.UI.Page.ClientScript%2A> z właściwości <xref:System.Web.UI.Page> obiektu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="97ed3-104">Skrypt klienta można dodać do strony sieci Web deklaratywnie poprzez dołączenie skryptu do znacznika HTML strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="97ed3-105">Są jednak sytuacje, w których konieczna jest dynamiczna Dodawanie skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="97ed3-106">Aby dynamicznie dodać skrypt, <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Użyj metody <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> , metody, metody lub <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody, w zależności od tego, kiedy i jak chcesz dodać skrypt.</span><span class="sxs-lookup"><span data-stu-id="97ed3-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="97ed3-107">Aby uzyskać więcej informacji, zobacz [jak: Dynamicznie Dodaj skrypt klienta do ASP.NET stron](https://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666)sieci Web.</span><span class="sxs-lookup"><span data-stu-id="97ed3-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](https://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="97ed3-108">Klasa jednoznacznie identyfikuje skrypty za pomocą klucza <xref:System.String> i <xref:System.Type>. <xref:System.Web.UI.ClientScriptManager></span><span class="sxs-lookup"><span data-stu-id="97ed3-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="97ed3-109">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-110">Użycie typu skryptu pozwala uniknąć pomyłki podobnych skryptów z różnych kontrolek użytkownika, które mogą być używane na stronie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="97ed3-111"><xref:System.Web.UI.ClientScriptManager> Klasa może służyć do wywoływania wywołań zwrotnych klienta w sytuacjach, gdy jest to pożądane do uruchomienia kodu serwera z klienta bez konieczności ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="97ed3-112">Jest to określane jako przeprowadzenie wywołania zwrotnego poza pasmem do serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="97ed3-113">W wywołaniu zwrotnym klienta funkcja skryptu klienta wysyła żądanie asynchroniczne do strony sieci Web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="97ed3-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="97ed3-114">Na stronie sieci Web jest uruchomiona zmodyfikowana wersja normalnego cyklu życia w celu przetworzenia wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="97ed3-115"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Użyj metody, aby uzyskać odwołanie do funkcji klienta, która po wywołaniu inicjuje wywołanie zwrotne klienta do zdarzenia serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="97ed3-116">Aby uzyskać więcej informacji, zobacz [implementowanie wywołań zwrotnych klienta bez ogłaszania zwrotnego](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="97ed3-116">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97ed3-117">Wywołania zwrotne skryptu nie będą działały w starszych przeglądarkach, które nie obsługują Document Object Model (DOM) i wymagają włączenia języka ECMAScript na kliencie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="97ed3-118">Aby sprawdzić, czy przeglądarka obsługuje wywołania zwrotne, użyj <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> właściwości, która jest dostępna <xref:System.Web.HttpRequest.Browser%2A> za pomocą właściwości obiektu wewnętrznego <xref:System.Web.HttpContext.Request%2A> ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="97ed3-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="97ed3-119"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Użyj metody<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> i metody, aby zdefiniować zdarzenie ogłaszania zwrotnego klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="97ed3-120">Te metody umożliwiają włączenie funkcji skryptu klienta, gdy są wywoływane, aby serwer mógł ogłaszać z powrotem na stronie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="97ed3-121">Zdarzenie ogłaszania zwrotnego klienta różni się od wywołania zwrotnego klienta w przypadku, gdy strona sieci Web zakończy normalny cykl życia, aby przetworzyć zdarzenie ogłaszania zwrotnego klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97ed3-122">Jeśli <xref:System.Web.UI.WebControls.Button> używasz kontrolki, `false` <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> a właściwość jest ustawiona na, możesz użyć <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metody do zwrócenia zdarzenia ogłaszania zwrotnego klienta dla <xref:System.Web.UI.WebControls.Button> kontrolki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="97ed3-123">Właściwość kontrolki ,<xref:System.Web.UI.WebControls.ImageButton> kontrolki i <xref:System.Web.UI.WebControls.LinkButton> kontrolka może służyć do uruchamiania skryptu klienta. <xref:System.Web.UI.WebControls.Button> <xref:System.Web.UI.WebControls.Button.OnClientClick%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-124">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody <xref:System.Web.UI.ClientScriptManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="97ed3-125">Na stronie są zdefiniowane dwa skrypty klienta: `PopupScript`, która wyświetla komunikat o alercie podczas ładowania strony, i `ButtonClickScript`definiuje procedurę obsługi klienta `onClick` dla zdarzenia przycisku html.</span><span class="sxs-lookup"><span data-stu-id="97ed3-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
    <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa"><span data-ttu-id="97ed3-126">Skrypt klienta na stronach sieci Web ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-126">Client Script in ASP.NET Web Pages</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-127">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-127">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-128">Uzyskuje odwołanie do funkcji klienta, która po wywołaniu inicjuje wywołanie klienta z powrotem do zdarzenia serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-128">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="97ed3-129">Serwer <see cref="T:System.Web.UI.Control" /> , który obsługuje wywołanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-129">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="97ed3-130">Formant musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejs i <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> dostarczyć metodę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-130">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-131">Argument przesłany ze skryptu klienta do serwera</span><span class="sxs-lookup"><span data-stu-id="97ed3-131">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="97ed3-132"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />Method.</span><span class="sxs-lookup"><span data-stu-id="97ed3-132"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="97ed3-133">Nazwa programu obsługi zdarzeń klienta, która otrzymuje wynik pomyślnego zdarzenia serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-133">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="97ed3-134">Skrypt klienta, który jest oceniany na kliencie przed zainicjowaniem wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-134">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="97ed3-135">Wynik skryptu jest przenoszona z powrotem do programu obsługi zdarzeń klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-135">The result of the script is passed back to the client event handler.</span></span></param>
        <summary><span data-ttu-id="97ed3-136">Uzyskuje odwołanie do funkcji klienta, która po wywołaniu inicjuje wywołanie klienta z powrotem do zdarzenia serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-136">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span></span> <span data-ttu-id="97ed3-137">Funkcja klienta dla tej przeciążonej metody obejmuje określony formant, argument, skrypt klienta i kontekst.</span><span class="sxs-lookup"><span data-stu-id="97ed3-137">The client function for this overloaded method includes a specified control, argument, client script, and context.</span></span></summary>
        <returns><span data-ttu-id="97ed3-138">Nazwa funkcji klienta, która wywołuje wywołanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-138">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-139"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Metoda wykonuje wywołanie zwrotne poza pasmem do serwera, który jest zmodyfikowaną wersją normalnego cyklu życia strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-139">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="97ed3-140">Aby uzyskać więcej informacji, zobacz [implementowanie wywołań zwrotnych klienta bez ogłaszania zwrotnego](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="97ed3-140">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97ed3-141">Gdy przeglądarka to program Microsoft Internet Explorer (wersja 5,0 lub nowsza), mechanizm wywołania zwrotnego skryptu jest implementowany za pośrednictwem obiektu COM Microsoft. XMLHTTP i wymaga ustawienia przeglądarki do uruchamiania formantów ActiveX.</span><span class="sxs-lookup"><span data-stu-id="97ed3-141">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="97ed3-142">W przypadku innych przeglądarek używany jest element XMLHttpRequest używający lokalnego Document Object Model przeglądarki (DOM).</span><span class="sxs-lookup"><span data-stu-id="97ed3-142">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="97ed3-143">Aby sprawdzić, czy przeglądarka obsługuje wywołania zwrotne klienta, należy <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> użyć właściwości.</span><span class="sxs-lookup"><span data-stu-id="97ed3-143">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="97ed3-144">Aby sprawdzić, czy przeglądarka obsługuje XML za pośrednictwem protokołu HTTP <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> , użyj właściwości.</span><span class="sxs-lookup"><span data-stu-id="97ed3-144">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="97ed3-145">Obie właściwości są dostępne przez <xref:System.Web.HttpRequest.Browser%2A> Właściwość wewnętrznego obiektu ASP.NET. <xref:System.Web.HttpContext.Request%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-145">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="97ed3-146"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Przeciążenie<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody wykonuje wywołanie zwrotne synchronicznie za pomocą XML przez http.</span><span class="sxs-lookup"><span data-stu-id="97ed3-146">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="97ed3-147">Podczas synchronicznego wysyłania danych w scenariuszu wywołania zwrotnego synchroniczne wywołania zwrotne zwracają natychmiast i nie blokują przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-147">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="97ed3-148">W przeglądarce nie można jednocześnie wykonać operacji wywołania zwrotnego synchronicznego wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-148">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="97ed3-149">W przypadku uruchomienia drugiego synchronicznego wywołania zwrotnego, gdy jeden aktualnie oczekuje, drugie synchroniczne wywołanie zwrotne anuluje pierwsze i tylko drugie wywołanie zwrotne zwróci wartość.</span><span class="sxs-lookup"><span data-stu-id="97ed3-149">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="97ed3-150">Aby wysłać dane asynchronicznie, użyj jednego z przeciążeń przyjmujących `useAsync` parametr, który jest wartością logiczną kontrolującą to zachowanie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-150">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="97ed3-151">W scenariuszu asynchronicznym można mieć wiele oczekujących wywołań zwrotnych; Jednak kolejność, w jakiej są zwracane, nie jest gwarantowana w kolejności, w jakiej zostały zainicjowane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-151">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="97ed3-152">Ponadto to Przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody nie określa żadnej funkcji klienta do obsługi przypadku warunku błędu wygenerowanego <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-152">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="97ed3-153">Aby określić obsługę wywołania zwrotnego błędu klienta, należy użyć jednego z przeciążeń `clientErrorCallback` , które pobiera parametr.</span><span class="sxs-lookup"><span data-stu-id="97ed3-153">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="97ed3-154">Metoda przyjmuje opcjonalny parametr ciągu `argument` i zwraca ciąg. <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="97ed3-154">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="97ed3-155">Aby przekazać lub odebrać wiele wartości, Połącz odpowiednio wartości w polu wejściowym lub zwracanym ciągu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-155">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97ed3-156">Należy unikać używania stanu widoku we wdrożeniu właściwości strony lub kontrolki, które muszą zostać zaktualizowane podczas operacji wywołania zwrotnego skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-156">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="97ed3-157">Jeśli właściwości są zażyje żądania stron, można użyć stanu sesji.</span><span class="sxs-lookup"><span data-stu-id="97ed3-157">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-158">Poniższy przykład kodu demonstruje, jak używać dwóch przeciążeń <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody w scenariuszu wywołania zwrotnego klienta, który zwiększa liczbę liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="97ed3-158">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="97ed3-159">Przedstawiono dwa mechanizmy wywołania zwrotnego; różnica między nimi polega na użyciu `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-159">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="97ed3-160">Funkcja wywołania zwrotnego `context` `ReceiveServerData1` klienta jest podawana przy użyciu parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-160">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="97ed3-161">Z kolei `ReceiveServerData2` funkcja wywołania zwrotnego klienta jest definiowana `<script>` w bloku na stronie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-161">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="97ed3-162">Metoda to program obsługi serwera, który zwiększa wartość, która jest przenoszona do niego <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> , a metoda zwraca wartość zwiększającą się jako ciąg. <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-162">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="97ed3-163">Jeśli metoda zwróci błąd, `ProcessCallBackError` funkcja klienta jest wywoływana. <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-163">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-164">Określona wartość to <see langword="null" />. <see cref="T:System.Web.UI.Control" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-164">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="97ed3-165">Określony program nie <see cref="T:System.Web.UI.ICallbackEventHandler" /> implementuje interfejsu. <see cref="T:System.Web.UI.Control" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-165">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-166">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-166">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="97ed3-167">Serwer <see cref="T:System.Web.UI.Control" /> , który obsługuje wywołanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-167">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="97ed3-168">Formant musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejs i <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> dostarczyć metodę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-168">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-169">Argument przesłany ze skryptu klienta do serwera</span><span class="sxs-lookup"><span data-stu-id="97ed3-169">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="97ed3-170"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />Method.</span><span class="sxs-lookup"><span data-stu-id="97ed3-170"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="97ed3-171">Nazwa programu obsługi zdarzeń klienta, która otrzymuje wynik pomyślnego zdarzenia serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-171">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="97ed3-172">Skrypt klienta, który jest oceniany na kliencie przed zainicjowaniem wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-172">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="97ed3-173">Wynik skryptu jest przenoszona z powrotem do programu obsługi zdarzeń klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-173">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="97ed3-174"><see langword="true" />Aby wykonać wywołanie zwrotne asynchronicznie; <see langword="false" /> aby synchronicznie wykonać wywołanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="97ed3-174"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="97ed3-175">Uzyskuje odwołanie do funkcji klienta, która po wywołaniu inicjuje wywołanie klienta z powrotem do zdarzeń serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-175">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="97ed3-176">Funkcja klienta dla tej przeciążonej metody obejmuje określony formant, argument, skrypt klienta, kontekst i wartość logiczną.</span><span class="sxs-lookup"><span data-stu-id="97ed3-176">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="97ed3-177">Nazwa funkcji klienta, która wywołuje wywołanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-177">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-178">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody `useAsync` wymaga parametru, który umożliwia asynchroniczne wykonywanie wywołania zwrotnego klienta przez ustawienie wartości na `true`.</span><span class="sxs-lookup"><span data-stu-id="97ed3-178">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="97ed3-179">Wersje przeciążenia tej metody, które nie wymagają, `useAsync` aby `false` parametr domyślnie ustawił wartość.</span><span class="sxs-lookup"><span data-stu-id="97ed3-179">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="97ed3-180">Aby uzyskać więcej informacji na temat tej metody, zobacz uwagi dotyczące metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-180">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-181">Określona wartość to <see langword="null" />. <see cref="T:System.Web.UI.Control" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-181">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="97ed3-182">Określony program nie <see cref="T:System.Web.UI.ICallbackEventHandler" /> implementuje interfejsu. <see cref="T:System.Web.UI.Control" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-182">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-183">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-183">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : string * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (target, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="97ed3-184">Nazwa serwera <see cref="T:System.Web.UI.Control" /> , który obsługuje wywołanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-184">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="97ed3-185">Formant musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejs i <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> dostarczyć metodę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-185">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-186">Argument przesłany ze skryptu klienta do serwera</span><span class="sxs-lookup"><span data-stu-id="97ed3-186">An argument passed from the client script to the server</span></span> 
 <span data-ttu-id="97ed3-187"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />Method.</span><span class="sxs-lookup"><span data-stu-id="97ed3-187"><see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="97ed3-188">Nazwa programu obsługi zdarzeń klienta, która otrzymuje wynik pomyślnego zdarzenia serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-188">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="97ed3-189">Skrypt klienta, który jest oceniany na kliencie przed zainicjowaniem wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-189">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="97ed3-190">Wynik skryptu jest przenoszona z powrotem do programu obsługi zdarzeń klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-190">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="clientErrorCallback"><span data-ttu-id="97ed3-191">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik w przypadku wystąpienia błędu w programie obsługi zdarzeń serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-191">The name of the client event handler that receives the result when an error occurs in the server event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="97ed3-192"><see langword="true" />Aby wykonać wywołanie zwrotne asynchronicznie; <see langword="false" /> aby synchronicznie wykonać wywołanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="97ed3-192"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="97ed3-193">Uzyskuje odwołanie do funkcji klienta, która po wywołaniu inicjuje wywołanie klienta z powrotem do zdarzeń serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-193">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="97ed3-194">Funkcja klienta dla tej przeciążonej metody obejmuje określony element docelowy, argument, skrypt klienta, kontekst, procedurę obsługi błędów i wartość logiczną.</span><span class="sxs-lookup"><span data-stu-id="97ed3-194">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="97ed3-195">Nazwa funkcji klienta, która wywołuje wywołanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-195">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-196">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody `target` przyjmuje parametr <xref:System.Web.UI.Control> String zamiast parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-196">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="97ed3-197">Użyj tego przeciążenia, gdy chcesz, aby wywołanie zwrotne powracać do czegoś innego niż ciąg <xref:System.Web.UI.Control.UniqueID%2A> zawierający kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-197">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="97ed3-198">Ponadto to Przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody `useAsync` wymaga `clientErrorCallback` parametru i.</span><span class="sxs-lookup"><span data-stu-id="97ed3-198">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="97ed3-199">Parametr umożliwia asynchroniczne wykonywanie wywołania zwrotnego klienta przez ustawienie wartości na `true`. `useAsync`</span><span class="sxs-lookup"><span data-stu-id="97ed3-199">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="97ed3-200">Wersje przeciążenia tej metody, które nie wymagają, `useAsync` aby `false` parametr domyślnie ustawił wartość.</span><span class="sxs-lookup"><span data-stu-id="97ed3-200">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="97ed3-201">Parametr umożliwia zdefiniowanie nazwy funkcji klienta, która jest wywoływana <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> , jeśli program obsługi serwera, metoda zwraca błąd. `clientErrorCallback`</span><span class="sxs-lookup"><span data-stu-id="97ed3-201">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="97ed3-202">Wersje przeciążenia tej metody, które nie wymagają `clientErrorCallback` parametru ustaw wartość null.</span><span class="sxs-lookup"><span data-stu-id="97ed3-202">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="97ed3-203">Aby uzyskać więcej informacji na temat tej metody, zobacz uwagi dotyczące metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-203">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-204">Poniższy przykład kodu demonstruje, jak używać dwóch przeciążeń <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody w scenariuszu wywołania zwrotnego klienta, który zwiększa liczbę liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="97ed3-204">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="97ed3-205">Przedstawiono dwa mechanizmy wywołania zwrotnego; różnica między nimi polega na użyciu `context` parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-205">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="97ed3-206">Funkcja wywołania zwrotnego `context` `ReceiveServerData1` klienta jest podawana przy użyciu parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-206">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="97ed3-207">Z kolei `ReceiveServerData2` funkcja wywołania zwrotnego klienta jest definiowana `<script>` w bloku na stronie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-207">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="97ed3-208">Metoda to program obsługi serwera, który zwiększa wartość, która jest przenoszona do niego <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> , a metoda zwraca wartość zwiększającą się jako ciąg. <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-208">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="97ed3-209">Jeśli metoda zwróci błąd, funkcja `ProcessCallBackError` klienta jest wywoływana. <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-209">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-210">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-210">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="97ed3-211">Serwer <see cref="T:System.Web.UI.Control" /> , który obsługuje wywołanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-211">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span></span> <span data-ttu-id="97ed3-212">Formant musi implementować <see cref="T:System.Web.UI.ICallbackEventHandler" /> interfejs i <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> dostarczyć metodę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-212">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-213">Do metody serwera <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> przeszedł argument ze skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-213">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span></span></param>
        <param name="clientCallback"><span data-ttu-id="97ed3-214">Nazwa programu obsługi zdarzeń klienta, która otrzymuje wynik pomyślnego zdarzenia serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-214">The name of the client event handler that receives the result of the successful server event.</span></span></param>
        <param name="context"><span data-ttu-id="97ed3-215">Skrypt klienta, który jest oceniany na kliencie przed zainicjowaniem wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-215">The client script that is evaluated on the client prior to initiating the callback.</span></span> <span data-ttu-id="97ed3-216">Wynik skryptu jest przenoszona z powrotem do programu obsługi zdarzeń klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-216">The result of the script is passed back to the client event handler.</span></span></param>
        <param name="clientErrorCallback"><span data-ttu-id="97ed3-217">Nazwa programu obsługi zdarzeń klienta, który odbiera wynik w przypadku wystąpienia błędu w programie obsługi zdarzeń serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-217">The name of the client event handler that receives the result when an error occurs in the server event handler.</span></span></param>
        <param name="useAsync"><span data-ttu-id="97ed3-218"><see langword="true" />Aby wykonać wywołanie zwrotne asynchronicznie; <see langword="false" /> aby synchronicznie wykonać wywołanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="97ed3-218"><see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span></span></param>
        <summary><span data-ttu-id="97ed3-219">Uzyskuje odwołanie do funkcji klienta, która po wywołaniu inicjuje wywołanie klienta z powrotem do zdarzeń serwera.</span><span class="sxs-lookup"><span data-stu-id="97ed3-219">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span></span> <span data-ttu-id="97ed3-220">Funkcja klienta dla tej przeciążonej metody obejmuje określony formant, argument, skrypt klienta, kontekst, procedurę obsługi błędów i wartość logiczną.</span><span class="sxs-lookup"><span data-stu-id="97ed3-220">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span></span></summary>
        <returns><span data-ttu-id="97ed3-221">Nazwa funkcji klienta, która wywołuje wywołanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-221">The name of a client function that invokes the client callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-222">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> metody `useAsync` wymaga `clientErrorCallback` parametru i.</span><span class="sxs-lookup"><span data-stu-id="97ed3-222">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="97ed3-223">Parametr umożliwia asynchroniczne wykonywanie wywołania zwrotnego klienta przez ustawienie wartości na `true`. `useAsync`</span><span class="sxs-lookup"><span data-stu-id="97ed3-223">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="97ed3-224">Wersje przeciążenia tej metody, które nie wymagają, `useAsync` aby `false` parametr domyślnie ustawił wartość.</span><span class="sxs-lookup"><span data-stu-id="97ed3-224">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="97ed3-225">Parametr umożliwia zdefiniowanie nazwy funkcji klienta, która jest wywoływana, jeśli procedura obsługi serwera <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> (Metoda) zwraca błąd. `clientErrorCallback`</span><span class="sxs-lookup"><span data-stu-id="97ed3-225">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="97ed3-226">Wersje przeciążenia tej metody, które nie wymagają `clientErrorCallback` parametru ustaw wartość null.</span><span class="sxs-lookup"><span data-stu-id="97ed3-226">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="97ed3-227">Aby uzyskać więcej informacji na temat tej metody, zobacz uwagi dotyczące metody <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-227">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-228">Określona wartość to <see langword="null" />. <see cref="T:System.Web.UI.Control" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-228">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="97ed3-229">Określony program nie <see cref="T:System.Web.UI.ICallbackEventHandler" /> implementuje interfejsu. <see cref="T:System.Web.UI.Control" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-229">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span></span></exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-230">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-230">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-231">Pobiera odwołanie z <see langword="javascript:" /> dołączonym do początku, które może być użyte w zdarzeniu klienta do ogłaszania zwrotnego na serwerze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-231">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="97ed3-232">Kontrolka serwerowa do przetworzenia ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-232">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-233">Parametr przeszedł do kontrolki serwerowej.</span><span class="sxs-lookup"><span data-stu-id="97ed3-233">The parameter passed to the server control.</span></span></param>
        <summary><span data-ttu-id="97ed3-234">Pobiera odwołanie z <see langword="javascript:" /> dołączonym do początku, które może być używane w zdarzeniu klienta do ogłaszania zwrotnego na serwerze dla określonej kontrolki i z określonymi argumentami zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="97ed3-234">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span></span></summary>
        <returns><span data-ttu-id="97ed3-235">Ciąg reprezentujący wywołanie języka JavaScript do funkcji ogłaszania zwrotnego, która zawiera identyfikator formantu docelowego i argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-235">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-236">Użycie metody wymaga kontrolki, która obsługuje ogłaszanie zwrotne w <xref:System.Web.UI.IPostBackEventHandler> celu zaimplementowania interfejsu. <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-236">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="97ed3-237">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs dla programu <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-237">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-238">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-238">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="97ed3-239">Kontrolka `MyControl`niestandardowa, <xref:System.Web.UI.IPostBackEventHandler> implementuje interfejs.</span><span class="sxs-lookup"><span data-stu-id="97ed3-239">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="97ed3-240">Po kliknięciu <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> elementu zakotwiczenia HTML na stronie wywoływana jest metoda kontrolki niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="97ed3-240">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="97ed3-241">Poniższy przykład kodu ma takie same funkcje jak poprzedni, z tą różnicą, że zamiast kontrolki <xref:System.Web.UI.Page> niestandardowej Klasa <xref:System.Web.UI.IPostBackEventHandler> implementuje interfejs.</span><span class="sxs-lookup"><span data-stu-id="97ed3-241">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="97ed3-242">Kontrolka serwerowa do przetworzenia ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-242">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-243">Parametr przeszedł do kontrolki serwerowej.</span><span class="sxs-lookup"><span data-stu-id="97ed3-243">The parameter passed to the server control.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="97ed3-244"><see langword="true" />Aby zarejestrować zdarzenie ogłaszania zwrotnego w celu weryfikacji; <see langword="false" /> nie można zarejestrować zdarzenia post na potrzeby walidacji.</span><span class="sxs-lookup"><span data-stu-id="97ed3-244"><see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span></span></param>
        <summary><span data-ttu-id="97ed3-245">Pobiera odwołanie, z <see langword="javascript:" /> dołączonym do początku, które może być używane w zdarzeniu klienta do ogłaszania zwrotnego na serwerze dla określonej kontrolki z określonymi argumentami zdarzeń i wskazywanie wartości logicznej, czy należy zarejestrować ogłoszenie z powrotem dla zdarzenia zatwierdzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-245">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span></span></summary>
        <returns><span data-ttu-id="97ed3-246">Ciąg reprezentujący wywołanie języka JavaScript do funkcji ogłaszania zwrotnego, która zawiera identyfikator formantu docelowego i argumenty zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-246">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-247">Użycie metody wymaga kontrolki, która obsługuje ogłaszanie zwrotne w <xref:System.Web.UI.IPostBackEventHandler> celu zaimplementowania interfejsu. <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-247">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="97ed3-248">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs dla programu <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-249">Zwraca ciąg, który może zostać użyty w zdarzeniu klienta w celu wypróbowania ogłaszania zwrotnego na serwerze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-249">Returns a string that can be used in a client event to cause postback to the server.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions -&gt; string" Usage="clientScriptManager.GetPostBackEventReference options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="97ed3-250">A <see cref="T:System.Web.UI.PostBackOptions" /> który definiuje ogłaszanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="97ed3-250">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span></span></param>
        <summary><span data-ttu-id="97ed3-251">Zwraca ciąg, który może zostać użyty w zdarzeniu klienta w celu wypróbowania ogłaszania zwrotnego na serwerze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-251">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="97ed3-252">Ciąg odwołania jest definiowany przez określone <see cref="T:System.Web.UI.PostBackOptions" /> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-252">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span></span></summary>
        <returns><span data-ttu-id="97ed3-253">Ciąg, który jest traktowany jak skrypt na kliencie, inicjuje ogłaszanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-253">A string that, when treated as script on the client, initiates the client postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-254">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs dla programu <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-254">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="97ed3-255">Metoda może być używana z kontrolką <xref:System.Web.UI.WebControls.Button> , gdy <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość jest `false`. <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-255">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="97ed3-256">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metoda zwraca zdarzenie ogłaszania zwrotnego klienta <xref:System.Web.UI.WebControls.Button> dla kontrolki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-256">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-257"><see cref="T:System.Web.UI.PostBackOptions" /> Parametr jest<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-257">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-258">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-258">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="97ed3-259">Serwer <see cref="T:System.Web.UI.Control" /> , który przetwarza ogłaszanie zwrotne na serwerze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-259">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-260">Ciąg opcjonalnych argumentów do przekazania do kontrolki, która przetwarza ogłaszanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="97ed3-260">A string of optional arguments to pass to the control that processes the postback.</span></span></param>
        <summary><span data-ttu-id="97ed3-261">Zwraca ciąg, który może zostać użyty w zdarzeniu klienta w celu wypróbowania ogłaszania zwrotnego na serwerze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-261">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="97ed3-262">Ciąg odwołania jest definiowany przez określony formant, który obsługuje ogłaszanie zwrotne i argument ciągu dodatkowych informacji o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-262">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span></summary>
        <returns><span data-ttu-id="97ed3-263">Ciąg, który jest traktowany jak skrypt na kliencie, inicjuje ogłaszanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="97ed3-263">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-264">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs dla programu <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-264">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="97ed3-265">Metoda może być używana z kontrolką <xref:System.Web.UI.WebControls.Button> , gdy <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość jest `false`. <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-265">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="97ed3-266">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metoda zwraca zdarzenie ogłaszania zwrotnego klienta <xref:System.Web.UI.WebControls.Button> dla kontrolki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-266">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-267">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-267">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="97ed3-268">Kontrolka `MyControl`niestandardowa, <xref:System.Web.UI.IPostBackEventHandler> implementuje interfejs.</span><span class="sxs-lookup"><span data-stu-id="97ed3-268">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="97ed3-269">Po kliknięciu <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> przycisku na stronie wywoływana jest metoda kontrolki niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="97ed3-269">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="97ed3-270">Poniższy przykład kodu ma takie same funkcje jak poprzedni, z tą różnicą, że zamiast kontrolki <xref:System.Web.UI.Page> niestandardowej Klasa <xref:System.Web.UI.IPostBackEventHandler> implementuje interfejs.</span><span class="sxs-lookup"><span data-stu-id="97ed3-270">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-271">Określona <see cref="T:System.Web.UI.Control" /> wartość to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-271">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-272">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-272">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (options, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="97ed3-273">A <see cref="T:System.Web.UI.PostBackOptions" /> który definiuje ogłaszanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="97ed3-273">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="97ed3-274"><see langword="true" />Aby zarejestrować odwołanie do zdarzenia w celu weryfikacji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-274"><see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="97ed3-275">Zwraca ciąg, który może zostać użyty w zdarzeniu klienta w celu wypróbowania ogłaszania zwrotnego na serwerze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-275">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="97ed3-276">Ciąg odwołania jest definiowany przez określony <see cref="T:System.Web.UI.PostBackOptions" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="97ed3-276">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span></span> <span data-ttu-id="97ed3-277">Opcjonalnie rejestruje odwołanie do zdarzenia na potrzeby walidacji.</span><span class="sxs-lookup"><span data-stu-id="97ed3-277">Optionally, registers the event reference for validation.</span></span></summary>
        <returns><span data-ttu-id="97ed3-278">Ciąg, który jest traktowany jak skrypt na kliencie, inicjuje ogłaszanie zwrotne klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-278">A string that, when treated as script on the client, initiates the client postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-279">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> Interfejs <xref:System.Web.UI.Page> dla obiektu, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-279">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="97ed3-280">Metoda może być używana z kontrolką <xref:System.Web.UI.WebControls.Button> , gdy <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość jest `false`. <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-280">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="97ed3-281">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metoda zwraca zdarzenie ogłaszania zwrotnego klienta <xref:System.Web.UI.WebControls.Button> dla kontrolki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-281">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="97ed3-282">Jeśli `registerForEventValidation` jest `true` ,<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>Metoda wywołuje metodęwceluzarejestrowaniaodwołaniazdarzenianapotrzebywalidacjizunikatowymidentyfikatoremformantu,któryreprezentujekontrolkęklientagenerującązdarzenie.<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="97ed3-282">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-283"><see cref="T:System.Web.UI.PostBackOptions" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="97ed3-283">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-284">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-284">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="97ed3-285">Serwer <see cref="T:System.Web.UI.Control" /> , który przetwarza ogłaszanie zwrotne na serwerze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-285">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-286">Ciąg opcjonalnych argumentów do przekazania <paramref name="control" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-286">A string of optional arguments to pass to <paramref name="control" />.</span></span></param>
        <param name="registerForEventValidation"><span data-ttu-id="97ed3-287"><see langword="true" />Aby zarejestrować odwołanie do zdarzenia w celu weryfikacji; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-287"><see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="97ed3-288">Zwraca ciąg, który ma być używany w zdarzeniu klienta, aby spowodować ogłaszanie zwrotne na serwerze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-288">Returns a string to use in a client event to cause postback to the server.</span></span> <span data-ttu-id="97ed3-289">Ciąg odwołania jest definiowany przez określony formant, który obsługuje ogłaszanie zwrotne i argument ciągu dodatkowych informacji o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-289">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span> <span data-ttu-id="97ed3-290">Opcjonalnie rejestruje odwołanie do zdarzenia na potrzeby walidacji.</span><span class="sxs-lookup"><span data-stu-id="97ed3-290">Optionally, registers the event reference for validation.</span></span></summary>
        <returns><span data-ttu-id="97ed3-291">Ciąg, który jest traktowany jak skrypt na kliencie, inicjuje ogłaszanie zwrotne.</span><span class="sxs-lookup"><span data-stu-id="97ed3-291">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-292">Aby zaimplementować <xref:System.Web.UI.IPostBackEventHandler> interfejs dla programu <xref:System.Web.UI.Page>, należy użyć dyrektywy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-292">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="97ed3-293">Metoda może być używana z kontrolką <xref:System.Web.UI.WebControls.Button> , gdy <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> właściwość jest `false`. <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-293">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="97ed3-294">W tym scenariuszu <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Metoda zwraca zdarzenie ogłaszania zwrotnego klienta <xref:System.Web.UI.WebControls.Button> dla kontrolki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-294">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="97ed3-295">Jeśli `registerForEventValidation` ma wartość true <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> , metoda wywołuje <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> metodę w celu zarejestrowania odwołania zdarzenia na potrzeby walidacji z unikatowym identyfikatorem formantu, który reprezentuje kontrolkę klienta generującą zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-295">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-296">Określona <see cref="T:System.Web.UI.Control" /> wartość to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-296">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185"><span data-ttu-id="97ed3-297">Wywołania zwrotne klienta bez ogłaszania zwrotnego na stronach ASP.NET</span><span class="sxs-lookup"><span data-stu-id="97ed3-297">Client Callbacks Without Postbacks in ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.GetWebResourceUrl : Type * string -&gt; string" Usage="clientScriptManager.GetWebResourceUrl (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-298">Typ zasobu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-298">The type of the resource.</span></span></param>
        <param name="resourceName"><span data-ttu-id="97ed3-299">W pełni kwalifikowana nazwa zasobu w zestawie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-299">The fully qualified name of the resource in the assembly.</span></span></param>
        <summary><span data-ttu-id="97ed3-300">Pobiera odwołanie do adresu URL do zasobu w zestawie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-300">Gets a URL reference to a resource in an assembly.</span></span></summary>
        <returns><span data-ttu-id="97ed3-301">Odwołanie do zasobu w adresie URL.</span><span class="sxs-lookup"><span data-stu-id="97ed3-301">The URL reference to the resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-302"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Metoda zwraca odwołanie do adresu URL do zasobu osadzonego w zestawie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-302">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="97ed3-303">Zwrócone odwołanie nie jest zakodowane w adresie URL.</span><span class="sxs-lookup"><span data-stu-id="97ed3-303">The returned reference is not URL encoded.</span></span> <span data-ttu-id="97ed3-304">Zasoby mogą być plikami skryptów, obrazami lub dowolnym plikiem statycznym.</span><span class="sxs-lookup"><span data-stu-id="97ed3-304">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="97ed3-305">Należy określić typ na podstawie obiektu, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-305">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="97ed3-306">Zasób internetowy zarejestrowany na stronie jest jednoznacznie identyfikowany przez jego typ i nazwę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-306">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="97ed3-307">Na stronie można zarejestrować tylko jeden zasób z danym typem i parą nazw.</span><span class="sxs-lookup"><span data-stu-id="97ed3-307">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="97ed3-308">Próba zarejestrowania zasobu, który jest już zarejestrowany, nie powoduje utworzenia duplikatu zarejestrowanego zasobu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-308">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="97ed3-309">Metoda jest używana w połączeniu <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> z metodą uzyskiwania dostępu do zasobów osadzonych w zestawach. <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-309">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="97ed3-310">Aby uzyskać więcej informacji na temat używania zasobów w aplikacjach, zobacz [Omówienie zasobów strony sieci Web ASP.NET](https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="97ed3-310">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-311">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-311">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="97ed3-312">Parametr *typu* w tym przykładzie jest ustawiony na typ klasy w zestawie zawierającym zasób.</span><span class="sxs-lookup"><span data-stu-id="97ed3-312">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="97ed3-313">`resourceName` Parametr jest określony z w pełni kwalifikowaną ścieżką do zasobu, który obejmuje domyślną przestrzeń nazw.</span><span class="sxs-lookup"><span data-stu-id="97ed3-313">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="97ed3-314">Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebResourceAttribute> jak programowo zastosować atrybut metadanych, aby oznaczyć zestaw dla zasobów, które będą obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-314">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="97ed3-315">Skompiluj następujące klasy w bibliotece klas z domyślną przestrzenią nazw ustawioną na `Samples.AspNet.CS.Controls` lub `Samples.AspNet.VB.Controls`, w zależności od używanego języka.</span><span class="sxs-lookup"><span data-stu-id="97ed3-315">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="97ed3-316">Ten przykład wymaga pliku JavaScript o nazwie `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="97ed3-316">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="97ed3-317">Plik. js jest osadzonym zasobem w zestawie, który zawiera `ClientScriptResourceLabel` obiekt.</span><span class="sxs-lookup"><span data-stu-id="97ed3-317">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="97ed3-318">Jeśli używasz programu Visual Studio, w okno Właściwości projektu biblioteki klas ustaw opcję **Akcja kompilacji** na **zasób osadzony** po wybraniu pliku skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-318">If you are using Visual Studio, in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="97ed3-319">Jeśli kompilujesz bibliotekę w wierszu polecenia, użyj przełącznika [/Resource](~/docs/csharp/language-reference/compiler-options/resource-compiler-option.md) , aby osadzić zasób.</span><span class="sxs-lookup"><span data-stu-id="97ed3-319">If you are compiling the library at the command line, use the [/resource](~/docs/csharp/language-reference/compiler-options/resource-compiler-option.md) switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-320">Typ zasobu sieci Web to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-320">The web resource type is <see langword="null" />.</span></span>

<span data-ttu-id="97ed3-321">—lub—</span><span class="sxs-lookup"><span data-stu-id="97ed3-321">-or-</span></span>

<span data-ttu-id="97ed3-322">Nazwa zasobu sieci Web to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-322">The web resource name is <see langword="null" />.</span></span>  
  
<span data-ttu-id="97ed3-323">—lub—</span><span class="sxs-lookup"><span data-stu-id="97ed3-323">-or-</span></span> 
<span data-ttu-id="97ed3-324">Nazwa zasobu sieci Web ma długość równą zero.</span><span class="sxs-lookup"><span data-stu-id="97ed3-324">The web resource name has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <related type="Article" href="https://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd"><span data-ttu-id="97ed3-325">ASP.NET zasobów strony sieci Web — Omówienie</span><span class="sxs-lookup"><span data-stu-id="97ed3-325">ASP.NET Web Page Resources Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5212666e-98ab-47e4-a497-b5545ab15c7f"><span data-ttu-id="97ed3-326">/Resource (Osadź plik zasobów do wyjścia) (C# opcje kompilatora)</span><span class="sxs-lookup"><span data-stu-id="97ed3-326">/resource (Embed Resource File to Output) (C# Compiler Options)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/eee2f227-91f2-4f2b-a9d6-1c51c5320858"><span data-ttu-id="97ed3-327">/resource (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="97ed3-327">/resource (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-328">Określa, czy blok skryptu klienta jest zarejestrowany w <see cref="T:System.Web.UI.Page" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-328">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="97ed3-329">Klucz bloku skryptu klienta do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-329">The key of the client script block to search for.</span></span></param>
        <summary><span data-ttu-id="97ed3-330">Określa, czy blok skryptu klienta jest zarejestrowany w <see cref="T:System.Web.UI.Page" /> obiekcie przy użyciu określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="97ed3-330">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="97ed3-331"><see langword="true" />Jeśli blok skryptu klienta jest zarejestrowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-331"><see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-332">Wywołaj tę metodę przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody, aby uniknąć rejestrowania duplikatów skryptów.</span><span class="sxs-lookup"><span data-stu-id="97ed3-332">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="97ed3-333">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-333">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="97ed3-334">Skrypt klienta jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-334">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-335">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-335">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="97ed3-336">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metody wywołuje Przeciążenie, które przyjmuje `key` zarówno `type` parametr, jak i parametru z typem ustawionym jako <xref:System.Web.UI.Page> obiekt</span><span class="sxs-lookup"><span data-stu-id="97ed3-336">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-337">Typ bloku skryptu klienta, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-337">The type of the client script block to search for.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-338">Klucz bloku skryptu klienta do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-338">The key of the client script block to search for.</span></span></param>
        <summary><span data-ttu-id="97ed3-339">Określa, czy blok skryptu klienta jest zarejestrowany w <see cref="T:System.Web.UI.Page" /> obiekcie przy użyciu klucza i typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-339">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span></span></summary>
        <returns><span data-ttu-id="97ed3-340"><see langword="true" />Jeśli blok skryptu klienta jest zarejestrowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-340"><see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-341">Wywołaj tę metodę przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody, aby uniknąć rejestrowania duplikatów skryptów.</span><span class="sxs-lookup"><span data-stu-id="97ed3-341">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="97ed3-342">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-342">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="97ed3-343">Skrypt klienta jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-343">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-344">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-344">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-345">Należy określić typ na podstawie obiektu, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-345">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="97ed3-346">Na przykład w przypadku używania `Page` wystąpienia w celu uzyskania dostępu do zasobu należy `Page` określić typ.</span><span class="sxs-lookup"><span data-stu-id="97ed3-346">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-347">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-347">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="97ed3-348">Należy pamiętać, że jeśli logika do sprawdzenia istniejącego bloku skryptu klienta została usunięta, nie będą dwa zduplikowane skrypty klienta w kodzie źródłowym HTML renderowanej strony, ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Metoda sprawdza duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-348">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="97ed3-349">Zaletą sprawdzania jest zmniejszenie niepotrzebnych obliczeń.</span><span class="sxs-lookup"><span data-stu-id="97ed3-349">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-350">Typ skryptu klienta to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-350">The client script type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-351">Określa, czy skrypt klienta ma być zarejestrowany w <see cref="T:System.Web.UI.Page" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-351">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="97ed3-352">Klucz skryptu klienta obejmuje wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-352">The key of the client script include to search for.</span></span></param>
        <summary><span data-ttu-id="97ed3-353">Określa, czy skrypt klienta ma być zarejestrowany w <see cref="T:System.Web.UI.Page" /> obiekcie przy użyciu określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="97ed3-353">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="97ed3-354"><see langword="true" />Jeśli zarejestrowano skrypt klienta; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-354"><see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-355">Wywołaj tę metodę przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody, aby uniknąć rejestrowania duplikatów skryptów.</span><span class="sxs-lookup"><span data-stu-id="97ed3-355">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="97ed3-356">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-356">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="97ed3-357">Skrypt klienta zawiera unikatową identyfikację za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-357">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-358">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-358">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="97ed3-359">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metody wywołuje Przeciążenie, które przyjmuje `key` zarówno `type` parametr, jak i parametru z typem ustawionym jako <xref:System.Web.UI.Page> obiekt.</span><span class="sxs-lookup"><span data-stu-id="97ed3-359">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-360">Typ skryptu klienta, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-360">The type of the client script include to search for.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-361">Klucz skryptu klienta obejmuje wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-361">The key of the client script include to search for.</span></span></param>
        <summary><span data-ttu-id="97ed3-362">Określa, czy skrypt klienta ma być zarejestrowany w <see cref="T:System.Web.UI.Page" /> obiekcie przy użyciu klucza i typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-362">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span></span></summary>
        <returns><span data-ttu-id="97ed3-363"><see langword="true" />Jeśli zarejestrowano skrypt klienta; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-363"><see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-364">Wywołaj tę metodę przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody, aby uniknąć rejestrowania duplikatu skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="97ed3-365">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-365">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="97ed3-366">Skrypt klienta zawiera unikatową identyfikację za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-366">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-367">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-367">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-368">Należy określić typ na podstawie obiektu, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-368">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="97ed3-369">Na przykład podczas korzystania z wystąpienia strony w celu uzyskania dostępu do zasobu należy określić `Page` typ.</span><span class="sxs-lookup"><span data-stu-id="97ed3-369">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-370">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-370">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="97ed3-371">Należy pamiętać, że jeśli logika do sprawdzenia istniejącego skryptu klienta nie zostanie usunięta, w kodzie źródłowym HTML renderowanej strony nie będzie dwa zduplikowane skrypty klienta, ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Metoda sprawdza duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-371">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="97ed3-372">Zaletą sprawdzania jest zmniejszenie niepotrzebnych obliczeń.</span><span class="sxs-lookup"><span data-stu-id="97ed3-372">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="97ed3-373">Ten przykład wymaga pliku JavaScript o nazwie `Script_include.js`, z następującą zawartością:</span><span class="sxs-lookup"><span data-stu-id="97ed3-373">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-374">Typ dołączania skryptu klienta <see langword="null" />to.</span><span class="sxs-lookup"><span data-stu-id="97ed3-374">The client script include type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-375">Określa, czy instrukcja onsubmit jest zarejestrowana w <see cref="T:System.Web.UI.Page" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-375">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="97ed3-376">Klucz instrukcji onsubmit do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-376">The key of the OnSubmit statement to search for.</span></span></param>
        <summary><span data-ttu-id="97ed3-377">Określa, czy instrukcja onsubmit jest zarejestrowana w <see cref="T:System.Web.UI.Page" /> obiekcie przy użyciu określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="97ed3-377">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="97ed3-378"><see langword="true" />Jeśli zarejestrowano instrukcję onsubmit; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-378"><see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-379">Wywołaj tę metodę przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody, aby uniknąć rejestrowania zduplikowanych instrukcji onsubmit.</span><span class="sxs-lookup"><span data-stu-id="97ed3-379">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="97ed3-380">Jest to szczególnie ważne, jeśli instrukcja wymaga dużej ilości zasobów serwera do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-380">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="97ed3-381">Instrukcja jest jednoznacznie identyfikowana przy użyciu jej klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-381">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-382">Instrukcje z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-382">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="97ed3-383">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metody wywołuje Przeciążenie, które przyjmuje `key` zarówno `type` parametr, jak i parametru z typem ustawionym jako <xref:System.Web.UI.Page> obiekt</span><span class="sxs-lookup"><span data-stu-id="97ed3-383">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-384">Typ instrukcji onsubmit do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-384">The type of the OnSubmit statement to search for.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-385">Klucz instrukcji onsubmit do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-385">The key of the OnSubmit statement to search for.</span></span></param>
        <summary><span data-ttu-id="97ed3-386">Określa, czy instrukcja onsubmit jest zarejestrowana w <see cref="T:System.Web.UI.Page" /> obiekcie przy użyciu określonego klucza i typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-386">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span></span></summary>
        <returns><span data-ttu-id="97ed3-387"><see langword="true" />Jeśli zarejestrowano instrukcję onsubmit; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-387"><see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-388">Wywołaj tę metodę przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody, aby uniknąć rejestrowania zduplikowanych instrukcji.</span><span class="sxs-lookup"><span data-stu-id="97ed3-388">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="97ed3-389">Jest to szczególnie ważne, jeśli instrukcja wymaga dużej ilości zasobów serwera do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-389">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="97ed3-390">Instrukcja jest jednoznacznie identyfikowana przy użyciu jej klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-390">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-391">Instrukcje z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-391">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-392">Należy określić typ na podstawie obiektu, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-392">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="97ed3-393">Na przykład w przypadku używania `Page` wystąpienia w celu uzyskania dostępu do zasobu należy `Page` określić typ.</span><span class="sxs-lookup"><span data-stu-id="97ed3-393">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-394">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-394">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="97ed3-395">Skrypt o nazwie `OnSubmitScript` jest zarejestrowany <xref:System.Web.UI.Page> w tak, aby podczas przesyłania formularza strony był wywoływany skrypt.</span><span class="sxs-lookup"><span data-stu-id="97ed3-395">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-396">Typ instrukcji onsubmit to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-396">The OnSubmit statement type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-397">Określa, czy skrypt uruchamiania jest zarejestrowany w <see cref="T:System.Web.UI.Page" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-397">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="97ed3-398">Klucz skryptu uruchamiania, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-398">The key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="97ed3-399">Określa, czy skrypt uruchamiania jest zarejestrowany z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu określonego klucza.</span><span class="sxs-lookup"><span data-stu-id="97ed3-399">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span></span></summary>
        <returns><span data-ttu-id="97ed3-400"><see langword="true" />Jeśli skrypt uruchamiania jest zarejestrowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-400"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-401">Wywołaj tę metodę przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody, aby uniknąć rejestrowania duplikatów skryptów.</span><span class="sxs-lookup"><span data-stu-id="97ed3-401">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="97ed3-402">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-402">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="97ed3-403">Skrypt uruchamiania jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-403">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-404">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-404">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="97ed3-405">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metody wywołuje Przeciążenie, które pobiera zarówno ciąg `key` , jak i `type` parametr z typem ustawionym jako <xref:System.Web.UI.Page> obiekt</span><span class="sxs-lookup"><span data-stu-id="97ed3-405">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-406">Typ skryptu uruchomieniowego, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-406">The type of the startup script to search for.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-407">Klucz skryptu uruchamiania, który ma zostać wyszukany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-407">The key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="97ed3-408">Określa, czy skrypt uruchamiania jest zarejestrowany z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu określonego klucza i typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-408">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span></span></summary>
        <returns><span data-ttu-id="97ed3-409"><see langword="true" />Jeśli skrypt uruchamiania jest zarejestrowany; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="97ed3-409"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-410">Wywołaj tę metodę przed wywołaniem <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody, aby uniknąć rejestrowania duplikatów skryptów.</span><span class="sxs-lookup"><span data-stu-id="97ed3-410">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="97ed3-411">Jest to szczególnie ważne, jeśli skrypt wymaga dużej ilości zasobów serwera do utworzenia.</span><span class="sxs-lookup"><span data-stu-id="97ed3-411">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="97ed3-412">Skrypt uruchamiania klienta jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-412">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-413">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-413">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-414">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-414">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="97ed3-415">Należy pamiętać, że jeśli logika do sprawdzenia istniejących bloków skryptu uruchomienia została usunięta, w kodzie źródłowym HTML renderowanej strony nie ma dwóch zduplikowanych skryptów uruchamiania, ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Metoda sprawdza duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-415">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="97ed3-416">Zaletą sprawdzania jest zmniejszenie niepotrzebnych obliczeń.</span><span class="sxs-lookup"><span data-stu-id="97ed3-416">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-417">Typ skryptu uruchamiania to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-417">The startup script type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterArrayDeclaration : string * string -&gt; unit" Usage="clientScriptManager.RegisterArrayDeclaration (arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName"><span data-ttu-id="97ed3-418">Nazwa tablicy do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-418">The array name to register.</span></span></param>
        <param name="arrayValue"><span data-ttu-id="97ed3-419">Wartość lub wartości tablicy do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-419">The array value or values to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-420">Rejestruje deklarację tablicy JavaScript z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu nazwy tablicy i wartości tablicy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-420">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-421">Sprawdza <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> , czy zarejestrowana tablica istnieje o takiej samej nazwie jak nazwa określona `arrayName` w parametrze i, jeśli tak, dodaje wartości określone w `arrayValue` parametrze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-421">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="97ed3-422">Ponieważ podstawowy mechanizm magazynowania jest oparty na <xref:System.Collections.ArrayList>, duplikaty są dozwolone.</span><span class="sxs-lookup"><span data-stu-id="97ed3-422">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="97ed3-423">Jeśli zarejestrowana tablica o tej samej nazwie, co `arrayName` parametr nie istnieje, zostanie utworzona i zostaną dodane do niej wartości. `arrayValue`</span><span class="sxs-lookup"><span data-stu-id="97ed3-423">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="97ed3-424">Jeśli chcesz, aby literały ciągu w wyników tablicy JavaScript zawierały znaki pojedynczego cudzysłowu (') lub znaki podwójnego cudzysłowu\\(") `arrayValue` w tym parametrze.</span><span class="sxs-lookup"><span data-stu-id="97ed3-424">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="97ed3-425">Wartość `arrayValue` parametru powinna być pojedynczym elementem.</span><span class="sxs-lookup"><span data-stu-id="97ed3-425">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="97ed3-426">Jeśli do tablicy należy dodać więcej niż jedną wartość, wykonaj wiele wywołań przy użyciu <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-426">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-427">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> metod i. <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-427">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="97ed3-428">Przykład rejestruje tablicę i ukrytą wartość i definiuje `OnClick` zdarzenie `<input>` przycisku, aby obliczyć sumę dwóch wartości tablicy i wartość ukrytą.</span><span class="sxs-lookup"><span data-stu-id="97ed3-428">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-429"><paramref name="arrayName" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-429"><paramref name="arrayName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-430">Rejestruje skrypt klienta przy użyciu <see cref="T:System.Web.UI.Page" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-430">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-431">Typ skryptu klienta do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-431">The type of the client script to register.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-432">Klucz skryptu klienta do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-432">The key of the client script to register.</span></span></param>
        <param name="script"><span data-ttu-id="97ed3-433">Literał skryptu klienta do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-433">The client script literal to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-434">Rejestruje skrypt klienta z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu typu, klucza i literału skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-435">Skrypt klienta jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-436">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-437">Na stronie można zarejestrować tylko jeden skrypt z danym typem i parą kluczy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="97ed3-438">Próba zarejestrowania skryptu, który jest już zarejestrowany, nie powoduje utworzenia duplikatu skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="97ed3-439">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metodę, aby określić, czy skrypt klienta z danym kluczem i parą typów jest już zarejestrowany i Unikaj niepotrzebnych prób dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="97ed3-440">W tym przeciążeniu <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody należy upewnić się, że skrypt podany `script` w `<script>` parametrze jest opakowany w blok elementu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-440">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="97ed3-441"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Metoda dodaje blok skryptu na początku renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-441">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="97ed3-442">Bloki skryptu nie są gwarantowane w kolejności, w jakiej zostały zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-442">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="97ed3-443">Jeśli kolejność bloków skryptu jest ważna, użyj <xref:System.Text.StringBuilder> obiektu, aby zebrać skrypty razem w jednym ciągu, a następnie zarejestrować je wszystkie w jednym bloku skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-443">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-444">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-444">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-445">Typ skryptu klienta do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-445">The type of the client script to register.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-446">Klucz skryptu klienta do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-446">The key of the client script to register.</span></span></param>
        <param name="script"><span data-ttu-id="97ed3-447">Literał skryptu klienta do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-447">The client script literal to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="97ed3-448">Wartość logiczna wskazująca, czy dodać tagi skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-448">A Boolean value indicating whether to add script tags.</span></span></param>
        <summary><span data-ttu-id="97ed3-449">Rejestruje skrypt klienta z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu typu, klucza, literału skryptu i wartości logicznej wskazującej, czy dodać tagi skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-449">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-450">Skrypt klienta jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-450">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-451">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-451">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-452">Na stronie można zarejestrować tylko jeden skrypt z danym typem i parą kluczy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-452">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="97ed3-453">Próba zarejestrowania skryptu, który jest już zarejestrowany, nie powoduje utworzenia duplikatu skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-453">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="97ed3-454">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> metodę, aby określić, czy skrypt klienta z danym kluczem i parą typów jest już zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-454">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="97ed3-455">Pozwala to uniknąć niepotrzebnych prób dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-455">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="97ed3-456">W tym przeciążeniu <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody można wskazać, czy skrypt podany `script` w `<script>` parametrze jest opakowany blokiem elementu przy użyciu `addScriptTags` parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-456">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="97ed3-457">Ustawienie `addScriptTags`wskazuje,że Tagiskryptówzostanądodaneautomatycznie.`true`</span><span class="sxs-lookup"><span data-stu-id="97ed3-457">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="97ed3-458"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Metoda dodaje blok skryptu na początku renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-458">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="97ed3-459">Bloki skryptu nie są gwarantowane w kolejności, w jakiej zostały zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-459">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="97ed3-460">Jeśli kolejność bloków skryptu jest ważna, użyj <xref:System.Text.StringBuilder> obiektu, aby zebrać skrypty razem w jednym ciągu, a następnie zarejestrować je wszystkie w jednym bloku skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-460">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-461">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-461">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="97ed3-462">Należy pamiętać, `addScriptTags` że parametr jest ustawiony `true` na tak, że początkowe i zamykające Tagi skryptu nie `script` są dołączone do parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-462">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-463">Typ bloku skryptu klienta to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-463">The client script block type is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-464">Rejestruje skrypt klienta Dołącz <see cref="T:System.Web.UI.Page" /> do obiektu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-464">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="97ed3-465">Klucz skryptu klienta ma być zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-465">The key of the client script include to register.</span></span></param>
        <param name="url"><span data-ttu-id="97ed3-466">Adres URL skryptu klienta ma być zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-466">The URL of the client script include to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-467">Rejestruje skrypt klienta z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu klucza i adresu URL, co umożliwia wywoływanie skryptu z klienta programu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-467">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-468">Skrypt klienta zawiera unikatową identyfikację za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-468">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-469">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-469">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-470">Na stronie można zarejestrować tylko jeden skrypt z danym typem i parą kluczy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-470">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="97ed3-471">Próba zarejestrowania skryptu, który jest już zarejestrowany, nie powoduje utworzenia duplikatu skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-471">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="97ed3-472">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> metodę, aby określić, czy skrypt klienta zawiera dany klucz, a para typów jest już zarejestrowana i Unikaj niepotrzebnych prób dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-472">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97ed3-473">Aby rozwiązać adres URL klienta, użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-473">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="97ed3-474">Ta metoda używa kontekstu adresu URL, na którym jest wywoływana, aby rozwiązać ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-474">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="97ed3-475">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody wywołuje Przeciążenie, które `key`przyjmuje `type` parametr, `URL`a i.</span><span class="sxs-lookup"><span data-stu-id="97ed3-475">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="97ed3-476">Metoda dodaje blok skryptu w górnej części renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-476">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-477">Aby uzyskać informacje pokrewne, w tym składnię, użycie i przykład, <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>Zobacz.</span><span class="sxs-lookup"><span data-stu-id="97ed3-477">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-478">Typ skryptu klienta zawiera do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-478">The type of the client script include to register.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-479">Klucz skryptu klienta ma być zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-479">The key of the client script include to register.</span></span></param>
        <param name="url"><span data-ttu-id="97ed3-480">Adres URL skryptu klienta ma być zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="97ed3-480">The URL of the client script include to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-481">Rejestruje skrypt klienta Dołącz <see cref="T:System.Web.UI.Page" /> do obiektu przy użyciu typu, klucza i adresu URL.</span><span class="sxs-lookup"><span data-stu-id="97ed3-481">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-482">To Przeciążenie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody przyjmuje parametry *Key* i *URL* w celu zidentyfikowania `type` skryptu, a także parametr określający identyfikację skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-482">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="97ed3-483">Należy określić typ na podstawie obiektu, który będzie uzyskiwać dostęp do zasobu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-483">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="97ed3-484">Na przykład w przypadku używania `Page` wystąpienia w celu uzyskania dostępu do zasobu należy `Page` określić typ.</span><span class="sxs-lookup"><span data-stu-id="97ed3-484">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97ed3-485">Aby rozwiązać adres URL klienta, użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-485">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="97ed3-486">Ta metoda używa kontekstu adresu URL, na którym jest wywoływana, aby rozwiązać ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-486">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="97ed3-487">Ta metoda dodaje blok skryptu w górnej części renderowanej strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-487">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-488">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-488">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="97ed3-489">Należy pamiętać, że jeśli logika do sprawdzenia istniejącego skryptu klienta nie została usunięta, na renderowanej stronie nie będzie można duplikować skryptów klienta, ponieważ <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Metoda sprawdza duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-489">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="97ed3-490">Zaletą sprawdzania jest zmniejszenie niepotrzebnych obliczeń.</span><span class="sxs-lookup"><span data-stu-id="97ed3-490">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="97ed3-491">Ten przykład wymaga pliku JavaScript o nazwie Script_include. js z następującą zawartością:</span><span class="sxs-lookup"><span data-stu-id="97ed3-491">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-492">Typ dołączania skryptu klienta <see langword="null" />to.</span><span class="sxs-lookup"><span data-stu-id="97ed3-492">The client script include type is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97ed3-493">Adres URL to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-493">The URL is <see langword="null" />.</span></span>  
  
<span data-ttu-id="97ed3-494">—lub—</span><span class="sxs-lookup"><span data-stu-id="97ed3-494">-or-</span></span> 
<span data-ttu-id="97ed3-495">Adres URL jest pusty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-495">The URL is empty.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptResource : Type * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptResource (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-496">Typ zasobu skryptu klienta do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-496">The type of the client script resource to register.</span></span></param>
        <param name="resourceName"><span data-ttu-id="97ed3-497">Nazwa zasobu skryptu klienta do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-497">The name of the client script resource to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-498">Rejestruje zasób skryptu klienta z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu typu i nazwy zasobu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-498">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-499"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Metoda jest używana podczas uzyskiwania dostępu do skompilowanych zasobów z zestawów za pośrednictwem programu obsługi protokołu HTTP WebResource. axd.</span><span class="sxs-lookup"><span data-stu-id="97ed3-499">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="97ed3-500">Metoda rejestruje skrypt <xref:System.Web.UI.Page> przy użyciu obiektu i zapobiega duplikowaniu skryptów. <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-500">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="97ed3-501">Ta metoda otacza zawartość adresu URL zasobu z `<script>` blokiem elementu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-501">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-502">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-502">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="97ed3-503">Poniższy przykład kodu demonstruje, <xref:System.Web.UI.WebResourceAttribute> jak programowo zastosować atrybut metadanych, aby oznaczyć zestaw dla zasobów, które będą obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-503">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="97ed3-504">Ten przykład wymaga pliku JavaScript o nazwie `Script_include.js`, z następującą zawartością:</span><span class="sxs-lookup"><span data-stu-id="97ed3-504">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="97ed3-505">Skompiluj plik jako zasób `Samples.AspNet.CS.Controls` w zestawie, który zawiera `ClientScriptResourceLabel` klasę. `Script_include.js`</span><span class="sxs-lookup"><span data-stu-id="97ed3-505">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-506">Typ zasobu klienta to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-506">The client resource type is <see langword="null" />.</span></span>

<span data-ttu-id="97ed3-507">—lub—</span><span class="sxs-lookup"><span data-stu-id="97ed3-507">-or-</span></span>

<span data-ttu-id="97ed3-508">Nazwa zasobu klienta to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-508">The client resource name is <see langword="null" />.</span></span>  
  
<span data-ttu-id="97ed3-509">—lub—</span><span class="sxs-lookup"><span data-stu-id="97ed3-509">-or-</span></span> 
<span data-ttu-id="97ed3-510">Nazwa zasobu klienta ma długość równą zero.</span><span class="sxs-lookup"><span data-stu-id="97ed3-510">The client resource name has a length of zero.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-511">Rejestruje parę nazwa/wartość jako atrybut niestandardowy (Expand) określonej kontrolki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-511">Registers a name/value pair as a custom (expando) attribute of the specified control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="97ed3-512"><see cref="T:System.Web.UI.Control" /> Na stronie zawierającej atrybut niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-512">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span></span></param>
        <param name="attributeName"><span data-ttu-id="97ed3-513">Nazwa atrybutu niestandardowego do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-513">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="97ed3-514">Wartość atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-514">The value of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="97ed3-515">Rejestruje parę nazwa/wartość jako atrybut niestandardowy (Expand) dla określonej kontrolki, który ma identyfikator formantu, nazwę atrybutu i wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-515">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-516">Metoda rejestruje parę nazwa/wartość jako atrybut niestandardowy (Expand) w określonym <xref:System.Web.UI.Control>. <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-516">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="97ed3-517">Atrybut expand jest ustawiany dynamicznie z JavaScript, aby zachować zgodność XHTML dla renderowanego znacznika kontrolki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-517">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="97ed3-518">Cudzysłowy i ukośniki odwrotne w wartościach atrybutu niestandardowego (Expand) są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-518">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="97ed3-519">Jeśli nie chcesz wycofać cudzysłowów ani ukośników odwrotnych, wywołaj <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> metodę przeciążenia i `encode` ustaw parametr na `false`.</span><span class="sxs-lookup"><span data-stu-id="97ed3-519">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="97ed3-520">Jeśli nie można odnaleźć atrybutu expanda lub nie można odnaleźć formantu, który ma dodać atrybut expand do, skrypt klienta jest nadal emitowany, ale nie ma wpływu na kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-520">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId"><span data-ttu-id="97ed3-521"><see cref="T:System.Web.UI.Control" /> Na stronie zawierającej atrybut niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-521">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span></span></param>
        <param name="attributeName"><span data-ttu-id="97ed3-522">Nazwa atrybutu niestandardowego do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-522">The name of the custom attribute to register.</span></span></param>
        <param name="attributeValue"><span data-ttu-id="97ed3-523">Wartość atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-523">The value of the custom attribute.</span></span></param>
        <param name="encode"><span data-ttu-id="97ed3-524">Wartość logiczna wskazująca, czy zakodować atrybut niestandardowy do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-524">A Boolean value indicating whether to encode the custom attribute to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-525">Rejestruje parę nazwa/wartość jako atrybut niestandardowy (Expand) dla określonej kontrolki, podając identyfikator kontrolki, nazwę atrybutu, wartość atrybutu i wartość logiczną wskazującą, czy należy zakodować wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-525">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-526">Metoda rejestruje parę nazwa/wartość jako atrybut niestandardowy (Expand) w określonym <xref:System.Web.UI.Control>. <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-526">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="97ed3-527">Atrybut expand jest ustawiany dynamicznie z JavaScript, aby zachować zgodność XHTML dla renderowanego znacznika kontrolki.</span><span class="sxs-lookup"><span data-stu-id="97ed3-527">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="97ed3-528">Ustaw parametr na `true` , jeśli chcesz wypróbować cudzysłowy i ukośniki odwrotne w wartości atrybutu expando. `encode`</span><span class="sxs-lookup"><span data-stu-id="97ed3-528">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="97ed3-529">Jeśli nie można odnaleźć atrybutu expanda lub nie można odnaleźć formantu, który ma dodać atrybut expand do, skrypt klienta jest nadal emitowany, ale nie ma wpływu na kontrolkę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-529">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-530">Poniższy przykład kodu demonstruje, <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> jak używać metody <xref:System.Web.UI.ClientScriptManager> klasy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-530">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="97ed3-531">Skrypt klienta na renderowanej stronie ustawia `title` atrybut `<span>` elementu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-531">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-532">Rejestruje odwołanie do zdarzenia na potrzeby walidacji.</span><span class="sxs-lookup"><span data-stu-id="97ed3-532">Registers an event reference for validation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="97ed3-533">Unikatowy identyfikator reprezentujący kontrolę klienta generującą zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-533">A unique ID representing the client control generating the event.</span></span></param>
        <summary><span data-ttu-id="97ed3-534">Rejestruje odwołanie do zdarzenia na potrzeby walidacji z unikatowym IDENTYFIKATORem formantu reprezentującym kontrolę klienta generującą zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-534">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-535">Aby uzyskać więcej informacji i przykładów, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-535">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-536">Poniższy przykład pokazuje, jak używać <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> i metody w celu rejestrowania wywołania zwrotnego na potrzeby walidacji oraz sprawdzania, czy wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-536">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : System.Web.UI.PostBackOptions -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="97ed3-537"><see cref="T:System.Web.UI.PostBackOptions" /> Obiekt, który określa sposób generowania skryptu JavaScript przez klienta w celu zainicjowania zdarzenia ogłaszania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="97ed3-537">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span></span></param>
        <summary><span data-ttu-id="97ed3-538">Rejestruje odwołanie do zdarzenia na potrzeby walidacji za pomocą <see cref="T:System.Web.UI.PostBackOptions" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-538">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-539">Aby uzyskać więcej informacji i przykładów, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-539">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string * string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="97ed3-540">Unikatowy identyfikator reprezentujący kontrolę klienta generującą zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-540">A unique ID representing the client control generating the event.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-541">Argumenty zdarzenia przekazane ze zdarzeniem klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-541">Event arguments passed with the client event.</span></span></param>
        <summary><span data-ttu-id="97ed3-542">Rejestruje odwołanie do zdarzenia na potrzeby walidacji z unikatowym IDENTYFIKATORem kontrolki i argumentami zdarzeń reprezentującymi kontrolkę klienta generującą zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-542">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97ed3-543">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> i metody w celu zarejestrowania wywołania zwrotnego w celu sprawdzenia poprawności i sprawdzenia, czy wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-543">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="97ed3-544">Aby ulepszyć weryfikację pokazaną w tym przykładzie, można zmodyfikować parametr `argument` weryfikacji w taki sposób, aby zawierał informacje specyficzne dla użytkownika, takie jak tożsamość lub rola</span><span class="sxs-lookup"><span data-stu-id="97ed3-544">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="97ed3-545">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody do zarejestrowania wywołania zwrotnego na potrzeby walidacji.</span><span class="sxs-lookup"><span data-stu-id="97ed3-545">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="97ed3-546">Metoda jest wywoływana przed <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> metodą.</span><span class="sxs-lookup"><span data-stu-id="97ed3-546">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/18fc94c9-56fc-46c3-9f29-7358f18667df"><span data-ttu-id="97ed3-547">Wywołanie zwrotne klienta z przykładem implementacji walidacji</span><span class="sxs-lookup"><span data-stu-id="97ed3-547">Client Callback with Validation Implementation Example</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterHiddenField : string * string -&gt; unit" Usage="clientScriptManager.RegisterHiddenField (hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName"><span data-ttu-id="97ed3-548">Nazwa ukrytego pola do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-548">The name of the hidden field to register.</span></span></param>
        <param name="hiddenFieldInitialValue"><span data-ttu-id="97ed3-549">Początkowa wartość pola do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-549">The initial value of the field to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-550">Rejestruje ukrytą wartość przy użyciu <see cref="T:System.Web.UI.Page" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-550">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-551">Metoda tworzy element ukryty `<input>` na renderowanej stronie HTML. <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-551">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-552">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> metod i. <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A></span><span class="sxs-lookup"><span data-stu-id="97ed3-552">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="97ed3-553">Przykład rejestruje tablicę i ukrytą wartość i definiuje `OnClick` zdarzenie `<input>` przycisku, aby obliczyć sumę dwóch wartości tablicy i wartość ukrytą.</span><span class="sxs-lookup"><span data-stu-id="97ed3-553">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-554"><paramref name="hiddenFieldName" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-554"><paramref name="hiddenFieldName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterOnSubmitStatement : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterOnSubmitStatement (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-555">Typ instrukcji onsubmit do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-555">The type of the OnSubmit statement to register.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-556">Klucz instrukcji onsubmit do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-556">The key of the OnSubmit statement to register.</span></span></param>
        <param name="script"><span data-ttu-id="97ed3-557">Literał skryptu instrukcji onsubmit do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-557">The script literal of the OnSubmit statement to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-558">Rejestruje instrukcję onsubmit z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu typu, klucza i literału skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-558">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span></span> <span data-ttu-id="97ed3-559">Instrukcja <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> jest wykonywana, gdy zostanie przesłane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-559">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-560">Instrukcja onsubmit jest jednoznacznie identyfikowana za pomocą jej klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-560">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-561">Instrukcje z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-561">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-562">Na stronie można zarejestrować tylko jedną instrukcję z danym typem i parą kluczy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-562">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="97ed3-563">Próba zarejestrowania instrukcji, która jest już zarejestrowana, nie spowoduje utworzenia duplikatu instrukcji.</span><span class="sxs-lookup"><span data-stu-id="97ed3-563">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="97ed3-564">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> metodę, aby określić, czy instrukcja onsubmit jest już zarejestrowana dla danego klucza i pary typów i Unikaj niepotrzebnych prób dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-564">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="97ed3-565">`script` Parametr<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody może zawierać wiele poleceń skryptu, o ile są prawidłowo rozdzielane średnikami (;).</span><span class="sxs-lookup"><span data-stu-id="97ed3-565">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="97ed3-566"><xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Dodaje skrypt, który jest wykonywany przed przesłaniem strony i umożliwia anulowanie przesyłania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-566">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="97ed3-567">Aby uzyskać więcej informacji na temat formularzy HTML `OnSubmit` i atrybutów, zobacz [witrynę sieci Web organizacja World Wide Web Consortium (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="97ed3-567">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](https://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-568">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-568">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-569"><paramref name="type" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-569"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-570">Rejestruje skrypt uruchamiania przy użyciu <see cref="T:System.Web.UI.Page" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-570">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-571">Typ skryptu uruchomieniowego do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-571">The type of the startup script to register.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-572">Klucz skryptu uruchomieniowego do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-572">The key of the startup script to register.</span></span></param>
        <param name="script"><span data-ttu-id="97ed3-573">Literał skryptu uruchamiania do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-573">The startup script literal to register.</span></span></param>
        <summary><span data-ttu-id="97ed3-574">Rejestruje skrypt uruchamiania z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu typu, klucza i literału skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-574">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-575">Skrypt klienta jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-575">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-576">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-576">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-577">Na stronie można zarejestrować tylko jeden skrypt z danym typem i parą kluczy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-577">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="97ed3-578">Próba zarejestrowania skryptu, który jest już zarejestrowany, nie powoduje utworzenia duplikatu skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-578">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="97ed3-579">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metodę, aby określić, czy skrypt uruchamiania z danym kluczem i parą typów jest już zarejestrowany i Unikaj niepotrzebnych prób dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-579">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="97ed3-580">W tym przeciążeniu <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody należy upewnić się, że skrypt podany `script` w `<script>` parametrze jest opakowany blokiem elementu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-580">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="97ed3-581">Blok skryptu dodany przez <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodę jest wykonywany po zakończeniu ładowania strony, ale przed podniesieniem <xref:System.Web.UI.Control.OnLoad%2A> zdarzenia strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="97ed3-582">Bloki skryptu nie są gwarantowane w kolejności, w jakiej zostały zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="97ed3-583">Jeśli kolejność bloków skryptu jest ważna, użyj <xref:System.Text.StringBuilder> obiektu, aby zebrać skrypty razem w jednym ciągu, a następnie zarejestrować je wszystkie w jednym bloku skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-584">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="97ed3-585">Należy zauważyć, że początkowe i zamykające Tagi skryptu są dołączone `script` do parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-585">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="97ed3-586">Aby dodać tagi skryptu na podstawie dodatkowego ustawienia parametru, zobacz <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="97ed3-586">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="97ed3-587">Typ skryptu uruchomieniowego do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-587">The type of the startup script to register.</span></span></param>
        <param name="key"><span data-ttu-id="97ed3-588">Klucz skryptu uruchomieniowego do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-588">The key of the startup script to register.</span></span></param>
        <param name="script"><span data-ttu-id="97ed3-589">Literał skryptu uruchamiania do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="97ed3-589">The startup script literal to register.</span></span></param>
        <param name="addScriptTags"><span data-ttu-id="97ed3-590">Wartość logiczna wskazująca, czy dodać tagi skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-590">A Boolean value indicating whether to add script tags.</span></span></param>
        <summary><span data-ttu-id="97ed3-591">Rejestruje skrypt uruchamiania z <see cref="T:System.Web.UI.Page" /> obiektem przy użyciu typu, klucza, literału skryptu i wartości logicznej wskazującej, czy dodać tagi skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-591">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ed3-592">Skrypt uruchamiania jest jednoznacznie identyfikowany za pomocą jego klucza i jego typu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-592">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="97ed3-593">Skrypty z tym samym kluczem i typem są uważane za duplikaty.</span><span class="sxs-lookup"><span data-stu-id="97ed3-593">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="97ed3-594">Na stronie można zarejestrować tylko jeden skrypt z danym typem i parą kluczy.</span><span class="sxs-lookup"><span data-stu-id="97ed3-594">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="97ed3-595">Próba zarejestrowania skryptu, który jest już zarejestrowany, nie powoduje utworzenia duplikatu skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-595">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="97ed3-596">Wywołaj <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> metodę, aby określić, czy skrypt uruchamiania z danym kluczem i parą typów jest już zarejestrowany i Unikaj niepotrzebnych prób dodania skryptu.</span><span class="sxs-lookup"><span data-stu-id="97ed3-596">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="97ed3-597">W tym przeciążeniu <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody można wskazać, czy skrypt podany `script` w `<script>` parametrze jest opakowany blokiem elementu przy użyciu `addScriptTags` parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-597">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="97ed3-598">Ustawienie `addScriptTags`wskazuje,że Tagiskryptówzostanądodaneautomatycznie.`true`</span><span class="sxs-lookup"><span data-stu-id="97ed3-598">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="97ed3-599">Blok skryptu dodany przez <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metodę jest wykonywany po zakończeniu ładowania strony, ale przed podniesieniem <xref:System.Web.UI.Control.OnLoad%2A> zdarzenia strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-599">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="97ed3-600">Bloki skryptu nie są gwarantowane w kolejności, w jakiej zostały zarejestrowane.</span><span class="sxs-lookup"><span data-stu-id="97ed3-600">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="97ed3-601">Jeśli kolejność bloków skryptu jest ważna, użyj <xref:System.Text.StringBuilder> obiektu, aby zebrać skrypty razem w jednym ciągu, a następnie zarejestrować je wszystkie w jednym bloku skryptu klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-601">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ed3-602">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-602">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="97ed3-603">Należy pamiętać, `addScriptTags` że parametr jest ustawiony `false` na tak, że początkowe i zamykające `script` Tagi skryptu są dołączone do parametru.</span><span class="sxs-lookup"><span data-stu-id="97ed3-603">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="97ed3-604"><paramref name="type" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="97ed3-604"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97ed3-605">Sprawdza poprawność zdarzenia klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-605">Validates a client event.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string -&gt; unit" Usage="clientScriptManager.ValidateEvent uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="97ed3-606">Unikatowy identyfikator reprezentujący kontrolę klienta generującą zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-606">A unique ID representing the client control generating the event.</span></span></param>
        <summary><span data-ttu-id="97ed3-607">Sprawdza poprawność zdarzenia klienta zarejestrowanego pod kątem walidacji <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> zdarzenia przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-607">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string * string -&gt; unit" Usage="clientScriptManager.ValidateEvent (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId"><span data-ttu-id="97ed3-608">Unikatowy identyfikator reprezentujący kontrolę klienta generującą zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="97ed3-608">A unique ID representing the client control generating the event.</span></span></param>
        <param name="argument"><span data-ttu-id="97ed3-609">Argumenty zdarzenia przekazane ze zdarzeniem klienta.</span><span class="sxs-lookup"><span data-stu-id="97ed3-609">The event arguments passed with the client event.</span></span></param>
        <summary><span data-ttu-id="97ed3-610">Sprawdza poprawność zdarzenia klienta zarejestrowanego pod kątem walidacji <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> zdarzenia przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="97ed3-610">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="97ed3-611">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> metody <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> i metody w celu zarejestrowania wywołania zwrotnego w celu sprawdzenia poprawności i sprawdzenia, czy wywołanie zwrotne pochodzi ze strony.</span><span class="sxs-lookup"><span data-stu-id="97ed3-611">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="97ed3-612">Aby ulepszyć weryfikację w tym miejscu, można zmodyfikować parametr weryfikacji `argument` w taki sposób, aby zawierał informacje specyficzne dla użytkownika, takie jak tożsamość lub rola</span><span class="sxs-lookup"><span data-stu-id="97ed3-612">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="97ed3-613"><paramref name="uniqueId" />jest <see langword="null" /> lub jest pustym ciągiem ("").</span><span class="sxs-lookup"><span data-stu-id="97ed3-613"><paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
