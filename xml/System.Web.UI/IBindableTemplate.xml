<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="404e57c4b8538315580af86b0c6bad658086f30b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69388398" /></Metadata><TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Umożliwia ASP.NET formantów związanych z danymi, takich jak <see cref="T:System.Web.UI.WebControls.DetailsView" /> i <see cref="T:System.Web.UI.WebControls.FormView" />, w celu automatycznego powiązania kontroli źródła danych ASP.NET w sekcjach zawartości z szablonami.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource> Interfejs umożliwia ASP.NET formantów związanych z danymi, takich jak,, i, aby powiązać dane dostarczane przez ASP.NET kontrolę źródła danych, takie jak lub, gdy <xref:System.Web.UI.IBindableTemplate> formant powiązany z danymi zawiera zawartość z szablonami.  
  
> [!NOTE]
>  Deweloperzy stron nie implementują <xref:System.Web.UI.IBindableTemplate> interfejsu. Deweloperzy tworzący niestandardowe formanty powiązane z danymi mogą <xref:System.Web.UI.IBindableTemplate> manipulować obiektami w implementacjach <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> metod <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> i, ale nie implementują własnych <xref:System.Web.UI.IBindableTemplate> obiektów.  
  
 Formanty powiązane z danymi, takie <xref:System.Web.UI.WebControls.GridView> jak zazwyczaj są świadomi drzew formantów podrzędnych, i dlatego mogą powiązać z nimi wartości, wyodrębniać wartości z nich i przekazywać te wartości między formantem związanym z danymi i formantem źródła danych przy każdym wystąpieniu powiązania danych . Jednak gdy deweloper strony definiuje zawartość z szablonami dla kontrolki powiązanej z danymi, formanty podrzędne w szablonie nie są widoczne dla formantu powiązanego z danymi nadrzędnymi: element nadrzędny może renderować zawartość podrzędną (ponieważ kontrolki efektywnie renderuje same), ale nie można wyodrębnić wartości tych formantów podrzędnych, aby przekazać je do operacji aktualizowania, wstawiania lub usuwania formantu źródła danych. W scenariuszach powiązania danych zawartość z szablonami jest nieprzezroczysta dla nadrzędnego formantu powiązanego z danymi. Składnia umożliwia formantowi powiązanemu z danymi wyodrębnianie wartości z danych sterowania powiązanych <xref:System.Web.UI.IBindableTemplate> z wystąpieniem. `Bind`  
  
 Powiązanie danych może być jednokierunkowe lub dwukierunkowo. (Te kierunki powiązań są definiowane przez <xref:System.ComponentModel.BindingDirection> Wyliczenie). Jednokierunkowe powiązanie danych to dowolne powiązanie danych wykonywane w kierunku wychodzącym z kontroli źródła danych do kontrolki powiązanej z danymi; na przykład dowolny scenariusz odczytywania danych obejmuje jednokierunkowe powiązanie danych. Dla jednokierunkowego wiązania danych można użyć jednokierunkowej składni powiązania danych (`<%# Eval("fieldname") %>`) wewnątrz zawartości z szablonem i nie trzeba używać dwukierunkowej składni powiązania danych ASP.NET. Dwukierunkowe powiązanie danych opisuje powiązanie danych w kierunku ruchu przychodzącego od kontrolki powiązanej z danymi do kontroli źródła danych. Scenariusze automatycznego edytowania, wstawiania i usuwania przy użyciu funkcji ASP.NET powiązane z danymi i kontroli źródła danych są dwukierunkowymi scenariuszami powiązań danych. Scenariusze te używają dwukierunkowych wyrażeń powiązań danych (`<%# Bind("fieldname") %>`). <xref:System.Web.UI.IBindableTemplate> Interfejs i infrastruktura ASP.NET obsługują automatyczne, deklaratywne, dwukierunkowe powiązanie danych między kontrolkami źródła danych ASP.NET i treścią z szablonami. Aby uzyskać więcej informacji na temat ASP.NET wyrażeń i składni związanych z danymi, zobacz temat Tworzenie [powiązań z bazami](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) danych i [wyrażenia powiązań danych — omówienie](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Zawartość z szablonami dla formantów powiązanych z danymi jest najczęściej zdefiniowana. W poniższej tabeli opisano procesy najczęściej używane do powiązania danych z szablonami z kontrolkami powiązanymi z danymi.  
  
|Formant powiązany z danymi|Proces|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|Formant powiązany z danymi jest powiązany z danymi przy `DataSourceID` użyciu właściwości kontrolki źródła danych, a zawartość szablonu jest definiowana <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>we <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> właściwości lub <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> .|  
|<xref:System.Web.UI.WebControls.GridView>|Formant powiązany z danymi jest powiązany z danymi przy użyciu `DataSourceID` właściwości kontrolki źródła danych, a zawartość szablonu jest definiowana <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> we właściwości lub <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> . <xref:System.Web.UI.WebControls.GridView> Formant nie obsługuje operacji wstawiania.|  
|<xref:System.Web.UI.WebControls.FormView>|Formant powiązany z danymi jest powiązany z danymi przy użyciu `DataSourceID` właściwości, a zawartość szablonu jest definiowana <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>w, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, lub <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> , lub w <xref:System.Web.UI.WebControls.TemplateField> obiekcie.|  
  
 Formanty <xref:System.Web.UI.WebControls.DataList> i<xref:System.Web.UI.WebControls.Repeater> nie obsługują automatycznych dwukierunkowych scenariuszy powiązań danych.  
  
 ASP.NET niejawnie tworzy <xref:System.Web.UI.IBindableTemplate> obiekt, gdy zawartość szablonu, która wiąże się z formantem źródła danych ASP.NET w ramach szablonu, jest analizowana. Analizator ASP.NET tworzy wystąpienie <xref:System.Web.UI.CompiledBindableTemplateBuilder> klasy podczas analizowania zawartości z szablonem, która używa składni powiązań danych ASP.NET i zawiera kontrolki serwera sieci Web ASP.NET, które obsługują powiązanie danych. Te kontrolki serwera ASP.NET są oznaczone przez <xref:System.ComponentModel.BindableAttribute> atrybut.  
  
 Interfejs definiuje jedną metodę, <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>. <xref:System.Web.UI.IBindableTemplate> Ta metoda jest definiowana dla dwukierunkowego wiązania danych, dzięki czemu formant powiązany z danymi może automatycznie wyodrębnić pary nazwa/wartość z zawartości z szablonem i przekazać pary do kontrolki źródła danych w czasie wykonywania. Aby automatyczne wiązanie danych zakończyło się pomyślnie, nazwy pól wyodrębnione z zawartości szablonu przez <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> metodę muszą być zgodne z nazwami parametrów w skojarzonej kontrolce źródła danych. Deweloperzy formantów wywołują <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> metodę jawnie tylko w ramach ich <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> implementacji lub inną podobną metodę niestandardowego formantu powiązanego z danymi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak <xref:System.Web.UI.WebControls.FormView> kontrolka może deklaratywnie definiować zawartość z szablonem, wiązać się z danymi dostarczonymi <xref:System.Web.UI.WebControls.SqlDataSource> przez formant i wyświetlać i edytować istniejące rekordy. Analizator ASP.NET analizuje zawartość szablonową i tworzy <xref:System.Web.UI.IBindableTemplate> obiekt w czasie wykonywania, który jest w stanie powiązać wartości <xref:System.Web.UI.WebControls.SqlDataSource> z formantu z obszarami powiązania danych zdefiniowanymi w szablonie przez jednokierunkową składnię powiązań danych ASP.NET (`<%# Eval("fieldname") %>`) i dwukierunkową składnią powiązań danych (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Ta kontrolka ma pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container"><see cref="T:System.Web.UI.Control" /> Z którego można wyodrębnić pary nazwa/wartość, które są przesyłane przez formant powiązany z danymi do skojarzonej kontrolki źródła danych w dwukierunkowych scenariuszach powiązań danych.</param>
        <summary>Po zaimplementowaniu przez klasę, Pobiera zestaw par nazwa/wartość dla wartości związanych z dwukierunkową składnią ASP.NET danych w zawartości z szablonem.</summary>
        <returns><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> Pary nazwa/wartość. Nazwa reprezentuje nazwę formantu w zawartości z szablonem, a wartość jest bieżącą wartością wartości właściwości powiązanej przy użyciu dwukierunkowej składni powiązania danych ASP.NET.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> Metoda musi być zgodna z następującymi regułami: 
— Jeśli istnieje więcej niż jedno powiązanie dla danego pola, zostanie użyte ostatnie powiązanie.  
  
-Aby można było odwołać się do identyfikatora formantu w <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> metodzie, formant musi także mieć zdefiniowaną przez użytkownika Właściwość ID podczas analizowania czasu. Jeśli identyfikator nie istnieje, spowoduje to błąd analizy.  
  
— Składnia powiązań danych dwukierunkowych ASP.NET jest prawidłowa tylko we <see cref="T:System.Web.UI.ITemplate" /> właściwości lub <see cref="T:System.Web.UI.IBindableTemplate" /> kontrolce powiązanej z danymi.</para></block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>
