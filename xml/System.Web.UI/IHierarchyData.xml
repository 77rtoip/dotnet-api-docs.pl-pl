<Type Name="IHierarchyData" FullName="System.Web.UI.IHierarchyData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c25eae624341b1a216e0d0bcb63719a92df0df86" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69397990" /></Metadata><TypeSignature Language="C#" Value="public interface IHierarchyData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchyData" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchyData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchyData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchyData" />
  <TypeSignature Language="F#" Value="type IHierarchyData = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Uwidacznia węzeł hierarchicznej struktury danych, w tym obiekt węzła i niektóre właściwości opisujące właściwości węzła. Obiekty implementujące <see cref="T:System.Web.UI.IHierarchyData" /> interfejs mogą być zawarte w kolekcjach i są używane przez nawigację w <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> witrynie ASP.NET i kontrolki źródła danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchyData> Interfejs jest implementowany przez klasy, które reprezentują węzły hierarchicznej struktury i śledzą hierarchiczne relacje z węzłami nadrzędnymi i podrzędnymi. Klasy implementujące <xref:System.Web.UI.IHierarchyData> interfejs mogą być zawarte w kolekcjach <xref:System.Web.UI.IHierarchicalEnumerable> implementujących interfejs.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.Web.UI.IHierarchyData> interfejsu z klasą, która zawija <xref:System.IO.FileSystemInfo> obiekt. Klasa jest dobrym przykładem węzła danych hierarchicznych, <xref:System.Web.UI.IHierarchyData> który reprezentuje interfejs dla kontrolek hierarchicznych źródeł danych ASP.NET. <xref:System.IO.FileSystemInfo> Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.HierarchicalDataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#5)]  
  
 Poniższy przykład kodu demonstruje sposób cyklicznego iteracji <xref:System.Web.UI.IHierarchicalEnumerable> w kolekcji, <xref:System.Web.UI.IHierarchyData> wyodrębniania elementu <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> z modułu wyliczającego przy użyciu metody i wykonywania podstawowej pracy z elementem danych.  
  
 [!code-aspx-csharp[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
    <altmember cref="T:System.Web.SiteMapNode" />
  </Docs>
  <Members>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchicalEnumerable GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchicalEnumerable ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="iHierarchyData.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera obiekt wyliczenia reprezentujący wszystkie węzły podrzędne bieżącego węzła hierarchicznego.</summary>
        <returns><see cref="T:System.Web.UI.IHierarchicalEnumerable" /> Kolekcja węzłów podrzędnych bieżącego węzła hierarchicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć właściwości, <xref:System.Web.UI.IHierarchyData.HasChildren%2A> aby określić, <xref:System.Web.UI.IHierarchyData> czy węzeł ma węzły podrzędne.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak sprawdzić <xref:System.Web.UI.IHierarchyData.HasChildren%2A> właściwość w celu ustalenia, czy bieżący hierarchiczny węzeł danych ma węzły podrzędne i pobrać je <xref:System.Web.UI.IHierarchyData.GetChildren%2A> za pomocą metody. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.IHierarchyData> interfejsu.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchyData GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As IHierarchyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchyData ^ GetParent();" />
      <MemberSignature Language="F#" Value="abstract member GetParent : unit -&gt; System.Web.UI.IHierarchyData" Usage="iHierarchyData.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.IHierarchyData" /> Pobiera obiekt, który reprezentuje węzeł nadrzędny bieżącego węzła hierarchicznego.</summary>
        <returns><see cref="T:System.Web.UI.IHierarchyData" /> Obiekt, który reprezentuje węzeł nadrzędny bieżącego węzła hierarchicznego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Interfejs nie definiuje właściwości wygody HasParent, dlatego obiekty wywołujące muszą sprawdzać wartość <xref:System.Web.UI.IHierarchyData.GetParent%2A> zwracaną metody dla `null` , aby określić, czy bieżący <xref:System.Web.UI.IHierarchyData> węzeł jest węzłem głównym danych hierarchicznych <xref:System.Web.UI.IHierarchyData> Struktura, do której należy węzeł.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.Web.UI.IHierarchyData.GetParent%2A> metody w klasie, która <xref:System.Web.UI.IHierarchyData> implementuje interfejs. Klasa otacza <xref:System.IO.FileSystemInfo> obiekt, a <xref:System.Web.UI.IHierarchyData.GetParent%2A> implementacja metody sprawdza typ <xref:System.IO.FileSystemInfo> obiektu i zwraca odpowiedni obiekt nadrzędny na podstawie typu. `FileSystemHierarchyData` Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.IHierarchyData> interfejsu <xref:System.Web.UI.HierarchicalDataSourceControl> i klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Web.UI.IHierarchyData.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy węzeł danych hierarchicznych, <see cref="T:System.Web.UI.IHierarchyData" /> który reprezentuje obiekt, zawiera węzły podrzędne.</summary>
        <value><see langword="true" />Jeśli bieżący węzeł ma węzły podrzędne; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość jest wygodną właściwością umożliwiającą wywołującym uniknięcie sprawdzania wartości <xref:System.Web.UI.IHierarchyData.GetChildren%2A> zwracanej metody dla `null`. <xref:System.Web.UI.IHierarchyData.HasChildren%2A> Jeśli właściwość zwraca `true`, wywołaj <xref:System.Web.UI.IHierarchyData.GetChildren%2A> metodę w celu pobrania <xref:System.Web.UI.IHierarchicalEnumerable> kolekcji węzłów podrzędnych. <xref:System.Web.UI.IHierarchyData.HasChildren%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak ASP.NET hierarchiczny formant powiązany z danymi używa <xref:System.Web.UI.IHierarchyData> obiektu w metodach powiązania danych cyklicznych. Elementy w <xref:System.Web.UI.IHierarchicalEnumerable> kolekcji są wyliczane i dla <xref:System.Web.UI.IHierarchyData> każdego <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> obiektu są pobierane przy użyciu metody. Na koniec <xref:System.Web.UI.IHierarchyData.HasChildren%2A> właściwość jest sprawdzana, aby określić, czy należy powtórzyć. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> klasy.  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#5)]
 [!code-vb[Samples.AspNet.GeneologyTree#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : obj" Usage="System.Web.UI.IHierarchyData.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera węzeł danych hierarchicznych, który <see cref="T:System.Web.UI.IHierarchyData" /> reprezentuje obiekt.</summary>
        <value><see cref="T:System.Object" /> Hierarchiczny obiekt węzła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chociaż wiele klas, które reprezentują hierarchiczne węzły danych, takie <xref:System.Web.SiteMapNode> jak Klasa, <xref:System.Web.UI.IHierarchyData> implementuje interfejs bezpośrednio, inne klasy działają jako otoka dla klasy, która nie implementuje interfejsu. Właściwość jest zapewniana dla tych sytuacji projektowania, gdy obiekty biznesowe są funkcjonalnie równoważne <xref:System.Web.UI.IHierarchyData> obiektowi, ale nie można ich łatwo zaprojektować. <xref:System.Web.UI.IHierarchyData.Item%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób uzyskiwania dostępu <xref:System.Web.UI.IHierarchyData> do właściwości, sprawdzania typu <xref:System.Web.UI.IHierarchyData> obiektu przy użyciu <xref:System.Web.UI.IHierarchyData.Type%2A> właściwości i rzutowania obiektu w celu wykonania większej liczby operacji specyficznych dla typu. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.IHierarchyData> interfejsu.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Type" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.IHierarchyData.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę hierarchiczną węzła.</summary>
        <value>A <see cref="T:System.String" /> , który identyfikuje ścieżkę hierarchiczną względem bieżącego węzła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość może zostać przeniesiona <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> do metody w celu pobrania <xref:System.Web.UI.HierarchicalDataSourceView> obiektu, który odnosi się do węzła identyfikowanego <xref:System.Web.UI.IHierarchyData.Path%2A>przez. <xref:System.Web.UI.IHierarchyData.Path%2A>  
  
> [!CAUTION]
>  <xref:System.Web.UI.IHierarchyData.Path%2A> Właściwość nie powinna zawierać żadnych poufnych informacji o środowisku hosta, ponieważ może być renderowana na kliencie w formancie powiązanym z danymi.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób implementacji <xref:System.Web.UI.IHierarchyData.Path%2A> właściwości w klasie, która <xref:System.Web.UI.IHierarchyData> implementuje interfejs. Klasa otacza <xref:System.IO.FileSystemInfo> obiekt, a <xref:System.Web.UI.IHierarchyData.Path%2A> implementacja właściwości zwraca ścieżkę systemu plików. `FileSystemHierarchyData` Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.IHierarchyData> interfejsu <xref:System.Web.UI.HierarchicalDataSourceControl> i klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.IHierarchyData.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę typu <see cref="T:System.Object" /> zawartego <see cref="P:System.Web.UI.IHierarchyData.Item" /> we właściwości.</summary>
        <value>Nazwa typu obiektu reprezentowanego przez <see cref="T:System.Web.UI.IHierarchyData" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość nie zwraca obiektu reprezentowanego w <xref:System.Web.UI.IHierarchyData>obiekcie. <xref:System.Type?displayProperty=nameWithType> <xref:System.Web.UI.IHierarchyData.Type%2A> Zwraca nazwę używaną przez kontrolki powiązane z danymi do rozróżnienia między elementami w hierarchii, które mają różne właściwości możliwe do powiązania.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak napisać <xref:System.Web.UI.IHierarchyData> podstawowe właściwości <xref:System.Web.HttpResponse> do strumienia, a następnie <xref:System.Web.UI.IHierarchyData> sprawdzić typ obiektu za pomocą <xref:System.Web.UI.IHierarchyData.Type%2A> właściwości i rzutować obiekt w celu wykonania większej liczby operacji specyficznych dla typu. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.IHierarchyData> interfejsu.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Item" />
      </Docs>
    </Member>
  </Members>
</Type>
