<Type Name="PageParser" FullName="System.Web.UI.PageParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="50a11a935bcdc85640eb66ee23323c79311cf153" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69397522" /></Metadata><TypeSignature Language="C#" Value="public sealed class PageParser : System.Web.UI.TemplateControlParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageParser extends System.Web.UI.TemplateControlParser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageParser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageParser&#xA;Inherits TemplateControlParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageParser sealed : System::Web::UI::TemplateControlParser" />
  <TypeSignature Language="F#" Value="type PageParser = class&#xA;    inherit TemplateControlParser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateControlParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementuje parser dla plików. aspx. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET używa tej klasy do analizowania stron. aspx.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageParser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageParser" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ustawia wartości domyślne, które mają być używane podczas analizowania strony.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompileIntoType">
      <MemberSignature Language="C#" Value="protected override Type CompileIntoType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type CompileIntoType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParser.CompileIntoType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CompileIntoType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Type ^ CompileIntoType();" />
      <MemberSignature Language="F#" Value="override this.CompileIntoType : unit -&gt; Type" Usage="pageParser.CompileIntoType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultApplicationBaseType">
      <MemberSignature Language="C#" Value="public static Type DefaultApplicationBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type DefaultApplicationBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.DefaultApplicationBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultApplicationBaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ DefaultApplicationBaseType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultApplicationBaseType : Type with get, set" Usage="System.Web.UI.PageParser.DefaultApplicationBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ, z którego <see cref="T:System.Web.HttpApplication" /> pochodzi wystąpienie.</summary>
        <value>Typ, z którego <see cref="T:System.Web.HttpApplication" /> pochodzi wystąpienie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość powinna być dostępna w pliku Global. asax przed `PreApplicationStart` wystąpieniem zdarzenia.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageBaseType">
      <MemberSignature Language="C#" Value="public static Type DefaultPageBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type DefaultPageBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.DefaultPageBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultPageBaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ DefaultPageBaseType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPageBaseType : Type with get, set" Usage="System.Web.UI.PageParser.DefaultPageBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ, z którego są wyprowadzane wszystkie strony.</summary>
        <value>Typ.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę właściwość można ustawić tylko przed `PreApplicationStart` wystąpieniem zdarzenia w pliku Global. asax. Tę właściwość można odczytać w dowolnym momencie.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageParserFilterType">
      <MemberSignature Language="C#" Value="public static Type DefaultPageParserFilterType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type DefaultPageParserFilterType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.DefaultPageParserFilterType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultPageParserFilterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ DefaultPageParserFilterType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPageParserFilterType : Type with get, set" Usage="System.Web.UI.PageParser.DefaultPageParserFilterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ filtru analizatora strony, który ma być używany podczas analizowania.</summary>
        <value>Typ filtru analizatora strony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do tej właściwości należy uzyskać przed `PreApplicationStart` wystąpieniem zdarzenia w pliku Global. asax.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefaultUserControlBaseType">
      <MemberSignature Language="C#" Value="public static Type DefaultUserControlBaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type DefaultUserControlBaseType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.DefaultUserControlBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultUserControlBaseType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ DefaultUserControlBaseType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUserControlBaseType : Type with get, set" Usage="System.Web.UI.PageParser.DefaultUserControlBaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ, z którego są wyprowadzane wszystkie kontrolki użytkownika.</summary>
        <value>Typ, z którego pochodzą formanty użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostęp do tej właściwości należy uzyskać przed `PreApplicationStart` wystąpieniem zdarzenia w pliku Global. asax.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="EnableLongStringsAsResources">
      <MemberSignature Language="C#" Value="public static bool EnableLongStringsAsResources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableLongStringsAsResources" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageParser.EnableLongStringsAsResources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableLongStringsAsResources As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableLongStringsAsResources { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableLongStringsAsResources : bool with get, set" Usage="System.Web.UI.PageParser.EnableLongStringsAsResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ASP.NET powinien zoptymalizować wewnętrzną obsługę długich ciągów, które są spotykane, gdy ASP.NET analizuje stronę lub kontrolkę.</summary>
        <value><see langword="true" />Jeśli ASP.NET powinna zoptymalizować wewnętrzną obsługę długich ciągów; w <see langword="false" />przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie parser strony ASP.NET konwertuje ciągi literałów, które zawierają 256 lub więcej znaków w tymczasowym ciągu zasobów. Tę właściwość można ustawić na wartość `false` , aby wyłączyć to zachowanie, a zamiast tego napisać ciąg literału bezpośrednio do strumienia odpowiedzi. Tę właściwość można ustawić tylko w pliku Global. asax przed `PreApplicationStart` wystąpieniem zdarzenia. Tę właściwość można odczytać w dowolnym momencie.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledPageInstance">
      <MemberSignature Language="C#" Value="public static System.Web.IHttpHandler GetCompiledPageInstance (string virtualPath, string inputFile, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.IHttpHandler GetCompiledPageInstance(string virtualPath, string inputFile, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageParser.GetCompiledPageInstance(System.String,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompiledPageInstance (virtualPath As String, inputFile As String, context As HttpContext) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::IHttpHandler ^ GetCompiledPageInstance(System::String ^ virtualPath, System::String ^ inputFile, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetCompiledPageInstance : string * string * System.Web.HttpContext -&gt; System.Web.IHttpHandler" Usage="System.Web.UI.PageParser.GetCompiledPageInstance (virtualPath, inputFile, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="inputFile" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Wirtualna ścieżka żądanego pliku.</param>
        <param name="inputFile">Ścieżka fizyczna strony.</param>
        <param name="context">Obiekt, który zawiera informacje o bieżącym żądaniu sieci Web.</param>
        <summary>Zwraca wystąpienie skompilowanej strony dla określonej ścieżki wirtualnej.</summary>
        <returns>Zwraca skompilowane wystąpienie żądanej strony.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
  </Members>
</Type>
