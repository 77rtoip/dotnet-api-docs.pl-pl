<Type Name="RoleServiceManager" FullName="System.Web.UI.RoleServiceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="314b8178c9457031f48a89542139d53524810fd5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30694208" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoleServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.RoleServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleServiceManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa lokalizację niestandardowych implementacji usługi roli.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.RoleServiceManager> Klasa odpowiada <xref:System.Web.UI.ScriptManager.RoleService%2A> właściwość <xref:System.Web.UI.ScriptManager> lub <xref:System.Web.UI.ScriptManagerProxy> formantu.  
  
 Rola usługi sieci Web jest używany przez aplikacje z włączoną obsługą technologii AJAX można pobrać informacji o roli dla bieżącego użytkownika uwierzytelnionego przy użyciu asynchroniczne wywołanie usługi sieci Web. Można użyć <xref:System.Web.UI.RoleServiceManager> o podanie ścieżki alternatywnej implementacji roli usługi sieci Web zamiast wbudowanej usługi sieci Web.  
  
 Do korzystania z usługi roli w aplikacji, należy ją włączyć w pliku konfiguracji i Zadeklaruj ją na stronie. Jeśli używasz wbudowanej roli usługi sieci Web musi zostać włączony, ale nie trzeba jawnie deklarować roli programu service manager na stronie.  
  
 Aby utworzyć usługę niestandardowej roli zabezpieczeń, musisz zaimplementować usługi sieci Web, która ma dwie metody: `GetRolesForCurrentUser` i `IsCurrentUserInRole`. Te metody muszą mieć taką samą sygnaturę jak odpowiednich metod wbudowanych roli usługi sieci Web.  
  
 Poniższy przykład przedstawia struktura klasy podstawowej, która musi zostać wdrożona w niestandardowej roli zabezpieczeń klasy usługi sieci Web.  
  
  
  
 Aby użyć niestandardowej roli usługi sieci Web, można dodać usługi deklaratywnie w znacznikach ustawiając `RoleService` element wewnątrz <xref:System.Web.UI.ScriptManager> kontroli, jak pokazano w poniższym przykładzie.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="true" />  
</asp:ScriptManager>  
```  
  
 Można również programowane Ustawianie <xref:System.Web.UI.RoleServiceManager.Path%2A> właściwości, aby użyć niestandardowej roli usługi sieci Web.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingRoleServiceSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.RoleServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.RoleServiceManager" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoles">
      <MemberSignature Language="C#" Value="public bool LoadRoles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadRoles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadRoles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadRoles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy można pobierać listę ról dla obecnie zalogowanego użytkownika.</summary>
        <value>
          <see langword="true" /> Jeśli musi zostać pobrana lista ról; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> właściwość jest ustawiona na `true`, listę ról są pobierane przez <xref:System.Web.UI.RoleServiceManager> przy użyciu <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=nameWithType> metody. Lista jest następnie serializowany w znaczniku strony.  
  
> [!NOTE]
>  Gdy <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> jest `true`, wszystkie role, które należy bieżący użytkownik uwierzytelniony są wysyłane do przeglądarki. Ponieważ użytkownicy mogą potencjalnie wyświetlać informacje o rolach, może to być problem z zabezpieczeniami.  
  
 <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> Właściwość może zostać określona w <xref:System.Web.UI.ScriptManager> kontroli lub skojarzony <xref:System.Web.UI.ScriptManagerProxy> formantu. Jeśli <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> ma ustawioną wartość `true` dla wystąpienia serwera proxy, listę ról jest pobierany i dodany do strony. Jeśli <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> jest `false`, role nie są dodawane do znaczników. W takim przypadku metoda służy do przechowywania informacji o roli w pamięci w przeglądarce.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ScriptManager" />
        <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
        <altmember cref="M:System.Web.Security.Roles.GetRolesForUser" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę usługi roli.</summary>
        <value>Ścieżka niestandardowej roli usługi sieci Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.RoleServiceManager.Path%2A> właściwość nie jest ustawiona, jest zwracana wartość <xref:System.String.Empty?displayProperty=nameWithType>. W takim przypadku program ASP.NET używa wbudowanego uwierzytelniania usługi sieci Web, która odnosi się do następującej ścieżki wewnętrznego ustawienia domyślnego: ~ / RolesService.svc. Takie samo zachowanie występuje, gdy ustawisz <xref:System.Web.UI.RoleServiceManager.Path%2A> ciąg pusty lub do `null`.  
  
 <xref:System.Web.UI.RoleServiceManager.Path%2A> można określić w <xref:System.Web.UI.ScriptManager> kontroli lub skojarzony <xref:System.Web.UI.ScriptManagerProxy> formantu. Gdy <xref:System.Web.UI.RoleServiceManager.Path%2A> wynosi <xref:System.Web.UI.ScriptManagerProxy> poziomu, są spełnione następujące warunki:  
  
-   Jeśli istnieje wiele obiektów pośredniczących w hierarchii kontroli <xref:System.Web.UI.RoleServiceManager.Path%2A> nie muszą być ustawione dla każdego wystąpienia serwera proxy.  
  
-   Jeśli <xref:System.Web.UI.RoleServiceManager.Path%2A> jest jawnie ustawiona dla obiekt serwera proxy, wartość musi być taka sama dla wszystkich innych proxy obiektów, czy ta właściwość jest ustawiona dla. Jeśli ustawisz różne ścieżki dla innego serwera proxy obiektów w hierarchii kontroli <xref:System.ArgumentException> wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Więcej niż jednej unikatowej ścieżki została ustawiona w hierarchii formantu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>