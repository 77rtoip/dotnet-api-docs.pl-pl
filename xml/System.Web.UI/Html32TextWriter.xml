<Type Name="Html32TextWriter" FullName="System.Web.UI.Html32TextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd10b676a3221b2b0462daa6da9f6ac2dc629d3e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36577026" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Html32TextWriter : System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Html32TextWriter extends System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class Html32TextWriter&#xA;Inherits HtmlTextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Html32TextWriter : System::Web::UI::HtmlTextWriter" />
  <TypeSignature Language="F#" Value="type Html32TextWriter = class&#xA;    inherit HtmlTextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlTextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapisuje serii znaków HTML 3.2 specyficzne i tekst w strumieniu wyjściowym dla kontrolki serwera ASP.NET. <see cref="T:System.Web.UI.Html32TextWriter" /> Klasa udostępnia możliwości formatowania, korzystających z kontrolek serwera ASP.NET podczas renderowania kodu HTML 3.2 zawartości do klientów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Html32TextWriter> Klasa stanowi alternatywę dla <xref:System.Web.UI.HtmlTextWriter> klasy. Atrybuty stylu HTML 4.0 są konwertowane na równoważne tagów HTML 3.2 i atrybutów. Zapewnia on standaryzację propagacji atrybutów, takich jak kolorów i czcionek, za pomocą tabel HTML. ASP.NET automatycznie korzysta z tej klasy dla HTML 3.2 i starszych przeglądarek sprawdzając <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> właściwość <xref:System.Web.HttpBrowserCapabilities> klasy. Jeśli tworzysz niestandardowej strony lub formant karty, przeznaczonego dla urządzeń, które korzystają z kodu znaczników HTML 3.2, nie trzeba utworzyć wystąpienia <xref:System.Web.UI.Html32TextWriter> jawnie klasy.  
  
 Aby uzyskać więcej informacji dotyczących dostosowywania strony i renderowania formantu, zobacz [wskazówki: tworzenie i używanie niestandardowej kontrolki serwera sieci Web](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia klasy o nazwie `CustomHtml32TextWriter`, która jest pochodną <xref:System.Web.UI.Html32TextWriter> klasy. `CustomHtml32TextWriter` tworzy dwa konstruktory, które zgodne ze wzorcem, która została ustanowiona <xref:System.Web.UI.HtmlTextWriter> klasy i zastąpień <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A>, i <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> metody.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Html32TextWriter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.IO.TextWriter" /> Która renderuje ATRYBUT zawartości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Html32TextWriter" /> klasy, która używa wcięcie linii, określonego w <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> podczas wcięcie linii wymaga przeglądarki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Html32TextWriter.%23ctor%2A> Przekazuje konstruktora <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> pola wartość do drugiej wersji, która ma dwa parametry opisane poniżej:  
  
-   `writer`, który przyjmuje wystąpienia <xref:System.IO.TextWriter> klasy.  
  
-   `tabString`, używającą ciąg, który definiuje wcięcie linii.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób używania niestandardowej klasy, która jest pochodną <xref:System.Web.UI.Html32TextWriter> klasy. Ma dwa konstruktory, która jest standardowe dla wszystkich klas, które pochodzą od atrybutu bezpośrednio lub pośrednio <xref:System.Web.UI.HtmlTextWriter> klasy.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.IO.TextWriter" /> Która renderuje HTML 3.2 zawartości.</param>
        <param name="tabString">Ciąg reprezentujący liczbę spacji zdefiniowane przez <see cref="P:System.Web.UI.HtmlTextWriter.Indent" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Html32TextWriter" /> klasy, która używa wcięcie określonego wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób używania niestandardowej klasy, która jest pochodną <xref:System.Web.UI.Html32TextWriter> klasy. Ma dwa konstruktory, która jest standardowe dla wszystkich klas, które pochodzą od atrybutu bezpośrednio lub pośrednio <xref:System.Web.UI.HtmlTextWriter> klasy.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
      </Docs>
    </Member>
    <Member MemberName="FontStack">
      <MemberSignature Language="C#" Value="protected System.Collections.Stack FontStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack FontStack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.FontStack" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FontStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Stack ^ FontStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FontStack : System.Collections.Stack" Usage="System.Web.UI.Html32TextWriter.FontStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję danych czcionki dla kodu HTML do renderowania.</summary>
        <value>Zbieranie informacji czcionki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected override string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="html32TextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wartości wyliczenia można uzyskać elementu HTML dla.</param>
        <summary>Zwraca element HTML, który jest skojarzony z określonym <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartości wyliczenia.</summary>
        <returns>HTML element.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.HtmlTextWriterTag.Div?displayProperty=nameWithType> pole jest przekazywany w `tagKey` i <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> właściwość jest `true`, <xref:System.Web.UI.Html32TextWriter.GetTagName%2A> metoda zwraca `table` elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="html32TextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Atrybut stylu HTML do zapisu do strumienia wyjściowego.</param>
        <param name="value">Wartość skojarzona z atrybutem style HTML.</param>
        <param name="key">
          <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Wartość wyliczenia skojarzony z atrybutem style HTML.</param>
        <summary>Określa, czy można zapisać do strumienia wyjściowego określonego atrybutu HTML w stylu i jej wartość.</summary>
        <returns>
          <see langword="true" /> Jeśli atrybut stylu HTML i jej wartość będzie renderowany w strumieniu wyjściowym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> Metoda obsługuje mniejszej liczby atrybuty stylu HTML niż <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> metodę, która zastępuje on.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="html32TextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">Element HTML, który można zapisać do strumienia wyjściowego.</param>
        <param name="key">
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wartość wyliczenia skojarzone z elementem HTML.</param>
        <summary>Określa, czy można zapisać do strumienia wyjściowego określonego elementu HTML.</summary>
        <returns>
          <see langword="true" /> Jeśli HTML element są zapisywane do strumienia wyjściowego; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> właściwość jest `true`, <xref:System.Web.UI.Html32TextWriter.OnTagRender%2A> zastępuje metodę `div` elementy, które mają być renderowane przez kontrolkę z `table` elementów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected override string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterContent : unit -&gt; string" Usage="html32TextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje tekst lub odstęp, który pojawia się po zawartości elementu HTML.</summary>
        <returns>Odstępy lub tekst można zapisać po zawartości elementu HTML; w przeciwnym razie, jeśli nie ma żadnych takich informacji do renderowania, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metody. Określa, czy każdy przesłonięcia najpierw sprawdza, czy metoda `th` element jest renderowany, a następnie używa <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> metodę sprawdzania, czy żądanie może zostać wyświetlony pogrubioną czcionką. Jeśli urządzenie obsługuje pogrubioną czcionką <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metoda zapisuje tagu zamykającego `b` elementu. Jeśli urządzenie nie obsługuje pogrubioną czcionką <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metoda zapisuje tagu zamykającego `font` elementu.  
  
 Następnie kod sprawdza, czy `h4` element jest renderowany, a następnie używa <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> właściwość do sprawdzenia, czy żądanie może zostać wyświetlony kursywy. Jeśli urządzenie obsługuje kursywy, <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metoda zapisuje tagu zamykającego `i` elementu. Jeśli urządzenie nie obsługuje kursywy, <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metoda zapisuje tagu zamykającego `font` elementu.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.Html32TextWriter> klasy.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#4)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected override string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterTag : unit -&gt; string" Usage="html32TextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje wszystkie odstępy lub tekst, który występuje po zamykającym tagu elementu HTML.</summary>
        <returns>Odstępy lub tekst można zapisać po tagu zamykającego elementu HTML; w przeciwnym razie, jeśli nie ma żadnych takich informacji do renderowania, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> metody. Sprawdza kod czy `a` element jest renderowany. Jeśli tak, <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> metoda zapisuje tagu zamykającego `small` elementu. Przykład <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> metoda przeprowadza sprawdzanie tego samego `a` elementu, a następnie zapisuje otwierający tag z `small` elementu.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.Html32TextWriter> klasy.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#5)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeContent : unit -&gt; string" Usage="html32TextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje wszystkie kartę odstępy lub czcionki informacje wyświetlane przed zawartością, który jest zawarty w elemencie HTML.</summary>
        <returns>Informacje dotyczące czcionek lub odstępy zapisać przed renderowaniem zawartości elementu HTML; w przeciwnym razie, jeśli nie ma żadnych takich informacji do renderowania, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metody. Sprawdza kod czy `th` element jest renderowany, a następnie używa <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> metodę sprawdzania, czy żądanie może zostać wyświetlony pogrubioną czcionką. Jeśli urządzenie obsługuje pogrubioną czcionką <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metoda zapisuje otwierający tag z `b` elementu. Jeśli urządzenie nie obsługuje pogrubioną czcionką <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metoda zapisuje otwierający tag z `font` element z `color` atrybut ustawiony na wartość szesnastkową czerwony.  
  
 Następnie każda metoda sprawdza, czy `h4` element jest renderowany, a następnie używa <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> właściwość do sprawdzenia, czy żądanie może zostać wyświetlony kursywy. Jeśli urządzenie obsługuje kursywy, <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metoda zapisuje otwierający tag z `i` elementu. Jeśli urządzenie nie obsługuje kursywy, <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metoda zapisuje otwierający tag z `font` element z `color` atrybut ustawiony na wartość szesnastkową ciemnoniebieskim.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.Html32TextWriter> klasy.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeTag : unit -&gt; string" Usage="html32TextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje tekst i odstępy kartę, która występuje przed otwierający tag elementu HTML do strumienia wyjściowego HTML 3.2.</summary>
        <returns>Czcionki HTML i odstępy informacji do renderowania przed tagiem; w przeciwnym razie, jeśli nie ma żadnych takich informacji do renderowania, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> metody. Sprawdza kod czy `a` element jest renderowany. Jeśli tak, przesłoniętych <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> metoda zapisuje otwierający tag z `small` elementu. Przykład dla <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> wykonuje sprawdzanie tego samego `a` elementu, a następnie zapisuje tagu zamykającego `small` elementu.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.Html32TextWriter> klasy.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#3)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="html32TextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wartość wyliczenia wskazująca element HTML, który można zapisać.</param>
        <summary>Zapisuje otwierający tag określonego elementu do strumienia wyjściowego HTML 3.2.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `div` określony element i <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> wartość właściwości jest `true`, <xref:System.Web.UI.Html32TextWriter.RenderBeginTag%2A> metoda wykonuje podstawowe `table` formatowanie do prezentowania zawartość, która jest zawarta w elementu `div` elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag();" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : unit -&gt; unit" Usage="html32TextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje do tagu końcowego elementu HTML do <see cref="T:System.Web.UI.Html32TextWriter" /> strumienia wyjściowego, wraz z żadnych informacji czcionki, który jest skojarzony z elementem.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPerformDivTableSubstitution">
      <MemberSignature Language="C#" Value="public bool ShouldPerformDivTableSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPerformDivTableSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPerformDivTableSubstitution { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldPerformDivTableSubstitution : bool with get, set" Usage="System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość logiczną wskazującą, czy mają być zastępowane <see langword="Table" /> element z <see langword="Div" /> element, aby skrócić czas potrzebny do renderowania blok HTML.</summary>
        <value>
          <see langword="true" /> Aby zastąpić <see langword="Table" /> z <see langword="Div" />; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public bool SupportsBold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsBold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość Boolean wskazującą, czy urządzenia wysyłającego żądanie obsługuje pogrubiony tekst HTML. Użyj <see cref="P:System.Web.UI.Html32TextWriter.SupportsBold" /> właściwości do renderowania warunkowo pogrubioną czcionką <see cref="T:System.Web.UI.Html32TextWriter" /> strumienia wyjściowego.</summary>
        <value>
          <see langword="true" /> Jeśli urządzenia wysyłającego żądanie obsługuje pogrubioną; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> i <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metody. Każdy czy zastąpić kontroli `Label` element jest renderowany, a następnie używa <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> metodę sprawdzania, czy żądanie może zostać wyświetlony pogrubioną czcionką. Jeśli urządzenie obsługuje pogrubioną czcionką <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metoda zapisuje otwierający tag z `b` elementu i <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metoda zapisuje taga zamykającego. Jeśli urządzenie nie obsługuje pogrubioną czcionką <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metoda zapisuje otwierający tag z `Font` element z `color` atrybutu ustawionej na wartość szesnastkową czerwony i <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metoda zapisuje tagu zamykającego.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.Html32TextWriter> klasy.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public bool SupportsItalic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsItalic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość Boolean wskazującą, czy urządzenia wysyłającego żądanie obsługuje kursywą tekstu w formacie HTML. Użyj <see cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" /> właściwości do renderowania warunkowo kursywy tekst <see cref="T:System.Web.UI.Html32TextWriter" /> strumienia wyjściowego.</summary>
        <value>
          <see langword="true" /> Jeśli urządzenia wysyłającego żądanie obsługuje kursywa; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> i <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metody. Każdy czy zastąpić kontroli `span` element jest renderowany, a następnie używa <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> właściwość do sprawdzenia, czy żądanie może zostać wyświetlony kursywy. Jeśli urządzenie obsługuje kursywy, <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metoda zapisuje otwierający tag z `i` elementu i <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metoda zapisuje taga zamykającego. Jeśli urządzenie nie obsługuje kursywy, <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> metoda zapisuje otwierający tag z `Font` element z `color` atrybutu ustawionej na wartość szesnastkową ciemnoniebieskim i <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> metoda zapisuje tagu zamykającego.  
  
 Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.Html32TextWriter> klasy.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      </Docs>
    </Member>
  </Members>
</Type>