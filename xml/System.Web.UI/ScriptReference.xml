<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b5d0e6d587213dceae8a4963519542cb7ee6eff" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37530235" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Rejestruje plik ECMAScript (JavaScript) do użytku na stronie sieci Web platformy ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dołączyć plik JavaScript na stronie sieci Web platformy ASP.NET, rejestrując ją za pośrednictwem <xref:System.Web.UI.ScriptReference> obiektu. Możesz zarejestrować plik skryptu, który jest umieszczony jako plik js (plik statyczny skryptów) w witrynie sieci Web. Można również zarejestrować plik skryptu, który jest osadzony jako zasób w zestawie. Po zarejestrowaniu w pliku skryptu, można użyć jej funkcje w skrypt po stronie klienta, na stronie sieci Web.  
  
 Aby zarejestrować plik statyczny skrypt, należy ustawić <xref:System.Web.UI.ScriptReferenceBase.Path%2A> właściwość <xref:System.Web.UI.ScriptReference> obiektu względną lokalizację pliku.  
  
 Aby zarejestrować plik skryptu, który jest osadzony jako zasób w zestawie, należy ustawić <xref:System.Web.UI.ScriptReference.Assembly%2A> właściwość na nazwę zestawu, który zawiera plik. Następnie ustaw <xref:System.Web.UI.ScriptReference.Name%2A> właściwość na nazwę pliku .js, który jest osadzony w zestawie. W takim przypadku w pliku skryptu muszą być osadzone, nie jest połączony.  
  
 Możesz ustawić <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> właściwości, aby wskazać, czy chcesz używać debugowania lub wydania wersji skryptu.  
  
 <xref:System.Web.UI.ScriptMode.Auto> Wartość daje różne wyniki w zależności od tego, czy odwołuje się do autonomicznego pliku skryptu lub pliku skryptu, który jest osadzony jako zasób w zestawie. Autonomiczny plik skryptu jest zdefiniowana za pomocą <xref:System.Web.UI.ScriptReferenceBase.Path%2A> właściwości. Odwołanie do zestawu muszą być dostępne za pośrednictwem <xref:System.Web.UI.ScriptReference.Name%2A> i <xref:System.Web.UI.ScriptReference.Assembly%2A> właściwości. Wyniki dla <xref:System.Web.UI.ScriptMode.Auto> wartości są następujące:  
  
-   Gdy jest stosowany do pliku skryptu autonomiczny gdzie <xref:System.Web.UI.ScriptReferenceBase.Path%2A> właściwość zostanie określona, <xref:System.Web.UI.ScriptMode.Auto> wartość jest odpowiednikiem <xref:System.Web.UI.ScriptMode.Release>.  
  
-   Jeśli jest stosowany do odwołania do skryptu w zestawie <xref:System.Web.UI.ScriptMode.Auto> jest odpowiednikiem <xref:System.Web.UI.ScriptMode.Inherit>. Gdy tylko <xref:System.Web.UI.ScriptReference.Name%2A> jest określona, jest używana do odwołania do skryptu. Gdy <xref:System.Web.UI.ScriptReference.Name%2A> i <xref:System.Web.UI.ScriptReferenceBase.Path%2A> właściwości są określone oba <xref:System.Web.UI.ScriptReferenceBase.Path%2A> właściwość jest używana zamiast <xref:System.Web.UI.ScriptReference.Name%2A>, ale <xref:System.Web.UI.ScriptMode.Auto> wartość odpowiada nadal <xref:System.Web.UI.ScriptMode.Inherit>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak odwoływać się do formantu niestandardowego i pliku JavaScript, który jest osadzony w zestawie formantu. Zestaw zakłada się, że w folderze Bin witryny sieci Web. Kontrolka niestandardowa animuje <xref:System.Web.UI.UpdatePanel> kontrolki. Plik JavaScript jest kompilowany jako o nazwie SampleControl.UpdatePanelAnimation.js zasobu osadzonego. Zarejestruj osadzonych plików JavaScript za pomocą <xref:System.Web.UI.ScriptReference.Assembly%2A> i <xref:System.Web.UI.ScriptReference.Name%2A> właściwości.  
  
 Aby użyć tego przykładu, należy skompilować pliku JavaScript, która jest wyświetlana w przykładzie w postaci zasobów osadzonych, za pomocą formantu niestandardowego. Umieść Wynikowy zestaw do folderu Bin witryny sieci Web. Na przykład jak osadzić plik języka JavaScript w zestawie, zobacz [wskazówki: osadzanie pliku JavaScript jako zasób w zestawie](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Poniższy przykład pokazuje stronę, która używa kontrolki niestandardowej.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Poniższy przykład przedstawia definicję klasy formantu niestandardowego.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Poniższy przykład pokazuje pomocnicze pliku JavaScript.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Poniższy przykład pokazuje kod, który należy dodać do pliku AssemblyInfo projektu, który zawiera formant niestandardowy i pliku JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ScriptReference" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ScriptReference" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ścieżka pliku skryptu klienta względem strony sieci Web.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ScriptReference" /> przy użyciu określonej ścieżki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pliku skryptu, który jest osadzony w zestawie.</param>
        <param name="assembly">Nazwa zestawu, który zawiera plik skryptu klienta jako zasobu osadzonego.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ScriptReference" /> przy użyciu określonej nazwy i zestawu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę zestawu, który zawiera plik skryptu klienta jako zasobu osadzonego.</summary>
        <value>W pełni kwalifikowana lub częściowo kwalifikowane nazwy zestawu, który zawiera plik skryptu klienta w postaci zasobów osadzonych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz ustawić <xref:System.Web.UI.ScriptReference.Assembly%2A> właściwości, gdy odwołujesz się plik skryptu klienta, który jest dołączony jako zasób osadzony w zestawie. Ustaw <xref:System.Web.UI.ScriptReference.Assembly%2A> nazwy zestawu w pełni kwalifikowana lub częściowo kwalifikowane. W pełni kwalifikowanej nazwy zestawu zawiera nazwę, kultury, klucz publiczny i numer wersji. Częściowo kwalifikowanej nazwy zestawu zawiera tylko nazwę.  
  
 Po określeniu wartości <xref:System.Web.UI.ScriptReference.Assembly%2A>, należy także określić nazwę zasobu osadzonego w <xref:System.Web.UI.ScriptReference.Name%2A> właściwości. W przeciwnym razie <xref:System.InvalidOperationException> zostanie zgłoszony.  
  
 Zestaw, do którego nastąpiło odwołanie muszą znajdować się w folder Bin witryny sieci Web lub w globalnej pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak odwoływać się do formantu niestandardowego i pliku JavaScript, który jest osadzony w zestawie formantu. Zestaw zakłada się, że w folderze Bin witryny sieci Web. Kontrolka niestandardowa animuje <xref:System.Web.UI.UpdatePanel> kontrolki. Plik JavaScript jest kompilowany jako o nazwie SampleControl.UpdatePanelAnimation.js zasobu osadzonego. Zarejestruj osadzonych plików JavaScript za pomocą <xref:System.Web.UI.ScriptReference.Assembly%2A> i <xref:System.Web.UI.ScriptReference.Name%2A> właściwości.  
  
 Aby użyć tego przykładu, należy skompilować pliku JavaScript, która jest wyświetlana w przykładzie w postaci zasobów osadzonych, za pomocą formantu niestandardowego. Umieść Wynikowy zestaw do folderu Bin witryny sieci Web. Na przykład jak osadzić plik języka JavaScript w zestawie, zobacz [wskazówki: osadzanie pliku JavaScript jako zasób w zestawie](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Poniższy przykład pokazuje stronę, która używa kontrolki niestandardowej.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Poniższy przykład przedstawia definicję klasy formantu niestandardowego.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Poniższy przykład pokazuje pomocnicze pliku JavaScript.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Poniższy przykład pokazuje kod, który należy dodać do pliku AssemblyInfo projektu, który zawiera formant niestandardowy i pliku JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">
          <see langword="ScriptManager" /> Formantu, docelowej strony sieci Web.</param>
        <param name="zip">
          <see langword="true" /> Jeśli skrypt powinien być skompresowany; w przeciwnym razie <see langword="false" />.</param>
        <summary>Pobiera adres URL, który jest renderowany jako wartość <see langword="src" /> atrybutu <see langword="script" /> elementu.</summary>
        <returns>Ciąg, który zawiera adres URL, który jest renderowany jako wartość <see langword="src" /> atrybutu <see langword="script" /> elementu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> właściwość znajduje się w adresie URL po zarejestrowaniu plik skryptu klienta z zasobu.</summary>
        <value>
          <see langword="true" /> Jeśli ścieżka skryptu nie jest używany podczas rejestrowania skrypt po stronie klienta; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz ustawić <xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> do `true` kiedy chcesz zarejestrować plik skryptu klienta bez uwzględniania <xref:System.Web.UI.ScriptManager.ScriptPath%2A> wartość w adresie URL w pliku skryptu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Element <see cref="T:System.Web.UI.ScriptManager" /> obiektu.</param>
        <summary>Określa, czy odniesienie skryptu jest skrypt AJAX.</summary>
        <returns>
          <see langword="true" /> Jeśli skrypt AJAX; odwołanie do skryptu w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy skrypt złożonego zawiera odwołanie do skryptu w ramach ASP.NET AJAX.</summary>
        <returns>
          <see langword="true" /> Jeśli złożonego zawiera odwołanie do skryptu framework ASP.NET AJAX; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę osadzonego zasobu, który zawiera plik skryptu klienta.</summary>
        <value>Nazwa pliku skryptu klienta, który jest osadzony jako zasób w zestawie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz ustawić <xref:System.Web.UI.ScriptReference.Name%2A> właściwości w celu odwołania plik skryptu klienta, który jest osadzony jako zasób w zestawie.  
  
 Jeśli zdefiniujesz wartości dla obu <xref:System.Web.UI.ScriptReferenceBase.Path%2A> i <xref:System.Web.UI.ScriptReference.Name%2A> właściwości w tym samym odwołanie do skryptu, <xref:System.Web.UI.ScriptReferenceBase.Path%2A> właściwość, pierwszeństwo.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak odwoływać się do formantu niestandardowego i pliku JavaScript, który jest osadzony w zestawie formantu. Zestaw zakłada się, że w folderze Bin witryny sieci Web. Kontrolka niestandardowa animuje <xref:System.Web.UI.UpdatePanel> kontrolki. Plik JavaScript jest kompilowany jako o nazwie SampleControl.UpdatePanelAnimation.js zasobu osadzonego. Zarejestruj osadzonych plików JavaScript za pomocą <xref:System.Web.UI.ScriptReference.Assembly%2A> i <xref:System.Web.UI.ScriptReference.Name%2A> właściwości.  
  
 Aby użyć tego przykładu, należy skompilować pliku JavaScript, która jest wyświetlana w przykładzie w postaci zasobów osadzonych, za pomocą formantu niestandardowego. Umieść Wynikowy zestaw do folderu Bin witryny sieci Web. Na przykład jak osadzić plik języka JavaScript w zestawie, zobacz [wskazówki: osadzanie pliku JavaScript jako zasób w zestawie](http://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).  
  
 Poniższy przykład pokazuje stronę, która używa kontrolki niestandardowej.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 Poniższy przykład przedstawia definicję klasy formantu niestandardowego.  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 Poniższy przykład pokazuje pomocnicze pliku JavaScript.  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 Poniższy przykład pokazuje kod, który należy dodać do pliku AssemblyInfo projektu, który zawiera formant niestandardowy i pliku JavaScript.  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca ciąg reprezentujący wartość <see cref="P:System.Web.UI.ScriptReference.Name" /> właściwości <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> właściwości lub nazwę typu.</summary>
        <returns>Wartość <see cref="P:System.Web.UI.ScriptReference.Name" /> właściwość, jeśli jest on zdefiniowany lub wartość <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> właściwość, jeśli jest zdefiniowana; w przeciwnym razie, wartość <see cref="P:System.Reflection.MemberInfo.Name" /> właściwości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>