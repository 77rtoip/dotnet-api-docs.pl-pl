<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9200f0d5a36d7d9b1c59b031ca32d0e2c5500b69" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36376654" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="edb0f-101">Zawiera informacje o zadanie asynchroniczne zarejestrowany do strony.</span>
      <span class="sxs-lookup">
        <span data-stu-id="edb0f-101">Contains information about an asynchronous task registered to a page.</span>
      </span>
      <span data-ttu-id="edb0f-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="edb0f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-103">ASP.NET w wersji 2.0 umożliwia zarejestrować wiele zadań do strony i uruchom je asynchronicznie przed renderowania strony.</span><span class="sxs-lookup"><span data-stu-id="edb0f-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="edb0f-104">Może określić, czy można uruchomić zadania asynchronicznego, jeśli jest powolne proces i nie powinien być blokowana, podczas wykonywania innych procesów.</span><span class="sxs-lookup"><span data-stu-id="edb0f-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="edb0f-105">Zadania asynchroniczne mogą być wykonywane równolegle lub sekwencyjnie.</span><span class="sxs-lookup"><span data-stu-id="edb0f-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="edb0f-106">A <xref:System.Web.UI.PageAsyncTask> obiektu musi być zarejestrowana do strony za pomocą <xref:System.Web.UI.Page.RegisterAsyncTask%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="edb0f-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="edb0f-107">Sama strona ma być przetwarzane asynchronicznie można wykonywać zadań asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="edb0f-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="edb0f-108">Można ustawić `Async` atrybutu albo `true` (jak pokazano w poniższym przykładzie kodu) lub `false` na stronie dyrektywy i zadania asynchroniczne będą nadal przetwarzane asynchronicznie:</span><span class="sxs-lookup"><span data-stu-id="edb0f-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="edb0f-109">Gdy `Async` atrybut ma ustawioną `false`, wątku, który wykonuje strony będzie zablokowany do momentu zakończenia wszystkich zadań asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="edb0f-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="edb0f-110">Wszystkie zadania asynchronicznego zarejestrowanych przed <xref:System.Web.UI.Page.PreRenderComplete> zdarzenie zostanie wykonane automatycznie przez strony, jeśli ich nie zostały już wykonane.</span><span class="sxs-lookup"><span data-stu-id="edb0f-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="edb0f-111">Te zadania asynchronicznego rejestrowane po <xref:System.Web.UI.Page.PreRenderComplete> zdarzenia musi zostać wykonana jawnie za pomocą <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="edb0f-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="edb0f-112"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> — Metoda może również służyć do uruchamiania zadań przed <xref:System.Web.UI.Page.PreRenderComplete> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="edb0f-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="edb0f-113"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> Metoda wykonuje wszystkie zarejestrowane zadania asynchroniczne, na stronie, które nie zostały wykonane.</span><span class="sxs-lookup"><span data-stu-id="edb0f-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="edb0f-114">Domyślnie zadanie asynchroniczne zostanie limit czasu, jeśli nie zostało ukończone w ciągu 45 sekund.</span><span class="sxs-lookup"><span data-stu-id="edb0f-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="edb0f-115">Wartość limitu czasu różnych można określić w pliku Web.config lub w dyrektywie page.</span><span class="sxs-lookup"><span data-stu-id="edb0f-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="edb0f-116">`<pages>` Sekcja pliku Web.config zawiera `asyncTimeout` atrybutu, jak pokazano poniżej.</span><span class="sxs-lookup"><span data-stu-id="edb0f-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="edb0f-117">Dyrektywa strony zawiera `AsyncTimeout` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="edb0f-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="edb0f-118">Poniższy przykład kodu rejestruje trzy zadania asynchronicznego do strony i je wykonuje równolegle.</span><span class="sxs-lookup"><span data-stu-id="edb0f-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="edb0f-119">Każde zadanie wywołuje metodę jedynie powodujący wątku w stan uśpienia na 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="edb0f-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="edb0f-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageAsyncTask" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="edb0f-121">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-121">An event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edb0f-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageAsyncTask" /> przy użyciu obsługi zdarzeń, który umożliwia można anulować zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-123">Ten konstruktor jest zawijana <xref:System.Web.TaskEventHandler> delegowanie, aby <xref:System.Web.UI.PageAsyncTask> obiektu można zintegrować asynchroniczne kodu (na podstawie <xref:System.Threading.Tasks.Task> obiektów) z istniejących funkcji asynchronicznych stron formularzy sieci Web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="edb0f-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="edb0f-124">ASP.NET będzie sygnału <xref:System.Threading.CancellationToken> obiekt, który jest przekazywany do <xref:System.Web.TaskEventHandler> delegować anulowania na podstawie <xref:System.Web.UI.Page.AsyncTimeout%2A> atrybut ustawiony w `@ Page` dyrektywy strony sieci Web.</span><span class="sxs-lookup"><span data-stu-id="edb0f-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="edb0f-125">Gdy <xref:System.Web.UI.Page.AsyncTimeout%2A> osiągnięto wartość, <xref:System.Threading.CancellationToken> są sygnalizowane obiektu.</span><span class="sxs-lookup"><span data-stu-id="edb0f-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="edb0f-126">`CancellationToken` Parametrów muszą być przekazywane do asynchronicznego interfejsów API, które są wywoływane przy implementacji <xref:System.Web.TaskEventHandler> klasy.</span><span class="sxs-lookup"><span data-stu-id="edb0f-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="edb0f-127">Program obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-127">An event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edb0f-128">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageAsyncTask" /> przy użyciu obsługi zdarzeń, który umożliwia zadania, które mają być obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="edb0f-129">Program obsługi do wywołania, gdy rozpoczyna zadanie asynchroniczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-129">The handler to call when beginning an asynchronous task.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="edb0f-130">Program obsługi do wywołania po pomyślnym ukończeniu zadania w ramach limitu czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-130">The handler to call when the task is completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="timeoutHandler">
          <span data-ttu-id="edb0f-131">Program obsługi do wywołania, gdy zadanie nie zakończyło się powodzeniem w ramach limitu czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-131">The handler to call when the task is not completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="edb0f-132">Obiekt reprezentujący stan zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-132">The object that represents the state of the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edb0f-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageAsyncTask" /> przy użyciu wartości domyślnej dla wykonywane równolegle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-134">Ta implementacja ustawia konstruktora <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> właściwości `false` tak zadanie asynchroniczne nie jest przetwarzane równolegle z innymi zadaniami na stronie.</span><span class="sxs-lookup"><span data-stu-id="edb0f-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="edb0f-135">
            <paramref name="beginHandler" /> Parametru lub <paramref name="endHandler" /> nie określono wartości parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="edb0f-136">Program obsługi do wywołania, gdy rozpoczyna zadanie asynchroniczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-136">The handler to call when beginning an asynchronous task.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="edb0f-137">Program obsługi do wywołania po pomyślnym ukończeniu zadania w ramach limitu czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-137">The handler to call when the task is completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="timeoutHandler">
          <span data-ttu-id="edb0f-138">Program obsługi do wywołania, gdy zadanie nie zakończyło się powodzeniem w ramach limitu czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-138">The handler to call when the task is not completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="edb0f-139">Obiekt reprezentujący stan zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-139">The object that represents the state of the task.</span>
          </span>
        </param>
        <param name="executeInParallel">
          <span data-ttu-id="edb0f-140">Wartość, która wskazuje, czy zadania mogą być przetwarzane równolegle z innymi zadaniami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-140">The value that indicates whether the task can be processed in parallel with other tasks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="edb0f-141">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageAsyncTask" /> przy użyciu określonej wartości dla wykonywane równolegle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-142">Ta implementacja Konstruktor umożliwia określenie, czy zadanie asynchroniczne będą przetwarzane równolegle z innymi zadaniami na stronie.</span><span class="sxs-lookup"><span data-stu-id="edb0f-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edb0f-143">Poniższy przykład kodu tworzy trzy zadania asynchroniczne, które są przetwarzane równolegle ze sobą.</span><span class="sxs-lookup"><span data-stu-id="edb0f-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="edb0f-144">Ten przykład jest częścią większego przykładu w <xref:System.Web.UI.PageAsyncTask> Przegląd klasy.</span><span class="sxs-lookup"><span data-stu-id="edb0f-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="edb0f-145">
            <paramref name="beginHandler" /> Parametru lub <paramref name="endHandler" /> nie określono wartości parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edb0f-146">Pobiera metodę do wywołania, gdy rozpoczyna zadanie asynchroniczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-146">Gets the method to call when beginning an asynchronous task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edb0f-147">A <see cref="T:System.Web.BeginEventHandler" /> delegata, który reprezentuje metodę do wywołania po od zadanie asynchroniczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-148"><xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> Delegata jest ustawiony w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="edb0f-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edb0f-149">Poniższy przykład kodu rejestruje trzy zadania asynchronicznego do strony i je wykonuje równolegle.</span><span class="sxs-lookup"><span data-stu-id="edb0f-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="edb0f-150">Każde zadanie wywołuje metodę jedynie powodujący wątku w stan uśpienia na 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="edb0f-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="edb0f-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegowany jest określony dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="edb0f-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edb0f-152">Pobiera metodę do wywołania po zadanie zostało ukończone pomyślnie w ciągu limitu czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-152">Gets the method to call when the task completes successfully within the time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edb0f-153">
            <see cref="T:System.Web.EndEventHandler" /> Delegata, który reprezentuje metodę do wywołania, gdy zadanie zostało ukończone pomyślnie w ciągu limitu czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-154"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A> Delegata jest ustawiony w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="edb0f-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edb0f-155">Poniższy przykład kodu rejestruje trzy zadania asynchronicznego do strony i je wykonuje równolegle.</span><span class="sxs-lookup"><span data-stu-id="edb0f-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="edb0f-156">Każde zadanie wywołuje metodę jedynie powodujący wątku w stan uśpienia na 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="edb0f-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="edb0f-157"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A> Delegowany jest określony dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="edb0f-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edb0f-158">Pobiera wartość wskazującą, czy zadania mogą być przetwarzane równolegle z innymi zadaniami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edb0f-159">
            <see langword="true" /> Jeśli zadanie powinna zostać przetworzona równolegle z innymi zadaniami; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-159">
              <see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-160"><xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> Właściwość jest ustawiona w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="edb0f-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="edb0f-161">Po wielu zadań są zarejestrowane na stronie i <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> właściwość jest ustawiona na `true`, a następnie te zadania są przetwarzane równolegle.</span><span class="sxs-lookup"><span data-stu-id="edb0f-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="edb0f-162">Jednak jeśli <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> właściwość jest ustawiona na `false`, a następnie te zadania są przetwarzane sekwencyjnie.</span><span class="sxs-lookup"><span data-stu-id="edb0f-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="edb0f-163">Na przykład, jeśli strona zawiera dwa asynchroniczne zadań związanych z zarządzaniem każdego trwało 5 sekund i <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> ma ustawioną wartość `true`, obu zadań zostanie ukończona w ciągu 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="edb0f-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="edb0f-164">Jeśli <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> ma ustawioną wartość `false` dla tych samych dwa zadania, a następnie pierwszego zadania zostanie ukończona w ciągu 5 sekund i drugie zadanie ukończy 5 sekund po zakończeniu pierwszego zadania.</span><span class="sxs-lookup"><span data-stu-id="edb0f-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edb0f-165">Poniższy przykładowy kod definiuje trzy zadania asynchroniczne, które są każdego zestawu do przetworzenia równolegle.</span><span class="sxs-lookup"><span data-stu-id="edb0f-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="edb0f-166">Ten przykład jest częścią większego przykładu w <xref:System.Web.UI.PageAsyncTask> Przegląd klasy.</span><span class="sxs-lookup"><span data-stu-id="edb0f-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edb0f-167">Pobiera obiekt reprezentujący stan zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-167">Gets an object that represents the state of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edb0f-168">
            <see cref="T:System.Object" /> Reprezentujący stan zadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-168">An <see cref="T:System.Object" /> that represents the state of the task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-169"><xref:System.Web.UI.PageAsyncTask.State%2A> Właściwość jest ustawiana w Konstruktorze i nie można modyfikować podczas wykonywania zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="edb0f-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="edb0f-170">Zadania asynchroniczne, na stronie może odróżniać przypisując wartości unikatowy ciąg do ich odpowiednich <xref:System.Web.UI.PageAsyncTask.State%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="edb0f-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edb0f-171">Poniższy przykład kodu tworzy trzy zadań asynchronicznych i przekazuje im unikatowe wartości ich <xref:System.Web.UI.PageAsyncTask.State%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="edb0f-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="edb0f-172">Ten przykład jest częścią większego przykładu w <xref:System.Web.UI.PageAsyncTask> Przegląd klasy.</span><span class="sxs-lookup"><span data-stu-id="edb0f-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="edb0f-173">Pobiera metodę do wywołania po zadania powiodło się w limicie czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-173">Gets the method to call when the task does not complete successfully within the time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="edb0f-174">
            <see cref="T:System.Web.EndEventHandler" /> Delegata, który reprezentuje metodę do wywołania po zadania powiodło się w limicie czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="edb0f-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edb0f-175"><xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> Delegata jest ustawiony w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="edb0f-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edb0f-176">Poniższy przykład kodu rejestruje trzy zadania asynchronicznego do strony i je wykonuje równolegle.</span><span class="sxs-lookup"><span data-stu-id="edb0f-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="edb0f-177">Każde zadanie wywołuje metodę jedynie powodujący wątku w stan uśpienia na 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="edb0f-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="edb0f-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegowany jest określony dla każdego zadania.</span><span class="sxs-lookup"><span data-stu-id="edb0f-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>