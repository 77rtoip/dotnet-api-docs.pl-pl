<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5da70a9feb3161643610796afaeb84a6348e82eb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69397600" /></Metadata><TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a52bf-101">Zawiera informacje na temat asynchronicznego zadania zarejestrowanego na stronie.</span><span class="sxs-lookup"><span data-stu-id="a52bf-101">Contains information about an asynchronous task registered to a page.</span></span> <span data-ttu-id="a52bf-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="a52bf-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-103">ASP.NET w wersji 2,0 umożliwia rejestrowanie wielu zadań na stronie i uruchamianie ich asynchronicznie przed renderowaniem strony.</span><span class="sxs-lookup"><span data-stu-id="a52bf-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="a52bf-104">Możesz określić, że zadanie ma być uruchamiane asynchronicznie, jeśli jest to proces powolny i nie chcesz, aby inne procesy były powiązane w trakcie jego wykonywania.</span><span class="sxs-lookup"><span data-stu-id="a52bf-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="a52bf-105">Zadania asynchroniczne można wykonywać równolegle lub sekwencyjnie.</span><span class="sxs-lookup"><span data-stu-id="a52bf-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="a52bf-106">Obiekt musi być zarejestrowany na stronie <xref:System.Web.UI.Page.RegisterAsyncTask%2A> za pomocą metody. <xref:System.Web.UI.PageAsyncTask></span><span class="sxs-lookup"><span data-stu-id="a52bf-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="a52bf-107">Sama strona nie musi być przetwarzana asynchronicznie w celu wykonywania zadań asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="a52bf-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="a52bf-108">Można ustawić `Async` atrybut na jeden `true` (jak pokazano w poniższym przykładzie kodu) lub `false` w dyrektywie page, a zadania asynchroniczne będą nadal przetwarzane asynchronicznie:</span><span class="sxs-lookup"><span data-stu-id="a52bf-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="a52bf-109">Gdy atrybut jest ustawiony na `false`, wątek wykonujący stronę będzie zablokowany do momentu ukończenia wszystkich zadań asynchronicznych. `Async`</span><span class="sxs-lookup"><span data-stu-id="a52bf-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="a52bf-110">Wszystkie zadania asynchroniczne zarejestrowane przed <xref:System.Web.UI.Page.PreRenderComplete> zdarzeniem zostaną automatycznie wykonane przez stronę, jeśli nie zostały jeszcze wykonane.</span><span class="sxs-lookup"><span data-stu-id="a52bf-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="a52bf-111">Te zadania asynchroniczne zarejestrowane po <xref:System.Web.UI.Page.PreRenderComplete> zdarzeniu muszą zostać wykonane jawnie <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> za pomocą metody.</span><span class="sxs-lookup"><span data-stu-id="a52bf-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="a52bf-112">Metody można również użyć do uruchomienia zadań <xref:System.Web.UI.Page.PreRenderComplete> przed zdarzeniem. <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A></span><span class="sxs-lookup"><span data-stu-id="a52bf-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="a52bf-113"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> Metoda wykonuje wszystkie zarejestrowane zadania asynchroniczne na stronie, które nie zostały wykonane.</span><span class="sxs-lookup"><span data-stu-id="a52bf-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="a52bf-114">Domyślnie zadanie asynchroniczne przekroczy limit czasu, jeśli nie zostało zakończone w ciągu 45 sekund.</span><span class="sxs-lookup"><span data-stu-id="a52bf-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="a52bf-115">Możesz określić inną wartość limitu czasu w pliku Web. config lub w dyrektywie page.</span><span class="sxs-lookup"><span data-stu-id="a52bf-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="a52bf-116">Sekcja pliku Web. config `asyncTimeout` zawiera atrybut, jak pokazano poniżej. `<pages>`</span><span class="sxs-lookup"><span data-stu-id="a52bf-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="a52bf-117">Dyrektywa Page zawiera `AsyncTimeout` atrybut.</span><span class="sxs-lookup"><span data-stu-id="a52bf-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="a52bf-118">Poniższy przykład kodu rejestruje trzy zadania asynchroniczne na stronie i wykonuje je równolegle.</span><span class="sxs-lookup"><span data-stu-id="a52bf-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="a52bf-119">Każde zadanie wywołuje metodę, która powoduje jedynie, że wątek przestanie być uśpiony przez 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="a52bf-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a52bf-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageAsyncTask" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="a52bf-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="a52bf-121">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a52bf-121">An event handler.</span></span></param>
        <summary><span data-ttu-id="a52bf-122">Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.PageAsyncTask" /> klasy za pomocą procedury obsługi zdarzeń, która umożliwia anulowanie zadania.</span><span class="sxs-lookup"><span data-stu-id="a52bf-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-123">Ten konstruktor otacza <xref:System.Web.TaskEventHandler> delegata tak <xref:System.Web.UI.PageAsyncTask> , aby obiekt mógł zintegrować kod asynchroniczny (oparty <xref:System.Threading.Tasks.Task> na obiektach) z istniejącą funkcją stron asynchronicznych formularzy sieci Web ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="a52bf-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="a52bf-124">ASP.NET będzie sygnalizować <xref:System.Threading.CancellationToken> obiekt, który jest przesyłany <xref:System.Web.TaskEventHandler> do delegata <xref:System.Web.UI.Page.AsyncTimeout%2A> w celu anulowania w oparciu o atrybut ustawiony `@ Page` w dyrektywie strony sieci Web.</span><span class="sxs-lookup"><span data-stu-id="a52bf-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="a52bf-125">Po osiągnięciu <xref:System.Threading.CancellationToken> wartości zostanie zasygnalizowanie obiektu. <xref:System.Web.UI.Page.AsyncTimeout%2A></span><span class="sxs-lookup"><span data-stu-id="a52bf-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="a52bf-126">Parametr musi być przesłany do wszystkich asynchronicznych interfejsów API, które są wywoływane przez implementację <xref:System.Web.TaskEventHandler> klasy. `CancellationToken`</span><span class="sxs-lookup"><span data-stu-id="a52bf-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="a52bf-127">Procedura obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a52bf-127">An event handler.</span></span></param>
        <summary><span data-ttu-id="a52bf-128">Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.PageAsyncTask" /> klasy za pomocą procedury obsługi zdarzeń, która umożliwia obsługę zadania.</span><span class="sxs-lookup"><span data-stu-id="a52bf-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="a52bf-129">Program obsługi wywoływany podczas rozpoczynania zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="a52bf-129">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="a52bf-130">Procedura obsługi do wywołania, gdy zadanie zostanie ukończone pomyślnie w określonym limicie czasu.</span><span class="sxs-lookup"><span data-stu-id="a52bf-130">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="a52bf-131">Procedura obsługi do wywołania, gdy zadanie nie zostało zakończone pomyślnie w określonym limicie czasu.</span><span class="sxs-lookup"><span data-stu-id="a52bf-131">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="a52bf-132">Obiekt, który reprezentuje stan zadania.</span><span class="sxs-lookup"><span data-stu-id="a52bf-132">The object that represents the state of the task.</span></span></param>
        <summary><span data-ttu-id="a52bf-133">Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.PageAsyncTask" /> klasy przy użyciu wartości domyślnej do wykonania równolegle.</span><span class="sxs-lookup"><span data-stu-id="a52bf-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-134">Ta implementacja konstruktora ustawia <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> właściwość na `false` tak, aby zadanie asynchroniczne nie było przetwarzane równolegle z innymi zadaniami na stronie.</span><span class="sxs-lookup"><span data-stu-id="a52bf-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a52bf-135">Nie określono <paramref name="endHandler" /> parametru lub parametru. <paramref name="beginHandler" /></span><span class="sxs-lookup"><span data-stu-id="a52bf-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="a52bf-136">Program obsługi wywoływany podczas rozpoczynania zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="a52bf-136">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="a52bf-137">Procedura obsługi do wywołania, gdy zadanie zostanie ukończone pomyślnie w określonym limicie czasu.</span><span class="sxs-lookup"><span data-stu-id="a52bf-137">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="a52bf-138">Procedura obsługi do wywołania, gdy zadanie nie zostało zakończone pomyślnie w określonym limicie czasu.</span><span class="sxs-lookup"><span data-stu-id="a52bf-138">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="a52bf-139">Obiekt, który reprezentuje stan zadania.</span><span class="sxs-lookup"><span data-stu-id="a52bf-139">The object that represents the state of the task.</span></span></param>
        <param name="executeInParallel"><span data-ttu-id="a52bf-140">Wartość wskazująca, czy zadanie może być przetwarzane równolegle z innymi zadaniami.</span><span class="sxs-lookup"><span data-stu-id="a52bf-140">The value that indicates whether the task can be processed in parallel with other tasks.</span></span></param>
        <summary><span data-ttu-id="a52bf-141">Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.PageAsyncTask" /> klasy przy użyciu określonej wartości do wykonania równolegle.</span><span class="sxs-lookup"><span data-stu-id="a52bf-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-142">Ta implementacja konstruktora pozwala określić, czy zadanie asynchroniczne będzie przetwarzane równolegle z innymi zadaniami na stronie.</span><span class="sxs-lookup"><span data-stu-id="a52bf-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a52bf-143">Poniższy przykład kodu tworzy trzy zadania asynchroniczne, które są przetwarzane równolegle ze sobą.</span><span class="sxs-lookup"><span data-stu-id="a52bf-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="a52bf-144">Ten przykład jest częścią większego przykładu znajdującego się <xref:System.Web.UI.PageAsyncTask> w przeglądzie klasy.</span><span class="sxs-lookup"><span data-stu-id="a52bf-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a52bf-145">Nie określono <paramref name="endHandler" /> parametru lub parametru. <paramref name="beginHandler" /></span><span class="sxs-lookup"><span data-stu-id="a52bf-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a52bf-146">Pobiera metodę do wywołania przy rozpoczynaniu zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="a52bf-146">Gets the method to call when beginning an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="a52bf-147"><see cref="T:System.Web.BeginEventHandler" /> Delegat reprezentujący metodę do wywołania po rozpoczęciu zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="a52bf-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-148"><xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> Delegat jest ustawiony w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="a52bf-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a52bf-149">Poniższy przykład kodu rejestruje trzy zadania asynchroniczne na stronie i wykonuje je równolegle.</span><span class="sxs-lookup"><span data-stu-id="a52bf-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="a52bf-150">Każde zadanie wywołuje metodę, która powoduje jedynie, że wątek przestanie być uśpiony przez 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="a52bf-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="a52bf-151">Dla każdego zadania określono delegata.<xref:System.Web.UI.PageAsyncTask.BeginHandler%2A></span><span class="sxs-lookup"><span data-stu-id="a52bf-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a52bf-152">Pobiera metodę do wywołania, gdy zadanie zakończy się pomyślnie w określonym limicie czasu.</span><span class="sxs-lookup"><span data-stu-id="a52bf-152">Gets the method to call when the task completes successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="a52bf-153"><see cref="T:System.Web.EndEventHandler" /> Delegat reprezentujący metodę do wywołania, gdy zadanie zakończy się pomyślnie w określonym limicie czasu.</span><span class="sxs-lookup"><span data-stu-id="a52bf-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-154"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A> Delegat jest ustawiony w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="a52bf-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a52bf-155">Poniższy przykład kodu rejestruje trzy zadania asynchroniczne na stronie i wykonuje je równolegle.</span><span class="sxs-lookup"><span data-stu-id="a52bf-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="a52bf-156">Każde zadanie wywołuje metodę, która powoduje jedynie, że wątek przestanie być uśpiony przez 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="a52bf-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="a52bf-157">Dla każdego zadania określono delegata.<xref:System.Web.UI.PageAsyncTask.EndHandler%2A></span><span class="sxs-lookup"><span data-stu-id="a52bf-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a52bf-158">Pobiera wartość wskazującą, czy zadanie może być przetwarzane równolegle z innymi zadaniami.</span><span class="sxs-lookup"><span data-stu-id="a52bf-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span></span></summary>
        <value><span data-ttu-id="a52bf-159"><see langword="true" />Jeśli zadanie powinno być przetwarzane równolegle z innymi zadaniami; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="a52bf-159"><see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-160"><xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> Właściwość jest ustawiana w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="a52bf-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="a52bf-161">Gdy na stronie zarejestrowano wiele zadań, a <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> właściwość jest ustawiona na `true`, te zadania są przetwarzane współbieżnie.</span><span class="sxs-lookup"><span data-stu-id="a52bf-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="a52bf-162">Jeśli <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> jednak właściwość jest ustawiona na `false`, te zadania są przetwarzane sekwencyjnie.</span><span class="sxs-lookup"><span data-stu-id="a52bf-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="a52bf-163">Na przykład, jeśli strona zawiera dwa zadania asynchroniczne, które zostały wykonane z 5 sekund i <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> są ustawione na `true`, oba zadania zostaną wykonane w ciągu 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="a52bf-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="a52bf-164">Jeśli <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> jest ustawiona na `false` te same dwa zadania, pierwsze zadanie zostanie wykonane w ciągu 5 sekund, a drugie zadanie zostanie wykonane 5 sekund po zakończeniu pierwszego zadania.</span><span class="sxs-lookup"><span data-stu-id="a52bf-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a52bf-165">Poniższy przykład kodu definiuje trzy zadania asynchroniczne, które są dla każdego zestawu przetwarzane równolegle.</span><span class="sxs-lookup"><span data-stu-id="a52bf-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="a52bf-166">Ten przykład jest częścią większego przykładu znajdującego się <xref:System.Web.UI.PageAsyncTask> w przeglądzie klasy.</span><span class="sxs-lookup"><span data-stu-id="a52bf-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a52bf-167">Pobiera obiekt, który reprezentuje stan zadania.</span><span class="sxs-lookup"><span data-stu-id="a52bf-167">Gets an object that represents the state of the task.</span></span></summary>
        <value><span data-ttu-id="a52bf-168"><see cref="T:System.Object" /> Reprezentuje stan zadania.</span><span class="sxs-lookup"><span data-stu-id="a52bf-168">An <see cref="T:System.Object" /> that represents the state of the task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-169"><xref:System.Web.UI.PageAsyncTask.State%2A> Właściwość jest ustawiana w konstruktorze i nie można jej modyfikować podczas wykonywania zadania asynchronicznego.</span><span class="sxs-lookup"><span data-stu-id="a52bf-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="a52bf-170">Można odróżnić zadania asynchroniczne na stronie, przypisując unikatowe wartości ciągu do odpowiednich <xref:System.Web.UI.PageAsyncTask.State%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a52bf-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a52bf-171">Poniższy przykład kodu tworzy trzy zadania asynchroniczne i nadaje im unikatowe wartości <xref:System.Web.UI.PageAsyncTask.State%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a52bf-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="a52bf-172">Ten przykład jest częścią większego przykładu znajdującego się <xref:System.Web.UI.PageAsyncTask> w przeglądzie klasy.</span><span class="sxs-lookup"><span data-stu-id="a52bf-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a52bf-173">Pobiera metodę do wywołania, gdy zadanie nie zakończy się pomyślnie w określonym limicie czasu.</span><span class="sxs-lookup"><span data-stu-id="a52bf-173">Gets the method to call when the task does not complete successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="a52bf-174"><see cref="T:System.Web.EndEventHandler" /> Delegat reprezentujący metodę do wywołania, gdy zadanie nie zakończy się pomyślnie w określonym limicie czasu.</span><span class="sxs-lookup"><span data-stu-id="a52bf-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a52bf-175"><xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> Delegat jest ustawiony w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="a52bf-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a52bf-176">Poniższy przykład kodu rejestruje trzy zadania asynchroniczne na stronie i wykonuje je równolegle.</span><span class="sxs-lookup"><span data-stu-id="a52bf-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="a52bf-177">Każde zadanie wywołuje metodę, która powoduje jedynie, że wątek przestanie być uśpiony przez 5 sekund.</span><span class="sxs-lookup"><span data-stu-id="a52bf-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="a52bf-178">Dla każdego zadania określono delegata.<xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A></span><span class="sxs-lookup"><span data-stu-id="a52bf-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
