<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6c0d543b23fbf3fc5f29e33a7864c41598c33ff" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69398419" /></Metadata><TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7d32a-101">Zapisuje znaki znaczników i tekst w strumieniu wyjściowym kontrolki serwera ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7d32a-101">Writes markup characters and text to an ASP.NET server control output stream.</span></span> <span data-ttu-id="7d32a-102">Ta klasa udostępnia funkcje formatowania, które są używane przez formanty serwera ASP.NET podczas renderowania znaczników do klientów.</span><span class="sxs-lookup"><span data-stu-id="7d32a-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-103"><xref:System.Web.UI.HtmlTextWriter> Klasa jest używana do renderowania HTML 4,0 w przeglądarkach klasycznych.</span><span class="sxs-lookup"><span data-stu-id="7d32a-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="7d32a-104"><xref:System.Web.UI.ChtmlTextWriter> <xref:System.Web.UI> <xref:System.Web.UI.XhtmlTextWriter> <xref:System.Web.UI.Html32TextWriter>Jest również klasą bazową dla wszystkich modułów zapisujących znaczników w przestrzeni nazw, w tym klas, i. <xref:System.Web.UI.HtmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="7d32a-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="7d32a-105">Te klasy są używane do zapisywania elementów, atrybutów i stylów oraz informacji o układzie dla różnych typów znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="7d32a-106">Ponadto klasy te są używane przez klasy kart stron i kontrolek, które są skojarzone z poszczególnymi językami znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="7d32a-107">W większości przypadków ASP.NET automatycznie używa odpowiedniego składnika zapisywania dla żądającego urządzenia.</span><span class="sxs-lookup"><span data-stu-id="7d32a-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="7d32a-108">Jeśli jednak utworzysz niestandardowy moduł zapisywania tekstu lub chcesz określić konkretny składnik zapisywania do renderowania strony dla określonego urządzenia, musisz zmapować składnik zapisywania na stronę w `controlAdapters` sekcji pliku Application. browser.</span><span class="sxs-lookup"><span data-stu-id="7d32a-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-109">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.Control.Render%2A> jak zastąpić metodę kontrolki niestandardowej, która jest pochodną <xref:System.Web.UI.Control> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="7d32a-110">W przykładzie kodu pokazano, jak używać różnych <xref:System.Web.UI.HtmlTextWriter> metod, właściwości i pól.</span><span class="sxs-lookup"><span data-stu-id="7d32a-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span></span></summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="7d32a-112"><see cref="T:System.IO.TextWriter" /> Wystąpienie, które renderuje zawartość znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span></span></param>
        <summary><span data-ttu-id="7d32a-113">Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy, która używa domyślnego ciągu tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-114">Przeciążenie konstruktora używa stałej, <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> gdy jest wymagane wcięcie wiersza. <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="7d32a-115">Wywołuje Przeciążenie, <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> aby zainicjować nowe wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-116">Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> konstruktora do utworzenia niestandardowego <xref:System.Web.UI.HtmlTextWriter> obiektu o nazwie `StyledLabelHtmlWriter.` , gdy `MyPage` Klasa niestandardowa, która jest pochodną <xref:System.Web.UI.Page> klasy, jest zażądana przez klienta Przeglądarka używa `StyledLabelHtmlWriter` klasy w celu renderowania jej zawartości w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="7d32a-117"><see cref="T:System.IO.TextWriter" /> Renderuje zawartość znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span></span></param>
        <param name="tabString"><span data-ttu-id="7d32a-118">Ciąg, który ma być używany do renderowania wcięcia wiersza.</span><span class="sxs-lookup"><span data-stu-id="7d32a-118">The string to use to render a line indentation.</span></span></param>
        <summary><span data-ttu-id="7d32a-119">Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy z określonym znakiem ciągu tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-120"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> Przeciążenie <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> używa przeciążenia`tabString` konstruktora, gdy jest wymagane wcięcie wiersza.</span><span class="sxs-lookup"><span data-stu-id="7d32a-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="7d32a-121">Wywołuje konstruktora podstawowego <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> , aby zainicjować nowe wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-122">Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> konstruktora do utworzenia niestandardowego <xref:System.Web.UI.HtmlTextWriter> obiektu o nazwie `StyledLabelHtmlWriter.` , gdy `MyPage` Klasa niestandardowa, która jest pochodną <xref:System.Web.UI.Page> klasy, jest zażądana przez klienta Przeglądarka używa `StyledLabelHtmlWriter` klasy w celu renderowania jej zawartości w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-123">Dodaje określony atrybut znacznika i wartość do tagu otwierającego elementu, który <see cref="T:System.Web.UI.HtmlTextWriter" /> tworzy obiekt z następnym wywołaniem <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-124">Ciąg zawierający nazwę atrybutu do dodania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-124">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-125">Ciąg zawierający wartość, która ma zostać przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-125">A string containing the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-126">Dodaje określony atrybut znacznika i wartość do tagu otwierającego elementu, który <see cref="T:System.Web.UI.HtmlTextWriter" /> tworzy obiekt z następnym wywołaniem <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-127"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> metody, jeśli atrybut nie <xref:System.Web.UI.HtmlTextWriterAttribute> jest jedną z wartości lub jeśli atrybut nie jest znany do czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="7d32a-128">Dla wystąpienia dowolnego danego elementu <xref:System.Web.UI.HtmlTextWriter> znaczników Klasa utrzymuje listę atrybutów dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="7d32a-129">Gdy wywoływana jest <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Metoda,wszystkieatrybutydodaneprzezmetodęsąrenderowanedotagu<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> otwierającego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="7d32a-130">Lista atrybutów jest następnie czyszczona z <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="7d32a-131">Wzorzec kodowania dla elementów znaczników renderowania jest następujący:</span><span class="sxs-lookup"><span data-stu-id="7d32a-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="7d32a-132">Użyj metody <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> , aby dodać wszystkie atrybuty do elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="7d32a-133"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="7d32a-134">Użyj innych metod, gdy jest to konieczne do renderowania zawartości znalezionej między tagiem otwierającym i zamykającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="7d32a-135"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-136">Poniższy przykład kodu demonstruje, <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> jak wywołać metodę przed <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> wywołaniem metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="7d32a-137">Kod <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> wywołuje dwa różne przeciążenia i dwa różne <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> przeciążenia przed wywołaniem <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody w celu renderowania `<span>` elementu do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="7d32a-138">Metoda jest używana do definiowania atrybutu niestandardowego o nazwie `CustomAttribute` i wartości `<span>` niestandardowej o nazwie `CustomAttributeValue` dla elementu, który renderuje ten kod. <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7d32a-139">Reprezentuje atrybut Markup, którymazostaćdodanydostrumieniawyjściowego.<see cref="T:System.Web.UI.HtmlTextWriterAttribute" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-140">Ciąg zawierający wartość, która ma zostać przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-140">A string containing the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-141">Dodaje atrybut Markup i wartość atrybutu do tagu otwierającego elementu, który <see cref="T:System.Web.UI.HtmlTextWriter" /> tworzy obiekt z następnym wywołaniem <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-142"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> metody, aby renderować standardowy atrybut znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="7d32a-143">Dla wystąpienia dowolnego danego elementu <xref:System.Web.UI.HtmlTextWriter> znaczników Klasa utrzymuje listę atrybutów dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="7d32a-144">Gdy wywoływana jest <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Metoda,wszystkieatrybuty,któresądodawaneprzezmetodęsąrenderowanedotagu<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> otwierającego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="7d32a-145">Lista atrybutów zostanie następnie wyczyszczona z <xref:System.Web.UI.HtmlTextWriter>.</span><span class="sxs-lookup"><span data-stu-id="7d32a-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="7d32a-146">Wzorzec kodowania dla elementów znaczników renderowania jest następujący:</span><span class="sxs-lookup"><span data-stu-id="7d32a-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="7d32a-147">Użyj metody <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> , aby dodać wszystkie atrybuty do elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="7d32a-148"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="7d32a-149">Użyj innych metod, gdy jest to konieczne do renderowania zawartości znalezionej między tagiem otwierającym i zamykającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="7d32a-150"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-151">Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> metody do dodawania `Onclick` atrybutu do elementu znaczników, a następnie ustawić jego wartość na następujący kod języka ECMAScript:</span><span class="sxs-lookup"><span data-stu-id="7d32a-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-152">Ciąg zawierający nazwę atrybutu do dodania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-152">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-153">Ciąg zawierający wartość, która ma zostać przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-153">A string containing the value to assign to the attribute.</span></span></param>
        <param name="fEndode"><span data-ttu-id="7d32a-154"><see langword="true" />aby zakodować atrybut i jego wartość; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-154"><see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-155">Dodaje określony atrybut znacznika i wartość do tagu otwierającego elementu, który <see cref="T:System.Web.UI.HtmlTextWriter" /> tworzy obiekt z kolejnym wywołaniem <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody, z opcjonalnym kodowaniem.</span><span class="sxs-lookup"><span data-stu-id="7d32a-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-156"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> metody, jeśli atrybut nie <xref:System.Web.UI.HtmlTextWriterAttribute> jest jedną z wartości lub jeśli atrybut nie jest znany, dopóki nie jest wymagany czas wykonywania i kodowanie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="7d32a-157">Dla wystąpienia dowolnego danego elementu <xref:System.Web.UI.HtmlTextWriter> znaczników Klasa utrzymuje listę atrybutów dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="7d32a-158">Gdy wywoływana jest <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Metoda,wszystkieatrybutydodaneprzezmetodęsąrenderowanedotagu<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> otwierającego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="7d32a-159">Lista atrybutów jest następnie czyszczona z <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="7d32a-160">Użyj metody z `fEncode` ustawionym na `true`, jeśli atrybut może zawierać znak cudzysłowu ("), znak mniejszości (<) lub znak" i "(&). <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="7d32a-161">Wywołanie metody zakoduje atrybut w celu spełnienia wymagań urządzenia wysyłającego żądanie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="7d32a-162">Możesz ustawić `fEncode` na `false`, Jeśli wiesz, że żaden z tych znaków nie zostanie wygenerowany lub jeśli wiesz, że atrybut jest już zakodowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="7d32a-163">Jeśli typem atrybutu jest `Style`, wartość nie będzie zakodowana, nawet jeśli `fEndode` jest. `true`</span><span class="sxs-lookup"><span data-stu-id="7d32a-163">If the attribute type is `Style`, the value won't be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="7d32a-164">Upewnij się, że wartość stylu jest zgodna ze standardem CSS i nie zawiera złośliwego kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-164">Ensure that the style value is CSS-compliant and doesn't contain malicious code.</span></span>
  
 <span data-ttu-id="7d32a-165">Wzorzec kodowania dla elementów znaczników renderowania jest następujący:</span><span class="sxs-lookup"><span data-stu-id="7d32a-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="7d32a-166">Użyj metody <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> , aby dodać wszystkie atrybuty do elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="7d32a-167"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="7d32a-168">Użyj innych metod, gdy jest to konieczne do renderowania zawartości znalezionej między tagiem otwierającym i zamykającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="7d32a-169"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-170">Poniższy przykład kodu pokazuje, jak <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> używać przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> metody, aby upewnić się, że atrybut niestandardowy, o nazwie `myattribute` `<img>` i jego wartość nie są zakodowane dla elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-171">Ciąg zawierający nazwę atrybutu do dodania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-171">A string containing the name of the attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-172">Ciąg zawierający wartość, która ma zostać przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-172">A string containing the value to assign to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="7d32a-173"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Reprezentuje atrybut.</span><span class="sxs-lookup"><span data-stu-id="7d32a-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-174">Dodaje określony atrybut i wartość znacznika wraz z <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> wartością wyliczenia do tagu otwierającego elementu, <see cref="T:System.Web.UI.HtmlTextWriter" /> który tworzy obiekt z kolejnym wywołaniem <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-175"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> metody tylko w <xref:System.Web.UI.HtmlTextWriter> przypadku dziedziczenia z klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-176">Umożliwia tworzenie nowych `name` i `key` par dla atrybutów.</span><span class="sxs-lookup"><span data-stu-id="7d32a-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7d32a-177">Reprezentuje atrybut Markup, którymazostaćdodanydostrumieniawyjściowego.<see cref="T:System.Web.UI.HtmlTextWriterAttribute" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-178">Ciąg zawierający wartość, która ma zostać przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-178">A string containing the value to assign to the attribute.</span></span></param>
        <param name="fEncode"><span data-ttu-id="7d32a-179"><see langword="true" />aby zakodować atrybut i jego wartość; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-179"><see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-180">Dodaje atrybut Markup i wartość atrybutu do tagu otwierającego elementu, który <see cref="T:System.Web.UI.HtmlTextWriter" /> tworzy obiekt z kolejnym wywołaniem <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody, z opcjonalnym kodowaniem.</span><span class="sxs-lookup"><span data-stu-id="7d32a-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-181"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> metody, aby renderować standardowy atrybut znaczników z opcjonalnym kodowaniem.</span><span class="sxs-lookup"><span data-stu-id="7d32a-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="7d32a-182">Dla wystąpienia dowolnego danego elementu <xref:System.Web.UI.HtmlTextWriter> znaczników Klasa utrzymuje listę atrybutów dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="7d32a-183">Gdy wywoływana jest <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Metoda,wszystkieatrybutydodaneprzezsąrenderowanedotagu<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> otwierającego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="7d32a-184">Lista atrybutów jest następnie czyszczona z <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="7d32a-185">Użyj metody z `fEncode` ustawionym na `true`, jeśli atrybut może zawierać znak cudzysłowu ("), znak mniejszości (<) lub znak" i "(&). <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="7d32a-186">Wywołanie metody zakoduje atrybut w celu spełnienia wymagań urządzenia wysyłającego żądanie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="7d32a-187">Możesz ustawić `fEncode` na `false`, Jeśli wiesz, że żaden z tych znaków nie zostanie wygenerowany lub jeśli wiesz, że atrybut jest już zakodowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="7d32a-188">Jeśli typem atrybutu jest `Style`, wartość nie będzie zakodowana, nawet jeśli `fEncode` jest. `true`</span><span class="sxs-lookup"><span data-stu-id="7d32a-188">If the attribute type is `Style`, the value won't be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="7d32a-189">Upewnij się, że wartość stylu jest zgodna ze standardem CSS i nie zawiera złośliwego kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-189">Ensure that the style value is CSS-compliant and doesn't contain malicious code.</span></span>

  
 <span data-ttu-id="7d32a-190">Wzorzec kodowania dla elementów znaczników renderowania jest następujący:</span><span class="sxs-lookup"><span data-stu-id="7d32a-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="7d32a-191">Użyj metody <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> , aby dodać wszystkie atrybuty do elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="7d32a-192"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="7d32a-193">Użyj innych metod, gdy jest to konieczne do renderowania zawartości znalezionej między tagiem otwierającym i zamykającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="7d32a-194"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-195">Poniższy przykład kodu demonstruje, jak użyć <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> metody, aby upewnić się, że wartość ciągu, która jest przypisana `Alt` do atrybutu `<img>` dla elementu jest zakodowana dla urządzenia wysyłającego żądanie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-196">Dodaje atrybut stylu znaczników do tagu otwierającego elementu, który <see cref="T:System.Web.UI.HtmlTextWriter" /> tworzy obiekt z następnym wywołaniem <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-197">Ciąg, który zawiera atrybut stylu do dodania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-197">A string that contains the style attribute to add.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-198">Ciąg, który zawiera wartość, która ma zostać przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-198">A string that contains the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-199">Dodaje określony atrybut stylu znaczników i wartość atrybutu do otwierającego znacznika znaczników utworzonego przez kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-200"><xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> metody, gdy styl <xref:System.Web.UI.HtmlTextWriterStyle> nie jest elementem członkowskim wyliczenia lub nie jest znany do czasu wykonania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="7d32a-201"><xref:System.Web.UI.HtmlTextWriter> Klasa zachowuje listę stylów dla elementów znaczników, które renderuje.</span><span class="sxs-lookup"><span data-stu-id="7d32a-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="7d32a-202">Gdy wywoływana jest <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Metoda,wszystkiestyle,któresądodawaneprzezmetodęsąrenderowanedotagu<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> otwierającego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="7d32a-203">Zostanie wyczyszczona Lista stylów.</span><span class="sxs-lookup"><span data-stu-id="7d32a-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="7d32a-204">Wzorzec kodowania dla elementów znaczników renderowania jest następujący:</span><span class="sxs-lookup"><span data-stu-id="7d32a-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="7d32a-205">Użyj metody <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> , aby dodać atrybuty stylu do elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="7d32a-206"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="7d32a-207">Użyj innych metod, gdy jest to konieczne do renderowania zawartości znalezionej między tagiem otwierającym i zamykającym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="7d32a-208"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-209">Poniższy przykład kodu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> pokazuje, jak używać przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> metody do renderowania `font-size` i `color` atrybutów `<p>` stylu elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="7d32a-210">Ten przykład kodu używa <xref:System.Web.UI.HtmlTextWriter> klasy do renderowania zawartości kontrolki.</span><span class="sxs-lookup"><span data-stu-id="7d32a-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7d32a-211">Reprezentuje atrybut stylu, który ma zostać dodany do strumienia wyjściowego. <see cref="T:System.Web.UI.HtmlTextWriterStyle" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-212">Ciąg, który zawiera wartość, która ma zostać przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-212">A string that contains the value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-213">Dodaje atrybut stylu znacznika skojarzonego z określoną <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wartością i wartość atrybutu do otwierającego znacznika znaczników utworzonego przez kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-214"><xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> metody, gdy styl <xref:System.Web.UI.HtmlTextWriterStyle> jest elementem członkowskim wyliczenia i jest znany przed godziną wykonywania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="7d32a-215"><xref:System.Web.UI.HtmlTextWriter> Klasa zachowuje listę stylów dla elementów znaczników, które renderuje.</span><span class="sxs-lookup"><span data-stu-id="7d32a-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="7d32a-216">Gdy wywoływana jest <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Metoda,wszystkiestyledodawaneprzezmetodęsąrenderowanedotagu<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> otwierającego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="7d32a-217">Zostanie wyczyszczona Lista stylów.</span><span class="sxs-lookup"><span data-stu-id="7d32a-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="7d32a-218">Wzorzec kodowania dla elementów znaczników renderowania jest następujący:</span><span class="sxs-lookup"><span data-stu-id="7d32a-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="7d32a-219">Użyj metody <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> , aby dodać atrybuty stylu do elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="7d32a-220"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="7d32a-221">Użyj innych metod, gdy jest to konieczne do renderowania zawartości znalezionej między tagiem otwierającym i zamykającym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="7d32a-222"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-223">Poniższy przykład kodu demonstruje sposób użycia części przesłonięcia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody w klasie pochodnej <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-224">Kod sprawdza, `<Label>` czy element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="7d32a-225">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> Metoda jest wywoływana, aby sprawdzić, `Color` czy atrybut stylu `<Label>` został zdefiniowany dla elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="7d32a-226">Jeśli atrybut nie został zdefiniowany, kod wywołuje to Przeciążenie <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody, aby dodać `Color` atrybut do atrybutu stylu, a następnie ustawić jego wartość na `red`. `Color`</span><span class="sxs-lookup"><span data-stu-id="7d32a-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-227">Ciąg, który zawiera atrybut stylu, który ma zostać dodany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-227">A string that contains the style attribute to be added.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-228">Ciąg, który zawiera wartość, która ma zostać przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-228">A string that contains the value to assign to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="7d32a-229"><see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Reprezentuje atrybut stylu do dodania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span></span></param>
        <summary><span data-ttu-id="7d32a-230">Dodaje określony atrybut stylu znacznika i wartość atrybutu wraz z <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wartością wyliczenia do otwierającego znacznika znaczników utworzonego przez kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-231"><xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> metody tylko w <xref:System.Web.UI.HtmlTextWriter> przypadku dziedziczenia z klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-232">Umożliwia tworzenie nowych `name` i `value` par dla <xref:System.Web.UI.HtmlTextWriterStyle> atrybutów.</span><span class="sxs-lookup"><span data-stu-id="7d32a-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-233"><see cref="T:System.Web.UI.HtmlTextWriter" /> Powiadamia obiekt lub obiekt klasy pochodnej, że formant ma być renderowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-234"><xref:System.Web.UI.HtmlTextWriter> Implementacja<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> klasy metody nie ma żadnej funkcji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="7d32a-235">Należy zastąpić <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> metodę w klasie <xref:System.Web.UI.HtmlTextWriter> pochodnej, aby zapewnić własne funkcje renderowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="7d32a-236">Na przykład w języku znaczników, który może wymagać `<p>` , aby elementy, które mają być renderowane bezpośrednio przed formantem, ale gdzie należy `<p>` określić wcześniej <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> , można użyć przesłonięcia.</span><span class="sxs-lookup"><span data-stu-id="7d32a-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-237"><see cref="T:System.Web.UI.HtmlTextWriter" /> Zamyka obiekt i zwalnia wszystkie skojarzone z nim zasoby systemowe.</span><span class="sxs-lookup"><span data-stu-id="7d32a-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-238">Ta implementacja <xref:System.Web.UI.HtmlTextWriter.Close%2A> metody <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> wywołuje metodę bazową.</span><span class="sxs-lookup"><span data-stu-id="7d32a-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="7d32a-239">Po wywołaniu <xref:System.Web.UI.HtmlTextWriter.Close%2A> metody wszystkie operacje <xref:System.Web.UI.HtmlTextWriter> na obiekcie mogą zgłosić wyjątki, ponieważ wszystkie jej zasoby zostały wydane.</span><span class="sxs-lookup"><span data-stu-id="7d32a-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-240">Reprezentuje pojedynczy znak tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-240">Represents a single tab character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-241">Pojedyncza karta jest reprezentowana przez znak ASCII 9.</span><span class="sxs-lookup"><span data-stu-id="7d32a-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-242">Poniższy przykład kodu demonstruje sposób tworzenia konstruktora, który przyjmuje <xref:System.IO.TextWriter> obiekt jako parametr i <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> przekazuje pole jako argument parametru do drugiej wersji konstruktora.</span><span class="sxs-lookup"><span data-stu-id="7d32a-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="7d32a-243">Gdy ten konstruktor jest wywoływany z kodu, <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> pole definiuje zasady wcięć dla wystąpienia składnika zapisywania znaczników, który jest używany przez stronę lub kartę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-244">Reprezentuje znak cudzysłowu (").</span><span class="sxs-lookup"><span data-stu-id="7d32a-244">Represents the quotation mark (") character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-245">To pole jest używane przez metodę do zamykania atrybutu. <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar></span><span class="sxs-lookup"><span data-stu-id="7d32a-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-246">Poniższy przykład kodu pokazuje, `border` jak renderować atrybut `<table>` dla elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="7d32a-247">Kod wywołuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metodę w celu renderowania atrybutu i jego wartości i <xref:System.Web.UI.HtmlTextWriter.Write%2A> używa metody do renderowania <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> pól i <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> .</span><span class="sxs-lookup"><span data-stu-id="7d32a-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="7d32a-248">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-249">Koduje wartość określonego atrybutu Markup Language na podstawie wymagań <see cref="T:System.Web.HttpRequest" /> obiektu bieżącego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-250">Ciąg zawierający wartość atrybutu do kodowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-250">A string containing the attribute value to encode.</span></span></param>
        <param name="fEncode"><span data-ttu-id="7d32a-251"><see langword="true" />aby zakodować wartość atrybutu, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-251"><see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-252">Koduje wartość określonego atrybutu Markup Language na podstawie wymagań <see cref="T:System.Web.HttpRequest" /> obiektu bieżącego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
        <returns><span data-ttu-id="7d32a-253">Ciąg zawierający <see langword="null" /> zakodowaną wartość atrybutu, jeśli <paramref name="value" /> jest pusty lub Niezakodowana wartość atrybutu if <paramref name="fEncode" /> is <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-254"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> metody, jeśli atrybut nie <xref:System.Web.UI.HtmlTextWriterAttribute> jest wartością wyliczenia lub nie jest znany do czasu wykonania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="7d32a-255"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Metoda usuwa znaki podwójnego cudzysłowu ("), & handlowe" i mniejsze niż znaki (<), dzięki czemu nieprawidłowe Tagi nie są generowane, niezależnie od danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="7d32a-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="7d32a-256">Rzeczywiste kodowanie jest wykonywane przez <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-257">Poniższy przykład kodu pokazuje, jak wywołać <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> metodę jako parametr <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> w wywołaniu metody, `color:blue` a następnie kodować wartość atrybutu stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey"><span data-ttu-id="7d32a-258"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Reprezentująca atrybut znacznika.</span><span class="sxs-lookup"><span data-stu-id="7d32a-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-259">Ciąg zawierający wartość atrybutu do kodowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-259">A string containing the attribute value to encode.</span></span></param>
        <summary><span data-ttu-id="7d32a-260">Koduje wartość określonego atrybutu Markup Language na podstawie wymagań <see cref="T:System.Web.HttpRequest" /> obiektu bieżącego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span></span></summary>
        <returns><span data-ttu-id="7d32a-261">Ciąg zawierający zakodowaną wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-261">A string containing the encoded attribute value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-262"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Metoda usuwa znaki podwójnego cudzysłowu ("), & handlowe" i mniejsze niż znaki (<), dzięki czemu nieprawidłowe Tagi nie są generowane, niezależnie od danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="7d32a-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="7d32a-263">Rzeczywiste kodowanie jest wykonywane przez <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="7d32a-264">Ciąg zawierający adres URL do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-264">A string containing the URL to encode.</span></span></param>
        <summary><span data-ttu-id="7d32a-265">Wykonuje minimalne kodowanie adresu URL, konwertując spacje w określonym adresie URL na ciąg "% 20".</span><span class="sxs-lookup"><span data-stu-id="7d32a-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span></span></summary>
        <returns><span data-ttu-id="7d32a-266">Ciąg zawierający zakodowany adres URL.</span><span class="sxs-lookup"><span data-stu-id="7d32a-266">A string containing the encoded URL.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-267">Kodowanie adresu URL znaku składa się z symbolu procentu (%), po którym następuje dwucyfrowy reprezentacja szesnastkowa (bez uwzględniania wielkości liter) dla znaku w kodzie ISO-Latin.</span><span class="sxs-lookup"><span data-stu-id="7d32a-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="7d32a-268">Reprezentacja szesnastkowa miejsca wynosi 20.</span><span class="sxs-lookup"><span data-stu-id="7d32a-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-269">Poniższy przykład kodu demonstruje, jak wywołać metodę, <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> aby przekonwertować wszystkie spacje w adresie URL, który jest przesyłany jako parametr <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> w wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-270">Pobiera kodowanie używane przez <see cref="T:System.Web.UI.HtmlTextWriter" /> obiekt do zapisywania zawartości na stronie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span></span></summary>
        <value><span data-ttu-id="7d32a-271">, <see cref="T:System.Text.Encoding" /> W którym Adiustacja jest zapisywana na stronie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-272">Właściwość uzyskuje swoją wartość z obiektu podstawowego <xref:System.IO.TextWriter>. <xref:System.Web.UI.HtmlTextWriter.Encoding%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-273">Poniższy przykład kodu pokazuje, jak użyć <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> właściwości w celu zapisania typu kodowania, które jest używane przez kontrolkę niestandardową do renderowania tekstu na stronie zawierającej ją.</span><span class="sxs-lookup"><span data-stu-id="7d32a-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-274"><see cref="T:System.Web.UI.HtmlTextWriter" /> Powiadamia obiekt lub obiekt klasy pochodnej, że formant zakończył renderowanie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span></span> <span data-ttu-id="7d32a-275">Tej metody można użyć do zamknięcia wszystkich elementów znaczników otwartych w <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> metodzie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-276"><xref:System.Web.UI.HtmlTextWriter> Implementacja<xref:System.Web.UI.HtmlTextWriter.EndRender%2A> klasy metody nie ma żadnej funkcji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="7d32a-277">Należy przesłonić <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> klasę pochodną klasy, <xref:System.Web.UI.HtmlTextWriter> aby zapewnić własne funkcje renderowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="7d32a-278">Możesz użyć metody, <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> aby zamknąć wszystkie elementy znaczników otwartych <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> w metodzie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-279">Reprezentuje lewy nawias ostry i ukośnik (&lt;/) tagu zamykającego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-280">To pole jest używane przez metodę do konstruowania tagów końcowych elementów znaczników. <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars></span><span class="sxs-lookup"><span data-stu-id="7d32a-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-281">Poniższy przykład kodu pokazuje `<table>` , jak renderować tag zamykający elementu znaczników <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> przy użyciu i <xref:System.Web.UI.HtmlTextWriter.TagRightChar> <xref:System.Web.UI.HtmlTextWriter.Write%2A> pola jako wartości parametrów w wywołaniach metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="7d32a-282">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-283">Zapisuje tag otwierający elementu znaczników, który zawiera atrybuty, które implementują formatowanie układu i znaków określonego stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="7d32a-284">A <see cref="T:System.Web.UI.WebControls.Style" /> , który określa układ i formatowanie do rozpoczęcia stosowania do bloku znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span></span></param>
        <summary><span data-ttu-id="7d32a-285">Zapisuje tag <see langword="&lt;span&gt;" /> otwierający elementu, który zawiera atrybuty, które implementują formatowanie układu i znaków określonego stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-286"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Użyj metody, aby zastosować style, takie jak kolor tła lub szerokość obramowania, do bloku znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="7d32a-287">Metody <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> i<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> umożliwiają karcie urządzenia lub kontrolce Tworzenie znaczników, które używają formatowania znaków określonego stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="7d32a-288">Użyj tej samej wartości dla `style` <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody, która jest używana w odpowiedniej <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="7d32a-289">Przeciążenie metody renderuje tag otwierający `<span>`elementu. <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="7d32a-290">Następnie ta metoda dodaje niezbędne atrybuty i atrybuty stylu do otwierającego tagu `<span>` elementu, aby wyświetlić ustawienia określone <xref:System.Web.UI.WebControls.Style> przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="7d32a-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="7d32a-291">Jeśli chcesz renderować inny element znaczników, aby zawierał atrybuty i atrybuty stylu, użyj <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="7d32a-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-292">Poniższy przykład kodu demonstruje, jak używać klasy niestandardowej o `TextSample`nazwie pochodnej <xref:System.Web.UI.WebControls.WebControl> z <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> klasy, która używa metody do zastosowania <xref:System.Web.UI.WebControls.Style.ForeColor%2A> stylu do ciągu tekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="7d32a-293">Metoda renderuje kod HTML `<span style="color:Navy;">`. <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="7d32a-294">Wywołanie <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody `<span>` zamyka element po wyrenderowaniu tekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="7d32a-295">A <see cref="T:System.Web.UI.WebControls.Style" /> , który określa układ i formatowanie do rozpoczęcia stosowania do bloku znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span></span></param>
        <param name="tag"><span data-ttu-id="7d32a-296">Określa tag otwierającego elementu znaczników, który będzie zawierać obiekt stylu określony w <paramref name="style" />. <see cref="T:System.Web.UI.HtmlTextWriterTag" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <paramref name="style" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-297">Zapisuje tag otwierający elementu znaczników, który zawiera atrybuty, które implementują formatowanie układu i znaków określonego stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-298"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Użyj metody, aby zastosować style, takie jak kolor tła lub szerokość obramowania, do bloku znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="7d32a-299">Metody <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> i<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> umożliwiają karcie urządzenia lub kontrolce Tworzenie znaczników, które używają formatowania znaków określonego stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="7d32a-300">Użyj tej samej wartości dla `style` <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody, która jest używana w odpowiedniej <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="7d32a-301">Przeciążenie metody renderuje tag otwierający elementu określonego przez `tag` parametr. <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="7d32a-302">Następnie Metoda dodaje niezbędne atrybuty i atrybuty stylu do otwierającego tagu elementu, aby wyświetlić ustawienia, które są określone <xref:System.Web.UI.WebControls.Style> przez obiekt. <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="7d32a-303">Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> , aby renderować tag `<span>` otwierający elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-304">Poniższy przykład kodu demonstruje, jak używać klasy niestandardowej o `TextSample`nazwie pochodnej <xref:System.Web.UI.WebControls.WebControl> z <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> klasy, która używa metody do zastosowania <xref:System.Web.UI.WebControls.Style.ForeColor%2A> stylu do ciągu tekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="7d32a-305">Metoda renderuje kod HTML`<span style="color:Navy;">`. <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="7d32a-306">Wywołanie <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody `<span>` zamyka element po wyrenderowaniu tekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-307">Reprezentuje znak równości (<see langword="=" />).</span><span class="sxs-lookup"><span data-stu-id="7d32a-307">Represents the equal sign (<see langword="=" />).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-308">Możesz chcieć użyć <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> pola zamiast <xref:System.Web.UI.HtmlTextWriter.EqualsChar> pola podczas konstruowania ogranicznika otwierającego wartości atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-309">Poniższy przykład kodu pokazuje, `src` jak renderować atrybut i część jego wartości `<img>` dla elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="7d32a-310">Kod używa <xref:System.Web.UI.HtmlTextWriter.EqualsChar> pola <xref:System.Web.UI.HtmlTextWriter.Write%2A> w wywołaniu metody w celu renderowania znaku równości `src` (=) między atrybutem a jego wartością.</span><span class="sxs-lookup"><span data-stu-id="7d32a-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="7d32a-311">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-312">Reprezentuje znak równości (=) i podwójny cudzysłów (") razem w ciągu (=").</span><span class="sxs-lookup"><span data-stu-id="7d32a-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-313">To pole jest używane <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> przez metody i <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> do konstruowania ogranicznika otwierającego wartości atrybutów. <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString></span><span class="sxs-lookup"><span data-stu-id="7d32a-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-314">Poniższy przykład kodu pokazuje, `border` jak renderować atrybut `<table>` dla elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="7d32a-315">Kod wywołuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metodę w celu renderowania atrybutu i jego wartości i <xref:System.Web.UI.HtmlTextWriter.Write%2A> używa metody do renderowania <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> pól i <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> .</span><span class="sxs-lookup"><span data-stu-id="7d32a-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="7d32a-316">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-317">Zapisuje tag zamykający elementu znaczników, aby zakończyć określony układ i formatowanie znaków.</span><span class="sxs-lookup"><span data-stu-id="7d32a-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="7d32a-318"><see cref="T:System.Web.UI.WebControls.Style" /> Określa układ i formatowanie do zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="7d32a-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span></span></param>
        <summary><span data-ttu-id="7d32a-319">Zapisuje tag <see langword="&lt;span&gt;" /> zamykający elementu, aby zakończyć określony układ i formatowanie znaków.</span><span class="sxs-lookup"><span data-stu-id="7d32a-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-320">Przeciążenie metody renderuje tag `<span>` zamykający elementu po tagu zamykającym kontrolki, zamykając element otwarty przez odpowiednie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> wywołanie. <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="7d32a-321">Metody <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> i<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> umożliwiają karcie urządzenia lub kontrolce Tworzenie znaczników zaczynających się i kończących blok przy użyciu formatowania znaków określonego stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="7d32a-322">Użyj tej samej wartości dla `style` <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody, która jest używana w odpowiedniej <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-323">Poniższy przykład kodu demonstruje, jak używać klasy niestandardowej o `TextSample`nazwie pochodnej <xref:System.Web.UI.WebControls.WebControl> z <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> klasy, która używa metody do zastosowania <xref:System.Web.UI.WebControls.Style.ForeColor%2A> stylu do ciągu tekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="7d32a-324">Metoda renderuje kod HTML `<span style="color:Navy;">`. <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="7d32a-325">Wywołanie <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody `<span>` zamyka element po wyrenderowaniu tekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="7d32a-326">A <see cref="T:System.Web.UI.WebControls.Style" /> , który określa układ i formatowanie, które mają zostać zatrzymane do tekstu wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span></span></param>
        <param name="tag"><span data-ttu-id="7d32a-327"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> Określa tag zamykający elementu znaczników, który zawiera atrybuty, które zastosowały określony styl.</span><span class="sxs-lookup"><span data-stu-id="7d32a-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span></span> <span data-ttu-id="7d32a-328">Musi on być zgodny z kluczem przekazaną <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> w odpowiednim wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span></span></param>
        <summary><span data-ttu-id="7d32a-329">Zapisuje tag zamykający określonego elementu znaczników, aby zakończyć określony układ i formatowanie znaków.</span><span class="sxs-lookup"><span data-stu-id="7d32a-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-330">Przeciążenie metody renderuje tag zamykający elementu, który jest określony przez `tag` po tagu zamykającym kontrolki, zamykając element, który został otwarty przez odpowiednie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> wywołanie metody. <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="7d32a-331">Metody <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> i<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> umożliwiają karcie urządzenia lub kontrolce Tworzenie znaczników zaczynających się i kończących blok przy użyciu formatowania znaków określonego stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="7d32a-332">Użyj tej samej wartości dla `style` <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody, która jest używana w odpowiedniej <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metodzie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-333">Poniższy przykład kodu demonstruje, jak używać klasy niestandardowej o `TextSample`nazwie pochodnej <xref:System.Web.UI.WebControls.WebControl> z <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> klasy, która używa metody do zastosowania <xref:System.Web.UI.WebControls.Style.ForeColor%2A> stylu do ciągu tekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="7d32a-334">Metoda renderuje kod HTML `<span style="color:Navy;">`. <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="7d32a-335">Wywołanie <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody `<span>` zamyka element po wyrenderowaniu tekstu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-336">Usuwa wszystkie atrybuty znaczników i stylu we wszystkich właściwościach strony lub kontrolki serwera sieci Web.</span><span class="sxs-lookup"><span data-stu-id="7d32a-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-337">Przed renderowaniem atrybutów dla elementu <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> znaczników wywoływana jest metoda.</span><span class="sxs-lookup"><span data-stu-id="7d32a-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="7d32a-338">Z kolei <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Metoda <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> wywołuje metody i <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> dla każdego atrybutu i stylu do renderowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-339">Poniższy przykład kodu pokazuje, jak używać klasy niestandardowej pochodnej od <xref:System.Web.UI.HtmlTextWriter> klasy, która <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> zastępuje metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="7d32a-340">Gdy jest <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> wywoływana, przesłonięcie sprawdza, czy moduł zapisujący `<a>` tekstu `<label>` renderuje elementy lub:</span><span class="sxs-lookup"><span data-stu-id="7d32a-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="7d32a-341">`style` `color: blue` `style` Jeśli element jest renderowany <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> , Metoda sprawdza, czy atrybut jest renderowany w elemencie i, jeśli nie, tworzy atrybut i ustawia go na. `<label>`</span><span class="sxs-lookup"><span data-stu-id="7d32a-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="7d32a-342">`href` http://www.cohowinery.com `href` Jeśli element jest renderowany <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> , Metoda określa, czy atrybut jest dołączony i, jeśli nie, dodaje do adresu URL. `<a>`</span><span class="sxs-lookup"><span data-stu-id="7d32a-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-343">Czyści wszystkie bufory dla bieżącego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu i powoduje, że wszystkie buforowane dane są zapisywane w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-344">Implementacja <xref:System.Web.UI.HtmlTextWriter> <xref:System.IO.TextWriter.Flush%2A> klasy metodypoprostuwywołuje<xref:System.Web.UI.HtmlTextWriter.Flush%2A> metodę bazową.</span><span class="sxs-lookup"><span data-stu-id="7d32a-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName"><span data-ttu-id="7d32a-345">Ciąg, który zawiera atrybut, dla którego ma zostać uzyskana wartość <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-346">Uzyskuje odpowiednią <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> wartość wyliczenia dla określonego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span></span></summary>
        <returns><span data-ttu-id="7d32a-347">Wartość wyliczenia dla określonego atrybutu; w przeciwnym razie wartość jest nieprawidłowa <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> , jeśli atrybut nie jest elementem członkowskim wyliczenia. <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-348">Jeśli `attrName` jest `null` lub jest ciągiem pustym ("") lub nie można go znaleźć w tabeli nazw atrybutów, zwracany jest wartość- <xref:System.Web.UI.HtmlTextWriterAttribute> 1, która jest wpisana do obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-349">Poniższy przykład kodu demonstruje, jak użyć klasy pochodzącej z <xref:System.Web.UI.HtmlTextWriter> klasy, która <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> zastępuje metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="7d32a-350">Przesłonięcie sprawdza `tagKey` ,czy<xref:System.Web.UI.HtmlTextWriterTag.Font> wartość jest równa wartości pola, co oznacza, że element znacznikówbędzierenderowany.`<font>`</span><span class="sxs-lookup"><span data-stu-id="7d32a-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="7d32a-351">Jeśli tak, przesłonięcie wywołuje <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> metodę, aby dowiedzieć się `<font>` , czy element <xref:System.Web.UI.HtmlTextWriterAttribute.Size> zawiera atrybut.</span><span class="sxs-lookup"><span data-stu-id="7d32a-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="7d32a-352"><xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> Jeśli zwraca `false` `30pt`, metoda wywołuje metodę, która definiuje iustawiajejwartośćna.<xref:System.Web.UI.HtmlTextWriterAttribute.Size> <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey"><span data-ttu-id="7d32a-353">W <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> celu uzyskania nazwy atrybutu znacznika dla.</span><span class="sxs-lookup"><span data-stu-id="7d32a-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span></span></param>
        <summary><span data-ttu-id="7d32a-354">Uzyskuje nazwę atrybutu znacznika skojarzonego z określoną <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> wartością.</span><span class="sxs-lookup"><span data-stu-id="7d32a-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span></span></summary>
        <returns><span data-ttu-id="7d32a-355">Ciąg zawierający nazwę atrybutu znacznika.</span><span class="sxs-lookup"><span data-stu-id="7d32a-355">A string containing the name of the markup attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-356">Metoda zwraca pusty ciąg (""), jeśli `attrKey` nie jest prawidłową <xref:System.Web.UI.HtmlTextWriterAttribute> wartością. <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-357">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> jak używać metody do <xref:System.Web.UI.HtmlTextWriterAttribute.Size> konwersji wartości wyliczenia na nazwę ciągu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName"><span data-ttu-id="7d32a-358">Atrybut stylu, dla którego ma zostać uzyskany <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-359">Uzyskuje wartość <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wyliczenia dla określonego stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span></span></summary>
        <returns><span data-ttu-id="7d32a-360">Wartość <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wyliczenia odpowiadająca. <paramref name="styleName" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-361">Metoda zwraca wartość-1 wpisaną <xref:System.Web.UI.HtmlTextWriterStyle> jako wartość, jeśli `styleName` nie odpowiada żadnej <xref:System.Web.UI.HtmlTextWriterStyle> wartości wyliczenia. <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-362">Poniższy przykład kodu demonstruje, <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> jak zastąpić metodę w klasie pochodnej <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-363">Przesłonięcie określa, `<label>` czy Adiustacja będzie renderowana, i, jeśli tak, <xref:System.Web.UI.HtmlTextWriterStyle.Color> sprawdza element atrybutu. <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="7d32a-364"><xref:System.Web.UI.HtmlTextWriterStyle.Color> `<label>` <xref:System.Web.UI.HtmlTextWriterStyle.Color> <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> Jeśli atrybut nie został zdefiniowany <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> , metoda jest używana jako pierwszy parametr w wywołaniu metody, aby dodać atrybut do elementu znaczników i ustawić atrybut na <xref:System.Web.UI.HtmlTextWriterStyle.Color> `red`.</span><span class="sxs-lookup"><span data-stu-id="7d32a-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey"><span data-ttu-id="7d32a-365">W <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> celu uzyskania nazwy atrybutu stylu dla.</span><span class="sxs-lookup"><span data-stu-id="7d32a-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span></span></param>
        <summary><span data-ttu-id="7d32a-366">Uzyskuje nazwę atrybutu stylu znaczników skojarzoną z określoną <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wartością wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="7d32a-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span></span></summary>
        <returns><span data-ttu-id="7d32a-367">Nazwa atrybutu stylu skojarzona z <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wartością wyliczenia określoną w <paramref name="styleKey" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-368">Jeśli `styleKey` nie jest prawidłowym <xref:System.Web.UI.HtmlTextWriterStyle> obiektem, <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> Metoda zwraca pusty ciąg ("").</span><span class="sxs-lookup"><span data-stu-id="7d32a-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-369">Poniższy przykład kodu pokazuje, jak sprawdzić, `<label>` czy element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="7d32a-370">Jeśli tak, sprawdza, czy <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybut stylu został zdefiniowany w elemencie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="7d32a-371">Jeśli atrybut nie został zdefiniowany <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> , metoda jest wywoływana, <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> a Metoda konwertuje <xref:System.Web.UI.HtmlTextWriterStyle.Color> element członkowski wyliczenia na jego reprezentację ciągu do przekazania do <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="7d32a-372">Element znaczników, dla którego ma zostać uzyskany <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-373">Uzyskuje wartość <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wyliczenia skojarzoną z określonym elementem znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span></span></summary>
        <returns><span data-ttu-id="7d32a-374">Wartość wyliczenia; w przeciwnym razie, <paramref name="tagName" /> Jeśli nie jest skojarzona <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />z <see cref="T:System.Web.UI.HtmlTextWriterTag" /> określoną wartością. <see cref="T:System.Web.UI.HtmlTextWriterTag" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-375">Jeśli `tagName` <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> <xref:System.Web.UI.HtmlTextWriterTag.Unknown> jest `null`, pusty ciąg ("") lub nie można go znaleźć w tabeli nazw tagów znaczników, metoda zwraca pole.</span><span class="sxs-lookup"><span data-stu-id="7d32a-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-376">Poniższy przykład kodu pokazuje, jak zastąpić Przeciążenie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody, która przyjmuje ciąg jako parametr.</span><span class="sxs-lookup"><span data-stu-id="7d32a-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="7d32a-377">Ten ciąg jest przekazywany <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> do metody, która konwertuje ją na odpowiedni <xref:System.Web.UI.HtmlTextWriterTag> element członkowski wyliczenia, a <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> następnie przekazuje je do przeciążenia, które pobiera <xref:System.Web.UI.HtmlTextWriterTag> wartość wyliczenia jako parametr.</span><span class="sxs-lookup"><span data-stu-id="7d32a-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><span data-ttu-id="7d32a-378"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> Do uzyskania elementu znaczników dla.</span><span class="sxs-lookup"><span data-stu-id="7d32a-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span></span></param>
        <summary><span data-ttu-id="7d32a-379">Uzyskuje element znaczników skojarzony z określoną <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartością wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="7d32a-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span></span></summary>
        <returns><span data-ttu-id="7d32a-380">Ciąg reprezentujący element znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-380">A string representing the markup element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-381">Jeśli `tagKey` nie jest prawidłową <xref:System.Web.UI.HtmlTextWriterTag> wartością, <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> Metoda zwraca pusty ciąg ("").</span><span class="sxs-lookup"><span data-stu-id="7d32a-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-382">Poniższy przykład kodu demonstruje sposób zamykania `<font>` elementu przy <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="7d32a-383">Metoda wywołuje metodę w celu konwersji <xref:System.Web.UI.HtmlTextWriterTag.Font> wartości na ciąg. <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-384">Pobiera lub ustawia liczbę pozycji tabulatora, aby zwiększyć wcięcie początku każdego wiersza znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span></span></summary>
        <value><span data-ttu-id="7d32a-385">Liczba pozycji tabulacji do wcięcia poszczególnych wierszy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-385">The number of tab positions to indent each line.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-386">Wcięcie jest wykonywane przez zapisanie ciągu, który jest określony przez `tabString` parametr <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> konstruktora liczbę razy określony przez <xref:System.Web.UI.HtmlTextWriter.Indent%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="7d32a-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="7d32a-387"><xref:System.Web.UI.HtmlTextWriter.Indent%2A> Jeśli właściwość jest ustawiona na wartość ujemną, zostanie zmieniona na 0 przed zapisaniem.</span><span class="sxs-lookup"><span data-stu-id="7d32a-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-388">Poniższy przykład kodu demonstruje, jak zwiększyć wartość przypisaną do <xref:System.Web.UI.HtmlTextWriter.Indent%2A> właściwości po dodaniu atrybutów do tagu `<span>` otwierającego elementu i <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="7d32a-389">Zwiększa to wcięcie dla dowolnego znacznika, który jest renderowany wewnątrz `<span>` elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-390">Pobiera lub ustawia składnik zapisywania tekstu, który zapisuje wewnętrzną zawartość elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-390">Gets or sets the text writer that writes the inner content of the markup element.</span></span></summary>
        <value><span data-ttu-id="7d32a-391">A <see cref="T:System.IO.TextWriter" /> , który zapisuje wewnętrzną zawartość znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-392">Wewnętrzna zawartość znaczników jest tekstem znalezionym między tagiem otwierającym i zamykającym elementu języka znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="7d32a-393">Jeśli właściwość jest ustawiona <xref:System.IO.TextWriter> na obiekt, który <xref:System.Web.HttpWriter> jest wystąpieniem klasy, ten fakt jest zanotowany i zapisywane jest oddzielne odwołanie. <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-394">Poniższy przykład kodu pokazuje, jak używać niestandardowej kontrolki serwera sieci Web, pochodzącej od <xref:System.Web.UI.WebControls.WebControl> klasy, która <xref:System.Web.UI.Control.Render%2A> zastępuje metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="7d32a-395">Używa <xref:System.Web.UI.HtmlTextWriter> klasy do `<font>` napisania elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="7d32a-396">Po wpisaniu tagu otwierającego elementu używa <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> właściwości, aby napisać ciąg `"<br> The time on the server:"` i połączyć ten ciąg <xref:System.DateTime.Now%2A?displayProperty=nameWithType> z wartością właściwości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-397">Określa, czy określony atrybut znacznika i jego wartość są renderowane podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7d32a-398"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Skojarzona z atrybutem znacznika.</span><span class="sxs-lookup"><span data-stu-id="7d32a-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-399">Określa, czy określony atrybut znacznika i jego wartość są renderowane podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns><span data-ttu-id="7d32a-400"><see langword="true" />Jeśli atrybut jest renderowany podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-400"><see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-401">Aby uzyskać wartość, która ma zostać przypisana <xref:System.Web.UI.HtmlTextWriterAttribute> do obiektu, <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> Użyj przeciążenia zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-402">Poniższy przykład kodu pokazuje, jak używać przesłonięcia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody w klasie, która dziedziczy <xref:System.Web.UI.HtmlTextWriter> z klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-403">Przesłonięcie sprawdza <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> , `<font>` czy element znaczników będzie renderowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="7d32a-404">Jeśli tak, przesłonięcie wywołuje <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> metodę, aby sprawdzić, `<font>` czy element zawiera <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybut.</span><span class="sxs-lookup"><span data-stu-id="7d32a-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="7d32a-405">Jeśli nie, <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Metoda <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> wywołuje <xref:System.Web.UI.HtmlTextWriterAttribute.Size> metodę, która definiuje atrybut i ustawia jego wartość na `30pt`.</span><span class="sxs-lookup"><span data-stu-id="7d32a-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute *  -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7d32a-406"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Skojarzona z atrybutem znacznika.</span><span class="sxs-lookup"><span data-stu-id="7d32a-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-407">Wartość przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-407">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-408">Określa, czy określony atrybut znacznika i jego wartość są renderowane podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns><span data-ttu-id="7d32a-409"><see langword="true" />Jeśli atrybut jest renderowany podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-409"><see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-410">Jeśli metoda zwraca `true`, wartość, <xref:System.Web.UI.HtmlTextWriterAttribute> która ma zostać przypisana do obiektu, jest zwracana w `value` parametrze. <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-411">Określa, czy atrybut stylu znaczników jest renderowany podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7d32a-412"><see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Skojarzona z atrybutem.</span><span class="sxs-lookup"><span data-stu-id="7d32a-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-413">Określa, czy określony atrybut stylu znaczników jest renderowany podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns><span data-ttu-id="7d32a-414"><see langword="true" />Jeśli atrybut będzie renderowany podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-414"><see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-415">Aby uzyskać wartość, która będzie renderowana z określonym atrybutem stylu, użyj <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> przeciążenia <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-416">Poniższy przykład kodu pokazuje, jak sprawdzić, `<label>` czy element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="7d32a-417">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> Metoda sprawdza, <xref:System.Web.UI.HtmlTextWriterStyle.Color> czy atrybut stylu został zdefiniowany w elemencie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="7d32a-418">Jeśli atrybut nie został zdefiniowany <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> , metoda definiuje <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybut i ustawia jego wartość na `red`. <xref:System.Web.UI.HtmlTextWriterStyle.Color></span><span class="sxs-lookup"><span data-stu-id="7d32a-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle *  -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7d32a-419"><see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Skojarzona z atrybutem.</span><span class="sxs-lookup"><span data-stu-id="7d32a-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-420">Wartość przypisana do atrybutu style.</span><span class="sxs-lookup"><span data-stu-id="7d32a-420">The value assigned to the style attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-421">Określa, czy określony atrybut stylu znacznika i jego wartość są renderowane podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span></span></summary>
        <returns><span data-ttu-id="7d32a-422"><see langword="true" />Jeśli atrybut i jego wartość będą renderowane podczas następnego wywołania <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody; w przeciwnym razie,. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-422"><see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-423">Jeśli metoda zwraca `true`, wartość, <xref:System.Web.UI.HtmlTextWriterStyle> która ma zostać przypisana do atrybutu, jest zwracana w `value` parametrze. <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="7d32a-424">Ciąg, który zawiera nazwę atrybutu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="7d32a-424">A string that contains the name of the attribute to check.</span></span></param>
        <summary><span data-ttu-id="7d32a-425">Sprawdza atrybut, aby upewnić się, że może być renderowany w tagu <see langword="&lt;form&gt;" /> otwierającym elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span></span></summary>
        <returns><span data-ttu-id="7d32a-426">Zawsze <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-426">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-427">Implementacja <xref:System.Web.UI.HtmlTextWriter> klasy<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> zwraca`true` dla wszystkich atrybutów.</span><span class="sxs-lookup"><span data-stu-id="7d32a-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="7d32a-428">Zastąp <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> , aby ograniczyć atrybuty, które mogą być renderowane w tagu `<form>` otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-429">Zastąp <see langword="true" /> <see langword="&lt;form&gt;" /> metodę, aby zwrócić tylko te atrybuty, które mogą być zawarte w elemencie <see cref="T:System.Web.UI.HtmlTextWriter" /> znacznika, dla którego Klasa pochodna klasy jest zamierzona. <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-429">Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-430">Pobiera lub ustawia ciąg terminatora wiersza używany przez <see cref="T:System.Web.UI.HtmlTextWriter" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="7d32a-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <value><span data-ttu-id="7d32a-431">Ciąg zakończenia wiersza używany przez bieżący <see cref="T:System.Web.UI.HtmlTextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-432">Domyślny ciąg terminatora linii jest znakiem powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="7d32a-433">Ciąg terminatora wiersza jest zapisywana w strumieniu wyjściowym za każdym <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> razem, gdy jedna z metod jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="7d32a-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="7d32a-434">Jeśli właściwość jest ustawiona na `null`, używany jest domyślny znak nowego wiersza. <xref:System.Web.UI.HtmlTextWriter.NewLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-435">Poniższy przykład kodu pokazuje, jak używać klasy niestandardowej pochodnej od <xref:System.Web.UI.HtmlTextWriter> klasy, która <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> zastępuje metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="7d32a-436">Gdy jest <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> wywoływana, przesłonięcie sprawdza, czy moduł zapisujący `<a>` tekstu `<label>` renderuje elementy lub.</span><span class="sxs-lookup"><span data-stu-id="7d32a-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="7d32a-437">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Metoda określa, czy atrybut stylu jest zdefiniowany dla etykiety.</span><span class="sxs-lookup"><span data-stu-id="7d32a-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="7d32a-438">Jeśli styl nie jest zdefiniowany, <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Metoda ustawia wartość domyślną `style:color` dla atrybutu na niebieską.</span><span class="sxs-lookup"><span data-stu-id="7d32a-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="7d32a-439">Metoda następnie używa właściwości, <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> aby wstawić podział wiersza w znaczniku znacznika i zapisuje wszystkie inne zdefiniowane atrybuty. <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-440">Ciąg zawierający nazwę atrybutu do renderowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-440">A string containing the name of the attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-441">Ciąg zawierający wartość, która jest przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-441">A string containing the value that is assigned to the attribute.</span></span></param>
        <param name="key"><span data-ttu-id="7d32a-442"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Skojarzona z atrybutem znacznika.</span><span class="sxs-lookup"><span data-stu-id="7d32a-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-443">Określa, czy określony atrybut znacznika i jego wartość mogą być renderowane do bieżącego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="7d32a-444">Zawsze <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-444">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-445">`true`Implementacja <xref:System.Web.UI.HtmlTextWriter> klasy<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="7d32a-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="7d32a-446"><xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> Przesłonięcia mogą określić, czy atrybut będzie renderowany na stronie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-447">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> jak zastąpić metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="7d32a-448"><xref:System.Web.UI.HtmlTextWriterAttribute.Size> `30pt` `30pt` <xref:System.Web.UI.HtmlTextWriterAttribute.Size> <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Jeśli atrybut jest renderowany, ale<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> wartość nie jest, przesłonięcie wywołuje metodę, aby dodać atrybut i ustawić jej wartość na. <xref:System.Web.UI.HtmlTextWriterAttribute.Size></span><span class="sxs-lookup"><span data-stu-id="7d32a-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-449">Jeśli dziedziczysz z <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy, możesz <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> zastąpić metodę, aby przywrócić <see langword="false" /> , aby zapobiec renderowaniu atrybutu w ogóle, jest renderowany w określonym elemencie lub renderowany dla określonego znacznika.</span><span class="sxs-lookup"><span data-stu-id="7d32a-449">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</span></span> <span data-ttu-id="7d32a-450">Na przykład, jeśli nie chcesz, aby obiekt pochodzący od <see cref="T:System.Web.UI.HtmlTextWriter" /> nie był <see langword="bgcolor" /> renderowany atrybutu do <see langword="&lt;table&gt;" /> elementów, możesz przesłonić <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> i zwrócić <see langword="false" /> , <paramref name="name" /> gdy <see langword="bgcolor" /> są przekazywane i wartość właściwości to <see langword="table" />. <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-450">For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-451">Ciąg zawierający nazwę atrybutu stylu do renderowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-451">A string containing the name of the style attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-452">Ciąg zawierający wartość, która jest przypisana do atrybutu style.</span><span class="sxs-lookup"><span data-stu-id="7d32a-452">A string containing the value that is assigned to the style attribute.</span></span></param>
        <param name="key"><span data-ttu-id="7d32a-453"><see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Skojarzona z atrybutem style.</span><span class="sxs-lookup"><span data-stu-id="7d32a-453">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-454">Określa, czy określony atrybut stylu znacznika i jego wartość mogą być renderowane do bieżącego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-454">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="7d32a-455">Zawsze <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-455">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-456">`true`Implementacja <xref:System.Web.UI.HtmlTextWriter> klasy<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="7d32a-456">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="7d32a-457"><xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> Przesłonięcia mogą określić, czy atrybut stylu będzie renderowany na stronie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-457">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-458">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> jak zastąpić metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-458">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="7d32a-459"><xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> `purple` <xref:System.Web.UI.HtmlTextWriterStyle.Color> <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> `purple`Jeśli atrybut <xref:System.Web.UI.HtmlTextWriterStyle.Color> stylu jest renderowany, ale wartość nie jest, przesłonięcie używa metody, aby ustawić atrybut na. <xref:System.Web.UI.HtmlTextWriterStyle.Color></span><span class="sxs-lookup"><span data-stu-id="7d32a-459">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-460">Jeśli dziedziczysz z <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy, możesz <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> przesłonić metodę, aby przywrócić <see langword="false" /> atrybut stylu w ogóle, który jest renderowany w określonym elemencie lub jest renderowany dla określonego języka znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-460">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</span></span> <span data-ttu-id="7d32a-461">Na przykład, jeśli nie chcesz, aby obiekt, który jest wyprowadzany <see cref="T:System.Web.UI.HtmlTextWriter" /> z <see langword="&lt;p&gt;" /> elementu w <see langword="color" /> celu renderowania atrybutu stylu, można przesłonić <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> i zwrócić <see langword="false" /> , gdy <paramref name="name" /> przebiega <see langword="color" />i wartość <see langword="p" />właściwości to. <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-461">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-462">Ciąg zawierający nazwę elementu do renderowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-462">A string containing the name of the element to render.</span></span></param>
        <param name="key"><span data-ttu-id="7d32a-463"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> Skojarzona z elementem.</span><span class="sxs-lookup"><span data-stu-id="7d32a-463">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span></span></param>
        <summary><span data-ttu-id="7d32a-464">Określa, czy określony element znaczników będzie renderowany na stronie żądającej.</span><span class="sxs-lookup"><span data-stu-id="7d32a-464">Determines whether the specified markup element will be rendered to the requesting page.</span></span></summary>
        <returns><span data-ttu-id="7d32a-465">Zawsze <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-465">Always <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-466">`true`Implementacja <xref:System.Web.UI.HtmlTextWriter> klasy<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> zawsze zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="7d32a-466">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="7d32a-467"><xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> Przesłonięcia mogą określić, czy element będzie renderowany na stronie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-467">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-468">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> jak zastąpić metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-468">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="7d32a-469">Jeśli element jest renderowany <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> , przesłonięcie używa metody, <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> aby określić, czy <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybut jest renderowany. <xref:System.Web.UI.HtmlTextWriterTag.Font></span><span class="sxs-lookup"><span data-stu-id="7d32a-469">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="7d32a-470">W przeciwnym razie używa <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody, aby <xref:System.Web.UI.HtmlTextWriterAttribute.Size> utworzyć atrybut i ustawić jego wartość na `20pt`.</span><span class="sxs-lookup"><span data-stu-id="7d32a-470">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-471">W przypadku dziedziczenia z <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy można <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> przesłonić metodę, aby <see langword="false" /> zapobiec renderowaniu elementu znaczników w ogóle lub dla określonego języka oznakowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-471">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language.</span></span> <span data-ttu-id="7d32a-472">Na przykład, jeśli nie chcesz, aby obiekt pochodzący z <see cref="T:System.Web.UI.HtmlTextWriter" /> <see langword="&lt;font&gt;" /> elementu był renderowany <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> , można zastąpić metodę, aby zwracała <see langword="false" /> się, gdy strona zostanie zażądana, która zawiera <see langword="&lt;font&gt;" /> element.</span><span class="sxs-lookup"><span data-stu-id="7d32a-472">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-473">Zapisuje serię ciągów tabulacji, które reprezentują poziom wcięcia dla wiersza znaków znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-473">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-474">Metoda używa właściwości, <xref:System.Web.UI.HtmlTextWriter.Indent%2A> aby określić liczbę ciągów tabulacji do zapisu w celu uzyskania żądanego wcięcia. <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-474">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="7d32a-475">Ciąg tabulacji jest określany za <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> pomocą konstruktora.</span><span class="sxs-lookup"><span data-stu-id="7d32a-475">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="7d32a-476">Jeśli nie określono ciągu tabulatora, <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> używana jest stała (`\t`).</span><span class="sxs-lookup"><span data-stu-id="7d32a-476">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-477">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> jak zastąpić metodę w klasie, która jest pochodną <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-477">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-478">Przesłonięcie zawsze <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> używa stałej do wykonania wcięcia. <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-478">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-479">Usuwa ostatnio zapisany element znaczników z listy renderowane elementy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-479">Removes the most recently saved markup element from the list of rendered elements.</span></span></summary>
        <returns><span data-ttu-id="7d32a-480">A <see cref="T:System.String" /> zawierający ostatnio renderowany element znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-480">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-481">Elementy są dodawane do listy renderowane elementy znaczników przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-481">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="7d32a-482">Metoda usuwa elementy znaczników z listy przez <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> wywołanie metody. <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-482">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7d32a-483">Lista renderowanych elementów jest pusta.</span><span class="sxs-lookup"><span data-stu-id="7d32a-483">The list of rendered elements is empty.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag"><span data-ttu-id="7d32a-484">Tag zamykający elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-484">The closing tag of the markup element.</span></span></param>
        <summary><span data-ttu-id="7d32a-485">Zapisuje określony element znaczników do późniejszego użycia podczas generowania tagu końcowego dla elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-485">Saves the specified markup element for later use when generating the end tag for a markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-486">Elementy są dodawane do listy renderowane elementy znaczników, gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Metoda <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> wywołuje metodę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-486">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="7d32a-487"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Metoda usuwa elementy znaczników z listy po renderowania tagu końcowego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-487">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-488">Ciąg zawierający nazwę atrybutu znacznika do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-488">A string containing the name of the markup attribute to register.</span></span></param>
        <param name="key"><span data-ttu-id="7d32a-489"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Odpowiada nazwa atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-489">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span></span></param>
        <summary><span data-ttu-id="7d32a-490">Rejestruje atrybuty znaczników, czy literały lub dynamicznie generowane, z pliku źródłowego, aby mogły być prawidłowo renderowane do żądającego klienta.</span><span class="sxs-lookup"><span data-stu-id="7d32a-490">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-491">Wstępnie zdefiniowane atrybuty języka HTML Markup Language są rejestrowane przez wywołania <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> metody podczas tworzenia pierwszego <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-491">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="7d32a-492">Atrybuty dynamiczne mogą być rejestrowane przy użyciu <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> metody w innym czasie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-492">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="7d32a-493">Tabela rejestracji używana przez <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> metodę to `static`, więc Rejestracja atrybutów ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter> obiektów na komputerze-hoście.</span><span class="sxs-lookup"><span data-stu-id="7d32a-493">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-494">Ciąg przesłany z pliku źródłowego, określając nazwę stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-494">The string passed from the source file specifying the style name.</span></span></param>
        <param name="key"><span data-ttu-id="7d32a-495"><see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Odpowiada określony styl.</span><span class="sxs-lookup"><span data-stu-id="7d32a-495">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span></span></param>
        <summary><span data-ttu-id="7d32a-496">Rejestruje właściwości stylu znaczników, czy są to literały czy dynamicznie generowane, z pliku źródłowego, aby mogły być prawidłowo renderowane do żądającego klienta.</span><span class="sxs-lookup"><span data-stu-id="7d32a-496">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-497">Wstępnie zdefiniowane atrybuty kaskadowego arkusza stylów (CSS) języka HTML Markup Language są rejestrowane przez wywołania <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> metody podczas tworzenia pierwszego <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-497">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="7d32a-498">Atrybuty stylu dynamicznego można zarejestrować za pomocą <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> metody w innym czasie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-498">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="7d32a-499">Tabela rejestracji używana przez <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> metodę to `static`, więc Rejestracja atrybutów ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter> obiektów na komputerze-hoście.</span><span class="sxs-lookup"><span data-stu-id="7d32a-499">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-500">Ciąg, który zawiera tag HTML.</span><span class="sxs-lookup"><span data-stu-id="7d32a-500">A string that contains the HTML tag.</span></span></param>
        <param name="key"><span data-ttu-id="7d32a-501">Określa <see cref="T:System.Web.UI.HtmlTextWriterTag" /> , który element ma być renderowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-501">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span></span></param>
        <summary><span data-ttu-id="7d32a-502">Rejestruje znaczniki znaczników, czy są to literały czy dynamicznie generowane, z pliku źródłowego, aby mogły być prawidłowo renderowane do żądającego klienta.</span><span class="sxs-lookup"><span data-stu-id="7d32a-502">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-503">Wstępnie zdefiniowane znaczniki znaczników języka HTML są rejestrowane przez wywołania <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> metody podczas tworzenia pierwszego <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-503">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="7d32a-504">Dynamiczne Tagi znaczników można zarejestrować za pomocą <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> metody w innym czasie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-504">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="7d32a-505">Tabela rejestracji używana przez <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> metodę to `static`, więc Rejestracja tagów ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter> obiektów na komputerze-hoście.</span><span class="sxs-lookup"><span data-stu-id="7d32a-505">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-506">Zapisuje dowolny tekst lub odstępy występujące po treści i przed tagiem zamykającym elementu Markup w strumieniu wyjściowym znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-506">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span></span></summary>
        <returns><span data-ttu-id="7d32a-507">Ciąg, który zawiera odstępy lub tekst do zapisu po zawartości elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-507">A string that contains the spacing or text to write after the content of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-508">Metoda <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> może być przydatna, jeśli chcesz wstawić elementy podrzędne do bieżącego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-508">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-509">Poniższy przykład kodu pokazuje, jak zastąpić metodę w <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> klasie pochodnej klasy, <xref:System.Web.UI.HtmlTextWriter> aby określić, czy `<label>` element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-509">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="7d32a-510">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> przesłonięcie wstawia tag `<font>` zamykający elementu bezpośrednio przed tagiem `<label>` zamykającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-510">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="7d32a-511">Jeśli element inny niż `<label>` jest renderowany <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> , używana jest metoda podstawowa.</span><span class="sxs-lookup"><span data-stu-id="7d32a-511">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-512">Implementacja <see cref="T:System.Web.UI.HtmlTextWriter" /> klasyzwraca<see langword="null" />metodę. <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-512">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="7d32a-513">Przesłoń <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> , jeśli chcesz pisać tekst lub odstępy po zawartości elementu, ale przed tagiem zamykającym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-513">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-514">Zapisuje wszystkie odstępy lub tekst występujący po tagu zamykającym dla elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-514">Writes any spacing or text that occurs after the closing tag for a markup element.</span></span></summary>
        <returns><span data-ttu-id="7d32a-515">Odstępy lub tekst do zapisu po tagu zamykającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-515">The spacing or text to write after the closing tag of the element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-516">Metoda <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> może być przydatna, jeśli chcesz renderować dodatkowe tagi zamykające po tagu elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-516">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-517">Poniższy przykład kodu pokazuje, jak zastąpić metodę, <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> aby określić, czy Klasa pochodna <xref:System.Web.UI.HtmlTextWriter> klasy jest renderowana `<label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-517">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="7d32a-518">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> zastąpienie wstawia tag `<font>` zamykający elementu bezpośrednio po `<label>` elemencie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-518">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="7d32a-519">Jeśli nie `<label>` jest elementem <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> , używana jest metoda podstawowa.</span><span class="sxs-lookup"><span data-stu-id="7d32a-519">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-520">Implementacja <see cref="T:System.Web.UI.HtmlTextWriter" /> klasyzwraca<see langword="null" />metodę. <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-520">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="7d32a-521">Przesłoń <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> , jeśli chcesz pisać tekst lub odstępy po tagu zamykającym element.</span><span class="sxs-lookup"><span data-stu-id="7d32a-521">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-522">Zapisuje dowolny tekst lub odstępy przed zawartością i po tagu otwierającym elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-522">Writes any text or spacing before the content and after the opening tag of a markup element.</span></span></summary>
        <returns><span data-ttu-id="7d32a-523">Tekst lub odstępy do zapisu przed zawartością elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-523">The text or spacing to write prior to the content of the element.</span></span> <span data-ttu-id="7d32a-524">Jeśli nie zostanie zastąpiony <see langword="null" />, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> zwraca.</span><span class="sxs-lookup"><span data-stu-id="7d32a-524">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-525"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> Metoda może być przydatna, jeśli chcesz wstawić elementy podrzędne do bieżącego elementu znaczników przed znacznikiem wewnętrznym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-525">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-526">Poniższy przykład kodu pokazuje, jak zastąpić metodę, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> aby określić, czy Klasa pochodna <xref:System.Web.UI.HtmlTextWriter> klasy `<label>` ma renderować element.</span><span class="sxs-lookup"><span data-stu-id="7d32a-526">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="7d32a-527">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> przesłonięcie wstawia tag `<font>` otwierającego elementu bezpośrednio po tagu `<label>` otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-527">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="7d32a-528">Jeśli nie `<label>` jest elementem <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> , używana jest metoda podstawowa.</span><span class="sxs-lookup"><span data-stu-id="7d32a-528">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-529">Implementacja <see cref="T:System.Web.UI.HtmlTextWriter" /> klasyzwraca<see langword="null" />metodę. <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-529">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="7d32a-530">Przesłoń <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> , jeśli chcesz pisać tekst lub odstępy po tagu otwierającym, ale przed zawartością elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-530">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-531">Zapisuje dowolny tekst lub odstępy, które występują przed tagiem otwierającym elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-531">Writes any text or spacing that occurs before the opening tag of a markup element.</span></span></summary>
        <returns><span data-ttu-id="7d32a-532">Tekst lub odstępy do zapisu przed tagiem otwierającym elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-532">The text or spacing to write before the markup element opening tag.</span></span> <span data-ttu-id="7d32a-533">Jeśli nie zostanie zastąpiony, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-533">If not overridden, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-534">Metoda <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> może być przydatna, jeśli chcesz renderować dodatkowe Tagi otwierające przed tagiem otwierającym zamierzonego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-534">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-535">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> jak zastąpić metodę, aby określić, czy Klasa, która jest pochodną <xref:System.Web.UI.HtmlTextWriter> klasy `<label>` ma renderować element.</span><span class="sxs-lookup"><span data-stu-id="7d32a-535">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="7d32a-536">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> przesłonięcie wstawia tag `<font>` otwierającego elementu bezpośrednio przed `<label>` elementem.</span><span class="sxs-lookup"><span data-stu-id="7d32a-536">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="7d32a-537">Jeśli nie renderuje `<label>` elementu <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> , używana jest metoda podstawowa.</span><span class="sxs-lookup"><span data-stu-id="7d32a-537">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-538">Implementacja <see cref="T:System.Web.UI.HtmlTextWriter" /> klasyzwraca<see langword="null" />metodę. <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-538">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />.</span></span> <span data-ttu-id="7d32a-539">Zastąp <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> , jeśli chcesz napisać tekst lub odstępy przed tagiem otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-539">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-540">Zapisuje tag otwierającego elementu Markup w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-540">Writes the opening tag of a markup element to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="7d32a-541">Ciąg zawierający nazwę elementu znaczników, dla którego ma być renderowany tag otwierający.</span><span class="sxs-lookup"><span data-stu-id="7d32a-541">A string containing the name of the markup element for which to render the opening tag.</span></span></param>
        <summary><span data-ttu-id="7d32a-542">Zapisuje tag otwierającego określonego elementu Markup Language w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-542">Writes the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-543">Użyj przesłonięcia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> metody, jeśli element Markup nie <xref:System.Web.UI.HtmlTextWriterTag> jest jedną z wartości wyliczenia. <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-543">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="7d32a-544">Aby wygenerować element znaczników przy użyciu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody, najpierw <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Wywołaj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody i, w razie potrzeby,, aby określić atrybuty elementu lub atrybuty stylu, które mają być wyświetlane w tagu otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-544">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="7d32a-545">Po wygenerowaniu znaczników wewnętrznych Wywołaj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metodę, aby wygenerować tag zamykający.</span><span class="sxs-lookup"><span data-stu-id="7d32a-545">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-546">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> jak wywołać metodę w kontrolce niestandardowej w celu renderowania tagu otwierającego niestandardowego `MyTag` elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-546">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="7d32a-547">Przykład kodu wywołuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metodę w celu renderowania oznaczeń wewnętrznych, a następnie <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> wywołuje metodę, aby zamknąć element.</span><span class="sxs-lookup"><span data-stu-id="7d32a-547">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="7d32a-548">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-548">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><span data-ttu-id="7d32a-549">Jedna z <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartości, która definiuje tag otwierającego elementu znaczników do renderowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-549">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span></span></param>
        <summary><span data-ttu-id="7d32a-550">Zapisuje tag otwierający elementu znaczników skojarzonego z określoną <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartością wyliczenia do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-550">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-551"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Użyj przeciążenia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> metody, jeśli element znacznika jest typu znanego <xref:System.Web.UI.HtmlTextWriterTag> , który jest jednym z wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="7d32a-551">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="7d32a-552">Aby wygenerować element znaczników przy użyciu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody, najpierw <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Wywołaj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody i, w razie potrzeby,, aby określić atrybuty elementu lub atrybuty stylu, które mają być wyświetlane w tagu otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-552">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="7d32a-553">Po wygenerowaniu znaczników wewnętrznych Wywołaj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metodę, aby wygenerować tag zamykający.</span><span class="sxs-lookup"><span data-stu-id="7d32a-553">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-554">Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody do wyprowadzania tagu `<img>` otwierającego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-554">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="7d32a-555">Atrybuty, które są dodawane do elementu przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metodę, będą znajdować się w tagu otwierającym. `<img>`</span><span class="sxs-lookup"><span data-stu-id="7d32a-555">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="7d32a-556"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Metoda jest używana do generowania tagu zamykającego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-556">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="7d32a-557">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-557">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-558">Zapisuje tag końcowy elementu znaczników w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-558">Writes the end tag of a markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-559">Wywołaj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metodę po wywołaniu przeciążenia i po wyrenderowaniu całej zawartości między otwierającym i zamykającym tagiem (znakiem wewnętrznym) elementu. <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-559">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-560">Poniższy przykład kodu demonstruje, <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> jak wywołać metodę po <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> obu metodach, które generują tag otwierającego i <xref:System.Web.UI.HtmlTextWriter.Write%2A> metodę, która renderuje znacznik wewnętrzny między tagiem otwierającym i zamykającym niestandardowego `MyTag` element został wywołany.</span><span class="sxs-lookup"><span data-stu-id="7d32a-560">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="7d32a-561">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-561">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-562">Reprezentuje spację i znacznik ukośnika (/) znacznika znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-562">Represents a space and the self-closing slash mark (/) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-563"><xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> Pole jest używane w elementach znaczników, które są zamknięte.</span><span class="sxs-lookup"><span data-stu-id="7d32a-563">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="7d32a-564">Na przykład:</span><span class="sxs-lookup"><span data-stu-id="7d32a-564">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-565">Reprezentuje znak ukośnika zamykającego i prawego nawiasu&gt;ostrego (/) elementu znaczników, które są zamykane.</span><span class="sxs-lookup"><span data-stu-id="7d32a-565">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-566">To pole jest używane przez metodę podczas konstruowania samozamykających elementów znaczników. <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd></span><span class="sxs-lookup"><span data-stu-id="7d32a-566">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-567">Poniższy przykład kodu pokazuje, jak renderować wartość właściwości niestandardowej `FileName` , a następnie znak cudzysłowu i znaki reprezentowane <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> przez pole.</span><span class="sxs-lookup"><span data-stu-id="7d32a-567">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="7d32a-568">Przykładowy kod wywołuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metodę i <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> przekazuje pole jako argument parametru, aby zamknąć element.</span><span class="sxs-lookup"><span data-stu-id="7d32a-568">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="7d32a-569">Ten przykład kodu renderuje `FileName` wartość właściwości, a następnie następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-569">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-570">Reprezentuje średnika (;).</span><span class="sxs-lookup"><span data-stu-id="7d32a-570">Represents the semicolon (;).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-571">Przekaż pole jako argument parametru <xref:System.Web.UI.HtmlTextWriter.Write%2A> w wywołaniu metody, gdy chcesz renderować średnik z kontrolki niestandardowej lub karty. <xref:System.Web.UI.HtmlTextWriter.SemicolonChar></span><span class="sxs-lookup"><span data-stu-id="7d32a-571">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-572">Poniższy przykład kodu demonstruje sposób ręcznego renderowania szeregu stylów dla elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-572">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="7d32a-573">Przykład kodu używa <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania `font-size` i `border-style` atrybutów stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-573">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="7d32a-574">To pole jest używane jako parametr <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do `font-size` oddzielenia wartości atrybutu od początku `border-style` atrybutu. <xref:System.Web.UI.HtmlTextWriter.SemicolonChar></span><span class="sxs-lookup"><span data-stu-id="7d32a-574">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="7d32a-575">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-575">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-576">Reprezentuje apostrof (').</span><span class="sxs-lookup"><span data-stu-id="7d32a-576">Represents an apostrophe (').</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-577">Użyj pola <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> , gdy jest to konieczne do renderowania apostrofu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-577">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-578">Reprezentuje znak ukośnika (/).</span><span class="sxs-lookup"><span data-stu-id="7d32a-578">Represents the slash mark (/).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-579"><xref:System.Web.UI.HtmlTextWriter.SlashChar> Użyj pola, aby renderować znaczniki ukośnika podczas wpisywania adresu URL.</span><span class="sxs-lookup"><span data-stu-id="7d32a-579">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="7d32a-580"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Metoda<xref:System.Web.UI.HtmlTextWriter.SlashChar> używa pola podczas pisania tagu zamykającego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-580">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-581">Poniższy przykład kodu demonstruje, `src` jak ręcznie renderować atrybut `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-581">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="7d32a-582">W przykładzie kodu użyto <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody <xref:System.Web.UI.HtmlTextWriter.SlashChar> z polem jako parametru do renderowania ukośników w ścieżce stosowanej do `src` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-582">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="7d32a-583">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-583">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-584">Reprezentuje znak spacji ().</span><span class="sxs-lookup"><span data-stu-id="7d32a-584">Represents a space ( ) character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-585">To pole jest używane <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> przez metody i <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> podczas zapisywania separatorów między elementami i atrybutami. <xref:System.Web.UI.HtmlTextWriter.SpaceChar></span><span class="sxs-lookup"><span data-stu-id="7d32a-585">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-586">Ta sekcja zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-586">This section provides two code examples.</span></span> <span data-ttu-id="7d32a-587">Pierwszy z nich pokazuje, jak utworzyć tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="7d32a-587">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="7d32a-588">Drugi pokazuje, jak używać tablicy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-588">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="7d32a-589">Te przykłady kodu generują następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-589">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="7d32a-590">Poniższy przykład kodu pokazuje, jak utworzyć <xref:System.Char> tablicę <xref:System.Web.UI.HtmlTextWriter.SpaceChar> zawierającą pole.</span><span class="sxs-lookup"><span data-stu-id="7d32a-590">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="7d32a-591">Poniższy przykład kodu pokazuje, jak używać tablicy, która została utworzona w poprzednim przykładzie kodu jako parametru podczas wywoływania <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-591">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-592">Reprezentuje znak równości (<see langword=":" />) używany do ustawiania atrybutów stylu równych wartości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-592">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-593">To pole jest używane przez metodę do rozgraniczania nazw i wartości stylów. <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar></span><span class="sxs-lookup"><span data-stu-id="7d32a-593">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-594">Poniższy przykład kodu demonstruje sposób renderowania `FontWeight` atrybutu i `bold` wartości do tagu otwierającego elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-594">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="7d32a-595">Przykład kodu używa <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> z polem jako parametru do renderowania znaku, który ustawia wartość każdego atrybutu stylu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-595">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="7d32a-596">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-596">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-597">Pobiera lub ustawia <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość dla określonego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-597">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span></span></summary>
        <value><span data-ttu-id="7d32a-598">Element znaczników, który ma renderowany tag otwierający.</span><span class="sxs-lookup"><span data-stu-id="7d32a-598">The markup element that is having its opening tag rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-599">Właściwość jest używana tylko dla klas, które dziedziczą <xref:System.Web.UI.HtmlTextWriter> z klasy. <xref:System.Web.UI.HtmlTextWriter.TagKey%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-599">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-600">Należy odczytywać lub ustawiać <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> właściwość tylko w wywołaniu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody; jest to jedyna wartość, która jest ustawiana na spójne wartości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-600">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-601">Poniższy przykład kodu demonstruje przesłoniętą wersję <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> metody w klasie, która pochodzi <xref:System.Web.UI.HtmlTextWriter> od klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-601">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-602">Używa wartości <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> właściwości, aby określić, czy formant serwera używający obiektu niestandardowego <xref:System.Web.UI.HtmlTextWriter> renderuje `<label>` element znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-602">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="7d32a-603">Jeśli tak jest `<font>` , element `color` z atrybutem ustawionym na `red` `<label>` jest zwracany, aby zmodyfikować formatowanie tekstu elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-603">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7d32a-604">Nie można ustawić wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-604">The property value cannot be set.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-605">Reprezentuje nawias ostry (&lt;) tagu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-605">Represents the opening angle bracket (&lt;) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-606"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>Pole jest używane przez, ,<xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> i<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metody podczas pisania znaczników znaczników. <xref:System.Web.UI.HtmlTextWriter.TagLeftChar></span><span class="sxs-lookup"><span data-stu-id="7d32a-606">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-607">Poniższy przykład kodu renderuje pierwszy znak taga `<table>` otwierającego elementu z nazwą elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-607">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="7d32a-608">Przykład kodu używa <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> z polem jako parametr.</span><span class="sxs-lookup"><span data-stu-id="7d32a-608">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="7d32a-609">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-609">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-610">Pobiera lub ustawia nazwę tagu renderowanego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-610">Gets or sets the tag name of the markup element being rendered.</span></span></summary>
        <value><span data-ttu-id="7d32a-611">Nazwa tagu dla renderowanego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-611">The tag name of the markup element being rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-612">Właściwość jest używana tylko dla klas, które dziedziczą <xref:System.Web.UI.HtmlTextWriter> z klasy. <xref:System.Web.UI.HtmlTextWriter.TagName%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-612">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-613"><xref:System.Web.UI.HtmlTextWriter.TagName%2A> Właściwość powinna być odczytywana lub ustawiana tylko <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> w wywołaniach metod; jest to jedyna wartość, która jest ustawiana jako spójna.</span><span class="sxs-lookup"><span data-stu-id="7d32a-613">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-614">Poniższy przykład kodu demonstruje przesłoniętą wersję <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> metody w klasie, która pochodzi <xref:System.Web.UI.HtmlTextWriter> od klasy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-614">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="7d32a-615">Przykładowy `<label>` kod sprawdza <xref:System.String.Compare%2A?displayProperty=nameWithType> ,czyelement,`"label"`który ma być renderowany, jest elementem przez wywołanie metody, a następnie przekazanie wartości właściwościiciągu,jakoargumentyparametru.<xref:System.Web.UI.HtmlTextWriter.TagName%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-615">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="7d32a-616">`<label>` `red` `color` `<font>` Jeśli element ma być renderowany, tag otwierającego elementu, z atrybutem ustawionym na, jest renderowany przed tagiem otwierającym elementu. `<label>`</span><span class="sxs-lookup"><span data-stu-id="7d32a-616">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="7d32a-617">Jeśli element do renderowania nie `<label>` jest elementem, wywoływana jest wersja <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="7d32a-617">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d32a-618">Reprezentuje nawias ostry (&gt;) tagu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-618">Represents the closing angle bracket (&gt;) of a markup tag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-619">Pole jest używane <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>przez, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>i <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metody podczas pisania znaczników znaczników. <xref:System.Web.UI.HtmlTextWriter.TagRightChar></span><span class="sxs-lookup"><span data-stu-id="7d32a-619">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-620">Poniższy przykład kodu pokazuje, jak renderować tag `<table>` zamykający elementu przez wykonywanie wywołań do przeciążenia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-620">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="7d32a-621">Aby renderować końcowy znak tagu, przykład kodu używa <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody <xref:System.Web.UI.HtmlTextWriter.TagRightChar> z polem jako parametr.</span><span class="sxs-lookup"><span data-stu-id="7d32a-621">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="7d32a-622">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-622">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-623">Zapisuje określony typ danych w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-623">Writes the specified data type to the output stream, along with any pending tab spacing.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-624"><see cref="T:System.Boolean" /> Do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-624">The <see cref="T:System.Boolean" /> to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-625">Zapisuje tekstową reprezentację wartości logicznej w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-625">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-626">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-626">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-627">Znak Unicode do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-627">The Unicode character to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-628">Zapisuje tekstową reprezentację znaku Unicode w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-628">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-629">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-629">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-630">Poniższy przykład kodu demonstruje użycie <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do zakończenia tagu `<img>` otwierającego elementu przy użyciu <xref:System.Web.UI.HtmlTextWriter.TagRightChar> stałej.</span><span class="sxs-lookup"><span data-stu-id="7d32a-630">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="7d32a-631">Ten przykład kodu renderuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-631">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="7d32a-632">Tablica znaków Unicode do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-632">The array of Unicode characters to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-633">Zapisuje tekstową reprezentację tablicy znaków Unicode w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-633">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-634">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-634">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-635">Ta sekcja zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-635">This section provides two code examples.</span></span> <span data-ttu-id="7d32a-636">Pierwszy z nich pokazuje, jak utworzyć tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="7d32a-636">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="7d32a-637">Drugi pokazuje, jak używać tablicy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-637">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="7d32a-638">Te przykłady kodu generują następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-638">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="7d32a-639">Poniższy przykład kodu pokazuje, jak utworzyć tablicę znaków, która `hello world`się odnotuje.</span><span class="sxs-lookup"><span data-stu-id="7d32a-639">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="7d32a-640">W tablicy jest <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pole, które tworzy spację między dwoma wyrazami.</span><span class="sxs-lookup"><span data-stu-id="7d32a-640">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="7d32a-641">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody w celu `hello world` renderowania tablicy znaków utworzonej w poprzednim przykładzie kodu na stronie, gdy kontrolka zawierająca ten przykładowy kod jest uwzględniona na stronie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-641">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-642">Liczba zmiennoprzecinkowa podwójnej precyzji do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-642">The double-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-643">Zapisuje tekstową reprezentację liczby zmiennoprzecinkowej o podwójnej precyzji w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-643">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-644">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-644">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-645">Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania wartości <xref:System.Double.MaxValue?displayProperty=nameWithType> pola.</span><span class="sxs-lookup"><span data-stu-id="7d32a-645">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="7d32a-646">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-646">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-647">32-bajtowa liczba całkowita ze znakiem do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-647">The 32-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-648">Zapisuje tekstową reprezentację liczby całkowitej ze znakiem 32-bajtowej w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-648">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-649">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-649">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-650">64-bajtowa liczba całkowita ze znakiem do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-650">The 64-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-651">Zapisuje tekstową reprezentację liczby całkowitej ze znakiem 64-bajtowej w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-651">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-652">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-652">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-653">Obiekt do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-653">The object to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-654">Zapisuje tekstową reprezentację obiektu w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-654">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-655">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-655">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-656">Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania wartości <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-656">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="7d32a-657">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-657">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="7d32a-658">Wartość <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości:</span><span class="sxs-lookup"><span data-stu-id="7d32a-658">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-659">Liczba zmiennoprzecinkowa pojedynczej precyzji do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-659">The single-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-660">Zapisuje tekstową reprezentację liczby zmiennoprzecinkowej o pojedynczej precyzji w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-660">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-661">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-661">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-662">Poniższy przykład kodu demonstruje, jak używać <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania wartości <xref:System.Single.Epsilon?displayProperty=nameWithType> pola, czyli <xref:System.Single> najmniejszej możliwej wartości struktury.</span><span class="sxs-lookup"><span data-stu-id="7d32a-662">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="7d32a-663">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-663">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7d32a-664">Ciąg do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-664">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-665">Zapisuje określony ciąg w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-665">Writes the specified string to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-666">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-666">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-667">Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody w celu renderowania ciągu między tagiem otwierającym i zamykającym elementu znaczników niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="7d32a-667">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="7d32a-668">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-668">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7d32a-669">Ciąg, który zawiera zero lub więcej elementów formatu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-669">A string that contains zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="7d32a-670">Obiekt do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-670">An object to format.</span></span></param>
        <summary><span data-ttu-id="7d32a-671">Zapisuje ciąg tabulacji i sformatowany ciąg do strumienia wyjściowego, używając tej samej semantyki jako <see cref="M:System.String.Format(System.String,System.Object)" /> metody, wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-671">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-672">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-672">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-673">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.Write%2A> jak używać metody do renderowania sformatowanego ciągu z wartością <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-673">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7d32a-674">Ciąg, który zawiera zero lub więcej elementów formatu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-674">A string that contains zero or more format items.</span></span></param>
        <param name="arg"><span data-ttu-id="7d32a-675">Tablica obiektów do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-675">An object array to format.</span></span></param>
        <summary><span data-ttu-id="7d32a-676">Zapisuje sformatowany ciąg, który zawiera tekstową reprezentację tablicy obiektów do strumienia wyjściowego, wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-676">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span></span> <span data-ttu-id="7d32a-677">Ta metoda używa tej samej semantyki co <see cref="M:System.String.Format(System.String,System.Object[])" /> Metoda.</span><span class="sxs-lookup"><span data-stu-id="7d32a-677">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-678">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-678">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-679">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-679">This section contains two code examples.</span></span> <span data-ttu-id="7d32a-680">Pierwszy z nich demonstruje sposób renderowania sformatowanego ciągu i zawartości tablicy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-680">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="7d32a-681">Drugi pokazuje, jak zadeklarować tablicę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-681">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="7d32a-682">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.Write%2A> jak używać metody do renderowania sformatowanego ciągu i zawartości tablicy obiektu o nazwie. `curPriceTime`</span><span class="sxs-lookup"><span data-stu-id="7d32a-682">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="7d32a-683">Wywołanie metody renderuje drugi element członkowski tablicy przed renderowaniem pierwszego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-683">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="7d32a-684">Poniższy przykład kodu demonstruje zadeklarowanie `curPriceTime` tablicy obiektów.</span><span class="sxs-lookup"><span data-stu-id="7d32a-684">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="7d32a-685">Tablica znaków, z której ma zostać zapisany tekst w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-685">The array of characters from which to write text to the output stream.</span></span></param>
        <param name="index"><span data-ttu-id="7d32a-686">Lokalizacja indeksu w tablicy, w której rozpoczyna się pisanie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-686">The index location in the array where writing begins.</span></span></param>
        <param name="count"><span data-ttu-id="7d32a-687">Liczba znaków do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-687">The number of characters to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-688">Zapisuje tekstową reprezentację podtablicy znaków Unicode w strumieniu wyjściowym wraz z wszelkimi oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-688">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-689">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-689">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-690">Ta sekcja zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-690">This section provides two code examples.</span></span> <span data-ttu-id="7d32a-691">Pierwszy z nich pokazuje, jak utworzyć tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="7d32a-691">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="7d32a-692">Drugi pokazuje, jak używać tablicy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-692">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="7d32a-693">Te przykłady kodu generują następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-693">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="7d32a-694">Poniższy przykład kodu pokazuje, jak utworzyć tablicę znaków, która `hello world`się odnotuje.</span><span class="sxs-lookup"><span data-stu-id="7d32a-694">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="7d32a-695">W tablicy jest <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pole, które tworzy spację między dwoma wyrazami.</span><span class="sxs-lookup"><span data-stu-id="7d32a-695">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="7d32a-696">W poniższym przykładzie kodu są użyte `index` parametry <xref:System.Web.UI.HtmlTextWriter.Write%2A> i `count` metody w celu renderowania pierwszych pięciu znaków tablicy utworzonej w poprzednim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-696">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7d32a-697">Ciąg, który zawiera zero lub więcej elementów formatu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-697">A string that contains zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="7d32a-698">Obiekt do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-698">An object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="7d32a-699">Obiekt do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-699">An object to format.</span></span></param>
        <summary><span data-ttu-id="7d32a-700">Zapisuje sformatowany ciąg zawierający tekstową reprezentację dwóch obiektów w strumieniu wyjściowym wraz z oczekującymi odstępami tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-700">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span></span> <span data-ttu-id="7d32a-701">Ta metoda używa tej samej semantyki co <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> Metoda.</span><span class="sxs-lookup"><span data-stu-id="7d32a-701">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-702">Metoda generuje wszystkie oczekujące karty, a następnie <xref:System.IO.TextWriter.Write%2A> wywołuje metodę bazową. <xref:System.Web.UI.HtmlTextWriter.Write%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-702">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-703">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.Write%2A> jak używać metody do renderowania sformatowanego ciągu oraz wartości <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości i <xref:System.DateTime.Today%2A> .</span><span class="sxs-lookup"><span data-stu-id="7d32a-703">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-704">Zapisuje atrybut Markup i jego wartość w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-704">Writes a markup attribute and its value to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-705">Atrybut do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-705">The attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-706">Wartość przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-706">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-707">Zapisuje określony atrybut znacznika i wartość do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-707">Writes the specified markup attribute and value to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-708">Użyj metody <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> , aby zapisać atrybuty znaczników i ich wartości bez kodowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-708">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="7d32a-709"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Metoda zapisuje wartość atrybutu ujętą w znaki podwójnego cudzysłowu (").</span><span class="sxs-lookup"><span data-stu-id="7d32a-709">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="7d32a-710">Jeśli `value` jest `null` ,<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Metoda zapisuje tylko nazwę atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-710">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-711">Poniższy przykład kodu demonstruje renderowanie `<img>` elementu, w którym są wywoływane oba przeciążenia <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-711">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="7d32a-712">W przykładzie kodu jest stosowany następujący proces:</span><span class="sxs-lookup"><span data-stu-id="7d32a-712">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="7d32a-713"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Wywołuje metodę, która renderuje znaki otwierające elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-713">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="7d32a-714">Wywołuje Przeciążenie, które `alt` zapisuje atrybut `<img>` i jego wartość do elementu. <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-714">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="7d32a-715">`false` `fEncode` `No "encoding" required` `myattribute` Wywołuje Przeciążenie w celu renderowania atrybutu niestandardowego, z wartością, a następnie ustawia na. <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-715">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="7d32a-716">Zamyka tag otwierający elementu, a następnie wywołuje <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metodę w celu `<img>` zamknięcia elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-716">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="7d32a-717">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-717">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-718">W klasach pochodnych można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> metodę, aby zdefiniować niestandardowe reguły zapisu atrybutów i ich wartości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-718">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values.</span></span> <span data-ttu-id="7d32a-719">Można na przykład napisać kod, który zezwolił na <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> metodę zapisu atrybutu z pustą wartością.</span><span class="sxs-lookup"><span data-stu-id="7d32a-719">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-720">Atrybut znacznika do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-720">The markup attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-721">Wartość przypisana do atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-721">The value assigned to the attribute.</span></span></param>
        <param name="fEncode"><span data-ttu-id="7d32a-722"><see langword="true" />aby zakodować atrybut i jego przypisaną wartość; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-722"><see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-723">Zapisuje określony atrybut i wartość znacznika w strumieniu wyjściowym i, jeśli jest określony, zapisuje zakodowaną wartość.</span><span class="sxs-lookup"><span data-stu-id="7d32a-723">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-724">Użyj metody <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> , aby zapisać atrybuty znaczników i ich wartości z kodowaniem lub bez.</span><span class="sxs-lookup"><span data-stu-id="7d32a-724">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="7d32a-725"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Metoda<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> używa metody do wykonania kodowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-725">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="7d32a-726"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Metoda zapisuje wartość atrybutu ujętą w znaki podwójnego cudzysłowu (").</span><span class="sxs-lookup"><span data-stu-id="7d32a-726">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="7d32a-727">Jeśli `value` jest `null` ,<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Metoda zapisuje tylko nazwę atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-727">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-728">Poniższy przykład kodu demonstruje renderowanie `<img>` elementu, w którym są wywoływane oba przeciążenia <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-728">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="7d32a-729">W przykładzie kodu jest stosowany następujący proces:</span><span class="sxs-lookup"><span data-stu-id="7d32a-729">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="7d32a-730"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Wywołuje metodę, która renderuje znaki otwierające elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-730">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="7d32a-731">Wywołuje Przeciążenie, które `alt` zapisuje atrybut `<img>` i jego wartość do elementu. <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-731">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="7d32a-732">`false` `fEncode` `No "encoding" required` `myattribute` Wywołuje Przeciążenie w celu renderowania atrybutu niestandardowego, z wartością, a następnie ustawia na. <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-732">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="7d32a-733">Zamyka tag otwierający elementu, a następnie wywołuje <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metodę w celu `<img>` zamknięcia elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-733">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="7d32a-734">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-734">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7d32a-735">W klasach pochodnych można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> metodę, aby zdefiniować niestandardowe reguły zapisu atrybutów i ich wartości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-735">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values.</span></span> <span data-ttu-id="7d32a-736">Można na przykład napisać kod, który zezwolił na <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> metodę zapisu atrybutu z pustą wartością.</span><span class="sxs-lookup"><span data-stu-id="7d32a-736">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</span></span></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="7d32a-737">Element znaczników, który ma zostać zapisany w tagu otwierającym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-737">The markup element of which to write the opening tag.</span></span></param>
        <summary><span data-ttu-id="7d32a-738">Zapisuje wszystkie odstępy tabulacji i tag otwierający określonego elementu znaczników w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-738">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-739"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Metoda nie zapisuje zamykającego nawiasu ostrego (>) tagu otwierającego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-739">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="7d32a-740">Dzięki temu można pisać atrybuty znaczników do otwierającego tagu elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-740">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="7d32a-741">Użyj stałej <xref:System.Web.UI.HtmlTextWriter.TagRightChar> , aby zamknąć tag otwierającego podczas <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> wywoływania metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-741">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="7d32a-742"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Użyj metody<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> ze stałą podczas pisania elementów znaczników, które są zamykane automatycznie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-742">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="7d32a-743"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Metoda jest używana przez niestandardowe kontrolki serwera, które nie zezwalają na mapowanie tagów lub atrybutów oraz renderowanie elementów znaczników w taki sam sposób dla każdego żądania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-743">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-744">Poniższy przykład kodu demonstruje renderowanie `<img>` elementu, w którym są wywoływane oba przeciążenia <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-744">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="7d32a-745">W przykładzie kodu jest stosowany następujący proces:</span><span class="sxs-lookup"><span data-stu-id="7d32a-745">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="7d32a-746"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Wywołuje metodę, która renderuje znaki otwierające elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-746">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="7d32a-747">Wywołuje Przeciążenie, które `alt` zapisuje atrybut `<img>` i jego wartość do elementu. <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-747">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="7d32a-748">`false` `fEncode` `No "encoding" required` `myattribute` Wywołuje Przeciążenie w celu renderowania atrybutu niestandardowego, z wartością, a następnie ustawia na. <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29></span><span class="sxs-lookup"><span data-stu-id="7d32a-748">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="7d32a-749">Zamyka tag otwierający elementu, a następnie wywołuje <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metodę w celu `<img>` zamknięcia elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-749">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="7d32a-750">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-750">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-751">Zapisuje element <see langword="&lt;br /&gt;" /> znaczników w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-751">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-752">Użyj metody <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> , aby renderować podziały wierszy w kontrolkach niestandardowych lub znacznikach kart.</span><span class="sxs-lookup"><span data-stu-id="7d32a-752">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="7d32a-753">Metoda zapisuje spację `br` między i `/` w celu uzyskania ulepszonej zgodności html. <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-753">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-754">Poniższy przykład kodu pokazuje, jak wywołać metodę, <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> aby `<br />` napisać element do przeglądarki <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> żądającej, gdy metoda zapisuje zakodowane `&lt;custID&gt; &amp; &lt;invoice#&gt;` znaczniki.</span><span class="sxs-lookup"><span data-stu-id="7d32a-754">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="7d32a-755">Ciąg tekstowy do kodowania i zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-755">The text string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-756">Koduje określony tekst dla urządzenia wysyłającego żądanie, a następnie zapisuje go w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-756">Encodes the specified text for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-757">Użyj metody <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> , jeśli ciąg zawiera nawiasy kątowe\< (lub >) lub znak handlowego "i" (&).</span><span class="sxs-lookup"><span data-stu-id="7d32a-757">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="7d32a-758">Metoda używa metody do wykonania kodowania, a także konwertuje znak `00A0` Unicode na `&nbsp;`. <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> <xref:System.Web.HttpUtility.HtmlEncode%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-758">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-759">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> jak używać metody do zapisywania zakodowanego znacznika `&lt;custID&gt; &amp; &lt;invoice#&gt;` w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-759">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="7d32a-760">Metoda <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> zapisuje`<br />`dane.</span><span class="sxs-lookup"><span data-stu-id="7d32a-760">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7d32a-761"><paramref name="text" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7d32a-761"><paramref name="text" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="7d32a-762">Ciąg adresu URL do kodowania i zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-762">The URL string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-763">Koduje określony adres URL, a następnie zapisuje go w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-763">Encodes the specified URL, and then writes it to the output stream.</span></span> <span data-ttu-id="7d32a-764">Adres URL może zawierać parametry.</span><span class="sxs-lookup"><span data-stu-id="7d32a-764">The URL might include parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-765">Metoda koduje ciąg w parametrze zgodnie ze specyfikacją dla kodowania adresu URL. `url` <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-765">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="7d32a-766">Parametry występujące po ograniczniku znaku zapytania (?) nie są zakodowane.</span><span class="sxs-lookup"><span data-stu-id="7d32a-766">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-767">Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> metody, która generuje następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="7d32a-767">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="urlText"><span data-ttu-id="7d32a-768">Ciąg parametru adresu URL do kodowania i zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-768">The URL parameter string to encode and write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-769">Koduje określony parametr adresu URL dla urządzenia wysyłającego żądanie, a następnie zapisuje go w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-769">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-770">Spacje w części parametru adresu URL są kodowane jako znaki plus (+) i znak równości (=) są kodowane jako `%3d`.</span><span class="sxs-lookup"><span data-stu-id="7d32a-770">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-771">Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> metody, która generuje następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="7d32a-771">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="7d32a-772">Element, dla którego ma zostać zapisany tag zamykający.</span><span class="sxs-lookup"><span data-stu-id="7d32a-772">The element to write the closing tag for.</span></span></param>
        <summary><span data-ttu-id="7d32a-773">Zapisuje wszystkie odstępy tabulacji i tag zamykający określonego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="7d32a-773">Writes any tab spacing and the closing tag of the specified markup element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-774"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> W<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> przeciwieństwie do metody, metoda nie ma logiki, aby tag końcowy elementu był zgodny z odpowiadającym mu tagiem otwierającym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-774">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-775">Poniższy przykład kodu demonstruje renderowanie `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-775">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="7d32a-776">W przykładzie kodu jest stosowany następujący proces:</span><span class="sxs-lookup"><span data-stu-id="7d32a-776">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="7d32a-777"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Wywołuje metodę w celu renderowania znaków otwierających elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-777">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="7d32a-778">Wywołuje dwa przeciążenia <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody w celu zapisania atrybutów `<img>` do elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-778">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="7d32a-779">Wywołuje metodę <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> , aby `<img>` zamknąć element.</span><span class="sxs-lookup"><span data-stu-id="7d32a-779">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><span data-ttu-id="7d32a-780">Element do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-780">The element to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-781">Zapisuje wszystkie odstępy tabulacji i tag otwierający określonego elementu znaczników w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-781">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-782">Metoda automatycznie zapisuje zamykający nawias ostry (>) tagu otwierającego elementu, w przeciwieństwie do <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> metody, która nie zapisuje zamykającego nawiasu ostrego. <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-782">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="7d32a-783">Używane <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> dla elementów znaczników, które nie mają atrybutów.</span><span class="sxs-lookup"><span data-stu-id="7d32a-783">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-784">Zapisuje dane w <see cref="T:System.Web.UI.HtmlTextWriter" /> strumieniu wyjściowym, jak określono przez przeciążone parametry, a następnie ciąg terminatora wiersza.</span><span class="sxs-lookup"><span data-stu-id="7d32a-784">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span></span> <span data-ttu-id="7d32a-785">Wszystkie wersje tej metody zapisują wszystkie oczekujące odstępy tabulacji do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-785">All versions of this method write any pending tab spacing to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-786">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-786">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-787">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-787">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d32a-788">Zapisuje ciąg terminatora wiersza w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-788">Writes a line terminator string to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-789">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-790">Aby uzyskać więcej informacji, zobacz <xref:System.IO.TextWriter.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="7d32a-790">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-791">Poniższy przykład kodu demonstruje, <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> jak za pomocą metody wstawić wiersz `<img>` po wyrenderowaniu elementu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-791">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-792">Wartość logiczna do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-792">The Boolean to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-793">Zapisuje wszystkie oczekujące odstępy tabulacji i tekstową reprezentację wartości logicznej, po której następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-793">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-794">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-794">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-795">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-795">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-796">Znak do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-796">The character to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-797">Zapisuje wszystkie oczekujące odstępy tabulacji i znak Unicode, po którym następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-797">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-798">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-798">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-799">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-799">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="7d32a-800">Tablica znaków do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-800">The character array to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-801">Zapisuje wszystkie oczekujące odstępy tabulacji i tablicę znaków Unicode, po którym następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-801">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-802">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-802">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-803">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-803">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-804">Ta sekcja zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-804">This section provides two code examples.</span></span> <span data-ttu-id="7d32a-805">Pierwszy z nich pokazuje, jak utworzyć tablicę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-805">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="7d32a-806">Drugi pokazuje, jak używać tej tablicy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-806">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="7d32a-807">Te przykłady kodu generują następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-807">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="7d32a-808">Poniższy przykład kodu pokazuje, jak utworzyć tablicę znaków, która `hello world`się odnotuje.</span><span class="sxs-lookup"><span data-stu-id="7d32a-808">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="7d32a-809">W tablicy jest <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pole, które tworzy spację między dwoma wyrazami.</span><span class="sxs-lookup"><span data-stu-id="7d32a-809">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="7d32a-810">Poniższy przykład kodu renderuje `hello world` tablicę znaków, która została utworzona w poprzednim przykładzie przy <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="7d32a-810">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-811">Liczba zmiennoprzecinkowa podwójnej precyzji do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-811">The double-precision floating-point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-812">Zapisuje wszystkie oczekujące odstępy tabulacji i tekstową reprezentację liczby zmiennoprzecinkowej podwójnej precyzji, a po niej ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-812">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-813">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-813">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-814">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-814">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-815">Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania wartości <xref:System.Double.MaxValue?displayProperty=nameWithType> pola.</span><span class="sxs-lookup"><span data-stu-id="7d32a-815">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="7d32a-816">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-816">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-817">32-bajtowa liczba całkowita ze znakiem do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-817">The 32-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-818">Zapisuje wszystkie oczekujące odstępy tabulacji i tekstową reprezentację 32-bajtowej liczby całkowitej ze znakiem, a następnie ciąg terminatora wiersza do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-818">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-819">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-819">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-820">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-820">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-821">64-bajtowa liczba całkowita ze znakiem do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-821">The 64-byte signed integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-822">Zapisuje wszystkie oczekujące odstępy tabulacji i tekstową reprezentację 64-bajtowej liczby całkowitej ze znakiem, a następnie ciąg terminatora wiersza do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-822">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-823">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-824">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-825">Obiekt do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-825">The object to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-826">Zapisuje wszystkie oczekujące odstępy tabulacji i tekstową reprezentację obiektu, po którym następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-826">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-827">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-827">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-828">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-828">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-829">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> jak używać metody do renderowania wartości <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości do kontrolki.</span><span class="sxs-lookup"><span data-stu-id="7d32a-829">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-830">Liczba zmiennoprzecinkowa pojedynczej precyzji do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-830">The single-precision floating point number to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-831">Zapisuje wszystkie oczekujące odstępy tabulacji i tekstową reprezentację liczby zmiennoprzecinkowej o pojedynczej precyzji, po której następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-831">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-832">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-832">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-833">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-833">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-834">Poniższy przykład kodu pokazuje, jak używać <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania wartości <xref:System.Single.Epsilon?displayProperty=nameWithType> pola, czyli <xref:System.Single> najmniejszej możliwej wartości struktury.</span><span class="sxs-lookup"><span data-stu-id="7d32a-834">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="7d32a-835">Ten przykład kodu generuje następujący znacznik:</span><span class="sxs-lookup"><span data-stu-id="7d32a-835">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7d32a-836">Ciąg do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-836">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-837">Zapisuje wszystkie oczekujące odstępy tabulacji i ciąg tekstowy, po którym następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-837">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-838">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-839">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-839">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7d32a-840">4-bajtowa liczba całkowita bez znaku do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-840">The 4-byte unsigned integer to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-841">Zapisuje wszystkie oczekujące odstępy tabulacji i tekstową reprezentację 4-bajtowej liczby całkowitej bez znaku, a następnie ciąg terminatora wiersza do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-841">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-842">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-842">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-843">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-843">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7d32a-844">Ciąg zawierający zero lub więcej elementów formatu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-844">A string containing zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="7d32a-845">Obiekt do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-845">An object to format.</span></span></param>
        <summary><span data-ttu-id="7d32a-846">Zapisuje wszystkie oczekujące odstępy tabulacji i sformatowany ciąg zawierający tekstową reprezentację obiektu, po którym następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-846">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-847">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-847">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-848">Metoda używa tej samej semantyki <xref:System.String.Format%28System.String%2CSystem.Object%29> co metoda. <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-848">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="7d32a-849">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-849">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-850">Poniższy przykład kodu pokazuje, <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> jak używać metody do renderowania sformatowanego ciągu z wartością <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-850">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7d32a-851">Ciąg zawierający zero lub więcej elementów formatu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-851">A string containing zero or more format items.</span></span></param>
        <param name="arg"><span data-ttu-id="7d32a-852">Tablica obiektów do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-852">An object array to format.</span></span></param>
        <summary><span data-ttu-id="7d32a-853">Zapisuje wszystkie oczekujące odstępy tabulacji i sformatowany ciąg, który zawiera tekstową reprezentację tablicy obiektów, a następnie ciąg terminatora wiersza do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-853">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-854">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-854">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-855">Metoda używa tej samej semantyki <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> co metoda. <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-855">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="7d32a-856">Metoda bazowa służy do `value` zapisywania metody. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-856">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-857">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-857">This section contains two code examples.</span></span> <span data-ttu-id="7d32a-858">Pierwszy z nich demonstruje sposób renderowania ciągu i tablicy w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-858">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="7d32a-859">Druga z nich pokazuje, jak zadeklarować tablicę.</span><span class="sxs-lookup"><span data-stu-id="7d32a-859">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="7d32a-860">Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody w celu renderowania sformatowanego ciągu i zawartości tablicy obiektów do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-860">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="7d32a-861">Poniższy przykład kodu pokazuje, jak zadeklarować tablicę obiektów, która została renderowana w poprzednim przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-861">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="7d32a-862">Tablica znaków, z której ma zostać zapisany tekst w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-862">The character array from which to write text to the output stream.</span></span></param>
        <param name="index"><span data-ttu-id="7d32a-863">Lokalizacja w tablicy znaków, w której rozpoczyna się pisanie.</span><span class="sxs-lookup"><span data-stu-id="7d32a-863">The location in the character array where writing begins.</span></span></param>
        <param name="count"><span data-ttu-id="7d32a-864">Liczba znaków w tablicy do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-864">The number of characters in the array to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-865">Zapisuje wszystkie oczekujące odstępy tabulacji i podtablicę znaków Unicode, po którym następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-865">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-866">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-866">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-867">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-867">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-868">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-868">This section contains two code examples.</span></span> <span data-ttu-id="7d32a-869">Pierwszy z nich pokazuje, jak utworzyć tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="7d32a-869">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="7d32a-870">Drugi pokazuje, jak używać tablicy.</span><span class="sxs-lookup"><span data-stu-id="7d32a-870">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="7d32a-871">Te przykłady kodu generują następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="7d32a-871">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="7d32a-872">Poniższy przykład kodu pokazuje, jak utworzyć tablicę znaków, która `hello world`się odnotuje.</span><span class="sxs-lookup"><span data-stu-id="7d32a-872">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="7d32a-873">W tablicy jest <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pole, które tworzy spację między dwoma wyrazami.</span><span class="sxs-lookup"><span data-stu-id="7d32a-873">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="7d32a-874">Poniższy przykład kodu używa `index` parametrów <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> i `count` metody w celu renderowania pierwszych pięciu znaków tablicy utworzonej w poprzednim przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-874">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="7d32a-875">Ciąg zawierający zero lub więcej elementów formatu.</span><span class="sxs-lookup"><span data-stu-id="7d32a-875">A string containing zero or more format items.</span></span></param>
        <param name="arg0"><span data-ttu-id="7d32a-876">Obiekt do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-876">An object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="7d32a-877">Obiekt do sformatowania.</span><span class="sxs-lookup"><span data-stu-id="7d32a-877">An object to format.</span></span></param>
        <summary><span data-ttu-id="7d32a-878">Zapisuje wszystkie oczekujące odstępy tabulacji i sformatowany ciąg, który zawiera tekstową reprezentację dwóch obiektów, a następnie ciąg terminatora wiersza do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-878">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-879">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-879">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-880">Metoda używa tej samej semantyki <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> co metoda. <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-880">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="7d32a-881">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-881">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d32a-882">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody w celu renderowania sformatowanego ciągu oraz wartości <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości i <xref:System.DateTime.Today%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7d32a-882">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="7d32a-883">Ciąg do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-883">The string to write to the output stream.</span></span></param>
        <summary><span data-ttu-id="7d32a-884">Zapisuje ciąg, po którym następuje ciąg terminatora wiersza, do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="7d32a-884">Writes a string, followed by a line terminator string, to the output stream.</span></span> <span data-ttu-id="7d32a-885">Ta metoda ignoruje wszystkie określone odstępy tabulacji.</span><span class="sxs-lookup"><span data-stu-id="7d32a-885">This method ignores any specified tab spacing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-886">Użyj metody <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> , a nie metody <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> , jeśli nie chcesz renderować żadnych odstępów między tabulatorami przed renderowanym ciągiem `s`.</span><span class="sxs-lookup"><span data-stu-id="7d32a-886">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="7d32a-887">Domyślny ciąg terminatora wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="7d32a-887">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="7d32a-888">Metoda bazowa służy do `value` zapisywania parametru. <xref:System.IO.TextWriter.WriteLine%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-888">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d32a-889">Zapisuje atrybut stylu i jego wartość w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-889">Writes a style attribute and its value to the output stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-890">Atrybut stylu do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-890">The style attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-891">Wartość przypisana do atrybutu style.</span><span class="sxs-lookup"><span data-stu-id="7d32a-891">The value assigned to the style attribute.</span></span></param>
        <summary><span data-ttu-id="7d32a-892">Zapisuje określony atrybut style w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-892">Writes the specified style attribute to the output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-893"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> Metoda zapisuje atrybut stylu w następującej postaci:</span><span class="sxs-lookup"><span data-stu-id="7d32a-893">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="7d32a-894">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="7d32a-894">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7d32a-895">Atrybut stylu do zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-895">The style attribute to write to the output stream.</span></span></param>
        <param name="value"><span data-ttu-id="7d32a-896">Wartość przypisana do atrybutu style.</span><span class="sxs-lookup"><span data-stu-id="7d32a-896">The value assigned to the style attribute.</span></span></param>
        <param name="fEncode"><span data-ttu-id="7d32a-897"><see langword="true" />aby zakodować atrybut stylu i jego przypisaną wartość; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="7d32a-897"><see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7d32a-898">Zapisuje określony atrybut i wartość stylu w strumieniu wyjściowym i koduje wartość (jeśli została określona).</span><span class="sxs-lookup"><span data-stu-id="7d32a-898">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-899"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> Metoda zapisuje atrybut stylu w następującej postaci:</span><span class="sxs-lookup"><span data-stu-id="7d32a-899">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="7d32a-900">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="7d32a-900">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="7d32a-901">Metoda jest używana do `value` kodowania parametru. <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A></span><span class="sxs-lookup"><span data-stu-id="7d32a-901">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argument" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="7d32a-902">Ciąg do kodowania i zapisu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="7d32a-902">The string to encode and write to the output stream.</span></span></param>
        <param name="argument"><span data-ttu-id="7d32a-903"><see langword="true" />aby zakodować ciąg jako część sekcji parametru adresu URL; <see langword="false" /> aby zakodować ciąg jako część sekcji Path w adresie URL.</span><span class="sxs-lookup"><span data-stu-id="7d32a-903"><see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span></span></param>
        <summary><span data-ttu-id="7d32a-904">Zapisuje określony ciąg i kodowanie go zgodnie z wymaganiami dotyczącymi adresów URL.</span><span class="sxs-lookup"><span data-stu-id="7d32a-904">Writes the specified string, encoding it according to URL requirements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d32a-905">`%xx` `argument` `x` `%uxxxx`Metoda koduje znaki, które mogą być uważane za ograniczniki adresów URL (zależnie od ustawienia) do ciągów formularza, jeśli kod ASCII jest mniejszy niż 128; w przeciwnym razie, gdzie jest <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> cyfra szesnastkowa.</span><span class="sxs-lookup"><span data-stu-id="7d32a-905">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="7d32a-906">Metody <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> i <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> używają<xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> metody jako metody narzędziowej.</span><span class="sxs-lookup"><span data-stu-id="7d32a-906">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
