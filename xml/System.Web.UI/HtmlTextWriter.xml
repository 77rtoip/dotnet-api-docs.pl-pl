<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d78992dfc8469140633229082294ead77c3d2811" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37532276" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="140c2-101">Zapisuje znaczników znaków i tekst w strumieniu wyjściowym formant serwera ASP.NET.</span>
      <span class="sxs-lookup">
        <span data-stu-id="140c2-101">Writes markup characters and text to an ASP.NET server control output stream.</span>
      </span>
      <span data-ttu-id="140c2-102">Ta klasa udostępnia możliwości formatowania, korzystających z kontrolek serwera ASP.NET podczas renderowania kodu znaczników dla klientów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="140c2-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-103"><xref:System.Web.UI.HtmlTextWriter> Klasy jest używany do renderowania język HTML 4.0 dla przeglądarek komputerowych.</span><span class="sxs-lookup"><span data-stu-id="140c2-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="140c2-104"><xref:System.Web.UI.HtmlTextWriter> Jest również klasą bazową dla wszystkich znaczników składników zapisywania <xref:System.Web.UI> przestrzeni nazw, w tym <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, i <xref:System.Web.UI.XhtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="140c2-105">Te klasy są używane do zapisania elementów, atrybutów i stylu i układu informacje dotyczące różnych typów znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="140c2-106">Ponadto te klasy są używane przez klasy karty strony i kontrolki, które są skojarzone z każdym języku znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="140c2-107">W większości przypadków ASP.NET automatycznie używa zapisywania odpowiednie dla urządzenia wysyłającego żądanie.</span><span class="sxs-lookup"><span data-stu-id="140c2-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="140c2-108">Jednak jeśli utworzony Edytor niestandardowy tekst lub chcesz określić określonego składnika zapisywania do renderowania strony dla określonego urządzenia, musisz dokonać mapowania modułu zapisującego do strony w `controlAdapters` części pliku .browser aplikacji.</span><span class="sxs-lookup"><span data-stu-id="140c2-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-109">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.Control.Render%2A> metoda formant niestandardowy, który jest tworzony na podstawie <xref:System.Web.UI.Control> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="140c2-110">Przykładowy kod przedstawia sposób użycia różnych <xref:System.Web.UI.HtmlTextWriter> metody, właściwości i pola.</span><span class="sxs-lookup"><span data-stu-id="140c2-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="140c2-112">
            <see cref="T:System.IO.TextWriter" /> Wystąpienie, które renderuje zawartość znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-113">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlTextWriter" /> klasę, która korzysta z domyślnego ciągu kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-114"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> Przeciążenia <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> Konstruktor korzysta z <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> stałej, gdy konieczne jest wcięcie wiersza.</span><span class="sxs-lookup"><span data-stu-id="140c2-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="140c2-115">Wywołuje <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> przeciążenie, można zainicjować nowego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="140c2-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-116">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> konstruktora, aby utworzyć niestandardową <xref:System.Web.UI.HtmlTextWriter> obiektu o nazwie `StyledLabelHtmlWriter.` podczas `MyPage` niestandardowej klasy, która jest pochodną <xref:System.Web.UI.Page> klasy, jest wymagany przez klienta przez przeglądarkę, `StyledLabelHtmlWriter` klasy do renderowania jej zawartość do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="140c2-117">
            <see cref="T:System.IO.TextWriter" /> Która renderuje zawartość znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span>
          </span>
        </param>
        <param name="tabString">
          <span data-ttu-id="140c2-118">Ciąg używany do renderowania wcięcie wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-118">The string to use to render a line indentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy przy użyciu znaku ciągu określonej karty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-120"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> Przeciążenia <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> Konstruktor korzysta z `tabString` gdy konieczne jest wcięcie wiersza.</span><span class="sxs-lookup"><span data-stu-id="140c2-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="140c2-121">Wywołuje <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> podstawowy Konstruktor, inicjuje nowe wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="140c2-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-122">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> konstruktora, aby utworzyć niestandardową <xref:System.Web.UI.HtmlTextWriter> obiektu o nazwie `StyledLabelHtmlWriter.` podczas `MyPage` niestandardowej klasy, która jest pochodną <xref:System.Web.UI.Page> klasy, jest wymagany przez klienta przez przeglądarkę, `StyledLabelHtmlWriter` klasy do renderowania jej zawartość do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-123">Dodaje atrybut adiustacji określonego i wartość w znaczniku otwierającym elementu, <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu tworzy o kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-124">Ciąg zawierający nazwę atrybutu, aby dodać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-124">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-125">Ciąg zawierający wartość do przypisania do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-125">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-126">Dodaje atrybut adiustacji określonego i wartość w znaczniku otwierającym elementu, <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu tworzy o kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-127">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> metodę, jeśli ten atrybut nie jest jednym z <xref:System.Web.UI.HtmlTextWriterAttribute> wartości, lub jeśli ten atrybut jest nieznany do czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="140c2-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="140c2-128">W przypadku wystąpienia dowolnego elementu danego znaczników <xref:System.Web.UI.HtmlTextWriter> klasa przechowuje listę atrybutów dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="140c2-129">Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metoda jest wywoływana, wszelkie atrybuty dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody są renderowane w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="140c2-130">Listę atrybutów, które następnie zostanie usunięte z <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="140c2-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="140c2-131">Wzorzec pisania kodu do renderowania elementów kodu znaczników jest następująca:</span><span class="sxs-lookup"><span data-stu-id="140c2-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="140c2-132">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody w celu dodania wszelkie atrybuty do elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="140c2-133">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="140c2-134">Użyj innych metod, zgodnie z potrzebami do renderowania zawartości między otwierającym i zamykającym tagiem elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="140c2-135">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-136">Poniższy przykład kodu pokazuje sposób wywołania <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metoda przed wywołaniem <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="140c2-137">Kod wywołuje dwie różne przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> i dwa różne przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> przed wywołaniem <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody do renderowania `<span>` elementu w strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="140c2-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="140c2-138"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> Metoda jest używana do definiowania atrybutu niestandardowego o nazwie `CustomAttribute` oraz wartość niestandardową o nazwie `CustomAttributeValue` dla `<span>` element, który powoduje wyświetlenie tego kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="140c2-139">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Reprezentujący atrybut adiustacji, aby dodać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-140">Ciąg zawierający wartość do przypisania do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-140">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-141">Dodaje atrybut adiustacji i wartości atrybutów w znaczniku otwierającym elementu, <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu tworzy o kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-142">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> metody do renderowania atrybutów standardowych znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="140c2-143">W przypadku wystąpienia dowolnego elementu danego znaczników <xref:System.Web.UI.HtmlTextWriter> klasa przechowuje listę atrybutów dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="140c2-144">Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metoda jest wywoływana, wszelkie atrybuty, które są dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody są renderowane w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="140c2-145">Listę atrybutów, które następnie zostanie usunięte z <xref:System.Web.UI.HtmlTextWriter>.</span><span class="sxs-lookup"><span data-stu-id="140c2-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="140c2-146">Wzorzec pisania kodu do renderowania elementów kodu znaczników jest następująca:</span><span class="sxs-lookup"><span data-stu-id="140c2-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="140c2-147">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody w celu dodania wszelkie atrybuty do elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="140c2-148">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="140c2-149">Użyj innych metod, zgodnie z potrzebami do renderowania zawartości między otwierającym i zamykającym tagiem elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="140c2-150">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-151">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> metody w celu dodania `Onclick` atrybutu do elementu znaczników, a następnie ustaw jego wartość z następującym kodem ECMAScript:</span><span class="sxs-lookup"><span data-stu-id="140c2-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-152">Ciąg zawierający nazwę atrybutu, aby dodać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-152">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-153">Ciąg zawierający wartość do przypisania do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-153">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEndode">
          <span data-ttu-id="140c2-154">
            <see langword="true" /> kodowanie atrybutu i jego wartość; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-154">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-155">Dodaje atrybut adiustacji określonego i wartość w znaczniku otwierającym elementu, <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu tworzy o kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody z kodowaniem opcjonalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-156">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> metodę, jeśli ten atrybut nie jest jednym z <xref:System.Web.UI.HtmlTextWriterAttribute> wartości lub jest potrzebna, jeśli ten atrybut nie jest znany aż do czasu uruchamiania kodowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="140c2-157">W przypadku wystąpienia dowolnego elementu danego znaczników <xref:System.Web.UI.HtmlTextWriter> klasa przechowuje listę atrybutów dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="140c2-158">Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metoda jest wywoływana, wszelkie atrybuty dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody są renderowane w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="140c2-159">Listę atrybutów, które następnie zostanie usunięte z <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="140c2-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="140c2-160">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> metody z `fEncode` równa `true`, jeśli ten atrybut może zawierać znaku cudzysłowu ("), znak mniejszości (<) lub handlowe" i "(&).</span><span class="sxs-lookup"><span data-stu-id="140c2-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="140c2-161">Wywołania metody które będą kodowanie atrybutu do spełnienia wymagań urządzenia wysyłającego żądanie.</span><span class="sxs-lookup"><span data-stu-id="140c2-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="140c2-162">Możesz ustawić `fEncode` do `false`, jeśli wiesz, że żadna z tych znaków zostanie wygenerowany lub jeśli wiesz, że ten atrybut jest już zaszyfrowana.</span><span class="sxs-lookup"><span data-stu-id="140c2-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="140c2-163">Jeśli typem atrybutu jest `Style`, wartość nie będzie zakodowana nawet wtedy, gdy `fEndode` jest `true`.</span><span class="sxs-lookup"><span data-stu-id="140c2-163">If the attribute type is `Style`, the value won’t be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="140c2-164">Upewnij się, że wartość stylu jest zgodna z CSS i nie zawierają złośliwego kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-164">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>
  
 <span data-ttu-id="140c2-165">Wzorzec pisania kodu do renderowania elementów kodu znaczników jest następująca:</span><span class="sxs-lookup"><span data-stu-id="140c2-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="140c2-166">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody w celu dodania wszelkie atrybuty do elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="140c2-167">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="140c2-168">Użyj innych metod, zgodnie z potrzebami do renderowania zawartości między otwierającym i zamykającym tagiem elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="140c2-169">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-170">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> metodę, aby upewnić się, że atrybut niestandardowy o nazwie `myattribute`, a jego wartość nie jest zakodowany na potrzeby `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-171">Ciąg zawierający nazwę atrybutu, aby dodać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-171">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-172">Ciąg zawierający wartość do przypisania do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-172">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="140c2-173">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Reprezentujący ten atrybut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-174">Dodaje atrybut adiustacji określonego i wartość, wraz z <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> wartość wyliczenia w znaczniku otwierającym elementu, <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu tworzy o kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-175">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> metody tylko wtedy, gdy dziedziczenie z <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-176">Umożliwia tworzenie nowych `name` i `key` pary dla atrybutów.</span><span class="sxs-lookup"><span data-stu-id="140c2-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="140c2-177">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Reprezentujący atrybut adiustacji, aby dodać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-178">Ciąg zawierający wartość do przypisania do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-178">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="140c2-179">
            <see langword="true" /> kodowanie atrybutu i jego wartość; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-179">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-180">Dodaje atrybut adiustacji i wartości atrybutów w znaczniku otwierającym elementu, <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu tworzy o kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody z kodowaniem opcjonalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-181">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> metody do renderowania atrybutem standardowych znaczników z kodowaniem opcjonalne.</span><span class="sxs-lookup"><span data-stu-id="140c2-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="140c2-182">W przypadku wystąpienia dowolnego elementu danego znaczników <xref:System.Web.UI.HtmlTextWriter> klasa przechowuje listę atrybutów dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="140c2-183">Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metoda jest wywoływana, wszelkie atrybuty dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> są renderowane w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="140c2-184">Listę atrybutów, które następnie zostanie usunięte z <xref:System.Web.UI.HtmlTextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="140c2-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="140c2-185">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> metody z `fEncode` równa `true`, jeśli ten atrybut może zawierać znaku cudzysłowu ("), znak mniejszości (<) lub handlowe" i "(&).</span><span class="sxs-lookup"><span data-stu-id="140c2-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="140c2-186">Wywołania metody które będą kodowanie atrybutu do spełnienia wymagań urządzenia wysyłającego żądanie.</span><span class="sxs-lookup"><span data-stu-id="140c2-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="140c2-187">Możesz ustawić `fEncode` do `false`, jeśli wiesz, że żadna z tych znaków zostanie wygenerowany lub jeśli wiesz, że ten atrybut jest już zaszyfrowana.</span><span class="sxs-lookup"><span data-stu-id="140c2-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="140c2-188">Jeśli typem atrybutu jest `Style`, wartość nie będzie zakodowana nawet wtedy, gdy `fEncode` jest `true`.</span><span class="sxs-lookup"><span data-stu-id="140c2-188">If the attribute type is `Style`, the value won’t be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="140c2-189">Upewnij się, że wartość stylu jest zgodna z CSS i nie zawierają złośliwego kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-189">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>

  
 <span data-ttu-id="140c2-190">Wzorzec pisania kodu do renderowania elementów kodu znaczników jest następująca:</span><span class="sxs-lookup"><span data-stu-id="140c2-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="140c2-191">Użyj <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody w celu dodania wszelkie atrybuty do elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="140c2-192">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="140c2-193">Użyj innych metod, zgodnie z potrzebami do renderowania zawartości między otwierającym i zamykającym tagiem elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="140c2-194">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-195">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> metodę, aby zapewnić, że wartość ciągu, która jest przypisana do `Alt` atrybutu dla `<img>` element jest zakodowana urządzenia wysyłającego żądanie.</span><span class="sxs-lookup"><span data-stu-id="140c2-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-196">Dodaje znacznik nadawania stylu atrybutów w znaczniku otwierającym elementu <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu tworzy o kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-197">Ciąg, który zawiera atrybut stylu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-197">A string that contains the style attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-198">Ciąg, który zawiera wartość do przypisania do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-198">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-199">Dodaje atrybut stylu określonego znaczników oraz wartość atrybutu do znaczników otwierający tag utworzony przez kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-200">Użyj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> metody, gdy styl nie jest członkiem <xref:System.Web.UI.HtmlTextWriterStyle> wyliczenia lub nie jest znany do czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="140c2-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="140c2-201"><xref:System.Web.UI.HtmlTextWriter> Klasa przechowuje listę style dla elementów kodu znaczników renderowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="140c2-202">Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metoda jest wywoływana, wszystkie style, które są dodawane przez <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody są renderowane w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="140c2-203">Na liście stylów następnie są usuwane.</span><span class="sxs-lookup"><span data-stu-id="140c2-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="140c2-204">Wzorzec pisania kodu do renderowania elementów kodu znaczników jest następująca:</span><span class="sxs-lookup"><span data-stu-id="140c2-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="140c2-205">Użyj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody w celu dodania dowolny styl atrybuty dla elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="140c2-206">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="140c2-207">Korzysta z innych metod zgodnie z potrzebami do renderowania zawartości, o których odnaleźć pomiędzy otwierającym elementu, a zamykającym tagiem.</span><span class="sxs-lookup"><span data-stu-id="140c2-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="140c2-208">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-209">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> metody do renderowania `font-size` i `color` stylu atrybutów na `<p>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="140c2-210">W tym przykładzie kodu użyto <xref:System.Web.UI.HtmlTextWriter> klasy do renderowania zawartości formantu.</span><span class="sxs-lookup"><span data-stu-id="140c2-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="140c2-211">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Reprezentujący atrybut stylu, aby dodać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-212">Ciąg, który zawiera wartość do przypisania do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-212">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-213">Dodaje atrybut stylu znaczników, które są skojarzone z określonym <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wartość i wartość atrybutu adiustacji otwierający tag utworzony przez kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-214">Użyj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> metody, gdy członek jest to styl <xref:System.Web.UI.HtmlTextWriterStyle> wyliczenie, wiadomo, że przed w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="140c2-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="140c2-215"><xref:System.Web.UI.HtmlTextWriter> Klasa przechowuje listę style dla elementów kodu znaczników renderowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="140c2-216">Gdy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metoda jest wywoływana, wszystkie style, dodane przez <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody są renderowane w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="140c2-217">Na liście stylów następnie są usuwane.</span><span class="sxs-lookup"><span data-stu-id="140c2-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="140c2-218">Wzorzec pisania kodu do renderowania elementów kodu znaczników jest następująca:</span><span class="sxs-lookup"><span data-stu-id="140c2-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="140c2-219">Użyj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody w celu dodania dowolny styl atrybuty dla elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="140c2-220">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="140c2-221">Korzysta z innych metod zgodnie z potrzebami do renderowania zawartości, o których odnaleźć pomiędzy otwierającym elementu, a zamykającym tagiem.</span><span class="sxs-lookup"><span data-stu-id="140c2-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="140c2-222">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-223">Poniższy przykład kodu demonstruje sposób używania część nadpisanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metodę w klasie pochodnej od <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-224">Sprawdzanie kodu czy `<Label>` element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="140c2-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="140c2-225">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> metoda jest wywoływana, aby sprawdzić, czy `Color` atrybut stylu został zdefiniowany dla `<Label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="140c2-226">Jeśli `Color` atrybut nie został zdefiniowany, kod wywołuje to przeciążenie <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody w celu dodania `Color` atrybutu z atrybutem styl, a następnie ustaw dla niego wartość `red`.</span><span class="sxs-lookup"><span data-stu-id="140c2-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-227">Ciąg, który zawiera atrybut stylu, który ma zostać dodana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-227">A string that contains the style attribute to be added.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-228">Ciąg, który zawiera wartość do przypisania do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-228">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="140c2-229">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Reprezentujący atrybut stylu do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-230">Dodaje atrybut stylu określonego znaczników oraz wartość atrybutu wraz z <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wartość wyliczenia znaczników otwierający tag utworzony przez kolejne wywołanie <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-231">Użyj <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> metody tylko wtedy, gdy dziedziczenie z <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-232">Umożliwia tworzenie nowych `name` i `value` pary dla <xref:System.Web.UI.HtmlTextWriterStyle> atrybutów.</span><span class="sxs-lookup"><span data-stu-id="140c2-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-233">Powiadamia <see cref="T:System.Web.UI.HtmlTextWriter" /> obiekt lub obiekt klasy pochodnej, która ma być renderowany kontrolki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-234"><xref:System.Web.UI.HtmlTextWriter> Implementacji klasy <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> metoda nie ma żadnych funkcji.</span><span class="sxs-lookup"><span data-stu-id="140c2-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="140c2-235">Konieczne jest przesłonięcie <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> metodę w klasie pochodnej od <xref:System.Web.UI.HtmlTextWriter> zapewnienie własnej funkcji renderowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="140c2-236">Na przykład w języku znaczników, które mogą wymagać `<p>` elementy do renderowania natychmiast wcześniej kontrolki, ale gdzie potrzebę `<p>` wcześniej ustalona elementu, można użyć <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> zastąpienia.</span><span class="sxs-lookup"><span data-stu-id="140c2-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-237">Zamyka <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu i zwalnia wszystkie zasoby systemu skojarzonych z nim.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-238">Ta implementacja <xref:System.Web.UI.HtmlTextWriter.Close%2A> wywołania metody <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="140c2-239">Po wywołaniu <xref:System.Web.UI.HtmlTextWriter.Close%2A> metody, żadnych operacji na <xref:System.Web.UI.HtmlTextWriter> obiektu może zgłaszać wyjątki, ponieważ wszystkie jej zasoby zostały zwolnione.</span><span class="sxs-lookup"><span data-stu-id="140c2-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-240">Reprezentuje pojedynczy znak tabulacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-240">Represents a single tab character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-241">Pojedynczej karcie jest reprezentowany przez znak ASCII 9.</span><span class="sxs-lookup"><span data-stu-id="140c2-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-242">Poniższy przykład kodu demonstruje sposób tworzenia konstruktora przyjmującego <xref:System.IO.TextWriter> obiektu jako parametr i przekazuje <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> pola jako argument parametru na drugą wersję konstruktora.</span><span class="sxs-lookup"><span data-stu-id="140c2-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="140c2-243">Gdy ten konstruktor jest wywoływana z kodu, <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> pole definiuje zasady wcięć dla wystąpienia edytor znaczników, który jest używany przez strony lub karty.</span><span class="sxs-lookup"><span data-stu-id="140c2-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-244">Reprezentuje znak cudzysłowu (").</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-244">Represents the quotation mark (") character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-245"><xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> Pole jest używane przez <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metodę, aby zamknąć atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-246">Poniższy przykład kodu pokazuje sposób renderowania `border` atrybutu dla `<table>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="140c2-247">Kod wywołuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania atrybutu i jego wartość i używa <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> i <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> pola.</span><span class="sxs-lookup"><span data-stu-id="140c2-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="140c2-248">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-249">Koduje wartość atrybutu określonego znaczników na podstawie wymagań z <see cref="T:System.Web.HttpRequest" /> obiekt z bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-250">Ciąg zawierający wartość atrybutu do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-250">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="140c2-251">
            <see langword="true" /> Aby zakodować wartości atrybutu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-251">
              <see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-252">Koduje wartość atrybutu określonego znaczników na podstawie wymagań z <see cref="T:System.Web.HttpRequest" /> obiekt z bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-253">Ciąg zawierający wartość atrybutu zakodowany <see langword="null" /> Jeśli <paramref name="value" /> jest pusta lub wartość atrybutu niezaszyfrowana, jeśli <paramref name="fEncode" /> jest <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-254">Użyj <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> metodę, jeśli atrybut nie jest <xref:System.Web.UI.HtmlTextWriterAttribute> wartość wyliczenia lub nie jest znany do czasu wykonywania.</span><span class="sxs-lookup"><span data-stu-id="140c2-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="140c2-255"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Metoda usuwa podwójnego cudzysłowu ("), ampersandu (&) i mniejszości znaki (<), tak że nieprawidłowa wartość pola tagi nie są generowane, niezależnie od tego, w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="140c2-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="140c2-256">Rzeczywistego kodowania jest wykonywane przez <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-257">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> metoda jako parametr w <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> wywołania metody, a następnie koduje `color:blue` stylu wartość atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="140c2-258">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Reprezentujący atrybut znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-259">Ciąg zawierający wartość atrybutu do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-259">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-260">Koduje wartość atrybutu określonego znaczników na podstawie wymagań z <see cref="T:System.Web.HttpRequest" /> obiekt z bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-261">Ciąg zawierający wartość atrybutu zakodowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-261">A string containing the encoded attribute value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-262"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> Metoda usuwa podwójnego cudzysłowu ("), ampersandu (&) i mniejszości znaki (<), tak że nieprawidłowa wartość pola tagi nie są generowane, niezależnie od tego, w danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="140c2-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="140c2-263">Rzeczywistego kodowania jest wykonywane przez <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="140c2-264">Ciąg zawierający adres URL do zakodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-264">A string containing the URL to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-265">Wykonuje minimalnego kodowania adresu URL, dokonując przekonwertowania miejsca do magazynowania w określonym adresie URL na ciąg "% 20".</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-266">Ciąg zawierający zakodowanym adresu URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-266">A string containing the encoded URL.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-267">Kodowanie znaków adresu URL składa się z symbolu procentu (%), następuje dwucyfrowy reprezentację szesnastkową (bez uwzględniania wielkości liter) punkt kodowy ISO (łaciński) dla znaków.</span><span class="sxs-lookup"><span data-stu-id="140c2-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="140c2-268">Reprezentacji szesnastkowej miejsca wynosi 20.</span><span class="sxs-lookup"><span data-stu-id="140c2-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-269">Poniższy przykład kodu pokazuje sposób wywołania <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> metodę, aby przekonwertować wszystkie spacje w adresie URL, który jest przekazywany jako parametr w <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-270">Pobiera kodowanie <see cref="T:System.Web.UI.HtmlTextWriter" /> obiekt używa do zapisywania zawartości strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140c2-271">
            <see cref="T:System.Text.Encoding" /> , W którym znaczniki są zapisywane do strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-272"><xref:System.Web.UI.HtmlTextWriter.Encoding%2A> Właściwość uzyskuje wartość od podstawy <xref:System.IO.TextWriter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="140c2-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-273">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> właściwość do zapisania typ kodowania, że formant niestandardowy używa do renderowania tekstu do strony, która go zawiera.</span><span class="sxs-lookup"><span data-stu-id="140c2-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-274">Powiadamia <see cref="T:System.Web.UI.HtmlTextWriter" /> obiekt lub obiekt klasy pochodnej, że formant zakończył renderowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span>
          </span>
          <span data-ttu-id="140c2-275">Ta metoda umożliwia Zamknij wszelkie elementy znaczników otwarty w <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-276"><xref:System.Web.UI.HtmlTextWriter> Implementacji klasy <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> metoda nie ma żadnych funkcji.</span><span class="sxs-lookup"><span data-stu-id="140c2-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="140c2-277">Konieczne jest przesłonięcie <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> w klasę pochodną <xref:System.Web.UI.HtmlTextWriter> klasy, które umożliwiają korzystanie z własnych funkcji renderowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="140c2-278">Możesz użyć <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> metodę, aby zamknąć wszystkie elementy znaczników jest otwarty w <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-279">Reprezentuje kąt po lewej stronie znaku nawiasu i ukośnika (&lt;/) tagu zamykającego elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-280"><xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> Pole jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody do konstruowania znacznikami końcowymi element znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-281">Poniższy przykład kodu pokazuje sposób renderowania tagu zamykającego `<table>` znaczników elementu za pomocą <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> i <xref:System.Web.UI.HtmlTextWriter.TagRightChar> pola jako wartości parametrów w wywołaniach <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="140c2-282">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-283">Zapisuje otwierający tag elementu znaczników, który zawiera atrybuty, które implementują układu i formatowania znaków z określonego stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="140c2-284">A <see cref="T:System.Web.UI.WebControls.Style" /> określający układu i formatowania, aby rozpocząć stosowanie do bloku znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-285">Zapisuje otwierający tag z <see langword="&lt;span&gt;" /> element, który zawiera atrybuty, które implementują formatowanie i układ znaków z określonego stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-286">Użyj <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody do stosowania stylów, takich jak kolor tła lub obramowanie szerokość, do bloku znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="140c2-287"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> i <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody umożliwiają adapter urządzenia lub formantu utworzyć kod znaczników, który używa formatowanie znaków określony styl.</span><span class="sxs-lookup"><span data-stu-id="140c2-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="140c2-288">Użyj tej samej wartości dla `style` w <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody użytej w odpowiednich <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="140c2-289"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Przeciążenia <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> metoda renderuje znaczniku otwierającym elementu `<span>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="140c2-290">Ta metoda dodaje niezbędne atrybuty oraz atrybuty stylu na znaczniku otwierającym elementu `<span>` element, aby wyświetlić ustawienia określone przez <xref:System.Web.UI.WebControls.Style> obiektu.</span><span class="sxs-lookup"><span data-stu-id="140c2-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="140c2-291">Jeśli chcesz renderować element różny kod znaczników zawierają atrybuty oraz atrybuty stylu, należy użyć <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="140c2-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-292">Poniższy przykład kodu demonstruje sposób używania niestandardowej klasy o nazwie `TextSample`, pochodzącej z <xref:System.Web.UI.WebControls.WebControl> klasy, która używa <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody do stosowania <xref:System.Web.UI.WebControls.Style.ForeColor%2A> styl do ciągu tekstowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="140c2-293"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Metoda renderuje kod HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="140c2-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="140c2-294"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Zamyka wywołania metody `<span>` elementu po zrenderowaniu tekstu.</span><span class="sxs-lookup"><span data-stu-id="140c2-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="140c2-295">A <see cref="T:System.Web.UI.WebControls.Style" /> określający układu i formatowania, aby rozpocząć stosowanie do bloku znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="140c2-296">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Określający otwierający tag elementu znaczników, który będzie zawierać obiekt stylu określony w <c>styl</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <c>style</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-297">Zapisuje otwierający tag elementu znaczników, który zawiera atrybuty, które implementują układu i formatowania znaków z określonego stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-298">Użyj <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody do stosowania stylów, takich jak kolor tła lub obramowanie szerokość, do bloku znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="140c2-299"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> i <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody umożliwiają adapter urządzenia lub formantu utworzyć kod znaczników, który używa formatowanie znaków określony styl.</span><span class="sxs-lookup"><span data-stu-id="140c2-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="140c2-300">Użyj tej samej wartości dla `style` w <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody użytej w odpowiednich <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="140c2-301"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Przeciążenia <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> metoda renderuje znaczniku otwierającym elementu określony przez element `tag` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="140c2-302"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> Metoda następnie dodaje niezbędne atrybuty oraz atrybuty stylu znaczniku otwierającym elementu element, aby wyświetlić ustawienia, które są określone przez <xref:System.Web.UI.WebControls.Style> obiektu.</span><span class="sxs-lookup"><span data-stu-id="140c2-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="140c2-303">Użyj <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> przeciążenia do renderowania tagu otwierającego `<span>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-304">Poniższy przykład kodu demonstruje sposób używania niestandardowej klasy o nazwie `TextSample`, pochodzącej z <xref:System.Web.UI.WebControls.WebControl> klasy, która używa <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody do stosowania <xref:System.Web.UI.WebControls.Style.ForeColor%2A> styl do ciągu tekstowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="140c2-305"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Metoda renderuje kod HTML`<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="140c2-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="140c2-306"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Zamyka wywołania metody `<span>` elementu po zrenderowaniu tekstu.</span><span class="sxs-lookup"><span data-stu-id="140c2-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-307">Reprezentuje znak równości (<see langword="=" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-307">Represents the equal sign (<see langword="=" />).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-308">Możesz chcieć użyć <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> pola zamiast <xref:System.Web.UI.HtmlTextWriter.EqualsChar> pole przy konstruowaniu ogranicznik otwierający wartości atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-309">Poniższy przykład kodu pokazuje sposób renderowania `src` atrybutu, jego wartość jest częścią `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="140c2-310">Kod używa <xref:System.Web.UI.HtmlTextWriter.EqualsChar> pole <xref:System.Web.UI.HtmlTextWriter.Write%2A> wywołanie metody do renderowania znaku równości (=) między `src` atrybutu i jego wartość.</span><span class="sxs-lookup"><span data-stu-id="140c2-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="140c2-311">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-312">Reprezentuje znak równości (=) i podwójnego cudzysłowu (") w ciągu (=").</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-313"><xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> Pole jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> i <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody do konstruowania ogranicznik otwierający wartości atrybutów.</span><span class="sxs-lookup"><span data-stu-id="140c2-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-314">Poniższy przykład kodu pokazuje sposób renderowania `border` atrybutu dla `<table>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="140c2-315">Kod wywołuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania atrybutu i jego wartość i używa <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> i <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> pola.</span><span class="sxs-lookup"><span data-stu-id="140c2-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="140c2-316">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-317">Zapisuje tagu zamykającego elementu znacznika do końca określonego formatowanie i układ znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="140c2-318">A <see cref="T:System.Web.UI.WebControls.Style" /> określający układu i formatowania, aby zamknąć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-319">Zapisuje tag zamykający <see langword="&lt;span&gt;" /> element do końca określonego formatowanie i układ znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-320"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Przeciążenia <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> metoda renderuje tag zamykający `<span>` elementu po tagu zamykającym kontrolki, zamykanie elementu otwierane przez odpowiednie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="140c2-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="140c2-321"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> i <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody umożliwiają adapter urządzenia lub formantu utworzyć kod znaczników, który rozpoczyna się i kończy blok przy użyciu znaków formatowania stylu określonego.</span><span class="sxs-lookup"><span data-stu-id="140c2-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="140c2-322">Użyj tej samej wartości dla `style` w <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody użytej w odpowiednich <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-323">Poniższy przykład kodu demonstruje sposób używania niestandardowej klasy o nazwie `TextSample`, pochodzącej z <xref:System.Web.UI.WebControls.WebControl> klasy, która używa <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody do stosowania <xref:System.Web.UI.WebControls.Style.ForeColor%2A> styl do ciągu tekstowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="140c2-324"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Metoda renderuje kod HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="140c2-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="140c2-325"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Zamyka wywołania metody `<span>` elementu po zrenderowaniu tekstu.</span><span class="sxs-lookup"><span data-stu-id="140c2-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="140c2-326">A <see cref="T:System.Web.UI.WebControls.Style" /> określający układu i formatowania do zaprzestanie stosowania do tekstu wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="140c2-327">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> , Który określa tag zamykający elementu znaczników, który zawiera atrybuty, które zastosowano określony styl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span>
          </span>
          <span data-ttu-id="140c2-328">Musi on być zgodny klucz przekazany w odpowiednich <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-329">Zapisuje tagu zamykającego elementu określonego znacznika do końca określonego układu i formatowania znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-330"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Przeciążenia <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> metoda renderuje tag zamykający elementu, który jest określony przez `tag` po tagu zamykającym kontrolki, zamykanie elementu, która została otwarta przez odpowiednie <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="140c2-331"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> i <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody umożliwiają adapter urządzenia lub formantu utworzyć kod znaczników, który rozpoczyna się i kończy blok przy użyciu znaków formatowania stylu określonego.</span><span class="sxs-lookup"><span data-stu-id="140c2-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="140c2-332">Użyj tej samej wartości dla `style` w <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody użytej w odpowiednich <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-333">Poniższy przykład kodu demonstruje sposób używania niestandardowej klasy o nazwie `TextSample`, pochodzącej z <xref:System.Web.UI.WebControls.WebControl> klasy, która używa <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> metody do stosowania <xref:System.Web.UI.WebControls.Style.ForeColor%2A> styl do ciągu tekstowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="140c2-334"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> Metoda renderuje kod HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="140c2-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="140c2-335"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> Zamyka wywołania metody `<span>` elementu po zrenderowaniu tekstu.</span><span class="sxs-lookup"><span data-stu-id="140c2-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-336">Usuwa wszystkie atrybuty znaczników i styl na temat wszystkich właściwości strony lub kontrolki serwera sieci Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-337">Przed wyświetleniem atrybuty są w elemencie znaczników <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="140c2-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="140c2-338">Z kolei <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> wywołania metody <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> i <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> metody dla każdego atrybutu i styl do renderowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-339">Poniższy przykład kodu pokazuje sposób korzystania z niestandardowej klasy pochodzącej od <xref:System.Web.UI.HtmlTextWriter> klasy, w którym jest zastępowana <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="140c2-340">Po wywołaniu <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> zastąpienie sprawdza, czy składnik zapisywania tekstu renderuje dowolne `<label>` lub `<a>` elementy:</span><span class="sxs-lookup"><span data-stu-id="140c2-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="140c2-341">Jeśli `<label>` renderowania elementu <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> metoda sprawdza czy `style` atrybut jest renderowany w elemencie i, jeśli nie, tworzy `style` atrybutu i ustawia ją na `color: blue`.</span><span class="sxs-lookup"><span data-stu-id="140c2-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="140c2-342">Jeśli `<a>` renderowania elementu <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Metoda określa, czy `href` atrybut jest dołączony i, jeśli nie, dodaje `href` do adresu URL http://www.cohowinery.com.</span><span class="sxs-lookup"><span data-stu-id="140c2-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-343">Czyści wszystkie bufory dla bieżącego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu i powoduje, że dowolne buforowane dane są zapisywane do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-344"><xref:System.Web.UI.HtmlTextWriter> Implementacji klasy <xref:System.Web.UI.HtmlTextWriter.Flush%2A> metoda po prostu wywołuje <xref:System.IO.TextWriter.Flush%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName">
          <span data-ttu-id="140c2-345">Ciąg, który zawiera atrybut, do których chcesz uzyskać <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-346">Uzyskuje odpowiednie <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> wartość wyliczenia dla określonego atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-347">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Wartość wyliczenia dla określonego atrybutu; w przeciwnym razie nieprawidłową <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> wartość, jeśli atrybut nie jest członkiem wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-348">Jeśli `attrName` jest `null` ani być pustym ciągiem (""), lub nie można znaleźć w tabeli nazw atrybutu, wartość -1, wpisany <xref:System.Web.UI.HtmlTextWriterAttribute> obiektu, jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="140c2-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-349">Poniższy przykład kodu demonstruje sposób użycia klasy pochodzącej od <xref:System.Web.UI.HtmlTextWriter> klasy, w którym jest zastępowana <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="140c2-350">Sprawdzanie zastąpienie czy `tagKey` jest równa <xref:System.Web.UI.HtmlTextWriterTag.Font> pola, co oznacza, że `<font>` znaczników elementu, który będzie renderowany.</span><span class="sxs-lookup"><span data-stu-id="140c2-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="140c2-351">Jeśli tak, wywołuje zastąpienie <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> metodę, aby dowiedzieć się, czy `<font>` element zawiera <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="140c2-352">Jeśli <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> zwraca `false`, <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> wywołania metody <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> metody, która definiuje <xref:System.Web.UI.HtmlTextWriterAttribute.Size> i ustawia dla niej wartość `30pt`.</span><span class="sxs-lookup"><span data-stu-id="140c2-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="140c2-353">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Uzyskać nazwę atrybutu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-354">Uzyskuje nazwę atrybutu adiustacji skojarzonego z określonym <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-355">Ciąg zawierający nazwę atrybutu, znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-355">A string containing the name of the markup attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-356"><xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> Metoda zwraca pusty ciąg (""), jeśli `attrKey` nie jest prawidłowym <xref:System.Web.UI.HtmlTextWriterAttribute> wartość.</span><span class="sxs-lookup"><span data-stu-id="140c2-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-357">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> metodę, aby przekonwertować <xref:System.Web.UI.HtmlTextWriterAttribute.Size> wartość wyliczenia do nazwy ciągu.</span><span class="sxs-lookup"><span data-stu-id="140c2-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName">
          <span data-ttu-id="140c2-358">Atrybut stylu, dla którego będzie można uzyskać <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-359">Uzyskuje <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wartość wyliczenia określony styl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-360">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Wyliczenie odpowiadający wartości <paramref name="styleName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-361"><xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> Metoda zwraca wartość -1 jako <xref:System.Web.UI.HtmlTextWriterStyle> wartość, jeśli `styleName` nie odpowiada żadnemu kodowi <xref:System.Web.UI.HtmlTextWriterStyle> wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="140c2-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-362">Poniższy przykład kodu demonstruje sposób zastąpienia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metodę w klasie pochodnej od <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-363"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Zastąpienie Określa, czy `<label>` będzie renderowana znaczników i jeśli tak, sprawdza, czy element dla <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="140c2-364">Jeśli <xref:System.Web.UI.HtmlTextWriterStyle.Color> nie zdefiniowano atrybutu <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> metoda jest używana jako pierwszy parametr w wywołaniu <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody w celu dodania <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybutu `<label>` znaczników elementu i ustaw <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybutu `red`.</span><span class="sxs-lookup"><span data-stu-id="140c2-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey">
          <span data-ttu-id="140c2-365">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Uzyskać nazwę atrybut stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-366">Uzyskuje nazwę atrybutu styl znaczników, skojarzonego z określonym <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> wartość wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-367">Nazwa atrybutu stylu skojarzone z <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> określona wartość wyliczenia <paramref name="styleKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-368">Jeśli `styleKey` nie jest prawidłowym <xref:System.Web.UI.HtmlTextWriterStyle> obiektu <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> metoda zwraca pusty ciąg ("").</span><span class="sxs-lookup"><span data-stu-id="140c2-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-369">Poniższy przykład kodu pokazuje sposób sprawdzić, czy `<label>` element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="140c2-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="140c2-370">Jeśli tak, sprawdza, czy <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybut stylu został zdefiniowany w elemencie.</span><span class="sxs-lookup"><span data-stu-id="140c2-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="140c2-371">Jeśli ten atrybut nie został zdefiniowany, <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metoda jest wywoływana i <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> konwertuje metody <xref:System.Web.UI.HtmlTextWriterStyle.Color> element członkowski wyliczenia na jego reprezentację ciągu do przekazania do <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="140c2-372">Element znaczników, dla którego będzie można uzyskać <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-373">Uzyskuje <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość wyliczenia skojarzone z elementem określonym znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-374">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wartość wyliczenia; w przeciwnym razie, jeśli <paramref name="tagName" /> nie jest skojarzony z określonym <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-375">Jeśli `tagName` jest `null`, ciąg pusty (""), lub nie można znaleźć w tabeli nazw tagów znaczników <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> metoda zwraca <xref:System.Web.UI.HtmlTextWriterTag.Unknown> pola.</span><span class="sxs-lookup"><span data-stu-id="140c2-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-376">Poniższy przykład kodu przedstawia sposób przesłonięcia przeciążenia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody, która przyjmuje parametry jako parametr.</span><span class="sxs-lookup"><span data-stu-id="140c2-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="140c2-377">Ten ciąg jest przekazywany do <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> metody, która konwertuje je do odpowiednich <xref:System.Web.UI.HtmlTextWriterTag> elementu członkowskiego wyliczenia, a następnie przekazuje ją do <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> przeciążenia przyjmującego <xref:System.Web.UI.HtmlTextWriterTag> wartość wyliczenia jako parametr.</span><span class="sxs-lookup"><span data-stu-id="140c2-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="140c2-378">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Można uzyskać elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-379">Pobiera element znaczników skojarzonego z określonym <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-380">Ciąg reprezentujący element znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-380">A string representing the markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-381">Jeśli `tagKey` nie jest prawidłowym <xref:System.Web.UI.HtmlTextWriterTag> wartość <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> metoda zwraca pusty ciąg ("").</span><span class="sxs-lookup"><span data-stu-id="140c2-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-382">Poniższy przykład kodu demonstruje sposób zamknięcia `<font>` elementu za pomocą <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="140c2-383"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Wywołania metody <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> metodę, aby przekonwertować <xref:System.Web.UI.HtmlTextWriterTag.Font> wartość na ciąg.</span><span class="sxs-lookup"><span data-stu-id="140c2-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-384">Pobiera lub ustawia liczbę pozycji tabulatorów wcięcia na początku każdego wiersza kodu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140c2-385">Numer pozycji tabulatorów zwiększyć wcięcie każdego wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-385">The number of tab positions to indent each line.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-386">Wcięcie odbywa się przez pisanie ciąg, który jest określony przez `tabString` parametru <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> Konstruktor liczbę razy, które są określone przez <xref:System.Web.UI.HtmlTextWriter.Indent%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="140c2-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="140c2-387">Jeśli <xref:System.Web.UI.HtmlTextWriter.Indent%2A> właściwość jest ustawiona na wartość ujemna, zostanie on zmieniony na wartość 0 przed zapisaniem.</span><span class="sxs-lookup"><span data-stu-id="140c2-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-388">Poniższy przykład kodu pokazuje, jak zwiększać wartość, która jest przypisana do <xref:System.Web.UI.HtmlTextWriter.Indent%2A> właściwości atrybuty zostały dodane do znaczniku otwierającym elementu `<span>` elementu i <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> została wywołana metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="140c2-389">Zwiększa wcięcie dla żadnych znaczników, który jest renderowany wewnątrz `<span>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-390">Pobiera lub ustawia Edytor tekstu, który zapisuje zawartość elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-390">Gets or sets the text writer that writes the inner content of the markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140c2-391">A <see cref="T:System.IO.TextWriter" /> , zapisuje zawartość wewnętrzna znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-392">Zawartość wewnętrzna znaczników jest tekstu między otwierającym i zamykającym tagiem elementu języka znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="140c2-393">Jeśli <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> właściwość jest ustawiona na <xref:System.IO.TextWriter> obiekt, który jest wystąpieniem <xref:System.Web.HttpWriter> klasy, należy zauważyć, ten fakt, a oddzielne odwołania są zapisywane.</span><span class="sxs-lookup"><span data-stu-id="140c2-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-394">Poniższy przykład kodu pokazuje, jak użyć niestandardowego formantu serwera sieci Web, pochodzące z <xref:System.Web.UI.WebControls.WebControl> klasy, w którym jest zastępowana <xref:System.Web.UI.Control.Render%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="140c2-395">Używa ona <xref:System.Web.UI.HtmlTextWriter> klasę umożliwiającą zapisanie `<font>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="140c2-396">Po zapisuje otwierający tag elementu, używa <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> właściwość do zapisania ciągu `"<br> The time on the server:"` i łączy ten ciąg wartością <xref:System.DateTime.Now%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="140c2-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-397">Określa, czy atrybut adiustacji określonego i jego wartość jest renderowany podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="140c2-398">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Skojarzony z atrybutem znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-399">Określa, czy atrybut adiustacji określonego i jego wartość jest renderowany podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-400">
            <see langword="true" /> Jeśli ten atrybut jest renderowany podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metoda; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-400">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-401">Aby uzyskać wartość do przypisania do <xref:System.Web.UI.HtmlTextWriterAttribute> obiektu, należy użyć <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> przeciążenia zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="140c2-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-402">Poniższy przykład kodu pokazuje sposób użycia nadpisanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody w klasie, która dziedziczy <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-403"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> Czy zastąpić kontroli `<font>` znaczników elementu, który będzie renderowany.</span><span class="sxs-lookup"><span data-stu-id="140c2-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="140c2-404">Jeśli tak, wywołuje zastąpienie <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> metodę sprawdzania, czy `<font>` element zawiera <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="140c2-405">Jeśli nie, <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> wywołania metody <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> metody, która definiuje <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybutu i ustawia dla niej wartość `30pt`.</span><span class="sxs-lookup"><span data-stu-id="140c2-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute *  -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="140c2-406">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Skojarzony z atrybutem znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-407">Wartość atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-407">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-408">Określa, czy atrybut adiustacji określonego i jego wartość jest renderowany podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-409">
            <see langword="true" /> Jeśli ten atrybut jest renderowany podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metoda; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-409">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-410">Jeśli <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> metoda zwraca `true`, wartość do przypisania do <xref:System.Web.UI.HtmlTextWriterAttribute> obiekt jest zwracany w `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-411">Określa, czy atrybut stylu znacznika jest renderowany podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="140c2-412">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Skojarzony z atrybutem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-413">Określa, czy atrybut stylu określonego znaczników jest renderowany podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-414">
            <see langword="true" /> Jeśli ten atrybut będzie wyświetlany podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metoda; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-414">
              <see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-415">Aby uzyskać wartość, która będzie renderowana atrybutem określony styl, użyj <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> przeciążenia <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-416">Poniższy przykład kodu pokazuje sposób sprawdzić, czy `<label>` element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="140c2-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="140c2-417">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> metoda sprawdza czy <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybut stylu został zdefiniowany w elemencie.</span><span class="sxs-lookup"><span data-stu-id="140c2-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="140c2-418">Jeśli <xref:System.Web.UI.HtmlTextWriterStyle.Color> nie zdefiniowano atrybutu <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> definiuje metodę <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybutu i ustawia dla niej wartość `red`.</span><span class="sxs-lookup"><span data-stu-id="140c2-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle *  -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="140c2-419">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Skojarzony z atrybutem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-420">Wartość przypisana do atrybut stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-420">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-421">Określa, czy podczas następnego wywołania metody mają być renderowane znaczników określony atrybut stylu i jego wartość <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-422">
            <see langword="true" /> Jeśli ten atrybut i jego wartość będzie renderowana podczas następnego wywołania metody <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> metoda; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-422">
              <see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-423">Jeśli <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> metoda zwraca `true`, wartość do przypisania do <xref:System.Web.UI.HtmlTextWriterStyle> atrybutu jest zwracany w `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="140c2-424">Ciąg, który zawiera nazwę atrybutu, aby sprawdzić.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-424">A string that contains the name of the attribute to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-425">Sprawdza, czy atrybut, aby upewnić się, że mogą być renderowane w znaczniku otwierającym elementu <see langword="&lt;form&gt;" /> znaczników elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-426">Zawsze <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-426">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-427"><xref:System.Web.UI.HtmlTextWriter> Implementacji klasy <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> metoda zwraca `true` dla wszystkich atrybutów.</span><span class="sxs-lookup"><span data-stu-id="140c2-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="140c2-428">Zastąp <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> ograniczyć atrybuty, które mogą być renderowane w znaczniku otwierającym elementu `<form>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-429">
            <para>Zastąpienie <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> metodę, aby zwrócić <see langword="true" /> tylko w przypadku tych atrybutów, które mogą być zawarte w <see langword="&lt;form&gt;" /> element adiustacji, dla którego klasę pochodną <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy jest przeznaczony.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-429">
              <para>Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-430">Pobiera lub ustawia ciąg terminator wiersza, które są używane przez <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140c2-431">Parametry terminator wiersza, które są używane przez bieżące <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-432">Domyślny ciąg terminator wiersza jest znak powrotu karetki, następuje znak wysuwu wiersza ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="140c2-433">Ciąg terminator wiersza jest zapisywany do strumienia wyjściowego, zawsze, gdy jest to jeden z <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> nosi nazwę metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="140c2-434">Jeśli <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> właściwość jest ustawiona na `null`, używany jest domyślny znak nowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="140c2-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-435">Poniższy przykład kodu pokazuje sposób korzystania z niestandardowej klasy pochodzącej od <xref:System.Web.UI.HtmlTextWriter> klasy, w którym jest zastępowana <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="140c2-436">Po wywołaniu <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> zastąpienie sprawdza, czy składnik zapisywania tekstu renderuje dowolne `<label>` lub `<a>` elementów.</span><span class="sxs-lookup"><span data-stu-id="140c2-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="140c2-437">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Metoda określa, czy atrybut stylu jest zdefiniowana dla etykiety.</span><span class="sxs-lookup"><span data-stu-id="140c2-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="140c2-438">Jeśli żaden styl nie jest zdefiniowany, <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> metody ustawia domyślną wartość dla `style:color` atrybutu na niebieski.</span><span class="sxs-lookup"><span data-stu-id="140c2-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="140c2-439"><xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> Metoda następnie używa <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> właściwości, aby wstawić wiersz włamanie się tag znaczników i zapisuje zdefiniowanych atrybutów.</span><span class="sxs-lookup"><span data-stu-id="140c2-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-440">Ciąg zawierający nazwę atrybutu do renderowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-440">A string containing the name of the attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-441">Ciąg zawierający wartość, która jest przypisana do atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-441">A string containing the value that is assigned to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="140c2-442">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Skojarzony z atrybutem znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-443">Określa, czy atrybut adiustacji określonego i jego wartość może być renderowany do bieżącego elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-444">Zawsze <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-444">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-445"><xref:System.Web.UI.HtmlTextWriter> Implementacji klasy <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> metoda zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="140c2-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="140c2-446"><xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> Zastąpień można określić, czy atrybut będzie wyświetlany na stronie.</span><span class="sxs-lookup"><span data-stu-id="140c2-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-447">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="140c2-448">Jeśli <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybutu jest renderowany, ale <xref:System.Web.UI.HtmlTextWriterAttribute.Size> wartość nie jest `30pt`, <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> zastępują wywołania <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metody w celu dodania <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybut i ustawić jej wartość na `30pt`.</span><span class="sxs-lookup"><span data-stu-id="140c2-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-449">
            <para>Jeśli dziedziczą z <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy, można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> metodę, aby zwrócić <see langword="false" /> aby zapobiec atrybutu są renderowane w ogóle, są renderowane w określonym elemencie lub są renderowane dla określonego kodu znaczników. Na przykład, jeśli nie chcesz, aby obiekt pochodzący od <see cref="T:System.Web.UI.HtmlTextWriter" /> do renderowania <see langword="bgcolor" /> atrybutu <see langword="&lt;table&gt;" /> elementy, można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> i zwracają <see langword="false" /> podczas <paramref name="name" /> przekazuje <see langword="bgcolor" /> i <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> wartość właściwości jest <see langword="table" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-449">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup. For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-450">Ciąg zawierający nazwę atrybut stylu do renderowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-450">A string containing the name of the style attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-451">Ciąg zawierający wartość, która jest przypisana do atrybut stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-451">A string containing the value that is assigned to the style attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="140c2-452">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> Skojarzony atrybut stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-452">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-453">Określa, czy znaczników określony atrybut stylu i jego wartość może być renderowany do bieżącego elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-453">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-454">Zawsze <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-454">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-455"><xref:System.Web.UI.HtmlTextWriter> Implementacji klasy <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> metoda zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="140c2-455">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="140c2-456"><xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> Zastąpień można określić, czy atrybut stylu będą renderowane na stronę.</span><span class="sxs-lookup"><span data-stu-id="140c2-456">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-457">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-457">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="140c2-458">Jeśli <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybut stylu jest renderowany, ale <xref:System.Web.UI.HtmlTextWriterStyle.Color> wartość nie jest `purple`, <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> zastąpienia używa <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metodę, aby ustawić <xref:System.Web.UI.HtmlTextWriterStyle.Color> atrybutu `purple`.</span><span class="sxs-lookup"><span data-stu-id="140c2-458">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-459">
            <para>Jeśli dziedziczą z <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy, można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> metodę, aby zwrócić <see langword="false" /> aby zapobiec atrybut stylu są renderowane w ogóle, są renderowane w określonym elemencie lub są renderowane w języku znaczników określonej. Na przykład, jeśli nie chcesz, aby obiekt, który jest tworzony na podstawie <see cref="T:System.Web.UI.HtmlTextWriter" /> do renderowania <see langword="color" /> atrybut stylu do <see langword="&lt;p&gt;" /> elementu, można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> i zwracają <see langword="false" /> podczas <paramref name="name" /> przekazuje <see langword="color" />i <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> wartość właściwości jest <see langword="p" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-459">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language. For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-460">Ciąg zawierający nazwę elementu do renderowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-460">A string containing the name of the element to render.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="140c2-461">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Skojarzone z elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-461">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-462">Określa, czy element określony znaczników będzie renderowana do żądania strony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-462">Determines whether the specified markup element will be rendered to the requesting page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-463">Zawsze <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-463">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-464"><xref:System.Web.UI.HtmlTextWriter> Implementacji klasy <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> metoda zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="140c2-464">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="140c2-465"><xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> Zastąpień można określić, czy element będzie wyświetlany na stronie.</span><span class="sxs-lookup"><span data-stu-id="140c2-465">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-466">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-466">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="140c2-467">Jeśli <xref:System.Web.UI.HtmlTextWriterTag.Font> renderowania elementu <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> zastąpienia używa <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> metodę pozwala ustalić czy <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybutu jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="140c2-467">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="140c2-468">Jeśli nie, używa <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metodę w celu utworzenia <xref:System.Web.UI.HtmlTextWriterAttribute.Size> atrybut i ustawić jej wartość na `20pt`.</span><span class="sxs-lookup"><span data-stu-id="140c2-468">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-469">
            <para>Jeśli dziedziczą z <see cref="T:System.Web.UI.HtmlTextWriter" /> klasy, można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> metodę, aby zwrócić <see langword="false" /> aby zapobiec renderowanego wcale lub języka znaczników określonego elementu znaczników. Na przykład, jeśli nie chcesz, aby obiekt, który jest tworzony na podstawie <see cref="T:System.Web.UI.HtmlTextWriter" /> do renderowania <see langword="&lt;font&gt;" /> elementu, można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> metodę, aby zwrócić <see langword="false" /> po żądaniu strony zawierający <see langword="&lt;font&gt;" /> elementu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-469">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language. For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-470">Zapisuje szereg ciągów karty, które reprezentują poziom wcięcia linii znaczników znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-470">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-471"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> Metoda używa <xref:System.Web.UI.HtmlTextWriter.Indent%2A> właściwości, aby określić, ile ciągi kartę do zapisu do uzyskania żądanego wcięcia.</span><span class="sxs-lookup"><span data-stu-id="140c2-471">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="140c2-472">Ciąg karty jest określony za pomocą <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="140c2-472">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="140c2-473">Jeśli zostanie określony ciąg nie karty, <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> stałych (`\t`) jest używany.</span><span class="sxs-lookup"><span data-stu-id="140c2-473">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-474">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> metody w klasie, która jest pochodną <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-474">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-475"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> Zastąpienia zawsze używa <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> stała przeprowadzić wcięcia.</span><span class="sxs-lookup"><span data-stu-id="140c2-475">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-476">Usuwa z listy elementów renderowanych ostatnio zapisanych element znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-476">Removes the most recently saved markup element from the list of rendered elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-477">Element <see cref="T:System.String" /> zawierający ostatnio renderowania kodu znaczników elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-477">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-478">Elementy są dodawane do listy elementów renderowanego kodu znaczników przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-478">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="140c2-479"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Metoda usuwa elementy znaczników z listy, wywołując <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-479">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="140c2-480">Lista elementów renderowanych jest pusta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-480">The list of rendered elements is empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">
          <span data-ttu-id="140c2-481">Tag zamykający elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-481">The closing tag of the markup element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-482">Zapisuje element określony znaczników w celu późniejszego użycia podczas generowania tagu końcowego dla elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-482">Saves the specified markup element for later use when generating the end tag for a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-483">Elementy są dodawane do listy elementów renderowanego kodu znaczników przy <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> wywołania metody <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-483">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="140c2-484"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Metoda usuwa elementy znaczników z listy po renderowaniu produktu do tagu końcowego dla elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-484">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-485">Ciąg zawierający nazwę atrybutu znaczników do zarejestrowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-485">A string containing the name of the markup attribute to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="140c2-486">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> Nazwą atrybutu, który odpowiada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-486">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-487">Rejestruje atrybuty znaczników, czy literały lub dynamicznie generowany z pliku źródłowego, dzięki czemu może być prawidłowo renderowany do klienta wysyłającego żądanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-487">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-488">Wstępnie zdefiniowanych atrybutów języka znaczników HTML są rejestrowane przez wywołania <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> metody podczas pierwszego <xref:System.Web.UI.HtmlTextWriter> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="140c2-488">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="140c2-489">Dynamiczne atrybuty mogą być zarejestrowane przy użyciu <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> metody w pozostałych godzinach.</span><span class="sxs-lookup"><span data-stu-id="140c2-489">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="140c2-490">Tabela rejestracji używana przez <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> metodą jest `static`, więc rejestracja atrybutów ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter> obiektów na komputerze-hoście.</span><span class="sxs-lookup"><span data-stu-id="140c2-490">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-491">Ciąg przekazany z pliku źródłowego, określając nazwę stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-491">The string passed from the source file specifying the style name.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="140c2-492">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> , Który odpowiada określony styl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-492">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-493">Rejestruje ponownego obliczenia właściwości stylu znacznika, czy literały lub dynamicznie generowany z pliku źródłowego, dzięki czemu może być prawidłowo renderowany do klienta wysyłającego żądanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-493">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-494">Wstępnie zdefiniowane kaskadowy arkusz (CSS) atrybuty stylu języku znaczników HTML są rejestrowane przez wywołania <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> metody podczas pierwszego <xref:System.Web.UI.HtmlTextWriter> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="140c2-494">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="140c2-495">Atrybuty stylu dynamiczne mogą być zarejestrowane przy użyciu <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> metody w pozostałych godzinach.</span><span class="sxs-lookup"><span data-stu-id="140c2-495">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="140c2-496">Tabela rejestracji używana przez <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> metodą jest `static`, więc rejestracja atrybutów ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter> obiektów na komputerze-hoście.</span><span class="sxs-lookup"><span data-stu-id="140c2-496">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-497">Ciąg, który zawiera znacznik HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-497">A string that contains the HTML tag.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="140c2-498">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> , Który określa element, który do renderowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-498">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-499">Rejestruje znaczniki, czy literały lub dynamicznie generowany z pliku źródłowego, dzięki czemu może być prawidłowo renderowany do klienta wysyłającego żądanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-499">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-500">Wstępnie zdefiniowane znaczników języka HTML są rejestrowane przez wywołania <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> metody podczas pierwszego <xref:System.Web.UI.HtmlTextWriter> obiekt zostanie utworzony.</span><span class="sxs-lookup"><span data-stu-id="140c2-500">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="140c2-501">Dynamiczne znaczniki mogą być zarejestrowane przy użyciu <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> metody w pozostałych godzinach.</span><span class="sxs-lookup"><span data-stu-id="140c2-501">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="140c2-502">Tabela rejestracji używana przez <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> metodą jest `static`, więc rejestracja tagi ma zastosowanie do wszystkich <xref:System.Web.UI.HtmlTextWriter> obiektów na komputerze-hoście.</span><span class="sxs-lookup"><span data-stu-id="140c2-502">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-503">Zapisuje tekst lub odstępy występujący po zawartości i przed tagiem zamykającym elementu znaczników do strumienia wyjściowego znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-503">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-504">Ciąg, który zawiera odstępy lub tekst można zapisać po zawartości elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-504">A string that contains the spacing or text to write after the content of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-505"><xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> Metoda może być przydatna, jeśli chcesz wstawić elementy podrzędne do bieżącego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-505">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-506">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> metodę w klasie pochodnej od <xref:System.Web.UI.HtmlTextWriter> klasy, aby określić, czy `<label>` element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="140c2-506">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="140c2-507">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> zastąpienie wstawi tag zamykający `<font>` element bezpośrednio przed tagiem zamykającym z `<label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-507">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="140c2-508">Jeśli element innych niż `<label>` jest renderowany, <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> używana jest metoda podstawowa.</span><span class="sxs-lookup"><span data-stu-id="140c2-508">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-509">
            <para>
              <see cref="T:System.Web.UI.HtmlTextWriter" /> Implementacji klasy <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> metoda zwraca <see langword="null" />. Zastąp <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> Jeśli chcesz napisać tekst lub odstęp po zawartości elementu, ale przed tagiem zamykającym.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-509">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-510">Zapisuje wszelkie odstępy lub tekst występujący po tag zamykający dla elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-510">Writes any spacing or text that occurs after the closing tag for a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-511">Odstępy między lub tekst można zapisać po tagu zamykającego elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-511">The spacing or text to write after the closing tag of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-512"><xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> Metoda może być przydatna, jeśli chcesz renderować dodatkowe zamykającym tagiem po tagu elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-512">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-513">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> metodę pozwala ustalić, czy klasę pochodną <xref:System.Web.UI.HtmlTextWriter> renderowania klasy `<label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-513">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="140c2-514">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> zastąpienie wstawi tag zamykający `<font>` element natychmiast po `<label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-514">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="140c2-515">Jeśli nie jest `<label>` elementu <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> używana jest metoda podstawowa.</span><span class="sxs-lookup"><span data-stu-id="140c2-515">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-516">
            <para>
              <see cref="T:System.Web.UI.HtmlTextWriter" /> Implementacji klasy <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> metoda zwraca <see langword="null" />. Zastąp <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> Jeśli chcesz napisać tekst lub odstęp po elemencie tagu zamykającego.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-516">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-517">Zapisuje tekst i odstępy przed zawartością i po znaczniku otwierającym elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-517">Writes any text or spacing before the content and after the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-518">Tekst lub odstępy można zapisać przed zawartością elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-518">The text or spacing to write prior to the content of the element.</span>
          </span>
          <span data-ttu-id="140c2-519">Jeśli nie zostanie zastąpiona <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> zwraca <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-519">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-520"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> Metoda może być przydatna, jeśli chcesz wstawić elementy podrzędne do bieżącego elementu znaczników przed wewnętrzny znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-520">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-521">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> metodę pozwala ustalić, czy klasę pochodną <xref:System.Web.UI.HtmlTextWriter> klasa ma renderować `<label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-521">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="140c2-522">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> zastąpienie wstawia znaczniku otwierającym elementu `<font>` element natychmiast po znaczniku otwierającym elementu `<label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-522">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="140c2-523">Jeśli nie jest `<label>` elementu <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> używana jest metoda podstawowa.</span><span class="sxs-lookup"><span data-stu-id="140c2-523">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-524">
            <para>
              <see cref="T:System.Web.UI.HtmlTextWriter" /> Implementacji klasy <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> metoda zwraca <see langword="null" />. Zastąp <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> Jeśli chcesz napisać tekst lub odstęp po znaczniku otwierającym, ale wcześniej zawartości elementu.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-524">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-525">Zapisuje tekst lub odstępy występujący przed otwierający tag elementu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-525">Writes any text or spacing that occurs before the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="140c2-526">Tekst lub odstępy można zapisać przed elementem znaczników tagu początkowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-526">The text or spacing to write before the markup element opening tag.</span>
          </span>
          <span data-ttu-id="140c2-527">Jeśli nie zostanie zastąpiona <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-527">If not overridden, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-528"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> Metoda może być przydatna, jeśli mają być renderowane znaczniki otwarcia dodatkowe przed otwierający tag zamierzonego elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-528">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-529">Poniższy przykład kodu przedstawia sposób przesłonięcia <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> metodę, aby określić, czy klasa, która jest pochodną <xref:System.Web.UI.HtmlTextWriter> klasa ma renderować `<label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-529">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="140c2-530">Jeśli tak, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> zastąpienie wstawia znaczniku otwierającym elementu `<font>` element bezpośrednio przed `<label>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-530">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="140c2-531">Jeśli nie jest renderowany `<label>` elementu <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> używana jest metoda podstawowa.</span><span class="sxs-lookup"><span data-stu-id="140c2-531">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-532">
            <para>
              <see cref="T:System.Web.UI.HtmlTextWriter" /> Implementacji klasy <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> metoda zwraca <see langword="null" />. Zastąp <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> Jeśli chcesz napisać tekst lub odstępy przed elementem tagu początkowego.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-532">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-533">Zapisuje otwierający tag elementu znaczników do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-533">Writes the opening tag of a markup element to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="140c2-534">Ciąg zawierający nazwę elementu znaczników, dla którego ma zostać renderowania tagu otwierającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-534">A string containing the name of the markup element for which to render the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-535">Zapisuje otwierający tag elementu określonego znaczników do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-535">Writes the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-536">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> zastępowania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> metody, jeśli element znaczników nie jest jednym z <xref:System.Web.UI.HtmlTextWriterTag> wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="140c2-536">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="140c2-537">Aby wygenerować element kodu znaczników przy użyciu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody, pierwsze wywołanie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> i <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metod, zgodnie z potrzebami, aby określić wszystkie atrybuty elementów lub atrybutów stylu, które są wyświetlane w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-537">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="140c2-538">Po wygenerowaniu wewnętrzny znaczników, należy wywołać <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metodę w celu wygenerowania tagu zamykającego.</span><span class="sxs-lookup"><span data-stu-id="140c2-538">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-539">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody w formant niestandardowy do renderowania tagu otwierającego niestandardowych `MyTag` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-539">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="140c2-540">Przykładowy kod wywołuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> renderowanie wewnętrznego znacznika, a następnie wywołuje metodę <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metodę, aby zamknąć element.</span><span class="sxs-lookup"><span data-stu-id="140c2-540">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="140c2-541">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-541">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="140c2-542">Jedną z <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartości, które definiuje otwierający tag elementu znaczników do renderowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-542">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-543">Zapisuje otwierający tag elementu znaczników skojarzonego z określonym <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość wyliczenia do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-543">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-544">Użyj <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> przeciążenia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> metodę, jeśli element znaczników jest znany typ, który jest jednym z <xref:System.Web.UI.HtmlTextWriterTag> wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="140c2-544">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="140c2-545">Aby wygenerować element kodu znaczników przy użyciu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody, pierwsze wywołanie <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> i <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> metod, zgodnie z potrzebami, aby określić wszystkie atrybuty elementów lub atrybutów stylu, które są wyświetlane w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-545">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="140c2-546">Po wygenerowaniu wewnętrzny znaczników, należy wywołać <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metodę w celu wygenerowania tagu zamykającego.</span><span class="sxs-lookup"><span data-stu-id="140c2-546">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-547">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metodę, aby dane wyjściowe w znaczniku otwierającym elementu `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-547">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="140c2-548">Atrybuty, które są dodawane do elementu przez <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> metoda będzie w otwarcia `<img>` tagu.</span><span class="sxs-lookup"><span data-stu-id="140c2-548">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="140c2-549"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> Metoda jest używana do generowania tagu zamykającego.</span><span class="sxs-lookup"><span data-stu-id="140c2-549">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="140c2-550">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-550">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-551">Zapisuje tagu końcowego elementu znaczników do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-551">Writes the end tag of a markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-552">Wywołaj <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metody <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> wywołać przeciążenia i po przeprowadzeniu renderowania zawartości wszystkie między otwierającym i zamykającym (wewnętrzny markup) tego elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-552">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-553">Poniższy przykład kodu pokazuje sposób wywołania <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> obie metody <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metodę, która generuje otwierający tag i <xref:System.Web.UI.HtmlTextWriter.Write%2A> metodę, która renderuje wewnętrzny kod znaczników pomiędzy otwierającym, a zamykającym tagiem niestandardowe `MyTag` o nazwie elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-553">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="140c2-554">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-554">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-555">Reprezentuje spację i samozamykającego znaku ukośnika (/) tagu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-555">Represents a space and the self-closing slash mark (/) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-556"><xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> Pole jest używane w elementy znaczników, które są zamknięte samodzielnie.</span><span class="sxs-lookup"><span data-stu-id="140c2-556">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="140c2-557">Na przykład:</span><span class="sxs-lookup"><span data-stu-id="140c2-557">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-558">Reprezentuje zamknięcie ukośnika znak i prawego nawiasu (/&gt;) elementu samozamykającego znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-558">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-559"><xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> Pole jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody podczas tworzenia znaczników Self-Closing.</span><span class="sxs-lookup"><span data-stu-id="140c2-559">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-560">Poniższy przykład kodu pokazuje sposób renderowania wartości niestandardowej `FileName` właściwość następuje znak cudzysłowu i znaków, reprezentowane przez <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> pola.</span><span class="sxs-lookup"><span data-stu-id="140c2-560">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="140c2-561">Kod przykładowy wywołuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody i przekazuje <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> pola jako argument parametru, aby zamknąć element.</span><span class="sxs-lookup"><span data-stu-id="140c2-561">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="140c2-562">Ten przykładowy kod powoduje wyświetlenie `FileName` wartości właściwości, a następnie następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-562">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-563">Reprezentuje średnika (;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-563">Represents the semicolon (;).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-564">Przekaż <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> pola jako argument parametru w <xref:System.Web.UI.HtmlTextWriter.Write%2A> wywołania metody, jeśli chcesz renderować średnik z karty lub kontrolki niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="140c2-564">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-565">Poniższy przykład kodu pokazuje, jak ręczne renderowanie szereg style w elemencie znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-565">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="140c2-566">Przykład kodu wykorzystuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania `font-size` i `border-style` atrybuty stylu.</span><span class="sxs-lookup"><span data-stu-id="140c2-566">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="140c2-567"><xref:System.Web.UI.HtmlTextWriter.SemicolonChar> Pole jest używane jako parametr <xref:System.Web.UI.HtmlTextWriter.Write%2A> metodę, aby oddzielić wartości `font-size` atrybut od początku `border-style` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-567">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="140c2-568">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-568">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-569">Reprezentuje apostrof (').</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-569">Represents an apostrophe (').</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-570">Użyj <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> pola, gdy jest to konieczne do renderowania apostrof.</span><span class="sxs-lookup"><span data-stu-id="140c2-570">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-571">Reprezentuje znak ukośnika (/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-571">Represents the slash mark (/).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-572">Użyj <xref:System.Web.UI.HtmlTextWriter.SlashChar> pola do renderowania ukośnik oznacza podczas wpisywania adresu URL.</span><span class="sxs-lookup"><span data-stu-id="140c2-572">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="140c2-573"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> Metoda używa <xref:System.Web.UI.HtmlTextWriter.SlashChar> pola podczas zapisywania tagu zamykającego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-573">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-574">Poniższy przykład kodu pokazuje, jak ręczne renderowanie `src` atrybutu `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-574">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="140c2-575">Przykład kodu wykorzystuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody z <xref:System.Web.UI.HtmlTextWriter.SlashChar> pola jako parametr do renderowania ukośnik oznacza w ścieżce, która jest stosowana do `src` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-575">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="140c2-576">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-576">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-577">Reprezentuje znak spacji ().</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-577">Represents a space ( ) character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-578"><xref:System.Web.UI.HtmlTextWriter.SpaceChar> Pole jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> i <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody podczas zapisywania separatory między elementów i atrybutów.</span><span class="sxs-lookup"><span data-stu-id="140c2-578">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-579">Ta sekcja zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-579">This section provides two code examples.</span></span> <span data-ttu-id="140c2-580">Pierwsza z nich przedstawia sposób tworzenia tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="140c2-580">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="140c2-581">Drugi pokazuje, jak używać tablicy.</span><span class="sxs-lookup"><span data-stu-id="140c2-581">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="140c2-582">Te przykłady kodu generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-582">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="140c2-583">Poniższy przykład kodu pokazuje sposób tworzenia <xref:System.Char> tablicę, która zawiera <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pola.</span><span class="sxs-lookup"><span data-stu-id="140c2-583">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="140c2-584">Poniższy przykład kodu pokazuje, jak używać tablicy, który został utworzony w poprzednim przykładzie kodu jako parametr podczas wywoływania <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-584">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-585">Reprezentuje metodę equals stylu (<see langword=":" />) znak używany do ustawiania stylu atrybutów równy wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-585">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-586"><xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> Pole jest używane przez <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> metody do ograniczania styl nazwy i wartości.</span><span class="sxs-lookup"><span data-stu-id="140c2-586">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-587">Poniższy przykład kodu demonstruje sposób renderowania `FontWeight` atrybut i wartości `bold` w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-587">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="140c2-588">Przykład kodu wykorzystuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody z <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> pola jako parametr do renderowania znak, który ustawia wartość każdego z atrybutów stylu.</span><span class="sxs-lookup"><span data-stu-id="140c2-588">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="140c2-589">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-589">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-590">Pobiera lub ustawia <see cref="T:System.Web.UI.HtmlTextWriterTag" /> wartość dla elementu określonego znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-590">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140c2-591">Element znaczników, który jest po jego znaczniku otwierającym renderowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-591">The markup element that is having its opening tag rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-592"><xref:System.Web.UI.HtmlTextWriter.TagKey%2A> Właściwość, jest użycie tylko dla klas, które dziedziczą z <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-592">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-593">Należy odczytać lub ustawić <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> właściwość tylko w wywołaniu <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody; jest to jedyny raz, jest ustawiona na wartość spójne.</span><span class="sxs-lookup"><span data-stu-id="140c2-593">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-594">Poniższy przykład kodu demonstruje zastąpiona wersja <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> metody w klasie, która pochodzi od klasy <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-594">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-595">Używa wartości <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> właściwości, aby określić, czy formant serwera, za pomocą niestandardowego <xref:System.Web.UI.HtmlTextWriter> renderowania obiektu `<label>` znaczników elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-595">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="140c2-596">Jeśli tak jest, `<font>` element z `color` ustawioną wartość atrybutu `red` jest zwracany do modyfikowania formatowanie `<label>` tekstu elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-596">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="140c2-597">Nie można ustawić wartości właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-597">The property value cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-598">Reprezentuje otwierającego nawiasu ostrego (&lt;) tagu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-598">Represents the opening angle bracket (&lt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-599"><xref:System.Web.UI.HtmlTextWriter.TagLeftChar> Pole jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, i <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metody podczas zapisywania znaczniki.</span><span class="sxs-lookup"><span data-stu-id="140c2-599">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-600">Poniższy przykładowy kod renderuje pierwszego znaku w znaczniku otwierającym elementu `<table>` elementu o nazwie elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-600">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="140c2-601">Przykład kodu wykorzystuje <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody z <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> pola jako parametr.</span><span class="sxs-lookup"><span data-stu-id="140c2-601">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="140c2-602">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-602">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-603">Pobiera lub ustawia nazwę tagu elementu znaczników są renderowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-603">Gets or sets the tag name of the markup element being rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="140c2-604">Nazwa tagu elementu znaczników są renderowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-604">The tag name of the markup element being rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-605"><xref:System.Web.UI.HtmlTextWriter.TagName%2A> Właściwość, jest użycie tylko dla klas, które dziedziczą z <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-605">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-606">Należy odczytać lub ustawić <xref:System.Web.UI.HtmlTextWriter.TagName%2A> właściwość tylko w <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> wywołań metod; jest to jedyny raz, jest ustawiona na wartość spójne.</span><span class="sxs-lookup"><span data-stu-id="140c2-606">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-607">Poniższy przykład kodu demonstruje zastąpiona wersja <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> metody w klasie, która pochodzi od klasy <xref:System.Web.UI.HtmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="140c2-607">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="140c2-608">Przykład kodu sprawdza, czy element w celu renderowania jest `<label>` element przez wywołanie metody <xref:System.String.Compare%2A?displayProperty=nameWithType> metody, a następnie przekazywanie <xref:System.Web.UI.HtmlTextWriter.TagName%2A> wartości właściwości i ciąg, `"label"`, jako argumenty parametrów.</span><span class="sxs-lookup"><span data-stu-id="140c2-608">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="140c2-609">Jeśli `<label>` element ma być renderowany znaczniku otwierającym elementu `<font>` elementu z `color` ustawioną wartość atrybutu `red`, jest renderowany przed `<label>` elementu w tagu początkowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-609">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="140c2-610">Jeśli nie jest elementem do renderowania `<label>` elementu, klasę bazową wersję <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="140c2-610">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-611">Reprezentuje zamykającego nawiasu ostrego (&gt;) tagu znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-611">Represents the closing angle bracket (&gt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-612"><xref:System.Web.UI.HtmlTextWriter.TagRightChar> Pole jest używane przez <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, i <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metody podczas zapisywania znaczniki.</span><span class="sxs-lookup"><span data-stu-id="140c2-612">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-613">Poniższy przykład kodu pokazuje sposób renderowania tagu zamykającego `<table>` elementu przez wykonywanie wywołań do przeciążenia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-613">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="140c2-614">Aby renderować ostatni znak w tagu, przykładowy kod używa <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody z <xref:System.Web.UI.HtmlTextWriter.TagRightChar> pola jako parametr.</span><span class="sxs-lookup"><span data-stu-id="140c2-614">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="140c2-615">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-615">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-616">Zapisuje określony typ danych w strumieniu wyjściowym, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-616">Writes the specified data type to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-617">
            <see cref="T:System.Boolean" /> Można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-617">The <see cref="T:System.Boolean" /> to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-618">Zapisuje tekst reprezentujący wartość typu Boolean do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-618">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-619"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-619">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-620">Znak Unicode można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-620">The Unicode character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-621">Zapisuje reprezentację tekstową znak Unicode do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-621">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-622"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-622">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-623">Poniższy przykład kodu demonstruje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metodę, aby zakończyć znaczniku otwierającym elementu `<img>` elementu za pomocą <xref:System.Web.UI.HtmlTextWriter.TagRightChar> stałej.</span><span class="sxs-lookup"><span data-stu-id="140c2-623">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="140c2-624">Ten przykładowy kod powoduje wyświetlenie następujących znaczników:</span><span class="sxs-lookup"><span data-stu-id="140c2-624">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="140c2-625">Tablica znaków Unicode, aby zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-625">The array of Unicode characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-626">Zapisuje reprezentację tekstową z tablicy znaków Unicode do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-626">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-627"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-627">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-628">Ta sekcja zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-628">This section provides two code examples.</span></span> <span data-ttu-id="140c2-629">Pierwszy pokazuje, jak utworzyć tablicę znaków.</span><span class="sxs-lookup"><span data-stu-id="140c2-629">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="140c2-630">Drugi pokazuje, jak używać tablicy.</span><span class="sxs-lookup"><span data-stu-id="140c2-630">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="140c2-631">Te przykłady kodu generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-631">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="140c2-632">Poniższy przykład kodu pokazuje, jak utworzyć tablicę znaków, które zawierają bardziej `hello world`.</span><span class="sxs-lookup"><span data-stu-id="140c2-632">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="140c2-633">Uwzględnione w tablicy jest <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pola, które tworzy spację między dwoma wyrazami.</span><span class="sxs-lookup"><span data-stu-id="140c2-633">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="140c2-634">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania `hello world` tablicy znaków utworzony w poprzednim przykładzie kodu do strony, gdy formant, który zawiera ten przykładowy kod znajduje się na stronie.</span><span class="sxs-lookup"><span data-stu-id="140c2-634">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-635">Liczba zmiennoprzecinkowa podwójnej precyzji do zapisu do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-635">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-636">Zapisuje reprezentację tekstową liczba zmiennoprzecinkowa podwójnej precyzji do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-636">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-637"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-637">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-638">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania wartości <xref:System.Double.MaxValue?displayProperty=nameWithType> pola.</span><span class="sxs-lookup"><span data-stu-id="140c2-638">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="140c2-639">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-639">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-640">32-bajtowych liczby całkowitej ze znakiem można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-640">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-641">Zapisuje tekst reprezentujący liczbę całkowitą ze znakiem 32 bajtów do strumienia wyjściowego, oraz wszelkie oczekujące odstępy kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-641">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-642"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-642">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-643">64-bajtowych liczby całkowitej ze znakiem można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-643">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-644">Zapisuje tekst reprezentujący liczbę całkowitą ze znakiem 64 bajtów do strumienia wyjściowego, oraz wszelkie oczekujące odstępy kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-644">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-645"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-645">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-646">Obiekt, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-646">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-647">Zapisuje reprezentację tekstową z obiektu do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-647">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-648"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-648">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-649">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania wartości <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="140c2-649">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="140c2-650">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-650">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="140c2-651">Wartość <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości:</span><span class="sxs-lookup"><span data-stu-id="140c2-651">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-652">Liczba zmiennoprzecinkowa pojedynczej precyzji można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-652">The single-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-653">Zapisuje reprezentację tekstową liczba zmiennoprzecinkowa pojedynczej precyzji do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-653">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-654"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-654">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-655">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania wartości <xref:System.Single.Epsilon?displayProperty=nameWithType> pola, które jest najmniejsza możliwa wartość z <xref:System.Single> struktury.</span><span class="sxs-lookup"><span data-stu-id="140c2-655">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="140c2-656">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-656">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="140c2-657">Ciąg, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-657">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-658">Zapisuje określony ciąg znaków do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-658">Writes the specified string to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-659"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-659">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-660">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania ciągiem o długości od otwierającym i zamykającym tagiem elementu niestandardowych znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-660">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="140c2-661">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-661">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="140c2-662">Ciąg, który zawiera zero lub więcej elementów formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-662">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="140c2-663">Obiekt do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-663">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-664">Zapisuje ciąg kartę i sformatowany ciąg do strumienia wyjściowego przy użyciu tej samej semantyki jako <see cref="M:System.String.Format(System.String,System.Object)" /> metody, oraz wszelkie oczekujące odstępy kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-664">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-665"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-665">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-666">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania sformatowany ciąg z wartością <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="140c2-666">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="140c2-667">Ciąg, który zawiera zero lub więcej elementów formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-667">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="140c2-668">Tablica obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-668">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-669">Zapisuje sformatowany ciąg, który zawiera tekst reprezentujący Tablica obiektów do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-669">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="140c2-670">Ta metoda korzysta z tą samą semantyką jako <see cref="M:System.String.Format(System.String,System.Object[])" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-670">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-671"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-671">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-672">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-672">This section contains two code examples.</span></span> <span data-ttu-id="140c2-673">Pierwsza z nich przedstawia sposób renderowania sformatowany ciąg i zawartość tablicy.</span><span class="sxs-lookup"><span data-stu-id="140c2-673">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="140c2-674">Drugi pokazuje, jak zadeklarować tablicy.</span><span class="sxs-lookup"><span data-stu-id="140c2-674">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="140c2-675">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania sformatowany ciąg i zawartości tablicy obiektów o nazwie `curPriceTime`.</span><span class="sxs-lookup"><span data-stu-id="140c2-675">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="140c2-676">Wywołanie metody renderuje drugiego elementu członkowski tablicy renderuje produkt pierwszego elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="140c2-676">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="140c2-677">Poniższy przykład kodu ilustruje deklarowanie `curPriceTime` tablicę obiektów.</span><span class="sxs-lookup"><span data-stu-id="140c2-677">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="140c2-678">Tablica znaków, z którego można wpisać tekst w strumieniu wyjściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-678">The array of characters from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="140c2-679">Lokalizacja indeksu w tablicy, gdzie rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-679">The index location in the array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="140c2-680">Liczba znaków do zapisu do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-680">The number of characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-681">Zapisuje reprezentację tekstową podtablicę o długości, znaków Unicode do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-681">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-682"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-682">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-683">Ta sekcja zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-683">This section provides two code examples.</span></span> <span data-ttu-id="140c2-684">Pierwsza z nich przedstawia sposób tworzenia tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="140c2-684">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="140c2-685">Drugi pokazuje, jak używać tablicy.</span><span class="sxs-lookup"><span data-stu-id="140c2-685">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="140c2-686">Te przykłady kodu generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-686">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="140c2-687">Poniższy przykład kodu pokazuje, jak utworzyć tablicę znaków, które zawierają bardziej `hello world`.</span><span class="sxs-lookup"><span data-stu-id="140c2-687">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="140c2-688">Uwzględnione w tablicy jest <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pola, które tworzy spację między dwoma wyrazami.</span><span class="sxs-lookup"><span data-stu-id="140c2-688">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="140c2-689">Poniższy fragment przykładowy kod używa `index` i `count` parametry <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania pięć pierwszych znaków w tablicy, utworzony w poprzednim przykładzie.</span><span class="sxs-lookup"><span data-stu-id="140c2-689">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="140c2-690">Ciąg, który zawiera zero lub więcej elementów formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-690">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="140c2-691">Obiekt do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-691">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="140c2-692">Obiekt do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-692">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-693">Zapisuje sformatowany ciąg, który zawiera tekst reprezentujący dwa obiekty przeznaczone do strumienia wyjściowego, oraz wszelkie odstępy oczekujące kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-693">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="140c2-694">Ta metoda korzysta z tą samą semantyką jako <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-694">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-695"><xref:System.Web.UI.HtmlTextWriter.Write%2A> Metoda generuje dowolnej karty, oczekujące, a następnie wywołania <xref:System.IO.TextWriter.Write%2A> podstawowa metoda.</span><span class="sxs-lookup"><span data-stu-id="140c2-695">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-696">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.Write%2A> metody do renderowania, sformatowany ciąg i wartości <xref:System.Globalization.CultureInfo.CurrentCulture%2A> i <xref:System.DateTime.Today%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="140c2-696">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-697">Zapisuje atrybut adiustacji i jego wartość strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-697">Writes a markup attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-698">Atrybut, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-698">The attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-699">Wartość atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-699">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-700">Zapisuje znaczników określony atrybut i wartości do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-700">Writes the specified markup attribute and value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-701">Użyj <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody do zapisywania atrybutów znaczników i ich wartości bez kodowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-701">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="140c2-702"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Metoda zapisuje wartość atrybutu ujęty w znaki podwójnego cudzysłowu (").</span><span class="sxs-lookup"><span data-stu-id="140c2-702">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="140c2-703">Jeśli `value` jest `null`, <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metoda zapisuje nazwy atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-703">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-704">Poniższy przykład kodu pokazuje renderowanie `<img>` elementu, w których oba przeciążenia <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="140c2-704">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="140c2-705">Przykład kodu używa następującego procesu:</span><span class="sxs-lookup"><span data-stu-id="140c2-705">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="140c2-706">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> metody, która renderuje znaków otwarcia elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-706">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="140c2-707">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> przeciążenia, które zapisuje `alt` atrybutu i jego wartość `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-707">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="140c2-708">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> przeciążenia do renderowania niestandardowego `myattribute` atrybutu o wartości `No "encoding" required`, a następnie ustawia `fEncode` do `false`.</span><span class="sxs-lookup"><span data-stu-id="140c2-708">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="140c2-709">Zamyka znaczniku otwierającym elementu element, a następnie wywołuje <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metodę, aby zamknąć `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-709">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="140c2-710">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-710">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-711">
            <para>W klasach pochodnych można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> metodę, aby zdefiniować niestandardowe reguły do zapisywania atrybutów i ich wartości. Na przykład można napisać kod, który może <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> metoda próbę zapisania atrybutu o wartości pustej.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-711">
              <para>In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values. For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-712">Atrybut adiustacji można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-712">The markup attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-713">Wartość atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-713">The value assigned to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="140c2-714">
            <see langword="true" /> kodowanie atrybutu i jego przypisaną wartością; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-714">
              <see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-715">Zapisuje znaczników określony atrybut i wartości do strumienia wyjściowego i, jeśli zostanie określony, zapisuje wartość zakodowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-715">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-716">Użyj <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody do zapisywania atrybutów znaczników i ich wartości, z lub bez kodowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-716">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="140c2-717"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Metoda używa <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> metody w celu kodowania.</span><span class="sxs-lookup"><span data-stu-id="140c2-717">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="140c2-718"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> Metoda zapisuje wartość atrybutu ujęty w znaki podwójnego cudzysłowu (").</span><span class="sxs-lookup"><span data-stu-id="140c2-718">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="140c2-719">Jeśli `value` jest `null`, <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metoda zapisuje nazwy atrybutu.</span><span class="sxs-lookup"><span data-stu-id="140c2-719">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-720">Poniższy przykład kodu pokazuje renderowanie `<img>` elementu, w których oba przeciążenia <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="140c2-720">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="140c2-721">Przykład kodu używa następującego procesu:</span><span class="sxs-lookup"><span data-stu-id="140c2-721">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="140c2-722">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> metody, która renderuje znaków otwarcia elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-722">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="140c2-723">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> przeciążenia, które zapisuje `alt` atrybutu i jego wartość `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-723">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="140c2-724">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> przeciążenia do renderowania niestandardowego `myattribute` atrybutu o wartości `No "encoding" required`, a następnie ustawia `fEncode` do `false`.</span><span class="sxs-lookup"><span data-stu-id="140c2-724">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="140c2-725">Zamyka znaczniku otwierającym elementu element, a następnie wywołuje <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metodę, aby zamknąć `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-725">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="140c2-726">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-726">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="140c2-727">
            <para>W klasach pochodnych można zastąpić <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> metodę, aby zdefiniować niestandardowe reguły do zapisywania atrybutów i ich wartości. Na przykład można napisać kod, który może <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> metoda próbę zapisania atrybutu o wartości pustej.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-727">
              <para>In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values. For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="140c2-728">Element znaczników, które można zapisać znacznika otwierającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-728">The markup element of which to write the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-729">Zapisuje wszelkie odstępy kartę i otwierający tag elementu określonego znaczników do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-729">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-730"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Metody nie zapisuje nawiasu ostrego (>) zamykającego tagu początkowego elementu znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-730">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="140c2-731">Umożliwia to pisanie kodu znaczników atrybutów w znaczniku otwierającym elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-731">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="140c2-732">Użyj <xref:System.Web.UI.HtmlTextWriter.TagRightChar> stała można zamknąć otwierający tag w przypadku, gdy wywołanie <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-732">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="140c2-733">Użyj <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> metody z <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> stała podczas pisania elementy znaczników, które są samozamykającego.</span><span class="sxs-lookup"><span data-stu-id="140c2-733">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="140c2-734"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> Metoda jest używana przez niestandardowe formanty serwera, które nie zezwalaj na tagów lub atrybutów mapowania i renderowanie elementów kodu znaczników w taki sam sposób dla każdego żądania.</span><span class="sxs-lookup"><span data-stu-id="140c2-734">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-735">Poniższy przykład kodu pokazuje renderowanie `<img>` elementu, w których oba przeciążenia <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="140c2-735">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="140c2-736">Przykład kodu używa następującego procesu:</span><span class="sxs-lookup"><span data-stu-id="140c2-736">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="140c2-737">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> metody, która renderuje znaków otwarcia elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-737">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="140c2-738">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> przeciążenia, które zapisuje `alt` atrybutu i jego wartość `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-738">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="140c2-739">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> przeciążenia do renderowania niestandardowego `myattribute` atrybutu o wartości `No "encoding" required`, a następnie ustawia `fEncode` do `false`.</span><span class="sxs-lookup"><span data-stu-id="140c2-739">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="140c2-740">Zamyka znaczniku otwierającym elementu element, a następnie wywołuje <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metodę, aby zamknąć `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-740">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="140c2-741">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-741">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-742">Zapisuje <see langword="&lt;br /&gt;" /> znaczników elementu w strumieniu wyjściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-742">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-743">Użyj <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> metody do renderowania wiersza przerywa w niestandardowych znaczników kontrolki lub karty.</span><span class="sxs-lookup"><span data-stu-id="140c2-743">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="140c2-744"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> Metoda zapisuje odstęp między `br` i `/` ulepszone zgodności HTML.</span><span class="sxs-lookup"><span data-stu-id="140c2-744">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-745">Poniższy przykład kodu pokazuje sposób wywoływania <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> metodę, aby zapisać `<br />` element do przeglądarki po <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> metoda zapisuje zakodowany `&lt;custID&gt; &amp; &lt;invoice#&gt;` znaczników.</span><span class="sxs-lookup"><span data-stu-id="140c2-745">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="140c2-746">Ciąg tekstowy do zakodowania i zapisania w strumieniu wyjściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-746">The text string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-747">Koduje określony tekst dla urządzenia wysyłającego żądanie, a następnie zapisuje je do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-747">Encodes the specified text for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-748">Użyj <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> metody, gdy ciąg zawiera nawiasy (\< lub >) lub handlowe "i" (&).</span><span class="sxs-lookup"><span data-stu-id="140c2-748">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="140c2-749"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> Metoda używa <xref:System.Web.HttpUtility.HtmlEncode%2A> metodę w celu kodowania i również konwertuje znak Unicode `00A0` do `&nbsp;`.</span><span class="sxs-lookup"><span data-stu-id="140c2-749">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-750">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> metodę, aby zapisać zakodowany znaczników `&lt;custID&gt; &amp; &lt;invoice#&gt;` do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-750">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="140c2-751"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> Zapisów metoda `<br />`.</span><span class="sxs-lookup"><span data-stu-id="140c2-751">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="140c2-752">
            <paramref name="text" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-752">
              <paramref name="text" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="140c2-753">Ciąg adresu URL do zakodowania i zapisania w strumieniu wyjściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-753">The URL string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-754">Koduje pod określony adres URL, a następnie zapisuje je do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-754">Encodes the specified URL, and then writes it to the output stream.</span>
          </span>
          <span data-ttu-id="140c2-755">Adres URL może zawierać parametrów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-755">The URL might include parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-756"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> Metoda koduje ciąg w `url` parametru, zgodnie ze specyfikacją kodowania adresu URL.</span><span class="sxs-lookup"><span data-stu-id="140c2-756">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="140c2-757">Parametry, które należy wykonać ogranicznik znak zapytania (?) nie są kodowane.</span><span class="sxs-lookup"><span data-stu-id="140c2-757">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-758">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> metody, która generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-758">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText">
          <span data-ttu-id="140c2-759">Parametr adresu URL ciąg do zakodowania i zapisania w strumieniu wyjściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-759">The URL parameter string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-760">Koduje określony parametr adresu URL dla urządzenia wysyłającego żądanie, a następnie zapisuje je do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-760">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-761">Miejsca do magazynowania w parametrze część adresu URL są kodowane jako znak plus (+) i znaku równości (=) są zakodowane jako `%3d`.</span><span class="sxs-lookup"><span data-stu-id="140c2-761">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-762">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> metody, która generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-762">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="140c2-763">Element, który można zapisać tagu zamykającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-763">The element to write the closing tag for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-764">Zapisuje wszelkie odstępy kartę i tag zamykający elementu określonego znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-764">Writes any tab spacing and the closing tag of the specified markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-765">W odróżnieniu od <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> metody <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metoda nie ma żadnych logiki umożliwiającej wykonywanie tagu końcowym elementu dopasowania odpowiedniego tagu początkowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-765">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-766">Poniższy przykład kodu pokazuje renderowanie `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-766">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="140c2-767">Przykład kodu używa następującego procesu:</span><span class="sxs-lookup"><span data-stu-id="140c2-767">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="140c2-768">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> metody do renderowania znaków otwarcia elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-768">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="140c2-769">Wywołuje dwa przeciążenia metody <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> metody do zapisywania atrybutów, które mają `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-769">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="140c2-770">Wywołania <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> metodę, aby zamknąć `<img>` elementu.</span><span class="sxs-lookup"><span data-stu-id="140c2-770">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="140c2-771">Element, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-771">The element to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-772">Zapisuje wszelkie odstępy kartę i otwierający tag elementu określonego znaczników do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-772">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-773"><xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> Metoda automatycznie zapisuje zamykającego nawiasu ostrego (>) znacznika otwierającego elementu, w odróżnieniu od <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> metody, która nie zapisał nawias zamykający.</span><span class="sxs-lookup"><span data-stu-id="140c2-773">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="140c2-774">Użyj <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> dla elementów kodu znaczników, które nie uwzględniając atrybutów.</span><span class="sxs-lookup"><span data-stu-id="140c2-774">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-775">Zapisuje dane do <see cref="T:System.Web.UI.HtmlTextWriter" /> strumienia wyjściowego, określony przez parametry przeciążona, następuje ciąg terminator wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-775">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span>
          </span>
          <span data-ttu-id="140c2-776">Wszystkie wersje tej metody zapisu odstępy oczekujące kartę do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-776">All versions of this method write any pending tab spacing to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-777">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-777">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-778"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-778">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="140c2-779">Zapisuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-779">Writes a line terminator string to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-780">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-780">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-781">Aby uzyskać więcej informacji, zobacz <xref:System.IO.TextWriter.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="140c2-781">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-782">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody Wstaw wiersz po `<img>` element jest renderowany.</span><span class="sxs-lookup"><span data-stu-id="140c2-782">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-783">Wartość logiczna, można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-783">The Boolean to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-784">Zapisuje wszystkie oczekujące kartę odstępów i tekst reprezentujący wartość logiczną, w którym następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-784">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-785">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-785">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-786"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-786">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-787">Znak do zapisu do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-787">The character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-788">Zapisuje wszelkie odstępy oczekujące kartę i znaku Unicode, a następnie ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-788">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-789">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-790"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-790">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="140c2-791">Tablica znaków do zapisu do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-791">The character array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-792">Zapisuje wszystkie oczekujące kartę odstępów i Tablica znaków Unicode, następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-792">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-793">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-793">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-794"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-794">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-795">Ta sekcja zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-795">This section provides two code examples.</span></span> <span data-ttu-id="140c2-796">Pierwszy pokazuje, jak utworzyć tablicę.</span><span class="sxs-lookup"><span data-stu-id="140c2-796">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="140c2-797">Drugi pokazuje, jak użyć tej tablicy.</span><span class="sxs-lookup"><span data-stu-id="140c2-797">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="140c2-798">Te przykłady kodu generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-798">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="140c2-799">Poniższy przykład kodu pokazuje, jak utworzyć tablicę znaków, które zawierają bardziej `hello world`.</span><span class="sxs-lookup"><span data-stu-id="140c2-799">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="140c2-800">Uwzględnione w tablicy jest <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pola, które tworzy spację między dwoma wyrazami.</span><span class="sxs-lookup"><span data-stu-id="140c2-800">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="140c2-801">Poniższy kod przykładowy renderuje `hello world` tablicy znaków, który został utworzony w poprzednim przykładzie, za pomocą <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-801">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-802">Liczba zmiennoprzecinkowa podwójnej precyzji do zapisu do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-802">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-803">Zapisuje wszystkie oczekujące kartę odstępów i tekstowa reprezentacja liczba zmiennoprzecinkowa podwójnej precyzji, następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-803">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-804">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-804">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-805"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-805">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-806">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania wartości <xref:System.Double.MaxValue?displayProperty=nameWithType> pola.</span><span class="sxs-lookup"><span data-stu-id="140c2-806">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="140c2-807">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-807">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-808">32-bajtowych liczby całkowitej ze znakiem można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-808">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-809">Zapisuje wszystkie oczekujące kartę odstępów i tekstowa reprezentacja 32-bajtowych podpisane liczby całkowite, następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-809">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-810">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-810">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-811"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-811">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-812">64-bajtowych liczby całkowitej ze znakiem można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-812">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-813">Zapisuje wszystkie oczekujące kartę odstępów i tekstowa reprezentacja 64-bajtowych podpisane liczby całkowite, następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-813">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-814">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-814">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-815"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-815">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-816">Obiekt, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-816">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-817">Zapisuje wszystkie oczekujące kartę odstępów i tekstowa reprezentacja obiektu, a następnie ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-817">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-818">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-818">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-819"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-819">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-820">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania wartości <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> właściwości do kontrolki.</span><span class="sxs-lookup"><span data-stu-id="140c2-820">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-821">Pojedynczej precyzji ruchomy punkt numer do zapisu do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-821">The single-precision floating point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-822">Zapisuje wszystkie oczekujące kartę odstępów i tekstowa reprezentacja liczba zmiennoprzecinkowa pojedynczej precyzji, następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-822">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-823">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-824"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-825">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania wartości <xref:System.Single.Epsilon?displayProperty=nameWithType> pola, które jest najmniejsza możliwa wartość z <xref:System.Single> struktury.</span><span class="sxs-lookup"><span data-stu-id="140c2-825">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="140c2-826">Ten przykładowy kod generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-826">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="140c2-827">Ciąg, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-827">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-828">Zapisuje wszelkie odstępy oczekujące kartę i ciąg tekstowy, po której następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-828">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-829">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-829">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-830"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-830">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="140c2-831">4-bajtowa liczba całkowita bez znaku do zapisu do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-831">The 4-byte unsigned integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-832">Zapisuje wszystkie oczekujące kartę odstępów i tekstowa reprezentacja 4-bajtowa liczba całkowita bez znaku, a następnie ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-832">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-833">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-833">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-834"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-834">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="140c2-835">Ciąg zawierający zero lub więcej elementów formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-835">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="140c2-836">Obiekt do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-836">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-837">Zapisuje wszystkie oczekujące kartę odstępów i sformatowany ciąg zawierający tekst reprezentujący obiekt następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-837">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-838">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-839"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Metoda korzysta z tą samą semantyką jako <xref:System.String.Format%28System.String%2CSystem.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-839">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="140c2-840"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-840">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-841">Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania sformatowany ciąg z wartością <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="140c2-841">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="140c2-842">Ciąg zawierający zero lub więcej elementów formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-842">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="140c2-843">Tablica obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-843">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-844">Zapisuje wszystkie oczekujące kartę odstępów i sformatowany ciąg, który zawiera tekst reprezentujący tablicę obiektów, następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-844">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-845">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-845">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-846"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Metoda korzysta z tą samą semantyką jako <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-846">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="140c2-847"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-847">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-848">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-848">This section contains two code examples.</span></span> <span data-ttu-id="140c2-849">Pierwszy pokazuje, jak renderować ciąg i Tablica do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-849">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="140c2-850">Drugi pokazuje sposób deklarowania tablicy.</span><span class="sxs-lookup"><span data-stu-id="140c2-850">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="140c2-851">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania sformatowany ciąg i zawartość Tablica obiektów do strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="140c2-851">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="140c2-852">Poniższy przykład kodu pokazuje sposób deklarowania tablicy obiektu, który był renderowany w poprzednim przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-852">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="140c2-853">Tablica znaków, z którego można wpisać tekst w strumieniu wyjściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-853">The character array from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="140c2-854">Lokalizacja tablicy znaków, w którym rozpoczyna się zapisywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-854">The location in the character array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="140c2-855">Liczba znaków w tablicy można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-855">The number of characters in the array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-856">Zapisuje wszystkie oczekujące kartę odstępów i podtablicę o długości, znaków Unicode, a następnie ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-856">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-857">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-857">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-858"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-858">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-859">Ten rozdział zawiera dwa przykłady kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-859">This section contains two code examples.</span></span> <span data-ttu-id="140c2-860">Pierwsza z nich przedstawia sposób tworzenia tablicy znaków.</span><span class="sxs-lookup"><span data-stu-id="140c2-860">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="140c2-861">Drugi pokazuje, jak używać tablicy.</span><span class="sxs-lookup"><span data-stu-id="140c2-861">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="140c2-862">Te przykłady kodu generuje następujące znaczniki:</span><span class="sxs-lookup"><span data-stu-id="140c2-862">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="140c2-863">Poniższy przykład kodu pokazuje, jak utworzyć tablicę znaków, które zawierają bardziej `hello world`.</span><span class="sxs-lookup"><span data-stu-id="140c2-863">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="140c2-864">Uwzględnione w tablicy jest <xref:System.Web.UI.HtmlTextWriter.SpaceChar> pola, które tworzy spację między dwoma wyrazami.</span><span class="sxs-lookup"><span data-stu-id="140c2-864">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="140c2-865">Poniższy przykład kodu wykorzystuje `index` i `count` parametry <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania pięć pierwszych znaków w tablicy, utworzony w poprzednim przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="140c2-865">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="140c2-866">Ciąg zawierający zero lub więcej elementów formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-866">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="140c2-867">Obiekt do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-867">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="140c2-868">Obiekt do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-868">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-869">Zapisuje wszystkie oczekujące kartę odstępów i sformatowany ciąg, który zawiera reprezentację tekstową z dwóch obiektów, w którym następuje ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-869">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-870">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-870">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-871"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> Metoda korzysta z tą samą semantyką jako <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> metody.</span><span class="sxs-lookup"><span data-stu-id="140c2-871">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="140c2-872"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-872">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="140c2-873">Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody do renderowania, sformatowany ciąg i wartości <xref:System.Globalization.CultureInfo.CurrentCulture%2A> właściwości i <xref:System.DateTime.Today%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="140c2-873">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="140c2-874">Ciąg, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-874">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-875">Zapisuje ciąg, a następnie ciąg terminator wiersza do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-875">Writes a string, followed by a line terminator string, to the output stream.</span>
          </span>
          <span data-ttu-id="140c2-876">Ta metoda ignoruje wszelkie odstępy w określoną kartę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-876">This method ignores any specified tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-877">Użyj <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> metody zamiast <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> metody, gdy nie chcesz renderować kartę odstępy przed renderowanych ciąg `s`.</span><span class="sxs-lookup"><span data-stu-id="140c2-877">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="140c2-878">Domyślny ciąg terminator wiersza jest znak powrotu karetki i LF ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="140c2-878">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="140c2-879"><xref:System.IO.TextWriter.WriteLine%2A> Metoda podstawowa jest używany do zapisywania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-879">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="140c2-880">Zapisuje atrybut stylu i jego wartość strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-880">Writes a style attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-881">Atrybut stylu, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-881">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-882">Wartość przypisana do atrybut stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-882">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-883">Zapisuje atrybut stylu określony do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-883">Writes the specified style attribute to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-884"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> Metoda zapisuje atrybut stylu w następującej postaci:</span><span class="sxs-lookup"><span data-stu-id="140c2-884">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="140c2-885">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="140c2-885">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="140c2-886">Atrybut stylu, który można zapisać do strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-886">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="140c2-887">Wartość przypisana do atrybut stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-887">The value assigned to the style attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="140c2-888">
            <see langword="true" /> Aby zakodować atrybut stylu i jego przypisaną wartością; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-888">
              <see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-889">Zapisuje określony styl atrybut i wartości do strumienia wyjściowego i koduje wartość, jeśli określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-889">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-890"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> Metoda zapisuje atrybut stylu w następującej postaci:</span><span class="sxs-lookup"><span data-stu-id="140c2-890">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="140c2-891">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="140c2-891">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="140c2-892"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> Metoda służy do kodowania `value` parametru.</span><span class="sxs-lookup"><span data-stu-id="140c2-892">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="140c2-893">Ciąg do zakodowania i zapisania w strumieniu wyjściowym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-893">The string to encode and write to the output stream.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="140c2-894">
            <see langword="true" /> Aby zakodować ciąg jako część sekcji parametrów adresu URL; <see langword="false" /> zakodować ciąg jako część sekcji Ścieżka adresu URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-894">
              <see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="140c2-895">Zapisuje określony ciąg kodowania go zgodnie z wymaganiami dotyczącymi adresu URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="140c2-895">Writes the specified string, encoding it according to URL requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="140c2-896"><xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> Metoda koduje znaki, które można uznać za ograniczniki adresu URL (zależne od ustawień `argument`) na ciągi w postaci `%xx`, jeśli w kodzie ASCII jest mniejszy niż 128; w przeciwnym razie `%uxxxx`, gdzie `x` jest cyfra szesnastkowa.</span><span class="sxs-lookup"><span data-stu-id="140c2-896">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="140c2-897"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> i <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> metody za pomocą <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> metody jako metodę narzędzia.</span><span class="sxs-lookup"><span data-stu-id="140c2-897">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>