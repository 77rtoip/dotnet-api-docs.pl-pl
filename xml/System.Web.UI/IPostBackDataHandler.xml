<Type Name="IPostBackDataHandler" FullName="System.Web.UI.IPostBackDataHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f33807797ab1e28151bb6fab6346ffc6b2bd2fba" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69388161" /></Metadata><TypeSignature Language="C#" Value="public interface IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type IPostBackDataHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje metody, które kontrolki serwera ASP.NET muszą zaimplementować, aby automatycznie ładować dane ogłaszania zwrotnego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IPostBackDataHandler> Interfejs należy zaimplementować podczas tworzenia kontrolki serwera, która musi przeanalizować dane formularza, które są ogłaszane na serwerze przez klienta. Kontrakt zdefiniowany przez ten interfejs umożliwia formantowi serwera określenie, czy jego stan powinien zostać zmieniony w wyniku ogłaszania zwrotnego i aby podnieść odpowiednie zdarzenia. Aby uzyskać więcej informacji, zobacz temat [Obsługa zdarzeń serwera na stronach formularzy sieci Web ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje niestandardowy formant serwera pola tekstowego, który implementuje <xref:System.Web.UI.IPostBackDataHandler> interfejs. Właściwość zostanie zmieniona w wyniku ogłaszania zwrotnego, a kontrolka serwera <xref:System.Web.UI.WebControls.TextBox.TextChanged> zgłasza zdarzenie po załadowaniu danych dotyczących ogłaszania zwrotnego. <xref:System.Web.UI.WebControls.TextBox.Text%2A>  
  
 [!code-csharp[Classic IPostBackDataHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Obsługa zdarzeń serwera na stronach sieci Web ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="public bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="iPostBackDataHandler.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identyfikator klucza dla kontrolki.</param>
        <param name="postCollection">Kolekcja wszystkich wartości nazw przychodzących.</param>
        <summary>W przypadku implementacji przez klasę program przetwarza dane ogłaszania zwrotnego dla kontrolki serwera ASP.NET.</summary>
        <returns><see langword="true" />Jeśli stan kontrolki serwera zmieni się w wyniku ogłaszania zwrotnego; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktura strony ASP.NET śledzi wszystkie kontrolki serwera, które powracają `true` do tego wywołania metody, a następnie <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> wywołuje metodę dla tych kontrolek.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje formant serwera, który implementuje wersję <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A> metody.  
  
 [!code-csharp[Classic IPostBackDataHandler.LoadPostData Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler.LoadPostData Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler.LoadPostData Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler.LoadPostData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Obsługa zdarzeń serwera na stronach sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="public void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit" Usage="iPostBackDataHandler.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po zaimplementowaniu przez klasę program sygnalizuje formant serwera w celu powiadomienia aplikacji ASP.NET o zmianie stanu formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje wszystkie zdarzenia zmiany dla formantu serwera, który <xref:System.Web.UI.IPostBackDataHandler> implementuje interfejs. <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> jak formant serwera może zaimplementować metodę.  
  
 [!code-csharp[Classic IPostBackDataHandler.RaisePostDataChangedEvent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler.RaisePostDataChangedEvent Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler.RaisePostDataChangedEvent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler.RaisePostDataChangedEvent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">Obsługa zdarzeń serwera na stronach sieci Web ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>
