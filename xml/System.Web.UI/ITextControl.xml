<Type Name="ITextControl" FullName="System.Web.UI.ITextControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a8db238391c943343ccc725a9df8217c4ed43b26" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69397844" /></Metadata><TypeSignature Language="C#" Value="public interface ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ITextControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextControl" />
  <TypeSignature Language="F#" Value="type ITextControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiuje interfejs, który jest implementowany przez formant w celu uzyskania lub ustawienia zawartości tekstowej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ITextControl> Interfejs<xref:System.Web.UI.ITextControl.Text%2A> definiuje Właściwość implementującą kontrolkę, aby zezwalać na pobieranie lub Ustawianie zawartości tekstowej. <xref:System.Web.UI.ITextControl.Text%2A> Właściwość można skonfigurować programowo lub za pomocą danych wejściowych użytkownika.  
  
> [!CAUTION]
>  Kontrolka implementująca ten interfejs może służyć do wyświetlania danych wejściowych użytkownika. Przed wyświetleniem danych wejściowych użytkownika należy sprawdzić dane wejściowe dla złośliwego skryptu klienta, takiego jak skrypt wykonywalny lub instrukcje SQL. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Kontrolki serwera weryfikacji są również udostępniane do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [składnia kontroli serwera walidacji](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia kontrolkę niestandardową, która <xref:System.Web.UI.ITextControl> implementuje interfejs. Wartość domyślna jest przypisywana do właściwości <xref:System.Web.UI.ITextControl.Text%2A> , jeśli `null` jest przenoszona do właściwości.  
  
 [!code-csharp[System.Web.UI.ITextControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ITextControl/CS/CustomTextControl.cs#1)]
 [!code-vb[System.Web.UI.ITextControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ITextControl/VB/CustomTextControl.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ITextControl.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.ITextControl.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zawartość tekstową formantu.</summary>
        <value>Zawartość tekstowa kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ITextControl.Text%2A> Właściwość można skonfigurować programowo lub za pomocą danych wejściowych użytkownika.  
  
> [!CAUTION]
>  Kontrolka implementująca ten interfejs może służyć do wyświetlania danych wejściowych użytkownika. Przed wyświetleniem danych wejściowych użytkownika należy sprawdzić dane wejściowe dla złośliwego skryptu klienta, takiego jak skrypt wykonywalny lub instrukcje SQL. ASP.NET udostępnia funkcję walidacji żądania wejścia, aby blokować skrypt i kod HTML w danych wejściowych użytkownika. Kontrolki serwera weryfikacji są również udostępniane do oceny danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [składnia kontroli serwera walidacji](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawia kontrolkę niestandardową, która <xref:System.Web.UI.ITextControl> implementuje interfejs. Wartość domyślna jest przypisywana do właściwości <xref:System.Web.UI.ITextControl.Text%2A> , jeśli `null` jest przenoszona do właściwości.  
  
 [!code-csharp[System.Web.UI.ITextControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ITextControl/CS/CustomTextControl.cs#1)]
 [!code-vb[System.Web.UI.ITextControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ITextControl/VB/CustomTextControl.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
