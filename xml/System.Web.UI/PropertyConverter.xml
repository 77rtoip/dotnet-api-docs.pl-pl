<Type Name="PropertyConverter" FullName="System.Web.UI.PropertyConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f12d97cd354bd5df54d6c0ee77858327f8060732" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52221895" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class PropertyConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PropertyConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PropertyConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyConverter abstract sealed" />
  <TypeSignature Language="F#" Value="type PropertyConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera funkcje pomocnicze można przekonwertować wartości właściwości, do i z ciągów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter> Klasa jest używana przez architektura strony ASP.NET i nie jest przeznaczony do bezpośredniego używania w kodzie. Możesz użyć <xref:System.Enum> struktury do skonwertowania wartości ciągu, do i z modułów wyliczających, lub <xref:System.ComponentModel.TypeConverter> do konwersji obiektów.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="EnumFromString">
      <MemberSignature Language="C#" Value="public static object EnumFromString (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object EnumFromString(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumFromString (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ EnumFromString(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member EnumFromString : Type * string -&gt; obj" Usage="System.Web.UI.PropertyConverter.EnumFromString (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">A <see cref="T:System.Type" /> reprezentujący typ wyliczeniowy, aby utworzyć na podstawie <paramref name="value" /> parametru.</param>
        <param name="value">
          <see cref="T:System.String" /> Reprezentujący wartość modułu wyliczającego.</param>
        <summary>Konwertuje ciąg reprezentujący wartość typu wyliczenia określony.</summary>
        <returns>Wyliczenie typu <paramref name="enumType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.EnumFromString%2A> Metoda jest używana, można przekonwertować wartości ciągu na wartość wyliczenia równoważne.  
  
> [!NOTE]
>  Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie. Aby przekonwertować wartości ciągu na wartość wyliczenia równoważne, użyj <xref:System.Enum.Parse%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="enumType" /> lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="enumType" /> nie jest <see cref="T:System.Enum" />.  
  
\- lub — 
 <paramref name="value" /> jest ciągiem pustym ("") lub zawiera tylko białe miejsca do magazynowania.  
  
\- lub — 
 <paramref name="value" /> jest nazwą, ale nie w jednym z nazwanych stałych, które są zdefiniowane dla wyliczenia.</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnumToString">
      <MemberSignature Language="C#" Value="public static string EnumToString (Type enumType, object enumValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnumToString(class System.Type enumType, object enumValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumToString (enumType As Type, enumValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EnumToString(Type ^ enumType, System::Object ^ enumValue);" />
      <MemberSignature Language="F#" Value="static member EnumToString : Type * obj -&gt; string" Usage="System.Web.UI.PropertyConverter.EnumToString (enumType, enumValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="enumValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">A <see cref="T:System.Type" /> reprezentujący typ wyliczenia <paramref name="enumValue" />.</param>
        <param name="enumValue">Wartość do konwersji.</param>
        <summary>Konwertuje wartość typu wyliczenia określonego na jego reprezentację ciągu równoważnego.</summary>
        <returns>Reprezentacja ciągu <paramref name="enumValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.EnumToString%2A> Metoda jest używana do konwersji wartości wyliczenia na jego reprezentację ciągu równoważnego.  
  
> [!NOTE]
>  Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie. Aby przekonwertować wartości wyliczenia na jego reprezentację ciągu równoważnego, użyj <xref:System.Enum.Format%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="enumType" /> Lub <paramref name="enumValue" /> parametr <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="enumType" /> Parametr nie jest <see cref="T:System.Enum" /> typu.  
  
\- lub — 
<paramref name="enumValue" /> Parametru zawiera wartość z wyliczenia, która różni się w typie z <paramref name="enumType" />.  
  
\- lub — 
Typ <paramref name="enumValue" /> nie jest podstawowym typem <paramref name="enumType" />.</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ObjectFromString">
      <MemberSignature Language="C#" Value="public static object ObjectFromString (Type objType, System.Reflection.MemberInfo propertyInfo, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ObjectFromString(class System.Type objType, class System.Reflection.MemberInfo propertyInfo, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjectFromString (objType As Type, propertyInfo As MemberInfo, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ObjectFromString(Type ^ objType, System::Reflection::MemberInfo ^ propertyInfo, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ObjectFromString : Type * System.Reflection.MemberInfo * string -&gt; obj" Usage="System.Web.UI.PropertyConverter.ObjectFromString (objType, propertyInfo, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objType" Type="System.Type" />
        <Parameter Name="propertyInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objType">
          <see cref="T:System.Type" /> Utworzyć na podstawie <paramref name="value" />.</param>
        <param name="propertyInfo">Właściwości, które ma być używany podczas konwersji.</param>
        <param name="value">
          <see cref="T:System.String" /> Można przekonwertować na obiekt.</param>
        <summary>Konwertuje wartość ciągu określonego typu.</summary>
        <returns>Obiekt typu <paramref name="objType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.ObjectFromString%2A> Metoda służy do konwertowania wartości ciągu na obiekt.  
  
> [!NOTE]
>  Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie. Aby przekonwertować wartość ciągu do obiektu, należy użyć `Parse` metodę dla tego obiektu, jeśli obiekt zawiera `Parse` metody. Na przykład <xref:System.Int32> obiektu można tworzyć na podstawie ciągu za pomocą <xref:System.Int32.Parse%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Obiekt o typie określonym przez <paramref name="objType" /> nie można utworzyć na podstawie <paramref name="value" /> parametru.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>