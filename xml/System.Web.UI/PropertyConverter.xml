<Type Name="PropertyConverter" FullName="System.Web.UI.PropertyConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="316849d5a8bb9681263d7706b70c6f672d66d82c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69387455" /></Metadata><TypeSignature Language="C#" Value="public static class PropertyConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PropertyConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PropertyConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyConverter abstract sealed" />
  <TypeSignature Language="F#" Value="type PropertyConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera funkcje pomocnika do konwersji wartości właściwości do i z ciągów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter> Klasa jest używana przez strukturę strony ASP.NET i nie jest przeznaczona do użycia bezpośrednio w kodzie. Można użyć <xref:System.Enum> struktury do konwersji wartości ciągu na i z modułów wyliczających lub <xref:System.ComponentModel.TypeConverter> do konwersji obiektów.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="EnumFromString">
      <MemberSignature Language="C#" Value="public static object EnumFromString (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object EnumFromString(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumFromString (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ EnumFromString(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member EnumFromString : Type * string -&gt; obj" Usage="System.Web.UI.PropertyConverter.EnumFromString (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">Reprezentuje typ wyliczenia, <paramref name="value" /> którymazostaćutworzonyzparametru.<see cref="T:System.Type" /></param>
        <param name="value"><see cref="T:System.String" /> Reprezentuje wartość w module wyliczającym.</param>
        <summary>Konwertuje ciąg reprezentujący wartość określonego typu wyliczeniowego.</summary>
        <returns>Wyliczenie typu <paramref name="enumType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.EnumFromString%2A> Metoda służy do konwertowania wartości ciągu na odpowiadającą jej wartość wyliczenia.  
  
> [!NOTE]
>  Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie. Aby przekonwertować wartość ciągu na odpowiadającą jej wartość wyliczenia, użyj <xref:System.Enum.Parse%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="enumType" />lub <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="enumType" />nie <see cref="T:System.Enum" />jest.  
  
—lub— 
 <paramref name="value" />jest pustym ciągiem ("") lub zawiera tylko białe znaki.  
  
—lub— 
 <paramref name="value" />jest nazwą, ale nie jedną z nazwanych stałych zdefiniowanych dla wyliczenia.</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnumToString">
      <MemberSignature Language="C#" Value="public static string EnumToString (Type enumType, object enumValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnumToString(class System.Type enumType, object enumValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumToString (enumType As Type, enumValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EnumToString(Type ^ enumType, System::Object ^ enumValue);" />
      <MemberSignature Language="F#" Value="static member EnumToString : Type * obj -&gt; string" Usage="System.Web.UI.PropertyConverter.EnumToString (enumType, enumValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="enumValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">Reprezentujący<paramref name="enumValue" />typwyliczenia. <see cref="T:System.Type" /></param>
        <param name="enumValue">Wartość do konwersji.</param>
        <summary>Konwertuje wartość określonego typu wyliczeniowego na jego równoważną reprezentację w postaci ciągu.</summary>
        <returns>Ciąg reprezentujący <paramref name="enumValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.EnumToString%2A> Metoda służy do konwertowania wartości wyliczenia na jej równoważną reprezentację w postaci ciągu.  
  
> [!NOTE]
>  Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie. Aby przekonwertować wartość wyliczenia na równoważną reprezentację w postaci ciągu <xref:System.Enum.Format%2A?displayProperty=nameWithType> , użyj metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Parametr <paramref name="enumType" /> lub <paramref name="enumValue" /> jest .<see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="enumType" /> Parametr nie<see cref="T:System.Enum" /> jest typem.  
  
—lub— 
Parametr zawiera wartość z wyliczenia, która różni się od typu from <paramref name="enumType" />. <paramref name="enumValue" />  
  
—lub— 
Typ elementu <paramref name="enumValue" /> nie jest <paramref name="enumType" />typem podstawowym.</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ObjectFromString">
      <MemberSignature Language="C#" Value="public static object ObjectFromString (Type objType, System.Reflection.MemberInfo propertyInfo, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ObjectFromString(class System.Type objType, class System.Reflection.MemberInfo propertyInfo, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjectFromString (objType As Type, propertyInfo As MemberInfo, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ObjectFromString(Type ^ objType, System::Reflection::MemberInfo ^ propertyInfo, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member ObjectFromString : Type * System.Reflection.MemberInfo * string -&gt; obj" Usage="System.Web.UI.PropertyConverter.ObjectFromString (objType, propertyInfo, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objType" Type="System.Type" />
        <Parameter Name="propertyInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objType"><see cref="T:System.Type" /> Do<paramref name="value" />utworzenia.</param>
        <param name="propertyInfo">Właściwości, które mają być używane podczas konwersji.</param>
        <param name="value"><see cref="T:System.String" /> Do przekonwertowania na obiekt.</param>
        <summary>Konwertuje wartość ciągu na określony typ obiektu.</summary>
        <returns>Obiekt typu <paramref name="objType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.ObjectFromString%2A> Metoda służy do konwertowania wartości ciągu na obiekt.  
  
> [!NOTE]
>  Ten element członkowski obsługuje infrastrukturę programu .NET Framework i nie jest przeznaczony do użycia bezpośrednio w kodzie. Aby przekonwertować wartość ciągu na obiekt, użyj `Parse` metody dla tego obiektu, jeśli obiekt `Parse` udostępnia metodę. Na przykład <xref:System.Int32> obiekt można utworzyć na podstawie ciągu <xref:System.Int32.Parse%2A> za pomocą metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Obiektu typu określonego przez <paramref name="objType" /> nie można utworzyć przy <paramref name="value" /> użyciu parametru.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
