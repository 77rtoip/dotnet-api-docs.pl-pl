<Type Name="ControlCachePolicy" FullName="System.Web.UI.ControlCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ea8d2371f50f6473b6c1b91043495834215c8ab3" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51916064" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCachePolicy sealed" />
  <TypeSignature Language="F#" Value="type ControlCachePolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dostęp programistyczny do ustawienia pamięci podręcznej danych wyjściowych kontrolkę użytkownika ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy> Klasa jest używana przez deweloperów w scenariuszach kontroli użytkownika programowy do określania ustawień buforowania danych wyjściowych w przypadku kontrolek użytkownika (plikach ascx). ASP.NET osadza kontrolki użytkownika w ramach <xref:System.Web.UI.BasePartialCachingControl> wystąpienia. <xref:System.Web.UI.BasePartialCachingControl> Klasa reprezentuje kontrolkę użytkownika, który ma produkt wyjściowy włączone buforowanie. Jeśli uzyskujesz dostęp do <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=nameWithType> właściwość <xref:System.Web.UI.PartialCachingControl> kontrolki, zawsze będzie otrzymywać prawidłową <xref:System.Web.UI.ControlCachePolicy> obiektu. Jednak jeśli uzyskujesz dostęp do <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=nameWithType> właściwość <xref:System.Web.UI.UserControl> formant, pojawi się prawidłowy <xref:System.Web.UI.ControlCachePolicy> obiektu tylko, jeśli formant użytkownika jest opakowana przez <xref:System.Web.UI.BasePartialCachingControl> kontroli. Jeśli nie opakowaniu <xref:System.Web.UI.ControlCachePolicy> obiektu zwróconego przez właściwość będzie zgłaszają wyjątki, gdy użytkownik podejmie próbę manipulowania on, ponieważ nie ma skojarzonego <xref:System.Web.UI.BasePartialCachingControl>. Aby określić, czy <xref:System.Web.UI.UserControl> wystąpienie obsługuje buforowanie bez generowania wyjątków i inspekcji <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> właściwości.  
  
 Za pomocą <xref:System.Web.UI.ControlCachePolicy> klasa jest kilka sposobów, aby umożliwić buforowanie danych wyjściowych. Na poniższej liście opisano metody, których można użyć, aby włączyć buforowanie danych wyjściowych:  
  
-   Aby włączyć buforowanie danych wyjściowych w scenariuszach deklaratywne, należy użyć dyrektywy.  
  
-   Użyj <xref:System.Web.UI.PartialCachingAttribute> atrybutu, aby włączyć buforowanie kontrolki użytkownika w pliku związanym z kodem.  
  
-   Użyj <xref:System.Web.UI.ControlCachePolicy> klasy, aby określić ustawienia pamięci podręcznej w scenariuszach programowy, w których pracujesz z <xref:System.Web.UI.BasePartialCachingControl> wystąpień, które zostały pamięci podręcznej obsługą przy użyciu jednej z powyższych metod i dynamicznie załadowane przy użyciu <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=nameWithType> metody. A <xref:System.Web.UI.ControlCachePolicy> wystąpienia mogą być pomyślnie zmieniane tylko między `Init` i `PreRender` etapach cyklu życia kontroli. Jeśli zmodyfikujesz <xref:System.Web.UI.ControlCachePolicy> obiektu po `PreRender` fazy ASP.NET zgłaszającej wyjątek, ponieważ wszystkie zmiany wprowadzone po renderowania formantu nie może faktycznie wpływają na ustawienia pamięci podręcznej (formant jest buforowany podczas `Render` etapu). Na koniec wystąpienie kontrolki użytkownika (i w związku z tym jego <xref:System.Web.UI.ControlCachePolicy> obiektu) jest dostępna tylko dla programowe operowanie kiedy faktycznie jest renderowany.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak formant użytkownika może być ładowane dynamicznie i programowo manipulować w czasie wykonywania. <xref:System.Web.UI.PartialCachingAttribute> Atrybut jest stosowany do kontrolki użytkownika o nazwie `SimpleControl`, co oznacza, że formant użytkownika jest otoczony przez <xref:System.Web.UI.PartialCachingControl> formantu w czasie wykonywania. `SimpleControl` Ustawienia buforowania obiektu można programowo manipulować za pośrednictwem jego skojarzony <xref:System.Web.UI.ControlCachePolicy> obiektu, który jest dostępny za pośrednictwem odwołanie do <xref:System.Web.UI.PartialCachingControl> formant, który otacza go. W tym przykładzie <xref:System.Web.UI.ControlCachePolicy.Duration%2A> właściwość jest badany w trakcie inicjowania strony i przy użyciu zmienionego <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> i <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> metody, jeśli są spełnione pewne warunki.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób użycia `SimpleControl` kontrolki użytkownika od strony formularzy sieci Web. Aby pomyślnie uruchomić ten przykład, upewnij się, że plik kontrolki użytkownika (.ascx), jego pliku związanego z kodem (CS lub .vb) i strony formularzy sieci Web, który jest hostem kontrolki użytkownika (aspx) znajdują się w tym samym katalogu.  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx.vb#2)]  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx#3)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
    <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
    <related type="Article" href="https://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e">Buforowanie części strony ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public bool Cached { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cached" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Cached" />
      <MemberSignature Language="VB.NET" Value="Public Property Cached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cached { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Cached : bool with get, set" Usage="System.Web.UI.ControlCachePolicy.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy buforowanie fragment jest włączone dla kontrolki użytkownika.</summary>
        <value>
          <see langword="true" /> Jeśli formant użytkownika danych wyjściowych jest buforowana; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Formant użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie podlega buforowaniu.  
  
\- lub — 
<see cref="P:System.Web.UI.ControlCachePolicy.Cached" /> Właściwością poza inicjowania i etapy renderowania formantu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependency As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::CacheDependency ^ Dependency { System::Web::Caching::CacheDependency ^ get(); void set(System::Web::Caching::CacheDependency ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Dependency : System.Web.Caching.CacheDependency with get, set" Usage="System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wystąpienie klasy <see cref="T:System.Web.Caching.CacheDependency" /> klasy skojarzonej z danymi wyjściowymi kontroli pamięci podręcznej użytkownika.</summary>
        <value>
          <see cref="T:System.Web.Caching.CacheDependency" /> Skojarzonego z kontrolką. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy.Dependency%2A> Właściwość deleguje do <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> właściwość <xref:System.Web.UI.BasePartialCachingControl> formant, który otacza kontrolkę użytkownika. Gdy <xref:System.Web.Caching.CacheDependency> wystąpienia zostaje unieważniony, kontrolki użytkownika zostanie usunięty z pamięci podręcznej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Formant użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie podlega buforowaniu.  
  
\- lub — 
<see cref="P:System.Web.UI.ControlCachePolicy.Dependency" /> Właściwością poza inicjowania i etapy renderowania formantu.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Duration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : TimeSpan with get, set" Usage="System.Web.UI.ControlCachePolicy.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, który elementów pamięci podręcznej, które mają pozostać w pamięci podręcznej danych wyjściowych.</summary>
        <value>A <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu, kontrolka użytkownika znajduje się w pamięci podręcznej danych wyjściowych. Wartość domyślna to <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zasady wygasania bezwzględne można ustawić przy użyciu <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> metody <xref:System.Web.UI.ControlCachePolicy.Duration%2A> właściwość zwraca ilość czasu pozostałego do wygaśnięcia wpisu pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak formant użytkownika może być ładowane dynamicznie i programowo manipulować w czasie wykonywania. <xref:System.Web.UI.PartialCachingAttribute> Atrybut jest stosowany do kontrolki użytkownika o nazwie `SimpleControl`, co oznacza, że jest otoczony przez <xref:System.Web.UI.PartialCachingControl> formantu w czasie wykonywania. `SimpleControl` Ustawienia buforowania obiektu można programowo manipulować za pośrednictwem jego skojarzony <xref:System.Web.UI.ControlCachePolicy> obiektu, który jest dostępny za pośrednictwem odwołanie do <xref:System.Web.UI.PartialCachingControl> formant, który otacza go. W tym przykładzie <xref:System.Web.UI.ControlCachePolicy.Duration%2A> właściwość jest badany w trakcie inicjowania strony i wygaśnięcia pamięci podręcznej jest zmieniane, gdy są spełnione pewne warunki. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.ControlCachePolicy> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Formant użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie podlega buforowaniu.  
  
\- lub — 
<see cref="P:System.Web.UI.ControlCachePolicy.Duration" /> Właściwością poza inicjowania i etapy renderowania formantu.</exception>
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dostawcy pamięci podręcznej danych wyjściowych, który jest skojarzony z wystąpieniem kontroli.</summary>
        <value>Nazwa dostawcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy.ProviderName%2A> Właściwość pozwala na określenie Bieżący dostawca wyjściowej pamięci podręcznej, który jest skojarzony z formantem, za pomocą <xref:System.Web.UI.ControlCachePolicy> wystąpienia. Tę właściwość można ustawić tylko przed <xref:System.Web.UI.Control.PreRender> wystąpi zdarzenie kontroli cyklu życia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono nazwę dostawcy.</exception>
        <exception cref="T:System.Web.HttpException">Próbowano ustawić <see cref="P:System.Web.UI.ControlCachePolicy.ProviderName" /> właściwości podczas lub po <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="member this.SetExpires : DateTime -&gt; unit" Usage="controlCachePolicy.SetExpires expirationTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="expirationTime">A <see cref="T:System.DateTime" /> po którym wygaśnięcia wpisu pamięci podręcznej.</param>
        <summary>Powoduje, że <see cref="T:System.Web.UI.BasePartialCachingControl" /> formant, który otacza kontrolkę użytkownika do wygaśnięcia wpisu pamięci podręcznej w określonym dniu i godzinie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> i <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> metody (przekazywanie `true`) nakazać <xref:System.Web.UI.BasePartialCachingControl> formant, który otacza kontrolkę użytkownika do użycia przy wygaśniecie zasady zamiast zasady wygasania bezwzględne buforowania. Użyj <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> metody i <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> — metoda (przekazywanie `false`) aby określić zasady wygasania bezwzględne.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak formant użytkownika może być ładowane dynamicznie i programowo manipulować w czasie wykonywania. <xref:System.Web.UI.PartialCachingAttribute> Atrybut jest stosowany do kontrolki użytkownika o nazwie `SimpleControl`, co oznacza, że formant użytkownika jest otoczony przez <xref:System.Web.UI.PartialCachingControl> formantu w czasie wykonywania. `SimpleControl` Ustawienia buforowania obiektu można programowo manipulować za pośrednictwem jego skojarzony <xref:System.Web.UI.ControlCachePolicy> obiektu, który jest dostępny za pośrednictwem odwołanie do <xref:System.Web.UI.PartialCachingControl> formant, który otacza go. W tym przykładzie <xref:System.Web.UI.ControlCachePolicy.Duration%2A> właściwość jest badany w trakcie inicjowania strony i przy użyciu zmienionego <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> i <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> metody, jeśli są spełnione pewne warunki. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.ControlCachePolicy> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Formant użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie podlega buforowaniu.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool useSlidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool useSlidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (useSlidingExpiration As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool useSlidingExpiration);" />
      <MemberSignature Language="F#" Value="member this.SetSlidingExpiration : bool -&gt; unit" Usage="controlCachePolicy.SetSlidingExpiration useSlidingExpiration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useSlidingExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useSlidingExpiration">
          <see langword="true" /> do korzystania z pamięci podręcznej wygaśniecie zamiast bezwzględnych wygaśnięcia; w przeciwnym razie <see langword="false" />.</param>
        <summary>Powoduje, że <see cref="T:System.Web.UI.BasePartialCachingControl" /> formant, który otacza kontrolkę użytkownika można ustawić wpisu pamięci podręcznej kontrolki użytkownika do użycia przewijania lub bezwzględna wygaśnięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> i <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> metody (przekazywanie `true`) nakazać <xref:System.Web.UI.BasePartialCachingControl> formant, który otacza kontrolkę użytkownika do użycia przy wygaśniecie zasady zamiast zasady wygasania bezwzględne buforowania. Użyj <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> metody i <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> — metoda (przekazywanie `false`) aby określić zasady wygasania bezwzględne.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak formant użytkownika może być ładowane dynamicznie i programowo manipulować w czasie wykonywania. Formant użytkownika o nazwie `SimpleControl` zostanie nadany <xref:System.Web.UI.PartialCachingAttribute> atrybutu, co oznacza, że jest otoczony przez <xref:System.Web.UI.PartialCachingControl> formantu w czasie wykonywania. `SimpleControl` Ustawienia buforowania obiektu można programowo manipulować za pośrednictwem jego skojarzony <xref:System.Web.UI.ControlCachePolicy> obiektu, który jest dostępny za pośrednictwem odwołanie do <xref:System.Web.UI.PartialCachingControl> formant, który otacza go. W tym przykładzie ustawienia buforowania są badane podczas inicjowania strony i zmienić, jeśli są spełnione pewne warunki. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.ControlCachePolicy> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Formant użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie podlega buforowaniu.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string varyByCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string varyByCustom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (varyByCustom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ varyByCustom);" />
      <MemberSignature Language="F#" Value="member this.SetVaryByCustom : string -&gt; unit" Usage="controlCachePolicy.SetVaryByCustom varyByCustom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varyByCustom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="varyByCustom">Lista — niestandardowe ciągi.</param>
        <summary>Ustawia listę — niestandardowe ciągi używające pamięci podręcznej danych wyjściowych będzie się różnić w kontrolce użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli przekażesz "Przeglądarka" jako `varyByCustom` parametru kontrolki użytkownika, będzie zróżnicowane według typu w przeglądarce i główny numer wersji. Jeśli podano inny ciąg niestandardowy, należy zmienić <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> metody w pliku Global.asax Twojej aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Formant użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie podlega buforowaniu.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCaching">
      <MemberSignature Language="C#" Value="public bool SupportsCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsCaching { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCaching : bool" Usage="System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant użytkownika obsługuje buforowanie.</summary>
        <value>
          <see langword="true" /> Jeśli formant użytkownika obsługuje buforowanie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługuje formant użytkownika, buforowanie, jeśli jest on skojarzony z <xref:System.Web.UI.BasePartialCachingControl> wystąpienia, co sygnalizuje, że dyrektywy był analizowany przez ASP.NET parser lub kontrolki użytkownika został ozdobione <xref:System.Web.UI.PartialCachingAttribute> atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PartialCachingAttribute" />
        <altmember cref="T:System.Web.UI.BasePartialCachingControl" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VaryByControl : string with get, set" Usage="System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia listę identyfikatorów formant będzie się różnić w pamięci podręcznej danych wyjściowych przez.</summary>
        <value>Rozdzieloną średnikami listę ciągów, służące do różnicowania kontrolki użytkownika danych wyjściowych pamięci podręcznej. Te ciągi reprezentują <see cref="P:System.Web.UI.Control.ID" /> wartości właściwości formantów serwera ASP.NET zadeklarowane w kontrolce użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Formant użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie podlega buforowaniu.  
  
\- lub — 
<see cref="P:System.Web.UI.ControlCachePolicy.VaryByControl" /> Właściwością poza inicjowania i etapy renderowania formantu.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByControls" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VaryByParams : System.Web.HttpCacheVaryByParams" Usage="System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia listę <see langword="GET" /> lub <see langword="POST" /> nazwy parametru będzie się różnić w pamięci podręcznej danych wyjściowych przez.</summary>
        <value>Rozdzielana średnikami lista ciągów używanych do zmiany pamięci podręcznej danych wyjściowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie te ciągi odpowiadają wartość ciągu zapytania, wysyłane przy użyciu metody GET lub parametr wysyłane za pomocą metody POST. Gdy <xref:System.Web.UI.ControlCachePolicy.VaryByParams%2A> właściwość jest ustawiona na wiele parametrów, wyjściowej pamięci podręcznej znajduje się inna wersja tego dokumentu, dla każdego określonego parametru. Możliwe wartości to "none", "*" i prawidłowe zapytanie ciągu lub nazwę parametru POST.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Formant użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie podlega buforowaniu.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>