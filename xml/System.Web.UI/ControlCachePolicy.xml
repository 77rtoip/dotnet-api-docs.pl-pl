<Type Name="ControlCachePolicy" FullName="System.Web.UI.ControlCachePolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd5fe081ffb596fb5d278438238bc50fa091dba1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30694445" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlCachePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlCachePolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCachePolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlCachePolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCachePolicy sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia programowy dostęp do ustawień pamięci podręcznej danych wyjściowych kontrolkę użytkownika platformy ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy> Klasa jest używana przez deweloperów w scenariuszach kontroli programowe użytkownika do określenia ustawień buforowania danych wyjściowych w przypadku kontrolek użytkownika (plikach ascx). ASP.NET osadza kontrolek użytkownika w ramach <xref:System.Web.UI.BasePartialCachingControl> wystąpienia. <xref:System.Web.UI.BasePartialCachingControl> Klasa reprezentuje kontrolkę użytkownika, która ma produkt wyjściowy włączone buforowanie. Podczas uzyskiwania dostępu <xref:System.Web.UI.BasePartialCachingControl.CachePolicy%2A?displayProperty=nameWithType> właściwość <xref:System.Web.UI.PartialCachingControl> kontroli, zawsze zostanie wyświetlony prawidłowy <xref:System.Web.UI.ControlCachePolicy> obiektu. Jednak jeśli dostęp do <xref:System.Web.UI.UserControl.CachePolicy%2A?displayProperty=nameWithType> właściwość <xref:System.Web.UI.UserControl> kontroli, zostanie wyświetlony prawidłowy <xref:System.Web.UI.ControlCachePolicy> obiekt tylko, jeśli formant użytkownika jest już opakowana przez <xref:System.Web.UI.BasePartialCachingControl> formantu. Jeśli nie jest on zawijany, <xref:System.Web.UI.ControlCachePolicy> obiektu zwróconego przez właściwość zostanie zgłaszają wyjątki, gdy użytkownik podejmie próbę manipulowania on, ponieważ nie ma skojarzonego <xref:System.Web.UI.BasePartialCachingControl>. Aby określić, czy <xref:System.Web.UI.UserControl> wystąpienie obsługuje buforowanie bez generowania wyjątków, sprawdź <xref:System.Web.UI.ControlCachePolicy.SupportsCaching%2A> właściwości.  
  
 Przy użyciu <xref:System.Web.UI.ControlCachePolicy> klasa ma kilka sposobów, aby umożliwić buforowanie danych wyjściowych. Poniższa lista zawiera opis metody, których można użyć, aby włączyć buforowanie danych wyjściowych:  
  
-   Aby włączyć buforowanie danych wyjściowych w scenariuszach deklaratywne, należy użyć dyrektywy.  
  
-   Użyj <xref:System.Web.UI.PartialCachingAttribute> atrybutu, aby włączyć buforowanie dla formantu użytkownika w pliku CodeBehind.  
  
-   Użyj <xref:System.Web.UI.ControlCachePolicy> klasę, aby określić ustawienia pamięci podręcznej w programowe scenariusze, w których użytkownik pracuje z <xref:System.Web.UI.BasePartialCachingControl> wystąpień, które zostały pamięci podręcznej obsługą przy użyciu jednej z powyższych metod i dynamicznie ładowane przy użyciu <xref:System.Web.UI.TemplateControl.LoadControl%2A?displayProperty=nameWithType> metody. A <xref:System.Web.UI.ControlCachePolicy> wystąpienia może pomyślnie manipulować tylko między `Init` i `PreRender` etapy cyklu życia formantu. Jeśli zmodyfikujesz <xref:System.Web.UI.ControlCachePolicy> obiektu po `PreRender` fazy, ASP.NET zwraca wyjątek, ponieważ wszystkie zmiany dokonane po renderowania formantu nie może faktycznie mają wpływ na ustawienia pamięci podręcznej (formantu jest buforowany podczas `Render` etap). Na koniec wystąpienie kontrolki użytkownika (i dlatego jego <xref:System.Web.UI.ControlCachePolicy> obiektu) jest dostępny tylko dla programowe manipulowania faktycznie jest renderowany.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak kontrolka użytkownika można załadować dynamicznie i operować programowo w czasie wykonywania. <xref:System.Web.UI.PartialCachingAttribute> Atrybut jest stosowany do formantu użytkownika o nazwie `SimpleControl`, co oznacza, że formant użytkownika jest opakowane przez <xref:System.Web.UI.PartialCachingControl> formantu w czasie wykonywania. `SimpleControl` Ustawienia buforowania obiektu można programowo manipulować za pośrednictwem jego skojarzony <xref:System.Web.UI.ControlCachePolicy> obiektu, który jest dostępny za pośrednictwem odwołanie do <xref:System.Web.UI.PartialCachingControl> formant, który opakowuje go. W tym przykładzie <xref:System.Web.UI.ControlCachePolicy.Duration%2A> właściwości jest badane podczas inicjowania strony i zmienione za pomocą <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> i <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> metody, jeśli są spełnione pewne warunki.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 Poniższy przykład kodu pokazuje, przy użyciu `SimpleControl` kontrolki użytkownika ze strony formularzy sieci Web. Aby uruchomić ten przykład pomyślnie, upewnij się, że plik kontrolki użytkownika (.ascx), jego plik CodeBehind (CS lub .vb) i strony formularzy sieci Web, który obsługuje kontrolki użytkownika (aspx) znajdują się w tym samym katalogu.  
  
 [!code-csharp[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx.cs#2)]
 [!code-vb[System.Web.UI.ControlCachePolicy_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx.vb#2)]  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/SimpleControl.ascx#3)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/SimpleControl.ascx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.BasePartialCachingControl.CachePolicy" />
    <altmember cref="P:System.Web.UI.UserControl.CachePolicy" />
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public bool Cached { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cached" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Cached" />
      <MemberSignature Language="VB.NET" Value="Public Property Cached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cached { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kontrolki użytkownika jest włączone buforowanie fragmentu.</summary>
        <value>
          <see langword="true" /> Jeśli formant użytkownika wyjściowy jest buforowana; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Kontrola użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie jest buforowalnej.  
  
 \- lub -  
  
 <see cref="P:System.Web.UI.ControlCachePolicy.Cached" /> Ustawiono właściwość poza inicjowania i etapów renderowania formantu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dependency">
      <MemberSignature Language="C#" Value="public System.Web.Caching.CacheDependency Dependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.CacheDependency Dependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Dependency" />
      <MemberSignature Language="VB.NET" Value="Public Property Dependency As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::CacheDependency ^ Dependency { System::Web::Caching::CacheDependency ^ get(); void set(System::Web::Caching::CacheDependency ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wystąpienie <see cref="T:System.Web.Caching.CacheDependency" /> klasy skojarzone z danych wyjściowych formantu użytkownika pamięci podręcznej.</summary>
        <value>
          <see cref="T:System.Web.Caching.CacheDependency" /> Skojarzony z formantem. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy.Dependency%2A> Właściwości deleguje do <xref:System.Web.UI.BasePartialCachingControl.Dependency%2A> właściwość <xref:System.Web.UI.BasePartialCachingControl> formantu, który opakowuje kontrolki użytkownika. Gdy <xref:System.Web.Caching.CacheDependency> wystąpienie zostało unieważnione, formantu użytkownika zostanie usunięty z pamięci podręcznej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontrola użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie jest buforowalnej.  
  
 \- lub -  
  
 <see cref="P:System.Web.UI.ControlCachePolicy.Dependency" /> Ustawiono właściwość poza inicjowania i etapów renderowania formantu.</exception>
        <altmember cref="T:System.Web.Caching.CacheDependency" />
        <altmember cref="P:System.Web.UI.BasePartialCachingControl.Dependency" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Duration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Duration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, który są elementy pamięci podręcznej pozostaje w pamięci podręcznej danych wyjściowych.</summary>
        <value>A <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu kontrolki użytkownika ma pozostać w wyjściowej pamięci podręcznej. Wartość domyślna to <see cref="F:System.TimeSpan.Zero" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli zasady wygasania bezwzględną jest ustawiany za pomocą <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> metody <xref:System.Web.UI.ControlCachePolicy.Duration%2A> właściwość zwraca czas pozostały do momentu wygaśnięcia wpisu pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak kontrolka użytkownika można załadować dynamicznie i operować programowo w czasie wykonywania. <xref:System.Web.UI.PartialCachingAttribute> Atrybut jest stosowany do formantu użytkownika o nazwie `SimpleControl`, co oznacza, że jest opakowane przez <xref:System.Web.UI.PartialCachingControl> formantu w czasie wykonywania. `SimpleControl` Ustawienia buforowania obiektu można programowo manipulować za pośrednictwem jego skojarzony <xref:System.Web.UI.ControlCachePolicy> obiektu, który jest dostępny za pośrednictwem odwołanie do <xref:System.Web.UI.PartialCachingControl> formant, który opakowuje go. W tym przykładzie <xref:System.Web.UI.ControlCachePolicy.Duration%2A> właściwości się zbadana podczas inicjowania strony i wygaśnięcia pamięci podręcznej jest zmieniany, jeśli są spełnione pewne warunki. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.ControlCachePolicy> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontrola użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie jest buforowalnej.  
  
 \- lub -  
  
 <see cref="P:System.Web.UI.ControlCachePolicy.Duration" /> Ustawiono właściwość poza inicjowania i etapów renderowania formantu.</exception>
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dostawcy pamięci podręcznej danych wyjściowych, który jest skojarzony z wystąpieniem formantu.</summary>
        <value>Nazwa dostawcy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlCachePolicy.ProviderName%2A> Właściwości można określić bieżącego dostawcy pamięci podręcznej danych wyjściowych, który jest skojarzony z formantem, za pomocą <xref:System.Web.UI.ControlCachePolicy> wystąpienia. Tej właściwości można ustawić tylko przed <xref:System.Web.UI.Control.PreRender> zdarzenie kontroli cyklu życia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie znaleziono nazwy dostawcy.</exception>
        <exception cref="T:System.Web.HttpException">Próbowano ustawić <see cref="P:System.Web.UI.ControlCachePolicy.ProviderName" /> właściwości podczas lub po <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetExpires">
      <MemberSignature Language="C#" Value="public void SetExpires (DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetExpires(valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetExpires (expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetExpires(DateTime expirationTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="expirationTime">A <see cref="T:System.DateTime" /> po którym wygaśnięcia wpisu pamięci podręcznej.</param>
        <summary>Powoduje, że <see cref="T:System.Web.UI.BasePartialCachingControl" /> formant, który opakowuje kontrolki użytkownika do wygaśnięcia wpisu pamięci podręcznej w określonym dniu i godzinie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> i <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> metod (przekazywanie `true`) nakazać programowi <xref:System.Web.UI.BasePartialCachingControl> formant, który opakowuje formant użytkownika do użycia wygasanie przewijania buforowanie zasad zamiast zasady wygasania bezwzględną. Użyj <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> — metoda i <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> — metoda (przekazywanie `false`) można określić zasady wygaśnięcia bezwzględne.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak kontrolka użytkownika można załadować dynamicznie i operować programowo w czasie wykonywania. <xref:System.Web.UI.PartialCachingAttribute> Atrybut jest stosowany do formantu użytkownika o nazwie `SimpleControl`, co oznacza, że formant użytkownika jest opakowane przez <xref:System.Web.UI.PartialCachingControl> formantu w czasie wykonywania. `SimpleControl` Ustawienia buforowania obiektu można programowo manipulować za pośrednictwem jego skojarzony <xref:System.Web.UI.ControlCachePolicy> obiektu, który jest dostępny za pośrednictwem odwołanie do <xref:System.Web.UI.PartialCachingControl> formant, który opakowuje go. W tym przykładzie <xref:System.Web.UI.ControlCachePolicy.Duration%2A> właściwości jest badane podczas inicjowania strony i zmienione za pomocą <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> i <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> metody, jeśli są spełnione pewne warunki. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.ControlCachePolicy> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontrola użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie jest buforowalnej.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetSlidingExpiration">
      <MemberSignature Language="C#" Value="public void SetSlidingExpiration (bool useSlidingExpiration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSlidingExpiration(bool useSlidingExpiration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetSlidingExpiration(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSlidingExpiration (useSlidingExpiration As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSlidingExpiration(bool useSlidingExpiration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useSlidingExpiration" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useSlidingExpiration">
          <see langword="true" /> do korzystania z pamięci podręcznej wygaśniecie zamiast wygaśnięcia bezwzględne; w przeciwnym razie <see langword="false" />.</param>
        <summary>Powoduje, że <see cref="T:System.Web.UI.BasePartialCachingControl" /> formant, który opakowuje kontrolki użytkownika można ustawić wpis pamięci podręcznej kontrolki użytkownika do używania przesuwanego lub bezwzględna wygaśnięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> i <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> metod (przekazywanie `true`) nakazać programowi <xref:System.Web.UI.BasePartialCachingControl> formant, który opakowuje formant użytkownika do użycia wygasanie przewijania buforowanie zasad zamiast zasady wygasania bezwzględną. Użyj <xref:System.Web.UI.ControlCachePolicy.SetExpires%2A> — metoda i <xref:System.Web.UI.ControlCachePolicy.SetSlidingExpiration%2A> — metoda (przekazywanie `false`) można określić zasady wygaśnięcia bezwzględne.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak kontrolka użytkownika można załadować dynamicznie i operować programowo w czasie wykonywania. Formant użytkownika o nazwie `SimpleControl` zostanie nadany <xref:System.Web.UI.PartialCachingAttribute> atrybutu, co oznacza, że jest opakowane przez <xref:System.Web.UI.PartialCachingControl> formantu w czasie wykonywania. `SimpleControl` Ustawienia buforowania obiektu można programowo manipulować za pośrednictwem jego skojarzony <xref:System.Web.UI.ControlCachePolicy> obiektu, który jest dostępny za pośrednictwem odwołanie do <xref:System.Web.UI.PartialCachingControl> formant, który opakowuje go. W tym przykładzie ustawień pamięci podręcznej są badane podczas inicjowania strony i zmienić, jeśli są spełnione pewne warunki. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.ControlCachePolicy> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/CS/Default2.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ControlCachePolicy_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCachePolicy_2/VB/Default2.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontrola użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie jest buforowalnej.</exception>
        <altmember cref="P:System.Web.UI.ControlCachePolicy.Duration" />
        <altmember cref="M:System.Web.UI.ControlCachePolicy.SetExpires(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="SetVaryByCustom">
      <MemberSignature Language="C#" Value="public void SetVaryByCustom (string varyByCustom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVaryByCustom(string varyByCustom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCachePolicy.SetVaryByCustom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVaryByCustom (varyByCustom As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVaryByCustom(System::String ^ varyByCustom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="varyByCustom" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="varyByCustom">Lista ciągów niestandardowych.</param>
        <summary>Ustawia listę niestandardowych ciągów, używających pamięci podręcznej danych wyjściowych różnicującej kontrolki użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku przekazania "przeglądarki" jako `varyByCustom` parametru kontrolki użytkownika zostanie zmienione przez typ przeglądarki i numer wersji głównej. Jeśli wprowadzono niestandardowy ciąg innego, należy zastąpić <xref:System.Web.HttpApplication.GetVaryByCustomString%2A> metody w pliku Global.asax aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontrola użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie jest buforowalnej.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCaching">
      <MemberSignature Language="C#" Value="public bool SupportsCaching { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.SupportsCaching" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsCaching { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant użytkownika obsługuje buforowanie.</summary>
        <value>
          <see langword="true" /> Jeśli formant użytkownika obsługuje buforowanie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrola użytkownika obsługuje buforowanie, jeśli jest on skojarzony z <xref:System.Web.UI.BasePartialCachingControl> wystąpienia, która sygnalizuje, że dyrektywy przeanalizowany przez ASP.NET parser lub kontrolki użytkownika zostało oznaczone <xref:System.Web.UI.PartialCachingAttribute> atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PartialCachingAttribute" />
        <altmember cref="T:System.Web.UI.BasePartialCachingControl" />
      </Docs>
    </Member>
    <Member MemberName="VaryByControl">
      <MemberSignature Language="C#" Value="public string VaryByControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByControl" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByControl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VaryByControl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia listę identyfikatorów formant będzie różnicować buforowane dane wyjściowe przez.</summary>
        <value>Rozdzielana średnikami lista ciągów służące do różnicowania kontrolkę użytkownika do wyjściowej pamięci podręcznej. Te ciągi reprezentuje <see cref="P:System.Web.UI.Control.ID" /> wartości właściwości kontrolek serwera ASP.NET zadeklarowany w formancie użytkownika.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">Kontrola użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie jest buforowalnej.  
  
 \- lub -  
  
 <see cref="P:System.Web.UI.ControlCachePolicy.VaryByControl" /> Ustawiono właściwość poza inicjowania i etapów renderowania formantu.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByControls" />
      </Docs>
    </Member>
    <Member MemberName="VaryByParams">
      <MemberSignature Language="C#" Value="public System.Web.HttpCacheVaryByParams VaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCacheVaryByParams VaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCachePolicy.VaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VaryByParams As HttpCacheVaryByParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCacheVaryByParams ^ VaryByParams { System::Web::HttpCacheVaryByParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCacheVaryByParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia listę <see langword="GET" /> lub <see langword="POST" /> nazwy parametru będzie różnicować buforowane dane wyjściowe przez.</summary>
        <value>Rozdzielana średnikami lista ciągów używanych do zmiany pamięci podręcznej danych wyjściowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie te ciągi odpowiadają wartość ciągu kwerendy wysyłane z metodą GET lub parametr wysyłane przy użyciu metody POST. Gdy <xref:System.Web.UI.ControlCachePolicy.VaryByParams%2A> właściwość jest ustawiona na wiele parametrów, wyjściowej pamięci podręcznej znajduje się inna wersja tego dokumentu, dla każdego określonego parametru. Możliwe wartości to "none", "*" oraz prawidłowy ciąg kwerendy lub nazwę parametru POST.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontrola użytkownika nie jest skojarzony z <see cref="T:System.Web.UI.BasePartialCachingControl" /> i nie jest buforowalnej.</exception>
        <altmember cref="P:System.Web.UI.PartialCachingAttribute.VaryByParams" />
      </Docs>
    </Member>
  </Members>
</Type>