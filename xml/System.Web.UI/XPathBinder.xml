<Type Name="XPathBinder" FullName="System.Web.UI.XPathBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c7517a300082898b477e927171433c9180f7860" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30694529" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XPathBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XPathBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.XPathBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XPathBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class XPathBinder sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia obsługę szybkie programowanie aplikacji (RAD) projektantów można przeanalizować wyrażenia wiązania danych, używające wyrażenia XPath. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć przeciążone <xref:System.Web.UI.XPathBinder.Eval%2A> metody tej klasy, aby powiązać wynik wyrażenia XPath wykonane na obiekt, który implementuje <xref:System.Xml.XPath.IXPathNavigable> interfejsu, takich jak <xref:System.Xml.XmlNode>. Można użyć <xref:System.Web.UI.XPathBinder.Select%2A> metoda pobierania wyników wyrażenia XPath wykonywane <xref:System.Xml.XPath.IXPathNavigable> obiekt jako <xref:System.Collections.IEnumerable> listy węzłów. Można wyliczyć bezpośrednio lub przypisane do tej listy węzłów `DataSource` kontrolować właściwości listy, takich jak <xref:System.Web.UI.WebControls.Repeater> lub <xref:System.Web.UI.WebControls.DataList>.  
  
 Można użyć uproszczonej wersji składnia wiązania danych, korzystając z <xref:System.Web.UI.XPathBinder> metody deklaratywnie. Zamiast wywoływać metodę `XPathBinder.Eval`(`Container.DataItem`, `xpath`) można użyć `XPath`(`xpath`). Podobnie, zamiast wywoływać metodę `XPathBinder.Select`(`Container.DataItem`,`xpath`), można użyć `XPathSelect`(`xpath`) można pobrać <xref:System.Collections.IEnumerable> zestaw węzłów. Gdy za pomocą tej składni, uproszczonej <xref:System.Web.UI.XPathBinder.Eval%2A> i <xref:System.Web.UI.XPathBinder.Select%2A> metody założono domyślny `Container.DataItem` obiekt kontekstu.  
  
 Aby uzyskać więcej informacji na temat wiązania danych do kontrolek serwera ASP.NET, zobacz [składni wyrażenia wiązania danych](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.XmlDataSource> kontrolki z szablonem <xref:System.Web.UI.WebControls.Repeater> formantu, aby wyświetlić dane XML. W tym przykładzie ma dwie części:  
  
-   Strony formularzy sieci Web, który wyświetla dane XML.  
  
-   Plik XML, który zawiera dane.  
  
 Pierwsza część przykładzie powoduje wyświetlenie strony formularzy sieci Web wyświetlający dane XML dostępne za pośrednictwem <xref:System.Web.UI.WebControls.XmlDataSource> formantu. A <xref:System.Web.UI.WebControls.Repeater> kontrolować używa uproszczony <xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29> składni metody można powiązać z elementami danych w zawartości XML dokumentu, który <xref:System.Web.UI.WebControls.XmlDataSource> reprezentuje. Używa <xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29> metoda pobierania <xref:System.Collections.IEnumerable> listy i przypisz go jako późnym wiązaniem <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> właściwość <xref:System.Web.UI.WebControls.Repeater> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 Drugi przykład zawiera plik XML Order.xml, który jest używany jako źródło danych wyświetlanych na stronie formularzy sieci Web zdefiniowanych powyżej.  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <orders>  
    <order>  
      <customer id="12345" />  
      <customername>  
        <firstn>John</firstn>  
        <lastn>Doe</lastn>  
      </customername>  
      <transaction id="12345" />  
      <shipaddress>  
        <address1>1234 Tenth Avenue</address1>  
        <city>Bellevue</city>  
        <state>Washington</state>  
        <zip>98001</zip>  
      </shipaddress>  
      <summary>  
        <item dept="tools">screwdriver</item>  
        <item dept="tools">hammer</item>  
        <item dept="plumbing">fixture</item>  
      </summary>  
    </order>  
 </orders>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Analizuje i ocenia wyrażenie XPath wiązania danych przed <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiektu w czasie wykonywania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string xPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ xPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Xml.XPath.IXPathNavigable" /> Odwołanie do obiektu, który wyrażenie jest obliczane przed. Musi to być prawidłowym identyfikatorem obiektu w języku określonej strony.</param>
        <param name="xPath">Zapytanie XPath z <c>kontenera</c> do wartości właściwości, która znajduje się we właściwości powiązanej kontrolki.</param>
        <summary>Oblicza wyrażenie XPath powiązanie danych w czasie wykonywania.</summary>
        <returns>
          <see cref="T:System.Object" /> Który wynikiem obliczania wyrażenia wiązania danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.XPathBinder.Eval%2A> metody deklaratywnie, jeśli chcesz uprościć rzutowanie węzła XML na ciąg tekstowy, który będzie wyświetlany w przeglądarce. Aby to zrobić, należy umieścić \<% # i % > tagi, które są również używane w ASP.NET danych Powiązanie standardowe, wokół wyrażenia wiązania danych.  
  
 Dla każdego z listy kontrolek serwera ASP.NET takich jak <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DataGrid>, lub <xref:System.Web.UI.WebControls.Repeater>, `container` parametr powinien być `Container.DataItem`. Są wiązane względem strony, `container` parametr powinien być `Page`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.XmlDataSource> kontrolki z szablonem <xref:System.Web.UI.WebControls.Repeater> formantu, aby wyświetlić dane XML. W tym przykładzie ma dwie części:  
  
-   Strony formularzy sieci Web, który wyświetla dane XML.  
  
-   Plik XML, który zawiera dane.  
  
 Pierwsza część przykładzie powoduje wyświetlenie strony formularzy sieci Web wyświetlający dane XML dostępne za pośrednictwem <xref:System.Web.UI.WebControls.XmlDataSource> formantu. A <xref:System.Web.UI.WebControls.Repeater> formant używa uproszczony <xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29> składni metody można powiązać z elementami danych w zawartości XML dokumentu, który <xref:System.Web.UI.WebControls.XmlDataSource> reprezentuje. Używa <xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29> metoda pobierania <xref:System.Collections.IEnumerable> listy i przypisz go jako późnym wiązaniem <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> właściwość <xref:System.Web.UI.WebControls.Repeater> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_13#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_13/CS/xmlds13cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_13#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_13/VB/xmlds13vb.aspx#1)]  
  
 Drugi przykład zawiera plik XML Bookstore2.xml, który jest używany jako źródło danych wyświetlanych na stronie formularzy sieci Web zdefiniowanych powyżej.  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <bookstore>  
    <genre name="fiction">  
      <book ISBN="10-861003-324">  
        <author>  
          <firstname>test</firstname>  
          <lastname>test2</lastname>  
        </author>  
        <title>The Handmaid's Tale</title>  
        <price>12.95</price>  
        <chapters>  
          <chapter num="1" name="Introduction" />   
          <chapter num="2" name="Body" />   
          <chapter num="3" name="Conclusion" />  
        </chapters>  
      </book>  
    </genre>  
    <genre name="nonfiction">  
      <book genre="nonfiction" ISBN="1-861001-57-5">  
        <author>  
          <firstname>test3</firstname>  
          <lastname>test4</lastname>  
        </author>      
        <title>Pride And Prejudice</title>  
        <price>24.95</price>  
        <chapters>  
          <chapter num="1" name="Introduction" />   
          <chapter num="2" name="Body" />  
          <chapter num="3" name="Conclusion" />  
        </chapters>  
      </book>  
    </genre>  
  </bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> Lub <paramref name="xpath" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Obiekt określony przez <paramref name="container" /> nie jest <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiektu.</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string xPath, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string xPath, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ xPath, System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Xml.XPath.IXPathNavigable" /> Odwołanie do obiektu, który wyrażenie jest obliczane przed. Musi to być prawidłowym identyfikatorem obiektu w języku określonej strony.</param>
        <param name="xPath">Zapytanie XPath z <c>kontenera</c> do wartości właściwości do można umieścić we właściwości powiązanej kontrolki.</param>
        <param name="format">Ciąg formatu .NET Framework podobne do tych używanych przez <see cref="M:System.String.Format(System.String,System.Object)" />, który konwertuje <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiektu (wynikiem obliczania wyrażenia wiązania danych) do <see cref="T:System.String" /> mogą być wyświetlane przez przeglądarki.</param>
        <summary>Oblicza wyrażenie XPath powiązanie danych w czasie wykonywania i formatuje wynik jako tekst, który ma być wyświetlany w przeglądarki.</summary>
        <returns>A <see cref="T:System.String" /> który wynikiem obliczania wyrażenia wiązania danych i konwersji na typ ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby dowiedzieć się więcej na temat ciągów formatu w programie .NET Framework, zobacz [typy formatowania](~/docs/standard/base-types/formatting-types.md).  
  
 Można użyć <xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29> metody deklaratywnie, jeśli chcesz uprościć rzutowanie węzła XML na ciąg tekstowy, który będzie wyświetlany w przeglądarce. Aby to zrobić, należy umieścić \<% # i % > tagi, które są również używane w ASP.NET danych Powiązanie standardowe, wokół wyrażenia wiązania danych.  
  
 Dla każdego z listy kontrolek serwera ASP.NET takich jak <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DataGrid>, lub <xref:System.Web.UI.WebControls.Repeater>, `container` parametr powinien być `Container.DataItem`. Są wiązane względem strony, `container` parametr powinien być `Page`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> Lub <paramref name="xpath" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Obiekt określony przez <paramref name="container" /> nie jest <see cref="T:System.Xml.XPath.IXPathNavigable" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string xPath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string xPath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, resolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ xPath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Xml.XPath.IXPathNavigable" /> Odwołanie do obiektu, który wyrażenie jest obliczane przed. Musi to być prawidłowym identyfikatorem obiektu w języku określonej strony.</param>
        <param name="xPath">Zapytanie XPath z <c>kontenera</c> do wartości właściwości do można umieścić we właściwości powiązanej kontrolki.</param>
        <param name="resolver">
          <see cref="T:System.Xml.IXmlNamespaceResolver" /> Obiekt używany do rozpoznania prefiksy przestrzeni nazw w wyrażeniu XPath.</param>
        <summary>Wynikiem wyrażenia XPath powiązanie danych w czasie wykonywania i formatuje wynik jako tekst, który ma być wyświetlane w przeglądarki, za pomocą <see cref="T:System.Xml.IXmlNamespaceResolver" /> obiektu określonego do rozpoznania prefiksy przestrzeni nazw w wyrażeniu XPath.</summary>
        <returns>A <see cref="T:System.Object" /> który wynikiem obliczania wyrażenia wiązania danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.XPathBinder.Eval%2A> metody deklaratywnie, jeśli chcesz uprościć rzutowanie węzła XML na ciąg tekstowy, który będzie wyświetlany w przeglądarce. Aby to zrobić, należy umieścić \<% # i % > tagi, które są również używane w ASP.NET danych Powiązanie standardowe, wokół wyrażenia wiązania danych. Wyrażenia wiązania danych zawiera wyrażenie XPath i <xref:System.Xml.IXmlNamespaceResolver> obiekt do rozpoznania odwołania do przestrzeni nazw.  
  
 Dla każdego z listy kontrolek serwera ASP.NET takich jak <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DataGrid>, lub <xref:System.Web.UI.WebControls.Repeater>, `container` parametr powinien być `Container.DataItem`. Są wiązane względem strony, `container` parametr powinien być `Page`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string xPath, string format, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string xPath, string format, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Eval(System.Object,System.String,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, xPath As String, format As String, resolver As IXmlNamespaceResolver) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ xPath, System::String ^ format, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Xml.XPath.IXPathNavigable" /> Odwołanie do obiektu, który wyrażenie jest obliczane przed. Musi to być prawidłowym identyfikatorem obiektu w języku określonej strony.</param>
        <param name="xPath">Zapytanie XPath z <c>kontenera</c> do wartości właściwości do można umieścić we właściwości powiązanej kontrolki.</param>
        <param name="format">Ciąg formatu .NET Framework podobne do tych używanych przez <see cref="M:System.String.Format(System.String,System.Object)" />, który konwertuje <see cref="T:System.Xml.XPath.IXPathNavigable" /> obiektu (wynikiem obliczania wyrażenia wiązania danych) do <see cref="T:System.String" /> mogą być wyświetlane przez przeglądarki.</param>
        <param name="resolver">
          <see cref="T:System.Xml.IXmlNamespaceResolver" /> Obiekt używany do rozpoznania prefiksy przestrzeni nazw w wyrażeniu XPath.</param>
        <summary>Wynikiem wyrażenia XPath powiązanie danych w czasie wykonywania i formatuje wynik jako tekst, który będzie wyświetlany w przeglądarce wysyłającego żądanie, przy użyciu <see cref="T:System.Xml.IXmlNamespaceResolver" /> obiektu określonego do rozpoznania prefiksy przestrzeni nazw w wyrażeniu XPath.</summary>
        <returns>A <see cref="T:System.String" /> który wynikiem obliczania wyrażenia wiązania danych i konwersji na typ ciągu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.XPathBinder.Eval%2A> metody deklaratywnie, jeśli chcesz uprościć rzutowanie węzła XML na ciąg tekstowy, który będzie wyświetlany w przeglądarce. Aby to zrobić, należy umieścić \<% # i % > tagi, które są również używane w ASP.NET danych Powiązanie standardowe, wokół wyrażenia wiązania danych. Wyrażenia wiązania danych zawiera wyrażenie XPath i <xref:System.Xml.IXmlNamespaceResolver> obiekt do rozpoznania odwołania do przestrzeni nazw.  
  
 Dla każdego z listy kontrolek serwera ASP.NET takich jak <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DataGrid>, lub <xref:System.Web.UI.WebControls.Repeater>, `container` parametr powinien być `Container.DataItem`. Są wiązane względem strony, `container` parametr powinien być `Page`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Używa wyrażenia XPath powiązanie danych w czasie wykonywania, aby powrócić do listy węzłów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć przeciążone <xref:System.Web.UI.XPathBinder.Select%2A> metody deklaratywnie, jeśli chcesz uprościć proces pobierania zestawu węzłów przy użyciu kwerendy XPath. Aby to zrobić, należy umieścić \<% # i % > tagi, które są również używane w ASP.NET danych Powiązanie standardowe, wokół kwerendy XPath.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable Select (object container, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable Select(object container, string xPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Select(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Select (container As Object, xPath As String) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ Select(System::Object ^ container, System::String ^ xPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Xml.XPath.IXPathNavigable" /> Odwołanie do obiektu, który wyrażenie jest obliczane przed. Musi to być prawidłowym identyfikatorem obiektu w języku określonej strony.</param>
        <param name="xPath">Zapytanie XPath, które pobierają listę węzłów.</param>
        <summary>Używa wyrażenia XPath powiązanie danych w czasie wykonywania, aby powrócić do listy węzłów.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> Listy węzłów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29> metody deklaratywnie, jeśli chcesz uprościć proces pobierania zestawu węzłów przy użyciu kwerendy XPath. Aby to zrobić, należy umieścić \<% # i % > tagi, które są również używane w ASP.NET danych Powiązanie standardowe, wokół kwerendy XPath.  
  
 Dla każdego z listy kontrolek serwera ASP.NET takich jak <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DataGrid>, lub <xref:System.Web.UI.WebControls.Repeater>, `container` parametr powinien być `Container.DataItem`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.XmlDataSource> kontrolki z szablonem <xref:System.Web.UI.WebControls.Repeater> formantu, aby wyświetlić dane XML. W tym przykładzie ma dwie części:  
  
-   Strony formularzy sieci Web, który wyświetla dane XML.  
  
-   Plik XML, który zawiera dane.  
  
 Pierwsza część przykładzie powoduje wyświetlenie strony formularzy sieci Web wyświetlający dane XML dostępne za pośrednictwem <xref:System.Web.UI.WebControls.XmlDataSource> formantu. A <xref:System.Web.UI.WebControls.Repeater> formant używa uproszczony <xref:System.Web.UI.XPathBinder.Eval%28System.Object%2CSystem.String%29> składni metody można powiązać z elementami danych w zawartości XML dokumentu, który <xref:System.Web.UI.WebControls.XmlDataSource> reprezentuje. Używa <xref:System.Web.UI.XPathBinder.Select%28System.Object%2CSystem.String%29> metoda pobierania <xref:System.Collections.IEnumerable> listy i przypisz go jako późnym wiązaniem <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> właściwość <xref:System.Web.UI.WebControls.Repeater> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 Drugi przykład zawiera plik XML Order.xml, który jest używany jako źródło danych wyświetlanych na stronie formularzy sieci Web zdefiniowanych powyżej.  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
  <orders>  
    <order>  
      <customer id="12345" />  
      <customername>  
        <firstn>John</firstn>  
        <lastn>Doe</lastn>  
      </customername>  
      <transaction id="12345" />  
      <shipaddress>  
        <address1>1234 Tenth Avenue</address1>  
        <city>Bellevue</city>  
        <state>Washington</state>  
        <zip>98001</zip>  
      </shipaddress>  
      <summary>  
        <item dept="tools">screwdriver</item>  
        <item dept="tools">hammer</item>  
        <item dept="plumbing">fixture</item>  
      </summary>  
    </order>  
  </orders>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> Lub <paramref name="xpath" /> parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Obiekt określony przez <paramref name="container" /> nie jest <see cref="T:System.Xml.XPath.IXPathNavigable" />.</exception>
        <exception cref="T:System.InvalidOperationException">Bieżący węzeł z <see cref="T:System.Xml.XPath.XPathNodeIterator" /> nie ma skojarzonego węzła XML.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable Select (object container, string xPath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable Select(object container, string xPath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XPathBinder.Select(System.Object,System.String,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Select (container As Object, xPath As String, resolver As IXmlNamespaceResolver) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ Select(System::Object ^ container, System::String ^ xPath, System::Xml::IXmlNamespaceResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="xPath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Xml.XPath.IXPathNavigable" /> Odwołanie do obiektu, który wyrażenie jest obliczane przed. Musi to być prawidłowym identyfikatorem obiektu w języku określonej strony.</param>
        <param name="xPath">Zapytanie XPath, które pobierają listę węzłów.</param>
        <param name="resolver">
          <see cref="T:System.Xml.IXmlNamespaceResolver" /> Obiekt używany do rozpoznania prefiksy przestrzeni nazw w wyrażeniu XPath.</param>
        <summary>Używa wyrażenia XPath powiązanie danych w czasie wykonywania, aby powrócić do listy węzłów za pomocą <see cref="T:System.Xml.IXmlNamespaceResolver" /> obiektu określonego do rozpoznania prefiksy przestrzeni nazw w wyrażeniu XPath.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> Listy węzłów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.XPathBinder.Select%2A> metody deklaratywnie, jeśli chcesz uprościć proces pobierania zestawu węzłów przy użyciu kwerendy XPath. Aby to zrobić, należy umieścić \<% # i % > tagi, które są również używane w ASP.NET danych Powiązanie standardowe, wokół kwerendy XPath i <xref:System.Xml.IXmlNamespaceResolver> obiekt do rozpoznania odwołania do przestrzeni nazw.  
  
 Dla każdego z listy kontrolek serwera ASP.NET takich jak <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DataGrid>, lub <xref:System.Web.UI.WebControls.Repeater>, `container` parametr powinien być `Container.DataItem`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>