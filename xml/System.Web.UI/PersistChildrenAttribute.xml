<Type Name="PersistChildrenAttribute" FullName="System.Web.UI.PersistChildrenAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a4dcd5ccc6bf95bdbeb51faf4eb5383346a1a7c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69397277" /></Metadata><TypeSignature Language="C#" Value="public sealed class PersistChildrenAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PersistChildrenAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PersistChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PersistChildrenAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistChildrenAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type PersistChildrenAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje atrybut, który jest używany przez kontrolki serwera ASP.NET do wskazania w czasie projektowania, czy zagnieżdżona zawartość, która jest zawarta w formancie serwera, odpowiada kontrolkom lub właściwościom kontrolki serwer. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest używany w połączeniu z, <xref:System.Web.UI.ParseChildrenAttribute> aby określić sposób interpretowania zagnieżdżonej zawartości kontrolki. <xref:System.Web.UI.PersistChildrenAttribute> Jeśli <xref:System.Web.UI.PersistChildrenAttribute> jest `true` i <xref:System.Web.UI.ParseChildrenAttribute> ma ,zagnieżdżonazawartośćznajdującasięwkontrolceserwerASP.NETjestutrwalonajakokontrolki.`false` Jeśli <xref:System.Web.UI.PersistChildrenAttribute> jest `false` i <xref:System.Web.UI.ParseChildrenAttribute> jest ,zagnieżdżonazawartośćjestutrwalanajakowłaściwościkontrolkiserwer.`true` Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Przykład kodu w tej sekcji zawiera dwie części. Pierwszy przykład kodu demonstruje, jak ustawić metadane kontrolki niestandardowej, tak że w czasie projektowania jego zawartość zagnieżdżona jest zachowywana jako właściwości formantu. Drugi przykład kodu demonstruje, jak używać klas na stronie ASP.NET.  
  
 Poniższy przykład kodu demonstruje, jak zastosować ten <xref:System.Web.UI.PersistChildrenAttribute> atrybut, tak aby żadna z formantów zagnieżdżonych niestandardowa kontrolka serwera nie została utrwalona jako kontrolki zagnieżdżone. Niestandardowy formant serwera o nazwie `CollectionPropertyControl` <xref:System.Web.UI.PersistChildrenAttribute> ma atrybut `Employee` ustawiony na `false` tak, aby obiekty, które są dodawane są utrwalane jako elementy zagnieżdżone.  
  
 [!code-csharp[PersistChildrenAttribute_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/CS/persistchildren_1.cs#1)]
 [!code-vb[PersistChildrenAttribute_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/VB/persistchildren_1.vb#1)]  
  
 Poniższy przykład kodu ilustruje sposób używania `CollectionPropertyControl` klas i `Employee` na stronie ASP.NET.  
  
 [!code-aspx-csharp[PersistChildrenAttribute_Sample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/CS/persistchildren.aspx#3)]
 [!code-aspx-vb[PersistChildrenAttribute_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/VB/persistchildren.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Web.UI.ParseChildrenAttribute" />
    <related type="Article" href="~/docs/standard/attributes/index.md">Rozszerzanie metadanych za pomocą atrybutów</related>
    <related type="Article" href="https://msdn.microsoft.com/library/4881917b-628f-4689-b872-472e4f8a4e3a">Architektura czasu projektowania</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PersistChildrenAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PersistChildrenAttribute (bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PersistChildrenAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PersistChildrenAttribute(bool persist);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PersistChildrenAttribute : bool -&gt; System.Web.UI.PersistChildrenAttribute" Usage="new System.Web.UI.PersistChildrenAttribute persist" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persist"><see langword="true" />Aby zachować zagnieżdżoną zawartość jako kontrolki zagnieżdżone; w przeciwnym razie. <see langword="false" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.PersistChildrenAttribute" /> klasy przy użyciu wartości logicznej wskazującej, czy utrwalać zawartość zagnieżdżoną jako kontrolki zagnieżdżone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.PersistChildrenAttribute> jak zastosować atrybut dla niestandardowej kontrolki serwera o nazwie. `CollectionPropertyControl`  
  
 Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.PersistChildrenAttribute> klasy.  
  
 [!code-csharp[PersistChildrenAttribute_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/CS/persistchildren_1.cs#2)]
 [!code-vb[PersistChildrenAttribute_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/VB/persistchildren_1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2008/4yf3whkx(v=vs.90)">Programowanie kontrolek niestandardowych</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PersistChildrenAttribute (bool persist, bool usesCustomPersistence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool persist, bool usesCustomPersistence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PersistChildrenAttribute.#ctor(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (persist As Boolean, usesCustomPersistence As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PersistChildrenAttribute(bool persist, bool usesCustomPersistence);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PersistChildrenAttribute : bool * bool -&gt; System.Web.UI.PersistChildrenAttribute" Usage="new System.Web.UI.PersistChildrenAttribute (persist, usesCustomPersistence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="persist" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="usesCustomPersistence" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="persist"><see langword="true" />Aby zachować zagnieżdżoną zawartość jako kontrolki zagnieżdżone; w przeciwnym razie. <see langword="false" /></param>
        <param name="usesCustomPersistence"><see langword="true" />Aby użyć niestandardowej trwałości; w przeciwnym razie. <see langword="false" /></param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.PersistChildrenAttribute" /> klasy przy użyciu dwóch wartości logicznych. Jeden wskazuje, czy utrwalać zawartość zagnieżdżoną jako kontrolki zagnieżdżone, a drugie wskazuje, czy używać niestandardowej metody trwałości.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.PersistChildrenAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.PersistChildrenAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.PersistChildrenAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As PersistChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::PersistChildrenAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Web.UI.PersistChildrenAttribute" Usage="System.Web.UI.PersistChildrenAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PersistChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje domyślny stan atrybutu. <see cref="F:System.Web.UI.PersistChildrenAttribute.Default" /> Pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Web.UI.PersistChildrenAttribute.Default> Domyślna`Yes`pola wskazuje, że zawartość zagnieżdżona jest utrwalana w czasie projektowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.PersistChildrenAttribute.Yes" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PersistChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="persistChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania z bieżącym obiektem.</param>
        <summary>Określa, czy określony obiekt jest równy bieżącemu obiektowi.</summary>
        <returns><see langword="true" />Jeśli <paramref name="obj" /> jest równe bieżącemu obiektowi; w przeciwnym <see langword="false" />razie,.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PersistChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="persistChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Służy jako funkcja skrótu dla <see cref="T:System.Web.UI.PersistChildrenAttribute" /> klasy.</summary>
        <returns>Kod skrótu dla <see cref="T:System.Web.UI.PersistChildrenAttribute" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PersistChildrenAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="persistChildrenAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy wartość bieżącego wystąpienia <see cref="T:System.Web.UI.PersistChildrenAttribute" /> klasy jest wartością domyślną klasy pochodnej.</summary>
        <returns><see langword="true" />Jeśli wartość bieżącego wystąpienia <see cref="T:System.Web.UI.PersistChildrenAttribute" /> jest wystąpieniem domyślnym; w przeciwnym razie,. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu ilustruje sposób użycia <xref:System.Web.UI.PersistChildrenAttribute.IsDefaultAttribute%2A> metody w celu ustalenia, czy bieżące wystąpienie <xref:System.Web.UI.PersistChildrenAttribute> klasy jest takie samo jak wystąpienie domyślne.  
  
 Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.PersistChildrenAttribute> klasy.  
  
 [!code-aspx-csharp[PersistChildrenAttribute_Sample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/CS/persistchildren.aspx#3)]
 [!code-aspx-vb[PersistChildrenAttribute_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/VB/persistchildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.PersistChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.PersistChildrenAttribute No;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.PersistChildrenAttribute No" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.PersistChildrenAttribute.No" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly No As PersistChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::PersistChildrenAttribute ^ No;" />
      <MemberSignature Language="F#" Value=" staticval mutable No : System.Web.UI.PersistChildrenAttribute" Usage="System.Web.UI.PersistChildrenAttribute.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PersistChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, że zawartość zagnieżdżona nie powinna być utrwalana jako kontrolki zagnieżdżone w czasie projektowania. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PersistChildrenAttribute.No> Jeśli pole jest wywoływane, wewnętrzna zawartość kontrolki serwera jest utrwalana jako właściwości, a nie jako serwer.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.PersistChildrenAttribute.Yes" />
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public bool Persist { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Persist" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PersistChildrenAttribute.Persist" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Persist As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Persist { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Persist : bool" Usage="System.Web.UI.PersistChildrenAttribute.Persist" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy zagnieżdżona zawartość jest utrwalana jako kontrolki zagnieżdżone w czasie projektowania.</summary>
        <value><see langword="true" />Aby zachować zagnieżdżoną zawartość jako kontrolki zagnieżdżone; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje, jak uzyskać wartość <xref:System.Web.UI.PersistChildrenAttribute.Persist%2A> właściwości.  
  
 Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.PersistChildrenAttribute> klasy.  
  
 [!code-aspx-csharp[PersistChildrenAttribute_Sample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/CS/persistchildren.aspx#3)]
 [!code-aspx-vb[PersistChildrenAttribute_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/VB/persistchildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.PersistChildrenAttribute.UsesCustomPersistence" />
        <altmember cref="M:System.Web.UI.PersistChildrenAttribute.IsDefaultAttribute" />
      </Docs>
    </Member>
    <Member MemberName="UsesCustomPersistence">
      <MemberSignature Language="C#" Value="public bool UsesCustomPersistence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesCustomPersistence" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PersistChildrenAttribute.UsesCustomPersistence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsesCustomPersistence As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesCustomPersistence { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesCustomPersistence : bool" Usage="System.Web.UI.PersistChildrenAttribute.UsesCustomPersistence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant serwera zapewnia niestandardową trwałość formantów zagnieżdżonych w czasie projektowania.</summary>
        <value><see langword="true" />Aby zapewnić niestandardową trwałość zawartości zagnieżdżonej; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby skonfigurować zawartość zagnieżdżoną dla niestandardowej trwałości, użyj <xref:System.Web.UI.PersistChildrenAttribute> przeciążenia, które `usesCustomPersistence` pobiera parametr.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak uzyskać wartość <xref:System.Web.UI.PersistChildrenAttribute.UsesCustomPersistence%2A> właściwości.  
  
 Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.PersistChildrenAttribute> klasy.  
  
 [!code-aspx-csharp[PersistChildrenAttribute_Sample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/CS/persistchildren.aspx#3)]
 [!code-aspx-vb[PersistChildrenAttribute_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PersistChildrenAttribute_Sample/VB/persistchildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.PersistChildrenAttribute.#ctor(System.Boolean,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/22bdc64b-ab7e-4da7-80f7-bbad3ea39015">Pisanie własnych kontrolek</related>
        <related type="Article" href="https://msdn.microsoft.com/library/ac8e85a9-422e-49b8-98c0-5ade5853ea7c">Implementowanie niestandardowej trwałości</related>
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.PersistChildrenAttribute Yes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.PersistChildrenAttribute Yes" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.PersistChildrenAttribute.Yes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Yes As PersistChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::PersistChildrenAttribute ^ Yes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Yes : System.Web.UI.PersistChildrenAttribute" Usage="System.Web.UI.PersistChildrenAttribute.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PersistChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, że zawartość zagnieżdżona powinna być trwała jako kontrolki w czasie projektowania. <see cref="F:System.Web.UI.PersistChildrenAttribute.Yes" /> Pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PersistChildrenAttribute.Yes> Jeśli pole jest wywoływane, zawartość zagnieżdżona jest utrwalana jako kontrolki.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.PersistChildrenAttribute.No" />
      </Docs>
    </Member>
  </Members>
</Type>
