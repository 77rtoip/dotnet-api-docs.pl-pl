<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b17fef727a6f0f1ce8e4360cebe26d6b35e5a86e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378565" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy jako klasa podstawowa dla wszystkich danych źródła Widok klas, które definiują możliwości kontroli źródła danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET obsługuje architekturę wiązania danych, która umożliwia kontrolki serwera sieci Web można powiązać z danymi w spójny sposób. Formanty serwera sieci Web, które należy powiązać dane są określane jako formanty powiązane z danymi i klasy, które ułatwiają, że powiązanie są nazywane kontrolki źródła danych. Kontrolki źródła danych może reprezentować dowolnego źródła danych: relacyjnej bazy danych, pliku, strumienia, obiektu biznesowego i tak dalej. Źródło danych określa danych obecnych w spójny sposób formanty powiązane z danymi, niezależnie od tego, czy źródło lub format danych źródłowych.  
  
 Użyj kontrolki źródła danych, które są dostarczane z programem ASP.NET, w tym <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, i <xref:System.Web.UI.WebControls.XmlDataSource>, aby wykonać większość zadań związanych z projektowaniem sieci Web. Użyj podstawy <xref:System.Web.UI.DataSourceControl> i <xref:System.Web.UI.DataSourceView> klasy podczas implementowania niestandardowych danych kontroli źródła.  
  
 Można potraktować kontroli źródła danych jako kombinacja <xref:System.Web.UI.IDataSource> obiekt i jego skojarzone listy danych o nazwie widoki źródła danych. Każda lista danych jest reprezentowana przez <xref:System.Web.UI.DataSourceView> obiektu. <xref:System.Web.UI.DataSourceView> Klasa jest klasą bazową dla wszystkich widoków źródła danych lub listy danych skojarzonych z kontrolki źródła danych. Widoki źródła danych Zdefiniuj możliwości kontroli źródła danych. Ponieważ źródłowy magazyn danych zawiera co najmniej jeden wykaz danych, kontroli źródła danych jest zawsze skojarzony z co najmniej jeden widok źródła danych o podanej nazwie. Korzysta z kontroli źródła danych <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> metodę, aby można było wyliczyć dane źródłowe widoków obecnie skojarzony z kontroli źródła danych i <xref:System.Web.UI.DataSourceControl.GetView%2A> metoda pobierania wystąpienia widoku źródła danych określonego przez nazwę.  
  
 Wszystkie <xref:System.Web.UI.DataSourceView> obiekty obsługują pobieranie danych z podstawowym źródłem danych za pomocą <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metody. Wszystkie widoki opcjonalnie obsługiwać zestaw podstawowe operacje, w tym operacje takie jak <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, i <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. Kontrolki powiązane z danymi odnajdywania wyświetlić możliwości kontroli źródła danych, przywracając odpowiedniego źródła danych przy użyciu <xref:System.Web.UI.DataSourceControl.GetView%2A> i <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> metod i badając widoku w czasie projektowania lub w czasie wykonywania.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak rozszerzyć <xref:System.Web.UI.DataSourceView> klasę, aby utworzyć klasę silnie typizowanego widoku do kontroli źródła danych. `CsVDataSourceView` Klasa definiuje możliwości `CsvDataSource` danych kontroli źródła i udostępnia implementację dla formantów powiązanych z danymi do danych przechowywanych w plikach plik wartości rozdzielanych przecinkami (CSV). Aby uzyskać więcej informacji na temat `CsvDataSource` kontroli źródła danych zobacz <xref:System.Web.UI.DataSourceControl> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Kontrola źródła danych, która <see cref="T:System.Web.UI.DataSourceView" /> jest skojarzony.</param>
        <param name="viewName">Nazwa <see cref="T:System.Web.UI.DataSourceView" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataSourceView" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> jest <see langword="null" />.  \- lub - <paramref name="viewName" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiekt obsługuje <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operacji.</summary>
        <value>
          <see langword="true" /> Jeśli operacja jest obsługiwana; w przeciwnym razie <see langword="false" />. Klasa podstawowa implementacja zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanDelete%2A> Właściwości przedstawiają dane nie tylko możliwości kontroli źródła danych, ale także czy aktualnie należy wykonać operację. Na przykład, nawet jeśli źródło danych wyświetlić obsługuje <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operacji w ogólne, jeśli nie ustawiono wymaganej właściwości lub niektórych innych danych, <xref:System.Web.UI.DataSourceView.CanDelete%2A> zwraca `false`, ponieważ operacja usuwania nie powiedzie się.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.DataSourceView.CanDelete%2A> właściwości i <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metodę w klasie, rozszerzający <xref:System.Web.UI.DataSourceView> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandName">Nazwa polecenia.</param>
        <summary>Określa, czy określone polecenie może być wykonywane.</summary>
        <returns>
          <see langword="true" /> Jeśli polecenie może być wykonywane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiekt obsługuje <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> operacji.</summary>
        <value>
          <see langword="true" /> Jeśli operacja jest obsługiwana; w przeciwnym razie <see langword="false" />. Klasa podstawowa implementacja zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanInsert%2A> Właściwości przedstawiają dane nie tylko możliwości kontroli źródła danych, ale także czy aktualnie należy wykonać operację. Na przykład, nawet jeśli kontroli źródła danych obsługuje <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operacji, jeśli wymaganą Wstaw polecenie lub pewne inne dane nie jest ustawiona, <xref:System.Web.UI.DataSourceView.CanInsert%2A> zwraca `false`, ponieważ operacja insert nie powiedzie się.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.DataSourceView.CanInsert%2A> właściwości i <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> metodę w klasie, rozszerzający <xref:System.Web.UI.DataSourceView> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiekt obsługuje stronicowania przy użyciu danych pobranych przez <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> metody.</summary>
        <value>
          <see langword="true" /> Jeśli operacja jest obsługiwana; w przeciwnym razie <see langword="false" />. Klasa podstawowa implementacja zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki powiązania danych mogą żądać stronicowania, dodając <xref:System.Web.UI.DataSourceCapabilities.Page> do <xref:System.Web.UI.DataSourceSelectArguments> obiekt przekazywany do <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metody. Jeśli powiązane z danymi kontrolki stronicowania, ale <xref:System.Web.UI.DataSourceView.CanPage%2A> zwraca `false`, widok źródła danych zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiekt obsługuje pobieranie całkowitą liczbę wierszy danych, a nie dane.</summary>
        <value>
          <see langword="true" /> Jeśli operacja jest obsługiwana; w przeciwnym razie <see langword="false" />. Klasa podstawowa implementacja zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki powiązane z danymi mogą żądać całkowitej liczby wierszy, dodając <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> do <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType> obiekt przekazany do <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metody. Jeśli powiązane z danymi kontrolki całkowitej liczby wierszy, ale <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> zwraca `false`, widok źródła danych zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiekt obsługuje widoku posortowane w źródle danych.</summary>
        <value>
          <see langword="true" /> Jeśli operacja jest obsługiwana; w przeciwnym razie <see langword="false" />. Domyślna implementacja zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki powiązania danych mogą żądać sortowanie, dodając <xref:System.Web.UI.DataSourceCapabilities.Sort> do <xref:System.Web.UI.DataSourceSelectArguments> obiekt przekazywany do <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metody. Jeśli z danymi kontroli żądań sortowania, ale <xref:System.Web.UI.DataSourceView.CanSort%2A> zwraca `false`, widok źródła danych zgłasza wyjątek.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.DataSourceView.CanSort%2A> właściwości w klasie, rozszerzający <xref:System.Web.UI.DataSourceView> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiekt obsługuje <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> operacji.</summary>
        <value>
          <see langword="true" /> Jeśli operacja jest obsługiwana; w przeciwnym razie <see langword="false" />. Domyślna implementacja zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanUpdate%2A> Właściwości przedstawiają dane nie tylko możliwości kontroli źródła danych, ale także czy aktualnie należy wykonać operację. Na przykład, nawet jeśli kontrolki powiązania danych obsługuje <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operacji, jeśli polecenie wymaganą aktualizację lub pewne inne dane nie jest ustawiona, <xref:System.Web.UI.DataSourceView.CanUpdate%2A> zwraca `false`, ponieważ operacja aktualizacji nie powiedzie się.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.DataSourceView.CanUpdate%2A> właściwości i <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> metodę w klasie, rozszerzający <xref:System.Web.UI.DataSourceView> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie widoku źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiana na widok źródła danych może być z powodu zmiany w wartości właściwości lub do zmiany danych z powodu operacji danych z zastosowaniem widoku źródła danych.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [NIB: Korzystanie z zdarzenia](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> Obiektu lub wiersza kluczy, które mają zostać usunięte przez <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operacji.</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, które reprezentują elementy danych i ich wartości początkowe.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegata, która jest używana do powiadamiania kontrolki powiązania danych, po zakończeniu operacji asynchronicznej.</param>
        <summary>Wykonuje operację usuwania asynchronicznego na liście danych, która <see cref="T:System.Web.UI.DataSourceView" /> reprezentuje obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Delete%2A> Metoda jest interfejs usunięcia danych asynchronicznych dla wszystkich obiektów widoku źródła danych. <xref:System.Web.UI.DataSourceView.Delete%2A> Wywołania metody <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> przy użyciu dowolnej metody `keys` i `oldValues` podać wartości parametrów. `callback` Parametr jest delegata, który przekazuje formantu powiązanego z danymi ze źródłem danych widoku, który jest używana do powiadamiania powiązane z danymi decyduje o <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operacja została ukończona. Metoda używa parametrów <xref:System.Web.UI.DataSourceViewOperationCallback> pełnomocnika, aby zwrócić liczbę uwzględnionych rekordów i wszystkie <xref:System.Exception> wyjątku zgłoszonego przez <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> Dostarczony <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę delegatów obsługi zdarzeń dla widoku źródła danych.</summary>
        <value>Lista delegatów obsługi zdarzeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest typu <xref:System.ComponentModel.EventHandlerList>, który używa algorytmu wyszukiwania liniowego można znaleźć pozycji na liście obiektów delegowanych. Algorytm wyszukiwania liniowego jest nieefektywne podczas pracy z dużą liczbę wpisów. W związku z tym jeśli masz dużą listę znajdowania wpisów z tą właściwością będzie zajmować dużo czasu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wykonuje określone polecenie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">Nazwa polecenia.</param>
        <param name="keys">Słownik obiektu kluczy lub kluczy wiersza do działania na.</param>
        <param name="values">Słownik zawierający pary nazwa/wartość, które reprezentują elementy danych i ich wartości.</param>
        <summary>Wykonuje określone polecenie.</summary>
        <returns>Liczba elementów, które miały wpływ operacji.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="commandName">Nazwa polecenia.</param>
        <param name="keys">Słownik obiektu kluczy lub kluczy wiersza do działania na.</param>
        <param name="values">Słownik zawierający pary nazwa/wartość, które reprezentują elementy danych i ich wartości.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> obiektu.</param>
        <summary>Wykonuje określone polecenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie zwraca wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> Obiektu lub wiersza kluczy, które mają zostać usunięte przez <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operacji.</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, które reprezentują elementy danych i ich wartości początkowe.</param>
        <summary>Wykonuje operację usuwania w wykazie danych, która <see cref="T:System.Web.UI.DataSourceView" /> reprezentuje obiekt.</summary>
        <returns>Liczba elementów, które zostały usunięte z źródłowy magazyn danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi można określić, czy <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operacja jest obsługiwana przez formant źródła danych, przywracając <xref:System.Web.UI.DataSourceView> przy użyciu <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> — metoda i sprawdzanie <xref:System.Web.UI.DataSourceView.CanDelete%2A> właściwości.  
  
 `keys` Parametr reprezentuje klucze obiektu lub wiersza danych do usunięcia. Dla źródeł danych, które reprezentują w relacyjnej bazie danych, takich jak <xref:System.Web.UI.WebControls.SqlDataSource> kontroli, `keys` parametr to kolekcja kluczy podstawowych bazy danych. W innych scenariuszach `keys` parametru jest kolekcją par nazwa/wartość i służy do filtrowania listę danych. Wszystkie dane pasujące pary nazwa/wartość zostaną usunięte.  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView> Klasy Domyślna implementacja jest throw <xref:System.NotSupportedException> wyjątku. Po rozszerzeniu <xref:System.Web.UI.DataSourceView> klasy, Zastąp <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metodę, jeśli klasa obsługuje usunięcia z źródłowy magazyn danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób klasę, która rozszerza <xref:System.Web.UI.DataSourceView> klasy można zastąpić <xref:System.Web.UI.DataSourceView.CanDelete%2A> właściwości i <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> Operacja nie jest obsługiwana przez <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, używane podczas operacji wstawiania.</param>
        <summary>Wykonuje operację wstawiania w wykazie danych, która <see cref="T:System.Web.UI.DataSourceView" /> reprezentuje obiekt.</summary>
        <returns>Liczba elementów, które zostały wstawione do źródłowy magazyn danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi można określić, czy <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operacja jest obsługiwana przez formant źródła danych, przywracając <xref:System.Web.UI.DataSourceView> przy użyciu <xref:System.Web.UI.DataSourceControl.GetView%2A> — metoda i sprawdzanie <xref:System.Web.UI.DataSourceView.CanInsert%2A> właściwości.  
  
 `values` Parametr to zestaw par nazw i wartości reprezentujący kolumn danych lub pól i wartości do wstawienia.  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView> Klasy Domyślna implementacja jest throw <xref:System.NotSupportedException> wyjątku. Po rozszerzeniu <xref:System.Web.UI.DataSourceView> klasy, Zastąp <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> metodę, jeśli klasa obsługuje wstawiania do źródłowy magazyn danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób klasę, która rozszerza <xref:System.Web.UI.DataSourceView> klasy można zastąpić <xref:System.Web.UI.DataSourceView.CanInsert%2A> właściwości i <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> Operacja nie jest obsługiwana przez <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> używany do żądania operacji na danych poza pobierania danych podstawowych.</param>
        <summary>Pobiera listę danych z źródłowy magazyn danych.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> Wykaz danych z podstawowej magazynu danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Można pobrać danych z magazynu danych podstawowych i przywrócić go jako wywoływana jest metoda <xref:System.Collections.IEnumerable> obiektu. Wszystkie kontrolki źródła danych obsługuje pobieranie danych z ich źródłowy magazyn danych, nawet jeśli innych operacji, takich jak wstawianie i sortowanie nie są obsługiwane. Ponieważ formantu powiązanego z danymi można zażądać listy danych w dowolnym momencie w <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenia lub <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> wywołanie metody pobierania danych musi zostać wykonana na żądanie.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metodę w klasie, rozszerzający <xref:System.Web.UI.DataSourceView> klasy. `CsvDataSourceView` Otwiera plik wartości rozdzielanych przecinkami (CSV), analizuje ona wiersz po wierszu i tworzy <xref:System.Data.DataTable> obiektu i <xref:System.Data.DataView> obiektu do przechowywania danych w pamięci. Na koniec jest stosowany wyrażenie sortowania, jeśli jest ona podawana przez <xref:System.Web.UI.DataSourceSelectArguments> obiektu, a <xref:System.Data.DataView> obiekt jest zwracany jako <xref:System.Collections.IEnumerable> wystąpienia. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> Obiektu lub wiersza kluczy zaktualizowania za pomocą operacji aktualizacji.</param>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, które reprezentują elementy danych i ich nowych wartości.</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, które reprezentują elementy danych i ich wartości początkowe.</param>
        <summary>Wykonuje operację aktualizacji na liście danych, która <see cref="T:System.Web.UI.DataSourceView" /> reprezentuje obiekt.</summary>
        <returns>Liczba elementów, które zostały zaktualizowane w źródłowy magazyn danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi można określić, czy <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operacja jest obsługiwana przez formant źródła danych za pomocą <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> metoda pobierania <xref:System.Web.UI.DataSourceView> obiekt i wartości <xref:System.Web.UI.DataSourceView.CanUpdate%2A> właściwości.  
  
 `keys` Parametr reprezentuje klucze obiektu lub wiersza danych do zaktualizowania. Dla źródeł danych, które reprezentują w relacyjnej bazie danych, takich jak <xref:System.Web.UI.WebControls.SqlDataSource> kontroli, `keys` parametr to kolekcja kluczy podstawowych bazy danych. W innych scenariuszach `keys` parametru jest kolekcją par nazwa/wartość i służy do filtrowania listę danych. Wszystkie dane pasujące pary nazwa/wartość jest aktualizowana na wartości znajdujące się w `values` parametru, który jest zestaw par nazwa/wartość, który reprezentuje nowe wartości dla istniejących pól lub kolumn.  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView> Klasy Domyślna implementacja jest throw <xref:System.NotSupportedException> wyjątku. Po rozszerzeniu <xref:System.Web.UI.DataSourceView> klasy, Zastąp <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> metodę, jeśli klasa obsługuje aktualizowanie danych w podstawowej magazynu danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób klasę, która rozszerza <xref:System.Web.UI.DataSourceView> klasy można zastąpić <xref:System.Web.UI.DataSourceView.CanUpdate%2A> właściwości i <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> metody. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> Operacja nie jest obsługiwana przez <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, używane podczas operacji wstawiania.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegata, która jest używana do powiadamiania kontrolki powiązania danych, po zakończeniu operacji asynchronicznej.</param>
        <summary>Wykonuje operację wstawiania asynchronicznego na liście danych, która <see cref="T:System.Web.UI.DataSourceView" /> reprezentuje obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Insert%2A> Metoda jest interfejs wstawiania danych asynchronicznych dla wszystkich obiektów widoku źródła danych. <xref:System.Web.UI.DataSourceView.Insert%2A> Wywołania metody <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> przy użyciu dowolnej metody `values` dostarczony. `callback` Parametr jest delegata, który przekazuje formantu powiązanego z danymi ze źródłem danych widoku, który jest używana do powiadamiania powiązane z danymi decyduje o <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operacja została ukończona. Metoda używa parametrów <xref:System.Web.UI.DataSourceViewOperationCallback> pełnomocnika, aby zwrócić liczbę uwzględnionych rekordów i wszystkie <xref:System.Exception> wyjątku zgłoszonego przez <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> wywołania metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> Dostarczony <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę widoku źródła danych.</summary>
        <value>Nazwa <see cref="T:System.Web.UI.DataSourceView" />, jeśli istnieje. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> Metody powiadamia formantu powiązanego z danymi, że źródła danych został zmieniony i że formant powinien ponownie powiązać i wykonać niezbędną pracę. Zazwyczaj <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> metoda jest wywoływana, gdy zmieniono właściwość widoku źródła danych.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> Metoda umożliwia również klas pochodnych do obsługi zdarzenia bez dołączanie delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> w klasie pochodnej, należy wywołać klasy podstawowej <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> metody, które zarejestrowane delegatów odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Jeden z <see cref="T:System.Web.UI.DataSourceCapabilities" /> wartości, które jest porównywana z funkcji, które obsługuje widoku.</param>
        <summary>Wywoływane przez <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> metody do porównania możliwości żądany <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operację z tymi, które obsługuje widoku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A> Metoda jest używana przez widoku źródła danych do zbadania wszystkich możliwości wymaganych przez formant powiązany z danymi reprezentowany przez <xref:System.Web.UI.DataSourceSelectArguments> obiekt przekazywany do <xref:System.Web.UI.DataSourceView.Select%2A> — metoda i porównaj go do funkcji obsługiwanych przez dane Widok źródła.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Widok źródła danych nie obsługuje funkcji źródła danych określona.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> używany do żądania operacji na danych poza pobierania danych podstawowych.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> delegata, która jest używana do powiadamiania kontrolki powiązania danych, po zakończeniu operacji asynchronicznej.</param>
        <summary>Asynchronicznie pobiera listę danych z źródłowy magazyn danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Select%2A> Metoda jest interfejs pobierania danych asynchronicznych dla wszystkich obiektów widoku źródła danych. <xref:System.Web.UI.DataSourceView.Select%2A> Wywołania metody <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> jest metoda żadnego <xref:System.Web.UI.DataSourceSelectArguments> dostarczony. `callback` Parametr jest delegata, który przekazuje formantu powiązanego z danymi ze źródłem danych widoku, który jest używana do powiadamiania powiązane z danymi decyduje o <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> operacja została ukończona. Dane zwrócone przez <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> wywołanie jest zwracany w parametrze <xref:System.Web.UI.DataSourceViewSelectCallback> delegowanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> Dostarczony <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> Obiektu lub wiersza kluczy zaktualizowania za pomocą operacji aktualizacji.</param>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, które reprezentują elementy danych i ich nowych wartości.</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" /> Par nazwa/wartość, które reprezentują elementy danych i ich wartości początkowe.</param>
        <param name="callback">A <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> delegata, która jest używana do powiadamiania kontrolki powiązania danych, po zakończeniu operacji asynchronicznej.</param>
        <summary>Wykonuje operację asynchroniczną aktualizacji na liście danych, która <see cref="T:System.Web.UI.DataSourceView" /> reprezentuje obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Update%2A> Metoda jest interfejs modyfikacji danych asynchronicznych dla wszystkich obiektów widoku źródła danych. <xref:System.Web.UI.DataSourceView.Update%2A> Wywołania metody <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> przy użyciu dowolnej metody `keys`, `values`, i `oldValues` podać wartości parametrów. `callback` Parametr jest delegata, który przekazuje formantu powiązanego z danymi ze źródłem danych widoku, który jest używana do powiadamiania powiązane z danymi decyduje o <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operacja została ukończona. Metoda używa parametrów <xref:System.Web.UI.DataSourceViewOperationCallback> pełnomocnika, aby zwrócić liczbę uwzględnionych rekordów i wszystkie <xref:System.Exception> wyjątku zgłoszonego przez <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> wywołania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> Dostarczony <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>