<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="562f1798576374b3a4a550c97d0b32d3233247de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69388796" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy jako klasa bazowa dla wszystkich klas widoków źródła danych, które definiują możliwości kontroli źródła danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET obsługuje architekturę powiązania danych, która umożliwia kontrolom serwera sieci Web powiązanie z danymi w spójny sposób. Kontrolki serwera sieci Web, które wiążą się z danymi, są nazywane kontrolkami związanymi z danymi, a klasy, które ułatwiają to powiązanie, są nazywane kontrolkami źródła danych. Kontrolki źródła danych mogą reprezentować dowolne źródło danych: relacyjną bazę danych, plik, strumień, obiekt biznesowy itd. Kontrolki źródła danych przedstawiają dane w spójny sposób z kontrolkami związanymi z danymi, niezależnie od źródła lub formatu danych źródłowych.  
  
 Do wykonywania większości zadań związanych z programowaniem w sieci Web służą <xref:System.Web.UI.WebControls.SqlDataSource>formanty <xref:System.Web.UI.WebControls.AccessDataSource>źródła danych <xref:System.Web.UI.WebControls.XmlDataSource>dostarczane z ASP.NET, w tym, i. Klasy podstawowe <xref:System.Web.UI.DataSourceControl> i <xref:System.Web.UI.DataSourceView> są używane, gdy chcesz zaimplementować własną niestandardową kontrolkę źródła danych.  
  
 Kontrolkę źródła danych można traktować jako kombinację <xref:System.Web.UI.IDataSource> obiektu i skojarzonych z nim list danych, nazywanych widokami źródła danych. Każda lista danych jest reprezentowana przez <xref:System.Web.UI.DataSourceView> obiekt. <xref:System.Web.UI.DataSourceView> Klasa jest klasą bazową dla wszystkich widoków źródła danych lub list danych skojarzonych z kontrolkami źródła danych. Widoki źródła danych definiują możliwości kontroli źródła danych. Ponieważ podstawowy magazyn danych zawiera co najmniej jedną listę danych, kontrolka źródła danych jest zawsze skojarzona z co najmniej jednym z nazwanymi widokami źródła danych. Kontrola źródła danych używa <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> metody, aby wyliczyć widoki źródła danych aktualnie skojarzone z kontrolką źródła danych <xref:System.Web.UI.DataSourceControl.GetView%2A> i metodę pobierania określonego wystąpienia widoku źródła danych według nazwy.  
  
 Wszystkie <xref:System.Web.UI.DataSourceView> obiekty obsługują pobieranie danych z bazowego źródła danych <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> przy użyciu metody. Wszystkie widoki opcjonalnie obsługują podstawowy zestaw operacji, w tym operacje, takie jak <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>i <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. Formant powiązany z danymi może odnajdywać możliwości kontroli źródła danych, pobierając skojarzony widok źródła danych przy użyciu <xref:System.Web.UI.DataSourceControl.GetView%2A> metod i <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> i wykonując zapytania o widok w czasie projektowania lub czasie wykonywania.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak zwiększyć klasę, <xref:System.Web.UI.DataSourceView> aby utworzyć klasę widoku o jednoznacznie określonym typie dla kontrolki źródła danych. Klasa definiuje możliwości `CsvDataSource` kontroli źródła danych i zapewnia implementację formantów związanych z danymi, aby używać danych przechowywanych w plikach z wartościami rozdzielanymi przecinkami (CSV). `CsVDataSourceView` Aby uzyskać więcej informacji na `CsvDataSource` temat kontroli źródła danych, <xref:System.Web.UI.DataSourceControl> zobacz Klasa.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Kontrolka źródła danych, z <see cref="T:System.Web.UI.DataSourceView" /> którą jest skojarzona.</param>
        <param name="viewName">Nazwa <see cref="T:System.Web.UI.DataSourceView" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataSourceView" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="owner" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="viewName" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiektem obsługuje <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operację.</summary>
        <value><see langword="true" />Jeśli operacja jest obsługiwana; w przeciwnym razie. <see langword="false" /> Implementacja klasy bazowej zwraca wartość <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanDelete%2A> Właściwość odzwierciedla nie tylko możliwość kontroli źródła danych, ale również to, czy jest ona odpowiednia do wykonania operacji. Na przykład, chociaż widok źródła danych obsługuje <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operację ogólnie, jeśli wymagana właściwość lub inne dane nie są ustawione <xref:System.Web.UI.DataSourceView.CanDelete%2A> , właściwość zwraca `false`, ponieważ operacja usuwania nie powiedzie się.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.DataSourceView.CanDelete%2A> jak zastąpić właściwość <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> i metodę w klasie, która rozszerza <xref:System.Web.UI.DataSourceView> klasę. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">Nazwa polecenia.</param>
        <summary>Określa, czy można wykonać określone polecenie.</summary>
        <returns><see langword="true" />Jeśli polecenie można wykonać; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiektem obsługuje <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> operację.</summary>
        <value><see langword="true" />Jeśli operacja jest obsługiwana; w przeciwnym razie. <see langword="false" /> Implementacja klasy bazowej zwraca wartość <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanInsert%2A> Właściwość odzwierciedla nie tylko możliwość kontroli źródła danych, ale również to, czy jest ona odpowiednia do wykonania operacji. Na przykład mimo że formant źródła danych obsługuje <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operację, jeśli wymagane polecenie INSERT lub inne dane nie są ustawione <xref:System.Web.UI.DataSourceView.CanInsert%2A> , właściwość zwraca `false`, ponieważ operacja wstawiania nie powiedzie się.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.DataSourceView.CanInsert%2A> jak zastąpić właściwość <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> i metodę w klasie, która rozszerza <xref:System.Web.UI.DataSourceView> klasę. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiektem obsługuje stronicowanie przez dane pobierane przez <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> metodę.</summary>
        <value><see langword="true" />Jeśli operacja jest obsługiwana; w przeciwnym razie. <see langword="false" /> Implementacja klasy bazowej zwraca wartość <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant powiązany z danymi może zażądać stronicowania, dodając <xref:System.Web.UI.DataSourceCapabilities.Page> pole <xref:System.Web.UI.DataSourceSelectArguments> do obiektu przesłanego do <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metody. Jeśli formant powiązany z danymi żąda stronicowania, ale <xref:System.Web.UI.DataSourceView.CanPage%2A> Właściwość zwraca `false`, widok źródła danych zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiektem obsługuje pobieranie łącznej liczby wierszy danych zamiast danych.</summary>
        <value><see langword="true" />Jeśli operacja jest obsługiwana; w przeciwnym razie. <see langword="false" /> Implementacja klasy bazowej zwraca wartość <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant powiązany z danymi może zażądać liczby wierszy łącznie przez dodanie <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> pola <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType> do obiektu przekazaną do <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metody. Jeśli formant powiązany z danymi żąda liczby wierszy łącznie, ale <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> Właściwość zwraca `false`, widok źródła danych zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiektem obsługuje widok posortowany na źródłowym źródle danych.</summary>
        <value><see langword="true" />Jeśli operacja jest obsługiwana; w przeciwnym razie. <see langword="false" /> Domyślna implementacja zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formant powiązany z danymi może żądać sortowania przez dodanie <xref:System.Web.UI.DataSourceCapabilities.Sort> pola <xref:System.Web.UI.DataSourceSelectArguments> do obiektu przekazaną do <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> metody. Jeśli formant powiązany z danymi żąda sortowania, ale <xref:System.Web.UI.DataSourceView.CanSort%2A> Właściwość zwraca `false`, widok źródła danych zgłasza wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.DataSourceView.CanSort%2A> jak zastąpić właściwość w klasie, która <xref:System.Web.UI.DataSourceView> rozszerza klasę. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.DataSourceView" /> obiekt skojarzony z bieżącym <see cref="T:System.Web.UI.DataSourceControl" /> obiektem obsługuje <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> operację.</summary>
        <value><see langword="true" />Jeśli operacja jest obsługiwana; w przeciwnym razie. <see langword="false" /> Domyślna implementacja zwraca <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanUpdate%2A> Właściwość odzwierciedla nie tylko możliwość kontroli źródła danych, ale również to, czy jest ona odpowiednia do wykonania operacji. Na przykład mimo że formant powiązany z danymi obsługuje <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> operację, jeśli wymagane polecenie aktualizacji lub inne dane nie są ustawione <xref:System.Web.UI.DataSourceView.CanUpdate%2A> , właściwość zwraca `false`, ponieważ operacja aktualizacji zakończy się niepowodzeniem.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.DataSourceView.CanUpdate%2A> jak zastąpić właściwość <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> i metodę w klasie, która rozszerza <xref:System.Web.UI.DataSourceView> klasę. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie widoku źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiana w widoku źródła danych może być spowodowana zmianą wartości właściwości lub zmianą danych spowodowanych operacją danych wykonywaną przez widok źródła danych.  
  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">Obiekt lub klucze wierszy, które mają zostać usunięte <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> przez operację. <see cref="T:System.Collections.IDictionary" /></param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> Pary nazwa/wartość, które reprezentują elementy danych i ich oryginalne wartości.</param>
        <param name="callback"><see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> Delegat, który jest używany do powiadomienia formantu powiązanego z danymi po zakończeniu operacji asynchronicznej.</param>
        <summary>Wykonuje asynchroniczne operacje usuwania na liście danych reprezentowanej przez <see cref="T:System.Web.UI.DataSourceView" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Delete%2A> Metoda jest asynchronicznym interfejsem usuwania danych dla wszystkich obiektów widoku źródła danych. Metoda wywołuje metodę przy użyciu `keys` dodanych wartości `oldValues` parametrów i. <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> <xref:System.Web.UI.DataSourceView.Delete%2A> Parametr jest delegatem, że formant powiązany z danymi przechodzi do widoku źródła danych, który jest używany do powiadomienia formantu powiązanego z danymi <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> po zakończeniu operacji. `callback` Metoda używa parametrów <xref:System.Web.UI.DataSourceViewOperationCallback> delegata, aby zwrócić liczbę objętych rekordów <xref:System.Exception> i wyjątek <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> , który jest generowany przez metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podana wartość to <see langword="null" />. <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /></exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę delegatów obsługi zdarzeń dla widoku źródła danych.</summary>
        <value>Lista delegatów obsługi zdarzeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest typu <xref:System.ComponentModel.EventHandlerList>, który używa algorytmu wyszukiwania liniowego do znajdowania wpisów na liście delegatów. Algorytm wyszukiwania liniowego jest nieefektywny podczas pracy z dużą liczbą wpisów. W związku z tym, gdy masz dużą listę, znalezienie wpisów z tą właściwością będzie powolne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wykonuje określone polecenie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="values" Type="System.Collections.IDictionary" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">Nazwa polecenia.</param>
        <param name="keys">Słownik kluczy obiektów lub kluczy wierszy do działania.</param>
        <param name="values">Słownik par nazwa/wartość reprezentujących elementy danych i ich wartości.</param>
        <summary>Wykonuje określone polecenie.</summary>
        <returns>Liczba elementów, których dotyczy operacja.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="values" Type="System.Collections.IDictionary" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="commandName">Nazwa polecenia.</param>
        <param name="keys">Słownik kluczy obiektów lub kluczy wierszy do działania.</param>
        <param name="values">Słownik par nazwa/wartość reprezentujących elementy danych i ich wartości.</param>
        <param name="callback">Element <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> obiektu.</param>
        <summary>Wykonuje określone polecenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie zwraca wartości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Obiekt lub klucze wierszy, które mają zostać usunięte <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> przez operację. <see cref="T:System.Collections.IDictionary" /></param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> Pary nazwa/wartość, które reprezentują elementy danych i ich oryginalne wartości.</param>
        <summary>Wykonuje operację usuwania na liście danych reprezentowanej przez <see cref="T:System.Web.UI.DataSourceView" /> obiekt.</summary>
        <returns>Liczba elementów, które zostały usunięte z magazynu danych źródłowych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi mogą określić, czy <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> operacja jest obsługiwana przez kontrolkę źródła danych przez <xref:System.Web.UI.DataSourceView> pobranie obiektu za pomocą <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> metody i sprawdzanie <xref:System.Web.UI.DataSourceView.CanDelete%2A> właściwości.  
  
 `keys` Parametr reprezentuje obiekt lub klucze wierszy danych do usunięcia. Dla źródeł danych, które reprezentują dane relacyjne, takie <xref:System.Web.UI.WebControls.SqlDataSource> jak kontrolka `keys` , parametr jest kolekcją kluczy podstawowych bazy danych. W innych scenariuszach `keys` parametr jest kolekcją par nazwa/wartość i służy do filtrowania listy danych. Wszystkie dane pasujące do pary nazwa/wartość są usuwane.  
  
> [!NOTE]
>  Domyślna implementacja <xref:System.NotSupportedException> klasy to zgłoszenie wyjątku. <xref:System.Web.UI.DataSourceView> W przypadku rozszerzającej <xref:System.Web.UI.DataSourceView> klasy należy <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> zastąpić metodę, jeśli klasa obsługuje usuwanie z bazowego magazynu danych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak Klasa rozszerzająca <xref:System.Web.UI.DataSourceView> klasę może <xref:System.Web.UI.DataSourceView.CanDelete%2A> przesłonić Właściwość i <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> metodę. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Operacja nie jest obsługiwana <see cref="T:System.Web.UI.DataSourceView" />przez. <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /></exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> Pary nazwa/wartość używane podczas operacji wstawiania.</param>
        <summary>Wykonuje operację wstawiania na liście danych reprezentowanych przez <see cref="T:System.Web.UI.DataSourceView" /> obiekt.</summary>
        <returns>Liczba elementów, które zostały wstawione do podstawowego magazynu danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi mogą określić, czy <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> operacja jest obsługiwana przez kontrolkę źródła danych przez <xref:System.Web.UI.DataSourceView> pobranie obiektu za pomocą <xref:System.Web.UI.DataSourceControl.GetView%2A> metody i sprawdzanie <xref:System.Web.UI.DataSourceView.CanInsert%2A> właściwości.  
  
 `values` Parametr jest zestaw par nazwa/wartość reprezentujących kolumny danych lub pola oraz odpowiednie wartości do wstawienia.  
  
> [!NOTE]
>  Domyślna implementacja <xref:System.NotSupportedException> klasy to zgłoszenie wyjątku. <xref:System.Web.UI.DataSourceView> W przypadku rozszerzającej <xref:System.Web.UI.DataSourceView> klasy należy <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> zastąpić metodę, jeśli klasa obsługuje wstawianie do bazowego magazynu danych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak Klasa rozszerzająca <xref:System.Web.UI.DataSourceView> klasę może <xref:System.Web.UI.DataSourceView.CanInsert%2A> przesłonić Właściwość i <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> metodę. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Operacja nie jest obsługiwana <see cref="T:System.Web.UI.DataSourceView" />przez. <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /></exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><see cref="T:System.Web.UI.DataSourceSelectArguments" /> , Który jest używany do żądania operacji na danych poza podstawowe pobieranie danych.</param>
        <summary>Pobiera listę danych z bazowego magazynu danych.</summary>
        <returns><see cref="T:System.Collections.IEnumerable" /> Lista danych z bazowego magazynu danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana, aby pobrać dane z bazowego magazynu danych i zwrócić go <xref:System.Collections.IEnumerable> jako obiekt. <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Wszystkie kontrolki źródła danych obsługują pobieranie danych z podstawowego magazynu danych, nawet jeśli inne operacje, takie jak wstawianie i sortowanie, nie są obsługiwane. Ponieważ formant powiązany z danymi może zażądać listy danych w dowolnym momencie w wyniku <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenia <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> lub wywołania metody, pobieranie danych musi być wykonywane na żądanie.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> jak zastąpić metodę w klasie, która <xref:System.Web.UI.DataSourceView> rozszerza klasę. Spowoduje `CsvDataSourceView` to otwarcie pliku z wartościami rozdzielanymi przecinkami (CSV), przeanalizowanie go w wierszu i <xref:System.Data.DataTable> utworzenie obiektu i <xref:System.Data.DataView> obiektu do przechowywania danych w pamięci. Na koniec wyrażenie sortowania jest stosowane, jeśli jest dostarczane przez <xref:System.Web.UI.DataSourceSelectArguments> obiekt, <xref:System.Data.DataView> a <xref:System.Collections.IEnumerable> obiekt jest zwracany jako wystąpienie. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> Obiekt lub klucze wierszy do zaktualizowania przez operację aktualizacji.</param>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> Pary nazwa/wartość, które reprezentują elementy danych i ich nowe wartości.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> Pary nazwa/wartość, które reprezentują elementy danych i ich oryginalne wartości.</param>
        <summary>Wykonuje operację aktualizacji na liście danych reprezentowanej przez <see cref="T:System.Web.UI.DataSourceView" /> obiekt.</summary>
        <returns>Liczba elementów, które zostały zaktualizowane w źródłowym magazynie danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty powiązane z danymi mogą określać, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> czy operacja jest obsługiwana przez kontrolę źródła danych przy <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> użyciu metody do pobierania <xref:System.Web.UI.DataSourceView> obiektu i sprawdzania wartości <xref:System.Web.UI.DataSourceView.CanUpdate%2A> właściwości.  
  
 `keys` Parametr reprezentuje klucze obiektu lub wiersza danych do zaktualizowania. Dla źródeł danych, które reprezentują dane relacyjne, takie <xref:System.Web.UI.WebControls.SqlDataSource> jak kontrolka `keys` , parametr jest kolekcją kluczy podstawowych bazy danych. W innych scenariuszach `keys` parametr jest kolekcją par nazwa/wartość i służy do filtrowania listy danych. Wszystkie dane pasujące do pary nazwa/wartość są aktualizowane wartościami znalezionymi w `values` parametrze, który jest zestaw par nazwa/wartość, które reprezentują nowe wartości dla istniejących pól lub kolumn.  
  
> [!NOTE]
>  Domyślna implementacja <xref:System.NotSupportedException> klasy to zgłoszenie wyjątku. <xref:System.Web.UI.DataSourceView> W przypadku rozszerzającej <xref:System.Web.UI.DataSourceView> klasy należy <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> zastąpić metodę, jeśli klasa obsługuje aktualizowanie danych w źródłowym magazynie danych.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak Klasa rozszerzająca <xref:System.Web.UI.DataSourceView> klasę może <xref:System.Web.UI.DataSourceView.CanUpdate%2A> przesłonić Właściwość i <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> metodę. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Web.UI.DataSourceView> klasy.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Operacja nie jest obsługiwana <see cref="T:System.Web.UI.DataSourceView" />przez. <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /></exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> Pary nazwa/wartość używane podczas operacji wstawiania.</param>
        <param name="callback"><see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> Delegat, który jest używany do powiadomienia formantu powiązanego z danymi po zakończeniu operacji asynchronicznej.</param>
        <summary>Wykonuje asynchroniczną operację wstawiania na liście danych reprezentowanej przez <see cref="T:System.Web.UI.DataSourceView" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Insert%2A> Metoda jest asynchronicznym interfejsem wstawiania danych dla wszystkich obiektów widoku źródła danych. Metoda wywołuje metodę przy użyciu dowolnego `values` dostarczone. <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> <xref:System.Web.UI.DataSourceView.Insert%2A> Parametr jest delegatem, że formant powiązany z danymi przechodzi do widoku źródła danych, który jest używany do powiadomienia formantu powiązanego z danymi <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> po zakończeniu operacji. `callback` Metoda używa parametrów <xref:System.Web.UI.DataSourceViewOperationCallback> delegata, aby zwrócić liczbę objętych rekordów <xref:System.Exception> i wyjątek <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> , który jest generowany przez wywołanie metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podana wartość to <see langword="null" />. <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /></exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę widoku źródła danych.</summary>
        <value>Nazwa <see cref="T:System.Web.UI.DataSourceView" />, jeśli ma. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> Metoda powiadamia formant powiązany z danymi, że bazowe źródło danych uległo zmianie i że formant powinien ponownie powiązać i wykonać wszelkie niezbędne prace. Zazwyczaj <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> Metoda jest wywoływana, gdy właściwość widoku źródła danych została zmieniona.  
  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> Metoda umożliwia również klasom pochodnym obsłużenia zdarzenia bez dołączania delegata. Jest to preferowana technika obsługi zdarzenia w klasie pochodnej.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> klasy pochodnej należy wywołać <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> metodę klasy bazowej, aby zarejestrowani delegowani odbierał zdarzenie.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Jedna z <see cref="T:System.Web.UI.DataSourceCapabilities" /> wartości, która jest porównywana z funkcjami obsługiwanymi przez widok.</param>
        <summary>Wywoływane przez <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> metodę, aby porównać możliwości wymagane <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> dla operacji z tymi, które są obsługiwane przez widok.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest używana przez widok źródła danych, aby sprawdzić każdą z możliwości wymaganych przez kontrolkę powiązaną z danymi, reprezentowane <xref:System.Web.UI.DataSourceSelectArguments> przez obiekt przesłany do <xref:System.Web.UI.DataSourceView.Select%2A> metody i porównać go z możliwościami obsługiwanymi przez dane <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A> Widok źródła.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Widok źródła danych nie obsługuje określonej możliwości źródła danych.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments"><see cref="T:System.Web.UI.DataSourceSelectArguments" /> , Który jest używany do żądania operacji na danych poza podstawowe pobieranie danych.</param>
        <param name="callback"><see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> Delegat, który jest używany do powiadomienia formantu powiązanego z danymi po zakończeniu operacji asynchronicznej.</param>
        <summary>Pobiera listę danych asynchronicznie z bazowego magazynu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Select%2A> Metoda jest asynchronicznym interfejsem odzyskiwania danych dla wszystkich obiektów widoku źródła danych. Metoda wywołuje metodę, przekazując wszystkie <xref:System.Web.UI.DataSourceSelectArguments> dostarczone. <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> <xref:System.Web.UI.DataSourceView.Select%2A> Parametr jest delegatem, że formant powiązany z danymi przechodzi do widoku źródła danych, który jest używany do powiadomienia formantu powiązanego z danymi <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> po zakończeniu operacji. `callback` Dane zwrócone przez <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> wywołanie są zwracane w parametrze <xref:System.Web.UI.DataSourceViewSelectCallback> delegata.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podana wartość to <see langword="null" />. <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /></exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> Obiekt lub klucze wierszy do zaktualizowania przez operację aktualizacji.</param>
        <param name="values"><see cref="T:System.Collections.IDictionary" /> Pary nazwa/wartość, które reprezentują elementy danych i ich nowe wartości.</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> Pary nazwa/wartość, które reprezentują elementy danych i ich oryginalne wartości.</param>
        <param name="callback"><see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> Delegat, który jest używany do powiadomienia formantu powiązanego z danymi po zakończeniu operacji asynchronicznej.</param>
        <summary>Wykonuje asynchroniczną operację aktualizacji na liście danych reprezentowanej przez <see cref="T:System.Web.UI.DataSourceView" /> obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Update%2A> Metoda to asynchroniczny interfejs modyfikujący dane dla wszystkich obiektów widoku źródła danych. `oldValues` `values` `keys`Metoda wywołuje metodę przy użyciu dodanych wartości parametrów, i. <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> <xref:System.Web.UI.DataSourceView.Update%2A> Parametr jest delegatem, że formant powiązany z danymi przechodzi do widoku źródła danych, który jest używany do powiadomienia formantu powiązanego z danymi <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> po zakończeniu operacji. `callback` Metoda używa parametrów <xref:System.Web.UI.DataSourceViewOperationCallback> delegata, aby zwrócić liczbę objętych rekordów <xref:System.Exception> i wyjątek <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> , który jest generowany przez wywołanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podana wartość to <see langword="null" />. <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /></exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>
