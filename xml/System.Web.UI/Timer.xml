<Type Name="Timer" FullName="System.Web.UI.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cb6627584d7906e3859f973ccd13e062bff5729" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375858" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.Web.UI.Control, System.Web.UI.IPostBackEventHandler, System.Web.UI.IScriptControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.Web.UI.Control implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.IScriptControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Control&#xA;Implements IPostBackEventHandler, IScriptControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::Web::UI::Control, System::Web::UI::IPostBackEventHandler, System::Web::UI::IScriptControl" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Control&#xA;    interface IPostBackEventHandler&#xA;    interface IScriptControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.Timer.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wykonuje asynchroniczne i synchroniczne strony sieci Web ogłaszania zwrotnego w określonym interwale.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.Timer> Kontroli umożliwia przeprowadzanie ogłaszania zwrotnego z określoną częstotliwością. Jeśli używasz <xref:System.Web.UI.Timer> formant jako wyzwalacz <xref:System.Web.UI.UpdatePanel> kontroli, <xref:System.Web.UI.UpdatePanel> kontroli jest aktualizowane za pomocą aktualizacji asynchroniczne, stron częściowych. Należy uwzględnić <xref:System.Web.UI.ScriptManager> obiektu na stronie sieci Web do używania <xref:System.Web.UI.Timer> formantu.  
  
 Możesz użyć <xref:System.Web.UI.Timer> formantu, aby zaktualizować <xref:System.Web.UI.UpdatePanel> kontroli poprzez włączenie czasomierza wewnątrz <xref:System.Web.UI.UpdatePanel> formantu. Alternatywnie możesz umieścić czasomierza poza <xref:System.Web.UI.UpdatePanel> kontroli oraz ustawić czasomierza jako wyzwalacz.  
  
 Można także zainicjować pełne ogłaszania zwrotnego strony sieci Web zakończenie umieszczając <xref:System.Web.UI.Timer> kontrolować na stronie sieci Web i nie ustawienie go jako wyzwalacz <xref:System.Web.UI.UpdatePanel> formantu.  
  
 Można uruchomić kod serwera, po upłynięciu interwału czasomierza przez utworzenie programu obsługi zdarzeń dla <xref:System.Web.UI.Timer.Tick> zdarzeń. W przypadku obsługi, można dołączyć kod, który dynamicznie można dostosować zachowanie <xref:System.Web.UI.Timer> formantu.  
  
 Ustaw <xref:System.Web.UI.Timer.Interval%2A> właściwość, aby określić, jak często postbacks będą występować. Ustaw <xref:System.Web.UI.Timer.Enabled%2A> właściwości, aby włączyć <xref:System.Web.UI.Timer> lub wyłączyć.  
  
> [!NOTE]
>  Dokładność sytuacji, w których <xref:System.Web.UI.Timer> wpisów kontroli do serwera sieci Web jest zależny od dokładność ECMAScript (JavaScript) `window.setTimeout` funkcja, która jest uruchomiona w przeglądarce.  
  
 <xref:System.Web.UI.Timer.Interval%2A> Właściwość jest zdefiniowana w milisekundach. Należy ustawić <xref:System.Web.UI.Timer.Interval%2A> właściwości na wartość, która umożliwia co najmniej jeden asynchronicznego ogłaszania zwrotnego ukończenie dalej ogłaszania zwrotnego jest inicjowana. Podczas <xref:System.Web.UI.Timer> formant jest poza <xref:System.Web.UI.UpdatePanel> kontroli, czasomierz będzie kontynuował działanie podczas zawartość <xref:System.Web.UI.UpdatePanel> formantu zostanie odświeżony. Jeśli nowy ogłaszania zwrotnego jest inicjowane podczas przetwarzania wcześniejszych ogłaszania zwrotnego, pierwszy ogłaszania zwrotnego zostanie anulowane. Wartość domyślna to 60 000 milisekund (60 sekund).  
  
> [!NOTE]
>  Dodawanie <xref:System.Web.UI.Timer> kontroli w mała wartość <xref:System.Web.UI.Timer.Interval%2A> właściwości mogą generować znaczny ruch do i z serwera sieci Web. Użyj <xref:System.Web.UI.Timer> formantu, aby odświeżyć zawartość tylko tyle razy, odpowiednio do potrzeb.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:Timer  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    Interval="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTick="Tick event handler"  
    OnUnload="Unload handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.UpdatePanel> kontrolkę wyświetlającą losowo generowany giełdowy i czas giełdowy został wygenerowany. <xref:System.Web.UI.Timer> Kontroli aktualizuje zawartość <xref:System.Web.UI.UpdatePanel> kontrolować co 10 sekund.  
  
> [!NOTE]
>  W tym przykładzie interwał czasomierza jest ustawiony na 10 sekund, tak aby po uruchomieniu przykładzie, nie masz oczekiwania dużo czasu, aby wyświetlić wyniki. Ponieważ każdego interwału czasomierza powoduje odświeżenie strony, który powoduje, że ruch sieciowy, w aplikacji produkcyjnej należy ustawić interwał do najdłużej, jest nadal praktyczne dla aplikacji.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Timer" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.Timer" /> formant inicjuje ogłaszania zwrotnego na serwerze po wyrażony w milisekundach czas określony w <see cref="P:System.Web.UI.Timer.Interval" /> właściwości upłynął.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.Timer" /> zainicjuje odświeżania strony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Timer.Enabled%2A> właściwości, aby włączyć <xref:System.Web.UI.Timer> kontroli włączać i wyłączać. Podczas ustawiania <xref:System.Web.UI.Timer.Enabled%2A> do `true`, <xref:System.Web.UI.Timer> kontroli rozpoczyna odliczanie czasomierza podczas renderowania strony sieci Web.  
  
 Na odświeżenie strony, można zmienić wartości właściwości <xref:System.Web.UI.Timer.Enabled%2A> właściwości, a zmiany zostaną uwzględnione podczas renderowania zawartości strony sieci Web w przeglądarce. Jeśli zmienisz <xref:System.Web.UI.Timer.Enabled%2A> właściwości, a następnie wróć do oryginalnej wartości podczas tego samego ogłaszania zwrotnego, <xref:System.Web.UI.Timer> kontrolować działa tak, jakby nie dokonano żadnych zmian.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.UpdatePanel> kontrolkę wyświetlającą losowo generowany giełdowy i czas giełdowy został wygenerowany. Domyślnie <xref:System.Web.UI.Timer> kontroli aktualizuje zawartość <xref:System.Web.UI.UpdatePanel> kontrolować co 10 sekund. Użytkownik może wybrać, aby zaktualizować giełdowy co 10 sekund, co 60 sekund lub w ogóle. Jeśli użytkownik zdecyduje się nie można zaktualizować giełdowy, <xref:System.Web.UI.Timer.Enabled%2A> właściwość jest ustawiona na `false`.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;&#xA;override this.GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="timer.GetScriptDescriptors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptDescriptors&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera właściwości z <see cref="T:System.Web.UI.Timer" /> obiektu, które są przekazywane do składnika klienta, który implementuje czasomierza logikę w przeglądarce.</summary>
        <returns>Tablica typu <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Timer.GetScriptDescriptors%2A> Dodaje metody <xref:System.Web.UI.Timer.Interval%2A> i <xref:System.Web.UI.Timer.Enabled%2A> właściwości z wystąpienia <xref:System.Web.UI.Timer> klasy do <xref:System.Web.UI.ScriptDescriptor> obiektu. Składnik klienta uzyskuje dostęp do wartości i ustawia odpowiednie wartości w skrypcie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;&#xA;override this.GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="timer.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptReferences&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera skrypt klienta do <see cref="T:System.Web.UI.Timer" /> formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.ScriptReference" /> obiekt, który zawiera skrypt po stronie klienta dla <see cref="T:System.Web.UI.Timer" /> formantu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Web.UI.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(60000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę milisekund oczekiwania przed rozpoczęciem odświeżania strony.</summary>
        <value>Liczba milisekund oczekiwania przed rozpoczęciem odświeżania strony. Wartość domyślna to 60 000 (60 sekund).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Timer.Interval%2A> właściwość można zmienić częstotliwość <xref:System.Web.UI.Timer> formant inicjuje ogłaszania zwrotnego na serwerze. Możesz zmienić wartość <xref:System.Web.UI.Timer.Interval%2A> właściwości w kodzie serwera po odświeżeniu strony, takich jak program obsługi zdarzeń dla <xref:System.Web.UI.Timer.Tick> zdarzeń. Dokładność sytuacji, w których <xref:System.Web.UI.Timer> wpisów kontroli do serwera sieci Web jest zależny od dokładność ECMAScript (JavaScript) `window.setTimeout` funkcji uruchamianej w przeglądarce.  
  
> [!NOTE]
>  Ustawienie <xref:System.Web.UI.Timer.Interval%2A> właściwości małej wartości może wygenerować znaczny ruch do i z serwera sieci Web. Użyj <xref:System.Web.UI.Timer> formantu, aby odświeżyć zawartość tylko tyle razy, odpowiednio do potrzeb.  
  
 Po zmianie wartości <xref:System.Web.UI.Timer.Interval%2A> właściwość ECMAScript chronometrażu kodu uruchamianego w przeglądarce zostanie zresetowana, gdy aktualizacje są renderowane.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.UpdatePanel> kontrolkę wyświetlającą losowo generowany giełdowy i czas giełdowy został wygenerowany. Domyślnie <xref:System.Web.UI.Timer> kontroli aktualizuje zawartość <xref:System.Web.UI.UpdatePanel> kontrolować co 10 sekund. Użytkownik może wybrać, aby zaktualizować giełdowy co 10 sekund, co 60 sekund lub w ogóle. <xref:System.Web.UI.Timer.Interval%2A> Właściwość jest ustawiona na wybrany przez użytkownika.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określona wartość jest mniejsza lub równa zero.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="timer.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzenie <see cref="T:System.Web.UI.Timer" /> formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Timer.Tick" /> zdarzenie <see cref="T:System.Web.UI.Timer" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Timer.Tick> Zdarzenie jest wywoływane, gdy wyrażony w milisekundach czas określony w <xref:System.Web.UI.Timer.Interval%2A> właściwości upłynął od strony sieci Web była renderowana lub od momentu poprzedniej <xref:System.Web.UI.Timer.Tick> zdarzeń.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.UpdatePanel> kontrolkę wyświetlającą losowo generowany giełdowy i czas giełdowy został wygenerowany. <xref:System.Web.UI.Timer> Kontroli aktualizuje zawartość <xref:System.Web.UI.UpdatePanel> kontrolować co 10 sekund. Podstawowe ceny i czas są ustawione w procedurze obsługi dla <xref:System.Web.UI.Timer.Tick> zdarzeń.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="timer.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg opcjonalny argument mają być przekazane do programu obsługi zdarzeń.</param>
        <summary>Umożliwia <see cref="T:System.Web.UI.Timer" /> formantu, aby podnieść <see cref="E:System.Web.UI.Timer.Tick" /> zdarzenie, gdy strona jest przesyłana do serwera.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="timer.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który jest używany do renderowania <see cref="T:System.Web.UI.Timer" /> kontrolowanie zawartości w przeglądarce.</param>
        <summary>Renderuje <see cref="T:System.Web.UI.Timer" /> kontroli zawartości do przeglądarki przy użyciu określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg opcjonalny argument mają być przekazane do programu obsługi zdarzeń.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Timer.Tick" /> zdarzenie, gdy strona jest przesyłana do serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Timer> wystąpienia jest rzutowane na <xref:System.Web.UI.IPostBackEventHandler> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptDescriptors">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; IScriptControl.GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; System.Web.UI.IScriptControl.GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor) Implements IScriptControl.GetScriptDescriptors" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ System.Web.UI.IScriptControl.GetScriptDescriptors() = System::Web::UI::IScriptControl::GetScriptDescriptors;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera właściwości z <see cref="T:System.Web.UI.Timer" /> obiektów, które są przekazywane do składnika klienta.</summary>
        <returns>Tablica typu <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Timer> wystąpienia jest rzutowane na <xref:System.Web.UI.IScriptControl> interfejsu.  
  
 <xref:System.Web.UI.Timer.GetScriptDescriptors%2A> Dodaje metody <xref:System.Web.UI.Timer.Interval%2A> i <xref:System.Web.UI.Timer.Enabled%2A> właściwości z wystąpienia <xref:System.Web.UI.Timer> klasy do <xref:System.Web.UI.ScriptDescriptor> obiektu. Składnik klienta pobiera wartości i ustawia odpowiednie wartości w skrypcie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptReferences">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; IScriptControl.GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; System.Web.UI.IScriptControl.GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptReferences () As IEnumerable(Of ScriptReference) Implements IScriptControl.GetScriptReferences" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ System.Web.UI.IScriptControl.GetScriptReferences() = System::Web::UI::IScriptControl::GetScriptReferences;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera skrypt klienta do <see cref="T:System.Web.UI.Timer" /> formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.ScriptReference" /> obiekt, który zawiera skrypt po stronie klienta dla <see cref="T:System.Web.UI.Timer" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Timer> wystąpienia jest rzutowane na <xref:System.Web.UI.IScriptControl> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Tick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler(Of EventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;EventArgs ^&gt; ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler&lt;EventArgs&gt; " Usage="member this.Tick : System.EventHandler&lt;System.EventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy liczba milisekund, określona w <see cref="P:System.Web.UI.Timer.Interval" /> upłynął właściwości, a strona jest przesyłana do serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Timer.Tick> Zdarzenie jest wywoływane, gdy wyrażony w milisekundach czas określony w <xref:System.Web.UI.Timer.Interval%2A> właściwości upłynął od czasu ostatniego była renderowana strony sieci Web lub od momentu poprzedniej <xref:System.Web.UI.Timer.Tick> zdarzeń. Obsługa <xref:System.Web.UI.Timer.Tick> zdarzenie, gdy trzeba będzie wykonać akcje podczas każdego ogłaszania zwrotnego.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.UpdatePanel> kontrolkę wyświetlającą losowo generowany giełdowy i czas giełdowy został wygenerowany. <xref:System.Web.UI.Timer> Kontroli aktualizuje zawartość <xref:System.Web.UI.UpdatePanel> kontrolować co 10 sekund. Podstawowe ceny i czas są ustawione w procedurze obsługi dla <xref:System.Web.UI.Timer.Tick> zdarzeń.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.Timer.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zastępuje <see cref="P:System.Web.UI.Control.Visible" /> właściwość <see cref="T:System.Web.UI.Control" /> klasy, aby zapobiec ustawiania tej wartości.</summary>
        <value>
          <see langword="true" /> Jeśli formant jest renderowany na stronie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Visible` Właściwość nie zostanie zastąpiona w <xref:System.Web.UI.Timer> klasę, aby zapobiec ustawienie dla tej właściwości. `Visible` Zwraca `true` Jeśli składnika klienta <xref:System.Web.UI.Timer> klasa znajduje się na stronie sieci Web, nawet jeśli <xref:System.Web.UI.Timer.Enabled%2A> ma ustawioną wartość `false`. `Visible` Zwraca `false` po znajduje się wewnątrz kontenera, takich jak <xref:System.Web.UI.UpdatePanel> kontroli, których `Visible` właściwość jest ustawiona na `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Wartość jest przypisany do <c>Visible</c> właściwości.</exception>
      </Docs>
    </Member>
  </Members>
</Type>