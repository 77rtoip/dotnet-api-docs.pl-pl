<Type Name="Control" FullName="System.Web.UI.Control">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5e204b7a88d9c05e9f718f5fcc598809702c48c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30694799" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Control : IDisposable, System.ComponentModel.IComponent, System.Web.UI.IControlBuilderAccessor, System.Web.UI.IControlDesignerAccessor, System.Web.UI.IDataBindingsAccessor, System.Web.UI.IExpressionsAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IUrlResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Control extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Web.UI.IControlBuilderAccessor, class System.Web.UI.IControlDesignerAccessor, class System.Web.UI.IDataBindingsAccessor, class System.Web.UI.IExpressionsAccessor, class System.Web.UI.IParserAccessor, class System.Web.UI.IUrlResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Implements IComponent, IControlBuilderAccessor, IControlDesignerAccessor, IDataBindingsAccessor, IDisposable, IExpressionsAccessor, IParserAccessor, IUrlResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : IDisposable, System::ComponentModel::IComponent, System::Web::UI::IControlBuilderAccessor, System::Web::UI::IControlDesignerAccessor, System::Web::UI::IDataBindingsAccessor, System::Web::UI::IExpressionsAccessor, System::Web::UI::IParserAccessor, System::Web::UI::IUrlResolutionService" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IControlBuilderAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IControlDesignerAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataBindingsAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IExpressionsAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IParserAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUrlResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Code")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje właściwości, metod i zdarzeń, które są udostępniane przez wszystkich kontrolek serwera ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to klasy podstawowej, która pochodzi od, gdy w przypadku tworzenia niestandardowych kontrolek serwera ASP.NET. <xref:System.Web.UI.Control> nie ma żadnych funkcji określonego interfejsu użytkownika. Jeśli tworzony formant, który nie ma interfejsu użytkownika lub łączą inne formanty, które renderują własnego interfejsu użytkownika, pochodzi z <xref:System.Web.UI.Control>. Jeśli tworzony formant, który ma interfejsu użytkownika, pochodzi z <xref:System.Web.UI.WebControls.WebControl> lub dowolnego kontroli w <xref:System.Web.UI.WebControls> przestrzeni nazw, który zapewnia odpowiedni uruchamianie punktu dla formantu niestandardowego.  
  
 <xref:System.Web.UI.Control> Klasa jest klasą bazową dla wszystkich kontrolek serwera ASP.NET, w tym formantów niestandardowych, kontrolek użytkownika i strony. Strony ASP.NET są wystąpieniami klasy <xref:System.Web.UI.Page> klasy, która dziedziczy <xref:System.Web.UI.Control> klasy, a obsługiwać żądania dotyczące plików z rozszerzeniem .aspx.  
  
 <xref:System.Web.UI.Control> Klasy bezpośrednio lub pośrednio można jako część interfejsu użytkownika dla sieci Web, aplikacji i jako taki powinny zostać dokładnie zbadane, aby upewnić się, że najlepsze rozwiązania dla zapisywania bezpiecznego kodu oraz zabezpieczanie aplikacji zostaną wykonane.  
  
 Aby uzyskać ogólne informacje dotyczące tych tematów, zobacz [omówienie z sieci Web aplikacji zagrożenia bezpieczeństwa](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a), [NIB: najlepszych rozwiązań dotyczących zasad zabezpieczeń](http://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), i [podstawowe pojęcia dotyczące zabezpieczeń](~/docs/standard/security/key-security-concepts.md). Aby uzyskać bardziej szczegółowe informacje, zobacz [zabezpieczanie standardowych formantów](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: bezpieczne komunikaty o błędach programu wyświetlania](http://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa), [jak: chronić przed skryptu wykorzystuje luki w aplikacji sieci Web przez stosowanie HTML Kodowanie na ciągi](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), i [wprowadzenie do formantów weryfikacji](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano formantu niestandardowego serwera, która pochodzi z <xref:System.Web.UI.Control> klasy. `InnerContent` Klasy zastąpienia <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> metoda sprawdza, jeśli klasa zawiera formanty podrzędne na stronie i określa, czy pierwszy element podrzędny formantu jest formancie literal. Jeśli oba te warunki są spełnione, przeciążonej zapisuje ciąg HTML \<H2 > Your wiadomości:, zawartość w formancie literal i zamykania \</H2 > tag do strony formularzy sieci Web.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[Classic Control Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control Example/CS/source.cs#1)]
 [!code-vb[Classic Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.TemplateControl" />
    <altmember cref="T:System.Web.UI.LiteralControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Control" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Adapters.ControlAdapter Adapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.ControlAdapter Adapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Adapter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Adapter As ControlAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Adapters::ControlAdapter ^ Adapter { System::Web::UI::Adapters::ControlAdapter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.ControlAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera karty przeglądarki specyficzne dla formantu.</summary>
        <value>A <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> dla tego formantu. Jeśli przeglądarka docelowa nie wymaga karty, zwraca <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strony sieci Web ASP.NET są użyteczne w szerokim zakresie urządzeń i przeglądarek, które mogą żądać informacji z sieci Web. <xref:System.Web.UI.Control.Adapter%2A> Zwraca właściwość <xref:System.Web.UI.Adapters.ControlAdapter> obiektu, który renderuje formantów na urządzenia wysyłającego żądanie lub ekranu w przeglądarce.  
  
 Aby uzyskać więcej informacji na temat kart, zobacz [architektury omówienie adaptacyjną kontroli zachowania](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="AddedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void AddedControl (System.Web.UI.Control control, int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddedControl(class System.Web.UI.Control control, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddedControl(System::Web::UI::Control ^ control, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> Który został dodany.</param>
        <param name="index">Indeks formantu w <see cref="P:System.Web.UI.Control.Controls" /> kolekcji.</param>
        <summary>Wywołuje się po dodaniu do kontrolki podrzędnej <see cref="P:System.Web.UI.Control.Controls" /> Kolekcja <see cref="T:System.Web.UI.Control" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.AddedControl%2A> Metoda jest wywoływana natychmiast po formant został dodany do <xref:System.Web.UI.Control.Controls%2A> kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="control" /> jest <see cref="T:System.Web.UI.WebControls.Substitution" /> formantu.</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected virtual void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Reprezentujący element przeanalizowany.</param>
        <summary>Powiadamia kontrolkę serwera analizy elementu XML lub HTML i dodaje element do kontrolki serwera <see cref="T:System.Web.UI.ControlCollection" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie można zastąpić, ta metoda automatycznie dodaje <xref:System.Web.UI.LiteralControl> obiekty do kontrolki serwera <xref:System.Web.UI.ControlCollection> obiektu. Ta kolekcja jest dostępny za pośrednictwem <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> właściwości.  
  
   
  
## Examples  
 Poniższy przykład jest formant niestandardowy serwer, który używa <xref:System.Web.UI.Control.AddParsedSubObject%2A> metodę, aby określić, czy elementy zadeklarowane pomiędzy otwierającym, a zamykającym tagiem tego formantu są <xref:System.Web.UI.WebControls.TextBox> kontrolki serwera sieci Web. Jeśli są one są dodawane do <xref:System.Collections.ArrayList> obiektu `items`. Gdy przesłoniętych <xref:System.Web.UI.Control.CreateChildControls%2A> metoda jest wywoływana, iteracji między <xref:System.Collections.ArrayList> i dodaje go do każdego obiektu <xref:System.Web.UI.ControlCollection> formantu niestandardowego serwera.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[Control_AddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_AddParsedSubObject/CS/control_addparsedsubobject.cs#1)]
 [!code-vb[Control_AddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_AddParsedSubObject/VB/control_addparsedsubobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public virtual void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">
          <see cref="T:System.Web.UI.Page" /> Zawierająca formant.</param>
        <summary>Zastosowanie właściwości style zdefiniowane w arkuszu stylów strony do formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> Metody ustawia właściwości stylu dla formantu na podstawie właściwości skórki zdefiniowanych w katalogu motywu. Skórki, stosowane są karnację domyślną dla formantu lub karnacji określone w <xref:System.Web.UI.Control.SkinID%2A> właściwości. <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> Metoda jest wywoływana przez platformę ASP.NET dla deklaratywne kontrolki umieszczone na stronie. Należy wywołać <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> metody na wszystkie formanty utworzone programowo w wykonawczego styl karnacji arkusz, aby zastosować do kontroli. Motyw karnacji są stosowane automatycznie. Aby uzyskać więcej informacji o różnicę między kompozycje i kaskadowych arkuszy stylów, zobacz [kompozycji ASP.NET i karnacji](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Arkusz stylów został już zastosowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeTemplateSourceDirectory">
      <MemberSignature Language="C#" Value="public string AppRelativeTemplateSourceDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeTemplateSourceDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.AppRelativeTemplateSourceDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property AppRelativeTemplateSourceDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeTemplateSourceDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia katalog wirtualny z wątkiem aplikacji z <see cref="T:System.Web.UI.Page" /> lub <see cref="T:System.Web.UI.UserControl" /> obiekt zawierający ten formant.</summary>
        <value>Katalog wirtualny z wątkiem aplikacji formantu strony lub użytkownika, zawierający ten formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> Właściwość zawiera ścieżki względne aplikacji do formantu strony lub użytkownika, który zawiera bieżącego formantu. Na przykład, jeśli strona sieci Web znajduje się w http://www.contoso.com/application/subdirectory, <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> zwraca wartość właściwości "~ / podkatalogu".  
  
 Aby przywrócić ścieżki wirtualnej ("application/podkatalogu"), za pomocą <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenderTracing">
      <MemberSignature Language="C#" Value="protected void BeginRenderTracing (System.IO.TextWriter writer, object traceObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginRenderTracing(class System.IO.TextWriter writer, object traceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginRenderTracing (writer As TextWriter, traceObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginRenderTracing(System::IO::TextWriter ^ writer, System::Object ^ traceObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="traceObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt, który zapisuje dane śledzenia.</param>
        <param name="traceObject">Obiekt śledzenia.</param>
        <summary>Rozpoczyna śledzenie czasu projektowania renderowania danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control BindingContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control BindingContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.BindingContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ BindingContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera formant zawierający ten formant powiązania danych.</summary>
        <value>
          <see cref="T:System.Web.UI.Control" /> Zawierający ten formant powiązania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.BindingContainer%2A> Właściwość zawiera odwołanie do <xref:System.Web.UI.Control> obiekt, który zawiera informacje wiązania danych dla bieżącego formantu.  
  
 <xref:System.Web.UI.Control.BindingContainer%2A> Właściwości jest taka sama jak <xref:System.Web.UI.Control.NamingContainer%2A> właściwości, z wyjątkiem przypadków, gdy formant jest częścią szablonu. W takim przypadku <xref:System.Web.UI.Control.BindingContainer%2A> ma ustawioną właściwość <xref:System.Web.UI.Control> definiuje szablonu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="BuildProfileTree">
      <MemberSignature Language="C#" Value="protected void BuildProfileTree (string parentId, bool calcViewState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BuildProfileTree(string parentId, bool calcViewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BuildProfileTree (parentId As String, calcViewState As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BuildProfileTree(System::String ^ parentId, bool calcViewState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentId" Type="System.String" />
        <Parameter Name="calcViewState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentId">Identyfikator formantu nadrzędnego.</param>
        <param name="calcViewState">Wartość logiczna wskazująca, czy rozmiar stan widoku jest obliczana.</param>
        <summary>Zbiera informacje na temat formantu serwera, a następnie dostarcza go do <see cref="P:System.Web.UI.Page.Trace" /> właściwości, który będzie wyświetlany, gdy śledzenie jest włączone dla strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zbiera niezbędne informacje o hierarchii interfejsu użytkownika na stronie i przekazuje je do strony [ &lt;śledzenia&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/trace-element.md) właściwości. Po włączeniu śledzenia, dla strony lub aplikacji, te informacje są wyświetlane w `Control Tree` części danych wyjściowych śledzenia. Dane wyjściowe śledzenia dla strony jest dołączany na końcu strony; gdy dane wyjściowe śledzenia dla aplikacji można wyświetlić w przeglądarce śledzenia (trace.axd plik), który jest przechowywany w katalogu głównym aplikacji. Aby uzyskać więcej informacji dotyczących śledzenia, zobacz [omówienie śledzenia ASP.NET](http://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildControlsCreated">
      <MemberSignature Language="C#" Value="protected bool ChildControlsCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildControlsCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ChildControlsCreated" />
      <MemberSignature Language="VB.NET" Value="Protected Property ChildControlsCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ChildControlsCreated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy zostały utworzone formantów podrzędnych formantu serwera.</summary>
        <value>
          <see langword="true" /> Jeśli utworzono formantów podrzędnych; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano zastępująca <xref:System.Web.UI.Control.OnDataBinding%2A> metody niestandardowego <xref:System.Web.UI.WebControls.Repeater> formantu. Aby upewnić się, że formantów podrzędnych nie są tworzone, dopóki powiązanie danych wystąpi ponownie, <xref:System.Web.UI.Control.ChildControlsCreated%2A> właściwość jest ustawiona na `true` po <xref:System.Web.UI.WebControls.RepeaterItem> obiekty są tworzone i dodawane do formantu <xref:System.Web.UI.ControlCollection> obiektu.  
  
 [!code-csharp[TemplatedDataBoundControl3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl3/cs/customrepeater.cs#1)]
 [!code-vb[TemplatedDataBoundControl3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl3/vb/customrepeater.vb#1)]  
  
 W poniższym przykładzie pokazano sposób użycia kontrolce elementu powtarzanego niestandardowych na stronie sieci Web.  
  
 [!code-aspx-csharp[TemplatedDataBoundControl3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl3/cs/default.aspx#2)]
 [!code-aspx-vb[TemplatedDataBoundControl3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl3/vb/default.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedClientID">
      <MemberSignature Language="C#" Value="protected void ClearCachedClientID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearCachedClientID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearCachedClientID" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearCachedClientID ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearCachedClientID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia zapisane w pamięci podręcznej <see cref="P:System.Web.UI.Control.ClientID" /> do wartości <see langword="null" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearChildControlState">
      <MemberSignature Language="C#" Value="protected void ClearChildControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildControlState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa informacje o stanie kontroli dla formantów podrzędnych formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.ClearChildControlState%2A> Metoda jest używana, gdy informacje stan formantu podrzędnego zapisany stan kontrolki kontrolki nadrzędnej zostanie zastąpiona w miarę tworzenia nowych formantów podrzędnych, takich jak podczas kontrolki podrzędne powiązanie danych w formancie opartego na szablonie powiązane z danymi serwera. Wywoływanie <xref:System.Web.UI.Control.ClearChildControlState%2A> formantów podrzędnych pusty przed wywołaniem metody <xref:System.Web.UI.Control.SaveControlState%2A> metody zmniejsza rozmiar musi być przechowywany lub przesyłane informacje stan formantu.  
  
 Podczas odtwarzania formanty podrzędne <xref:System.Web.UI.Control> obiektów, użyj <xref:System.Web.UI.Control.ClearChildControlState%2A> metody, Wyczyść stan kontrolki podrzędnej, aby go nie zostać zastosowane do nowych formantów przypadkowo.  
  
 Aby wyczyścić zarówno podrzędnych formantu stan i stan widoku, użyj <xref:System.Web.UI.Control.ClearChildState%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.ClearChildState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildViewState" />
      </Docs>
    </Member>
    <Member MemberName="ClearChildState">
      <MemberSignature Language="C#" Value="protected void ClearChildState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa informacje o stan widoku oraz stan sterowania dla wszystkich serwera formantu formantów podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.ClearChildState%2A> Metoda usuwa wszystkie informacje o formantów podrzędnych stan widoku i stan formantu. Jest to równoważne wywołanie zarówno <xref:System.Web.UI.Control.ClearChildViewState%2A> — metoda i <xref:System.Web.UI.Control.ClearChildControlState%2A> metody.  
  
 Podczas odtwarzania formanty podrzędne <xref:System.Web.UI.Control> obiektów, użyj <xref:System.Web.UI.Control.ClearChildState%2A> metody, Wyczyść stan podrzędnych, tak, aby go nie zostać zastosowane do nowych formantów przypadkowo.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić <xref:System.Web.UI.Control.OnDataBinding%2A> metody opartego na szablonie formantu powiązanego z danymi. Jeśli źródło danych, które wiąże formantu zostanie wypełnione, formantu <xref:System.Web.UI.ControlCollection> kolekcji jest opróżniany przy użyciu <xref:System.Web.UI.ControlCollection.Clear%2A> metody i <xref:System.Web.UI.Control.ClearChildState%2A> metoda jest używana do usuwania informacji o stanie, który miał zapisany dla formantów podrzędnych.  
  
 [!code-csharp[TemplatedDataBoundControl2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl2/cs/templatedataboundcontrol.cs#3)]
 [!code-vb[TemplatedDataBoundControl2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl2/vb/templatedataboundcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.ClearChildControlState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildViewState" />
      </Docs>
    </Member>
    <Member MemberName="ClearChildViewState">
      <MemberSignature Language="C#" Value="protected void ClearChildViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa informacje o stan widoku wszystkich serwera formantu formantów podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest często stosowany podczas przesłonięcia <xref:System.Web.UI.Control.DataBind%2A> metoda przy opracowywaniu formantów opartego na szablonie serwera powiązane z danymi. Jeśli nie wywołuj tej metody, można zapisać informacji widoku — stan formantu podrzędnego kontrolki serwera nadrzędnego, tylko do zastąpione w przypadku powiązania danych.  
  
 Podczas odtwarzania formanty podrzędne <xref:System.Web.UI.Control>, użyj <xref:System.Web.UI.Control.ClearChildViewState%2A> metody, Wyczyść stan widoku podrzędnych, tak, aby go nie zostać zastosowane do nowych formantów przypadkowo.  
  
 Aby uzyskać więcej informacji o korzystaniu z tej metody, zobacz [porady: tworzenie kontrolki użytkownika ASP.NET opartego na szablonie](http://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="M:System.Web.UI.Control.ClearChildControlState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildState" />
      </Docs>
    </Member>
    <Member MemberName="ClearEffectiveClientIDMode">
      <MemberSignature Language="C#" Value="protected void ClearEffectiveClientIDMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearEffectiveClientIDMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearEffectiveClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearEffectiveClientIDMode ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearEffectiveClientIDMode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia <see cref="P:System.Web.UI.Control.ClientIDMode" /> właściwości bieżącego wystąpienia formantu i wszystkich formantów podrzędnych do <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public virtual string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator formantu Kod znaczników HTML, który jest generowany przez platformę ASP.NET.</summary>
        <value>Identyfikator formantu Kod znaczników HTML, który jest generowany przez platformę ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas renderowania kontrolki serwera sieci Web jako HTML element, `id` atrybut elementu HTML ma ustawioną wartość <xref:System.Web.UI.Control.ClientID%2A> właściwości. <xref:System.Web.UI.Control.ClientID%2A> Wartość jest często używana dostęp do elementu HTML na skrypt po stronie klienta przy użyciu `document.getElementById` metody. Identyfikator jest również często używane w regułach CSS do określania elementów do stylu. Na przykład Poniższa reguła stylu CSS wybranie wszystkich `span` elementów, które mają `id` wartość atrybutu `ProductIDLabel` i ustawia ich `background-color` atrybutu `white`:  
  
```  
span#ProductIDLabel { background-color: white; }  
```  
  
 Program ASP.NET udostępnia wiele algorytmów sposób generowania <xref:System.Web.UI.Control.ClientID%2A> wartości właściwości. Należy wybrać, który algorytm ma być używany dla formantu, ustawiając jego <xref:System.Web.UI.Control.ClientIDMode%2A> właściwości. Algorytmy są identyfikowane za pomocą <xref:System.Web.UI.ClientIDMode> wartości wyliczenia, które są wymienione w poniższej tabeli.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.ClientIDMode.AutoID>|<xref:System.Web.UI.Control.ClientID%2A> Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ID%2A> wartości każdego nadrzędnych kontenera nazewnictwa z <xref:System.Web.UI.Control.ID%2A> wartość formantu. W scenariuszach wiązania danych gdzie wiele wystąpień formantu są renderowane zwiększającą wartość jest wstawiana przed formantu <xref:System.Web.UI.Control.ID%2A> wartość. Każdy z segmentów jest oddzielona od znaku podkreślenia (_). Ten algorytm został użyty w aplikacji ASP.NET w wersji wcześniejszej niż ASP.NET 4.|  
|<xref:System.Web.UI.ClientIDMode.Static>|<xref:System.Web.UI.Control.ClientID%2A> Wartość jest równa wartości <xref:System.Web.UI.Control.ID%2A> właściwości. Jeśli formant jest kontenerem nazewnictwa, formant jest używany jako hierarchii nazewnictwa kontenery dla formantów, które zawiera.|  
|<xref:System.Web.UI.ClientIDMode.Predictable>|Ten algorytm jest używany dla formantów, które są w formantach powiązanych z danymi. <xref:System.Web.UI.Control.ClientID%2A> Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ClientID%2A> wartość kontenera nazewnictwa nadrzędnego z <xref:System.Web.UI.Control.ID%2A> wartość formantu. Jeśli formant jest powiązany z danymi formantu, który generuje wiele wierszy, wartość w polu danych określona w <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> właściwości zostanie dodany na końcu. Aby uzyskać <xref:System.Web.UI.WebControls.GridView> kontroli danych w wielu pól może być określony. Jeśli <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> właściwość jest pusta, numer kolejny jest dodany na końcu zamiast wartości pola danych. Każdy z segmentów jest oddzielona od znaku podkreślenia (_).|  
|<xref:System.Web.UI.ClientIDMode.Inherit>|Formant dziedziczy <xref:System.Web.UI.ClientIDMode> ustawienie jej <xref:System.Web.UI.Control.NamingContainer%2A> formantu.|  
  
 Wartość domyślna <xref:System.Web.UI.Control.ClientIDMode%2A> jest strona <xref:System.Web.UI.ClientIDMode.Predictable>. Wartość domyślna <xref:System.Web.UI.Control.ClientIDMode%2A> dla formantu jest <xref:System.Web.UI.ClientIDMode.Inherit>. Ponieważ domyślnie formantach <xref:System.Web.UI.ClientIDMode.Inherit>, tryb jest domyślna generacja <xref:System.Web.UI.ClientIDMode.Predictable>. (Jednak jeśli używasz programu Visual Studio Aby przekonwertować projekt sieci Web programu ASP.NET 4 ze starszej wersji programu Visual Studio automatycznie ustawia domyślną witryny na <xref:System.Web.UI.ClientIDMode.AutoID> w pliku Web.config.)  
  
 Aby uzyskać więcej informacji, zobacz [Identyfikacja kontrolki serwera sieci Web ASP.NET](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 W poniższych przykładach pokazano kontrolka użytkownika sieci Web, który znajduje się wewnątrz strony zawartości dla strony wzorcowej. Formant użytkownika zawiera <xref:System.Web.UI.WebControls.DropDownList> kontroli i <xref:System.Web.UI.WebControls.Label> formantu. Tekst, który jest wyświetlany w <xref:System.Web.UI.WebControls.Label> kontroli jest określana przez wartość, która użytkownik wybiera z <xref:System.Web.UI.WebControls.DropDownList> formantu. Wartości tekstowej ustawiana za pośrednictwem skrypt po stronie klienta, dzięki czemu bez publikowania na serwer, aby można było ustawić wartość tej strony sieci Web. Aby pobrać odwołanie do elementu HTML, który jest renderowany <xref:System.Web.UI.WebControls.Label> kontroli w skrypt po stronie klienta, musisz znać wartość formantu <xref:System.Web.UI.Control.ClientID%2A> właściwości. Jednak ponieważ kontrolki użytkownika można umieścić w dowolnym miejscu na stronie sieci Web, istnieje możliwość wcześniej znać kontenery nazewnictwa, które będzie zawierać formanty. Aby upewnić się, że <xref:System.Web.UI.Control.ClientID%2A> wartość będzie taka sama jak <xref:System.Web.UI.Control.ID%2A> wartość zestawów kodu <xref:System.Web.UI.Control.ClientIDMode%2A> do wartości <xref:System.Web.UI.WebControls.ValidatorDisplay.Static>.  
  
 W poniższym przykładzie przedstawiono kontrolki użytkownika.  
  
  
  
 W poniższym przykładzie przedstawiono strony zawartości, która zawiera kontrolki użytkownika.  
  
  
  
 W poniższym przykładzie przedstawiono zawierający stronę zawartości strony wzorcowej.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia algorytmu, który służy do generowania wartości <see cref="P:System.Web.UI.Control.ClientID" /> właściwości.</summary>
        <value>Wartość, która wskazuje sposób <see cref="P:System.Web.UI.Control.ClientID" /> wygenerować właściwości. Wartość domyślna to <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET udostępnia wiele algorytmów sposób generowania <xref:System.Web.UI.Control.ClientID%2A> wartości właściwości. Należy wybrać, który algorytm ma być używany dla formantu, ustawiając jego <xref:System.Web.UI.Control.ClientIDMode%2A> właściwości. Algorytmy są identyfikowane za pomocą <xref:System.Web.UI.ClientIDMode> wartości wyliczenia, które są wymienione w poniższej tabeli.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.ClientIDMode.AutoID>|<xref:System.Web.UI.Control.ClientID%2A> Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ID%2A> wartości każdego nadrzędnych kontenera nazewnictwa z <xref:System.Web.UI.Control.ID%2A> wartość formantu. W scenariuszach wiązania danych gdzie wiele wystąpień formantu są renderowane zwiększającą wartość jest wstawiana przed formantu <xref:System.Web.UI.Control.ID%2A> wartość. Każdy z segmentów jest oddzielona od znaku podkreślenia (_). Ten algorytm został użyty w aplikacji ASP.NET w wersji wcześniejszej niż ASP.NET 4.|  
|<xref:System.Web.UI.ClientIDMode.Static>|<xref:System.Web.UI.Control.ClientID%2A> Wartość jest równa wartości <xref:System.Web.UI.Control.ID%2A> właściwości. Jeśli formant jest kontenerem nazewnictwa, formant jest używany jako hierarchii nazewnictwa kontenery dla formantów, które zawiera.|  
|<xref:System.Web.UI.ClientIDMode.Predictable>|Ten algorytm jest używany dla formantów, które są w formantach powiązanych z danymi. <xref:System.Web.UI.Control.ClientID%2A> Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ClientID%2A> wartość kontenera nazewnictwa nadrzędnego z <xref:System.Web.UI.Control.ID%2A> wartość formantu. Jeśli formant jest powiązany z danymi formantu, który generuje wiele wierszy, wartość w polu danych określona w <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> właściwości zostanie dodany na końcu. Aby uzyskać <xref:System.Web.UI.WebControls.GridView> kontroli danych w wielu pól może być określony. Jeśli <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> właściwość jest pusta, numer kolejny jest dodany na końcu zamiast wartości pola danych. Liczba ta zaczyna się od zera i jest zwiększana o 1 dla każdego wiersza. Każdy z segmentów jest oddzielona od znaku podkreślenia (_).|  
|<xref:System.Web.UI.ClientIDMode.Inherit>|Formant dziedziczy <xref:System.Web.UI.ClientIDMode> ustawienie jej <xref:System.Web.UI.Control.NamingContainer%2A> formantu.|  
  
 Wartość domyślna <xref:System.Web.UI.Control.ClientIDMode%2A> jest strona <xref:System.Web.UI.ClientIDMode.Predictable>. Wartość domyślna <xref:System.Web.UI.Control.ClientIDMode%2A> dla formantu jest <xref:System.Web.UI.ClientIDMode.Inherit>. Ponieważ domyślnie formantach <xref:System.Web.UI.ClientIDMode.Inherit>, tryb jest domyślna generacja <xref:System.Web.UI.ClientIDMode.Predictable>. (Jednak jeśli używasz programu Visual Studio Aby przekonwertować projekt sieci Web programu ASP.NET 4 ze starszej wersji programu Visual Studio automatycznie ustawia domyślną witryny na <xref:System.Web.UI.ClientIDMode.AutoID> w pliku Web.config.)  
  
 Aby uzyskać więcej informacji, zobacz [Identyfikacja kontrolki serwera sieci Web ASP.NET](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Web.UI.WebControls.Label> formantów, które są zawarte w <xref:System.Web.UI.WebControls.ListView> formantu. Na <xref:System.Web.UI.WebControls.ListView> kontroli, <xref:System.Web.UI.Control.ClientIDMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.ClientIDMode.Predictable> i <xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> właściwość jest ustawiona na `ProductID`. W kodzie HTML renderowanych, spowoduje to utworzenie trzy `span` elementy, które odpowiadają trzy `ProductIDLabel` kontrolki. Po uruchomieniu strony, `id` atrybutów `span` elementy są ustawione na następujące wartości:  
  
-   `ListView1_ProductIDLabel_1`  
  
-   `ListView1_ProductIDLabel_34`  
  
-   `ListView1_ProductIDLabel_43`  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDSeparator">
      <MemberSignature Language="C#" Value="protected char ClientIDSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char ClientIDSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientIDSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientIDSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property char ClientIDSeparator { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość znak reprezentującą znak separatora używany w <see cref="P:System.Web.UI.Control.ClientID" /> właściwości.</summary>
        <value>Zawsze zwraca znak podkreślenia (_).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.ClientID%2A> Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ID%2A> wartość formantu i <xref:System.Web.UI.Control.UniqueID%2A> wartość kontrolki nadrzędnej. Każda część wygenerowany <xref:System.Web.UI.Control.ID%2A> właściwości są oddzielane <xref:System.Web.UI.Control.ClientIDSeparator%2A> wartości właściwości. Wartość jest zawsze zwraca znak podkreślenia (_).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="P:System.Web.UI.Control.ClientID" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.Control.IdSeparator" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Context" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.HttpContext" /> obiekt skojarzony z formantu serwera dla bieżącego żądania sieci Web.</summary>
        <value>Określony <see cref="T:System.Web.HttpContext" /> obiekt skojarzony z bieżącego żądania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia dostęp do <xref:System.Web.HttpContext> dla bieżącego żądania sieci Web. Obiekt dostarcza właściwości, które uzyskują dostęp do <xref:System.Web.HttpContext.Application%2A>, <xref:System.Web.HttpContext.Session%2A>, <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A> i innych obiektów, które zawierają informacje o bieżącym żądaniu HTTP. Udostępnia metody, które można uzyskać informacji o konfiguracji i zestawu lub usuń błędy dla żądania.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/CS/control1.cs#1)]
 [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/VB/control1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="T:System.Web.HttpApplication" />
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.ControlCollection" /> obiekt, który reprezentuje formantów podrzędnych formantu określonego serwera w hierarchii interfejsu użytkownika.</summary>
        <value>Kolekcja formantów podrzędnych formantu określonego serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na stronie platformy ASP.NET, gdy formantów deklaratywnie dodanych pomiędzy otwierającym, a zamykającym tagiem formantu serwera, ASP.NET automatycznie dodaje formanty zawierające kontrolki serwera <xref:System.Web.UI.ControlCollection>. Znaczniki HTML lub ciągów tekstowych, które nie są przetwarzane na serwerze są traktowane jako <xref:System.Web.UI.LiteralControl> obiektów. Te są dodawane do kolekcji, takie jak inne formanty serwera.  
  
 <xref:System.Web.UI.Control.Controls%2A> Właściwość umożliwia dostęp programistyczny do wystąpienia <xref:System.Web.UI.ControlCollection> klasy dla dowolnej kontrolki serwera. Możesz Dodaj formanty do kolekcji, Usuń z kolekcji formantów lub iteracji w kolekcji formantów serwera.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób dodawania formantów podrzędnych formantu serwera <xref:System.Web.UI.ControlCollection> obiektu za pomocą jego <xref:System.Web.UI.Control.Controls%2A> właściwości.  
  
 [!code-csharp[Classic Control.Controls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.Controls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Controls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.Controls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="P:System.Web.UI.Control.Controls" /> właściwość, należy wywołać <see cref="M:System.Web.UI.Control.EnsureChildControls" /> metody. Ponadto, jeśli planujesz programowane dodawanie formantów do kolekcji controls, należy rozważyć dodanie formantów w przesłoniętych <see cref="M:System.Web.UI.Control.CreateChildControls" /> metody.</para>
        </block>
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal virtual void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywoływane przez platformę strony ASP.NET powiadomiono znajdujących się użyć implementacji opartej na kompozycji do utworzenia formanty podrzędne, które zawierają w ramach przygotowania do zamieszczając wstecz lub renderowania formantów serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas opracowywania formantu złożonego lub szablonem serwera należy przesłonić tę metodę. Określa, że zastąpienie <xref:System.Web.UI.Control.CreateChildControls%2A> powinien implementować metodę <xref:System.Web.UI.INamingContainer> interfejsu, aby uniknąć konfliktu nazw.  
  
 Aby uzyskać więcej informacji, zobacz [szablonów kontrolki serwera sieci Web](http://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae) i [tworzenia kontrolek serwera ASP.NET niestandardowe](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano zastąpiona wersja <xref:System.Web.UI.Control.CreateChildControls%2A> metody. W tej implementacji złożonego kontrolka ma wyświetlać <xref:System.Web.UI.WebControls.TextBox> kontroli w dwóch literału formantów, które renderowania elementów HTML.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/CS/compositecontrolsample1.cs#2)]
 [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/VB/compositecontrolsample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <altmember cref="P:System.Web.UI.Control.ChildControlsCreated" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Web.UI.ControlCollection" /> obiektu do przechowywania formantów podrzędnych (literał i serwer) kontrolki serwera.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> obiektu zawiera kontrolki serwera podrzędnego bieżącego formantu serwera.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przesłonić tę metodę w formantu niestandardowego serwera, jeśli utworzono obiekt kolekcji, która jest pochodną <xref:System.Web.UI.ControlCollection> klasy. Następnie można utworzyć wystąpienia tej klasy kolekcji w przesłonięcia tej metody.  
  
   
  
## Examples  
 Poniższy kod przykładowy zastąpienia <xref:System.Web.UI.Control.CreateControlCollection%2A> metodę w celu utworzenia wystąpienia `CustomControlCollection` klasy, która dziedziczy <xref:System.Web.UI.ControlCollection> klasy.  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#2)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#2)]  
  
 Poniższy przykład kodu wykorzystuje <xref:System.Web.UI.Control.CreateControlCollection%2A> zastąpienie metody w formancie niestandardowego serwera <xref:System.Web.UI.Control.CreateChildControls%2A> metody. Nowa kolekcja utworzona, a następnie są wypełniane przy użyciu dwóch formantów podrzędnych, `firstControl` i `secondControl`.  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBind">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wiąże źródła danych formantu wywołanej serwera i jej kontrolkach podrzędnych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public virtual void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wiąże źródła danych formantu wywołanej serwera i jej kontrolkach podrzędnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby powiązać dane ze źródła kontrolki serwera. Ta metoda jest często używana po pobraniu zestawu danych za pomocą kwerendy bazy danych. Większość formantów wykonać powiązanie automatycznie, danych, co oznacza, że zwykle nie trzeba jawnie wywołać tę metodę.  
  
 Ta metoda jest powszechnie zastępowane podczas tworzenia niestandardowego opartego na szablonie formantu powiązanego z danymi. Aby uzyskać więcej informacji, zobacz [porady: tworzenie kontrolki użytkownika ASP.NET opartego na szablonie](http://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2) i [kontrolki serwera sieci Web tworzenie niestandardowych z danymi](http://msdn.microsoft.com/library/88fe02a3-957f-4ff7-84f5-2d7ab78db4c1). Po wywołaniu formantu serwera, ta metoda usuwa wszystkie wyrażenia wiązania danych formantu serwera, a w jednym z jego formantów podrzędnych.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.DataBind%2A> metoda formantu niestandardowego serwera ASP.NET. Rozpoczyna wywołując bazie <xref:System.Web.UI.Control.OnDataBinding%2A> metody, a następnie używa <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=nameWithType> do usunięcia wszystkich kontrolek podrzędnych i <xref:System.Web.UI.Control.ClearChildViewState%2A> metody do usuwania wszystkich zapisano ustawienia stanu widoku tych formantów podrzędnych. Na koniec <xref:System.Web.UI.Control.ChildControlsCreated%2A> właściwość jest ustawiona na `true` i kontrolka jest instrukcją śledzić zmian stanu widoku opcji nowo utworzony z <xref:System.Web.UI.Control.TrackViewState%2A> metody. Jest to technika typowe w przypadku wiązania danych formantu i upewnij się, że nowe dane nie powoduje konfliktu z danymi przechowywanymi w poprzedniej <xref:System.Web.UI.Control.DataBind%2A> wywołania metody.  
  
 [!code-csharp[Control_StateManagement#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#6)]
 [!code-vb[Control_StateManagement#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="protected virtual void DataBind (bool raiseOnDataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DataBind(bool raiseOnDataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBind(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DataBind (raiseOnDataBinding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DataBind(bool raiseOnDataBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raiseOnDataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="raiseOnDataBinding">
          <see langword="true" /> Jeśli <see cref="E:System.Web.UI.Control.DataBinding" /> zdarzenie jest zgłoszono; w przeciwnym razie <see langword="false" />.</param>
        <summary>Wiąże źródła danych z formantu serwera wywołanej i jej kontrolkach podrzędnych z opcją podnieść <see cref="E:System.Web.UI.Control.DataBinding" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> metody w sytuacji, gdy zastępuje formantu niestandardowego <xref:System.Web.UI.Control.DataBind%2A> — metoda i implementuje <xref:System.Web.UI.IDataItemContainer> interfejsu. W tym scenariuszu wywołuje kontrolki niestandardowej <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> metody z `raiseOnDataBinding` ustawioną `false` do upewnij się, że klasa podstawowa <xref:System.Web.UI.Control.DataBind%2A> jest wywoływana metoda.  
  
 <xref:System.Web.UI.Control.DataBind?displayProperty=nameWithType> Wywołuje metodę <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> metody z `raiseOnDataBinding` ustawioną `true`.  
  
> [!NOTE]
>  Wywoływanie <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> metody z `raiseOnDataBinding` ustawioną `false` powoduje, że wszystkie podrzędne kontrolki być danymi powiązanymi z <xref:System.Web.UI.Control.DataBind?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
      </Docs>
    </Member>
    <Member MemberName="DataBindChildren">
      <MemberSignature Language="C#" Value="protected virtual void DataBindChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DataBindChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBindChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DataBindChildren ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DataBindChildren();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wiąże formantów podrzędnych formantu serwera źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Control.DataBindChildren%2A> metody można powiązać źródła danych z formantów podrzędnych formantu serwera.  
  
> [!NOTE]
>  Gdy jest wywoływana dla formantu serwera, ta metoda nie jest powiązana danych do formantu. Aby powiązać formant serwera i jej kontrolkach podrzędnych, należy wywołać <xref:System.Web.UI.Control.DataBind%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public event EventHandler DataBinding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataBinding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBinding As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataBinding;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant serwera wiąże się ze źródłem danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie powiadamia formantu serwera, aby wykonać wszelka logika wiązania danych, które zostały napisane dla niego.  
  
   
  
## Examples  
 [!code-csharp[ITemplate_Interface#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ITemplate_Interface/CS/itemplate.cs#1)]
 [!code-vb[ITemplate_Interface#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ITemplate_Interface/VB/itemplate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DataItemContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control DataItemContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control DataItemContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DataItemContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ DataItemContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kontenera nazewnictwa, jeśli implementuje kontenera nazewnictwa <see cref="T:System.Web.UI.IDataItemContainer" />.</summary>
        <value>Kontener nazewnictwa. W hierarchii nazw kontenerów, które implementują <see cref="T:System.Web.UI.IDataItemContainer" />, ta właściwość zwraca kontenera nazewnictwa u góry hierarchii, lub <see langword="null" /> Jeśli bieżące <see cref="T:System.Web.UI.Control" /> obiekt nie znajduje się w kontenerze nazewnictwa, która implementuje <see cref="T:System.Web.UI.IDataItemContainer" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeysContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control DataKeysContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control DataKeysContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DataKeysContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataKeysContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ DataKeysContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kontenera nazewnictwa, jeśli implementuje kontenera nazewnictwa <see cref="T:System.Web.UI.IDataKeysControl" />.</summary>
        <value>Kontener nazewnictwa. W hierarchii nazw kontenerów, które implementują <see cref="T:System.Web.UI.IDataKeysControl" />, właściwość zwraca kontenera nazewnictwa u góry hierarchii, lub <see langword="null" /> Jeśli bieżące <see cref="T:System.Web.UI.Control" /> obiekt nie znajduje się w kontenerze nazewnictwa, która implementuje <see cref="T:System.Web.UI.IDataKeysControl" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignMode">
      <MemberSignature Language="C#" Value="protected internal bool DesignMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DesignMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DesignMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool DesignMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant jest używany na powierzchnię projektu.</summary>
        <value>
          <see langword="true" /> Jeśli formant jest używany w Projektancie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.DesignMode%2A> Zwraca `true` aby wskazać, że kontrolka jest używana w kontekście projektanta. Kontrolki niestandardowe można użyć tej właściwości, gdy czasu projektowania zachowanie różni się od zachowania w czasie wykonywania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia formantu serwera, do wykonania końcowego oczyszczania przed jego zwolnienia z pamięci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołanie <xref:System.Web.UI.Control.Dispose%2A> po zakończeniu przy użyciu <xref:System.Web.UI.Control>. <xref:System.Web.UI.Control.Dispose%2A> Pozostawia metody <xref:System.Web.UI.Control> w stanie uniemożliwiającym jego używanie. Po wywołaniu tej metody, trzeba zwolnić wszystkie odwołania do formantu, więc będzie można odzyskać pamięci, który został klasy Controller przez wyrzucanie elementów bezużytecznych.  
  
   
  
## Examples  
 Poniższy kod przykładowy zastąpienia <xref:System.Web.UI.Control.Dispose%2A> metody, aby zamknąć <xref:System.Web.UI.HtmlTextWriter> obiekt skojarzony z kontroli i wywołanie <xref:System.Web.UI.Control.Dispose%2A> metoda <xref:System.Web.UI.WebControls.Button> formantu o nazwie `myButton`. Jeśli <xref:System.Exception> jest generowany, gdy ta wersja <xref:System.Web.UI.Control.Dispose%2A> metoda jest wywoływana, formantu zapisuje komunikat do bieżącego <xref:System.Web.HttpResponse> obiektu.  
  
 [!code-csharp[Control_Dispose#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Dispose/CS/control_disposemethod.cs#1)]
 [!code-vb[Control_Dispose#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Dispose/VB/control_disposemethod.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Disposed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu kontrolki serwera z pamięci, który jest ostatnim etapie cyklu formantu serwera, gdy zostanie zażądana strona ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasoby, które wymagają czasu znaczących procesora, takich jak połączenia z bazą danych powinny zostać zwolnione z tym zdarzeniem.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public virtual bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kompozycje zastosowanie do tego formantu.</summary>
        <value>
          <see langword="true" /> Aby użyć motywów; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.EnableTheming%2A> Właściwość wskazuje, czy włączono motywy dla określonego formantu. Gdy <xref:System.Web.UI.Control.EnableTheming%2A> właściwość jest `true`, katalogu motywu aplikacji jest wyszukiwany Karnacje formantów do zastosowania. Jeśli nie karnacji dla określonego formantu istnieje w katalogu motywu, karnacji nie są stosowane.  
  
 Gdy <xref:System.Web.UI.Control.EnableTheming%2A> właściwość jest `false`, katalogu motywu i zawartości <xref:System.Web.UI.Control.SkinID%2A> właściwość nie jest używana.  
  
 Motywy można włączyć na stronie, kontenera lub poziom kontroli. Można zastąpić formantu <xref:System.Web.UI.Control.EnableTheming%2A> wartość zestawu kontrolki nadrzędnej lub strony zawierającej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see langword="Page_PreInit" /> Już wystąpiło zdarzenie.  
  
 \- lub -  
  
 Formant już dodano do <see langword="Controls" /> kolekcji.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public virtual bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant serwera będzie się powtarzać, swój stan widoku, a stan widoku formanty podrzędne nim, do klienta.</summary>
        <value>
          <see langword="true" /> Jeśli formant serwera zachowuje swój stan widoku; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku umożliwia kontrolki serwera zachować stanu żądań HTTP. Stan widoku formantu jest włączony, jeśli są spełnione wszystkie następujące warunki:  
  
-   <xref:System.Web.UI.Control.EnableViewState%2A> Właściwości dla strony ustawiono `true`.  
  
-   <xref:System.Web.UI.Control.EnableViewState%2A> Ma ustawioną wartość właściwości formantu `true`.  
  
-   <xref:System.Web.UI.Control.ViewStateMode%2A> Ma ustawioną wartość właściwości formantu <xref:System.Web.UI.ViewStateMode.Enabled> lub dziedziczy <xref:System.Web.UI.ViewStateMode.Enabled> ustawienia.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.Control.ViewStateMode%2A> właściwości.  
  
 Stan widoku formantu server jest sumą wszystkich wartości właściwości. Aby zachować te wartości na żądania HTTP, ASP.NET używa wystąpienia <xref:System.Web.UI.StateBag> klasę do przechowywania wartości właściwości. Wartości następnie są przekazywane jako zmienną do ukryte pola podczas przetwarzania kolejnych żądań. Aby uzyskać więcej informacji na temat stanu widoku, zobacz [przegląd stanu widoku ASP.NET](http://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818).  
  
 Istnieją sytuacje, gdy będzie należy wyłączyć stan widoku, szczególnie w celu zwiększenia wydajności aplikacji. Na przykład, gdy ładowany żądania bazy danych w formancie serwera, ustaw tą właściwość na `false`. Jeśli nie chcesz, czas procesora zostanie zmarnowane ładowania stanu widoku do formantu serwera, który tylko zostaną zastąpione przez zapytanie bazy danych. Jeśli <xref:System.Web.UI.Control.EnableViewState%2A> jest `false`, stan formantu umożliwia utrwalić informacje właściwości, które są specyficzne dla formantu i nie może zostać wyłączone, takie jak właściwości stanu widoku. Aby uzyskać więcej informacji o różnicę między kontroli stan i stan widoku, zobacz [stanu kontroli wersji programu vs. Przykładowy widok stanu](http://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681).  
  
 Aby uzyskać informacje o tym, jak włączyć lub wyłączyć stan widoku deklaratywnie dla strony platformy ASP.NET zobacz.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Web.UI.Control.EnableViewState%2A> właściwości `false`.  
  
 [!code-csharp[Control_StateManagement#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_statemanagement.cs.aspx#7)]
 [!code-vb[Control_StateManagement#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_statemanagement.vb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewStateMode" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EndRenderTracing">
      <MemberSignature Language="C#" Value="protected void EndRenderTracing (System.IO.TextWriter writer, object traceObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndRenderTracing(class System.IO.TextWriter writer, object traceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndRenderTracing (writer As TextWriter, traceObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndRenderTracing(System::IO::TextWriter ^ writer, System::Object ^ traceObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="traceObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt, który zapisuje dane śledzenia.</param>
        <param name="traceObject">Obiekt śledzenia.</param>
        <summary>Kończy się śledzenie czasu projektowania renderowania danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureChildControls">
      <MemberSignature Language="C#" Value="protected virtual void EnsureChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EnsureChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formant serwera zawiera formantów podrzędnych. Jeśli nie, tworzy podrzędne kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza najpierw bieżącą wartość <xref:System.Web.UI.Control.ChildControlsCreated%2A> właściwości. Jeśli ta wartość jest `false`, <xref:System.Web.UI.Control.CreateChildControls%2A> metoda jest wywoływana.  
  
 <xref:System.Web.UI.Control.EnsureChildControls%2A> Metoda jest zwykle używana w kontrolkach złożonego, które są formantów, które używają formantów podrzędnych dla niektórych lub wszystkich ich funkcje. <xref:System.Web.UI.Control.EnsureChildControls%2A> Metoda jest wywoływana, aby mieć pewność, że formanty podrzędne zostały utworzone i są gotowe do przetworzenia danych wejściowych, można utworzyć powiązania danych lub wykonywania innych zadań.  
  
 <xref:System.Web.UI.WebControls.GridView> Formant jest przykładem formantu złożonego. Tworzy podrzędne kontrolki takich jak <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.TableRow>, <xref:System.Web.UI.WebControls.TableCell>, <xref:System.Web.UI.WebControls.Label>, i <xref:System.Web.UI.WebControls.TextBox> tabeli formanty, które są używane do renderowania kodu HTML, który <xref:System.Web.UI.WebControls.GridView> generuje.  
  
 W większości przypadków niestandardowego serwera kontroli programiści nie muszą przesłonić tę metodę. Jeśli przesłonięcia tej metody należy użyć jej w sposób podobny do domyślne zachowanie.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Web.UI.Control.EnsureChildControls%2A> metody, aby upewnić się, że bieżący formant serwera ma formantów podrzędnych. Następnie pobiera lub ustawia <xref:System.Web.UI.WebControls.TextBox.Text%2A> właściwości dla elementu podrzędnego <xref:System.Web.UI.WebControls.TextBox> formant w bieżącym kontrolki serwera sieci Web <xref:System.Web.UI.ControlCollection> obiektu.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/CS/compositecontrolsample1.cs#1)]
 [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/VB/compositecontrolsample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="P:System.Web.UI.Control.ChildControlsCreated" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="EnsureID">
      <MemberSignature Language="C#" Value="protected void EnsureID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EnsureID" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureID ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureID();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy identyfikator dla formantów, które nie mają przypisany identyfikator.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.EnsureID%2A> Metoda generuje identyfikator dla formantów, które są zawarte w inny formant. Identyfikatory są generowane tylko w przypadku kontrolek, które nie mają wartość przypisana do <xref:System.Web.UI.Control.ID%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę delegatów obsługi zdarzeń dla formantu. Ta właściwość jest tylko do odczytu.</summary>
        <value>Lista delegatów obsługi zdarzeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest typu <xref:System.ComponentModel.EventHandlerList>, który używa algorytmu wyszukiwania liniowego można znaleźć pozycji na liście obiektów delegowanych. Algorytm wyszukiwania liniowego jest nieefektywne podczas pracy z dużą liczbę wpisów. W związku z tym jeśli masz dużą listę znajdowania wpisów z tą właściwością będzie zajmować dużo czasu.  
  
   
  
## Examples  
 Poniższy przykład tworzy zdarzenia o nazwie `Click`, który dodaje i usuwa obsługi z formantu <xref:System.ComponentModel.EventHandlerList> kolekcji, gdy zdarzenie jest wywoływane ze strony.  
  
 **Uwaga** w tym przykładzie optymalizuje jak formant dodaje i usuwa zdarzenia z listy z nich, która jest obsługiwana przez formant. Tworzenie formantu niestandardowego, aby zdefiniować zdarzenia za pomocą podobny do poniższego kodu. Ta technika może służyć w języku C#, ale nie w języku Visual Basic.  
  
 [!code-csharp[System.Web.UI.Page_VerifyRenderingInServerForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/CS/testlinkbutton.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventHandlerList" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindControl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyszukiwania w bieżącym kontenerze nazewnictwa dla formantu określonego serwera.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identyfikator formantu, który ma zostać odnaleziona.</param>
        <summary>Wyszukiwania w bieżącym kontenerze nazewnictwa dla kontrolki serwera, z określonym <paramref name="id" /> parametru.</summary>
        <returns>Określony formant lub <see langword="null" /> Jeśli określony formant nie istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Control.FindControl%2A> do kontroli dostępu w funkcji na stronie związane z kodem dostępu formant, który znajduje się wewnątrz innego kontenera do lub w innych warunkach, gdy formant docelowy nie jest dostępny bezpośrednio do obiektu wywołującego. Ta metoda będzie odnaleźć formantu tylko wtedy, gdy formant jest bezpośrednio zawarty w określonym kontenerze; oznacza to, że metoda nie wyszukiwania w całej hierarchii formantów w ramach kontroli. Aby uzyskać informacje o sposobach znajdowania formantu, jeśli nie znasz jego natychmiastowego kontenera, zobacz [porady: kontroli dostępu serwera za pomocą Identyfikatora](http://msdn.microsoft.com/library/59964ef8-72ef-4159-9f1a-5b230ff46fb3).  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `Button1_Click` obsługi zdarzeń. Gdy została wywołana, ten program obsługi używa <xref:System.Web.UI.Control.FindControl%2A> metody można znaleźć formantu o <xref:System.Web.UI.Control.ID%2A> właściwość `TextBox2` na stronie zawierającej. Jeśli zostanie znaleziony formantu, jego element nadrzędny jest określany przy użyciu <xref:System.Web.UI.Control.Parent%2A> właściwości i kontrolki nadrzędnej <xref:System.Web.UI.Control.ID%2A> są zapisywane do strony. Jeśli `TextBox2` nie zostanie znaleziony, "Nie można odnaleźć formantu" są zapisywane do strony.  
  
> [!IMPORTANT]
>  W tym przykładzie ma pola tekstowego, który akceptuje dane wejściowe użytkownika, który jest potencjalnym zagrożeniem dla bezpieczeństwa. Domyślnie strony sieci Web ASP.NET zweryfikować, czy dane wejściowe użytkownika nie obejmuje skrypt lub elementów HTML. Aby uzyskać więcej informacji, zobacz [Przegląd wykorzystuje skryptu](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/CS/control_parent.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/VB/control_parent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindControl (string id, int pathOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindControl(string id, int32 pathOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.FindControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindControl (id As String, pathOffset As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ FindControl(System::String ^ id, int pathOffset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="pathOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">Identyfikator formantu, który ma zostać odnaleziona.</param>
        <param name="pathOffset">Liczba formantów w hierarchii formantu strony potrzebny do osiągnięcia kontenera nazewnictwa.</param>
        <summary>Wyszukiwania w bieżącym kontenerze nazewnictwa dla kontrolki serwera, z określonym <paramref name="id" /> i liczba całkowita, określona w <paramref name="pathOffset" /> parametr, który pomaga w wyszukiwaniu. Ta wersja nie powinien zastąpić <see cref="Overload:System.Web.UI.Control.FindControl" /> metody.</summary>
        <returns>Określony formant lub <see langword="null" /> Jeśli określony formant nie istnieje.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public virtual void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zestawy danych wejściowych fokus do formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Control.Focus%2A> metodę, aby ustawić fokus początkowej strony sieci Web do formantu. Strona zostanie otwarta w przeglądarce za pomocą formantu wybrane.  
  
 <xref:System.Web.UI.Control.Focus%2A> Metoda powoduje wywołanie do skryptu fokus stronę obliczanie w renderowanej strony. Jeśli strona nie zawiera formantu z kodu HTML `ID` atrybut, który pasuje do formantu który <xref:System.Web.UI.Control.Focus%2A> wywołano metodę, a następnie strony fokus nie zostanie ustawiona. Gdy to się zdarzyć, to do kontrolki użytkownika zamiast Ustawianie fokusu na kontrolki podrzędnej kontrolki użytkownika można ustawić fokusu. W tym scenariuszu można użyć <xref:System.Web.UI.Control.FindControl%2A> metodę, aby odnaleźć formantu podrzędnego kontrolki użytkownika i Wywołaj jej <xref:System.Web.UI.Control.Focus%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.FindControl(System.String)" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane czasu projektowania formantu.</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> Zawierający dane czasu projektowania formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.GetDesignModeState%2A> Metoda zwraca dane czasu projektowania formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Control.GetDesignModeState" /> Metoda zwraca <see langword="null" /> domyślnie. Należy przesłonić tę metodę do dostarczania danych czasu projektowania, który wymaga formantu.</para>
        </block>
        <altmember cref="T:System.Web.UI.IControlDesignerAccessor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRouteUrl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera adres URL, który odpowiada zestaw parametrów trasy i opcjonalnie nazwy trasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (object routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(object routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeParameters As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::Object ^ routeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParameters" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeParameters">Parametry trasy.</param>
        <summary>Pobiera adres URL, umożliwiająca zestaw parametrów trasy.</summary>
        <returns>Adres URL, który odpowiada określone parametry trasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metody. Ta metoda Konwertuje obiekt, który jest przekazywany w `routeParameters` do <xref:System.Web.Routing.RouteValueDictionary> obiektu przy użyciu <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania <xref:System.Web.UI.Control.GetRouteUrl%2A?displayProperty=nameWithType> metodę, aby uzyskać adres URL trasy, który ma parametry, które są nazywane `productid` i `category`. W tym przykładzie przyjęto założenie, że utworzono <xref:System.Web.UI.WebControls.HyperLink> formantu o nazwie `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (System.Web.Routing.RouteValueDictionary routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(class System.Web.Routing.RouteValueDictionary routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeParameters As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::Web::Routing::RouteValueDictionary ^ routeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParameters" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeParameters">Parametry trasy.</param>
        <summary>Pobiera adres URL, umożliwiająca zestaw parametrów trasy.</summary>
        <returns>Adres URL, który odpowiada określone parametry trasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania tej metody, aby uzyskać adres URL trasy, który ma parametry, które są nazywane `productid` i `category`. W tym przykładzie przyjęto założenie, że utworzono <xref:System.Web.UI.WebControls.HyperLink> formantu o nazwie `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (string routeName, object routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(string routeName, object routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeName As String, routeParameters As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::String ^ routeName, System::Object ^ routeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeParameters" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">Nazwa trasy.</param>
        <param name="routeParameters">Parametry trasy.</param>
        <summary>Pobiera adres URL, umożliwiająca zestaw parametrów trasy i nazwy trasy.</summary>
        <returns>Adres URL, który odpowiada określone parametry trasy i nazwy trasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metody. Ta metoda Konwertuje obiekt, który jest przekazywany w `routeParameters` do <xref:System.Web.Routing.RouteValueDictionary> obiektu przy użyciu <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania tej metody, aby uzyskać adres URL trasy, o nazwie `Product` i ma następujące parametry o nazwach `productid` i `category`. W tym przykładzie przyjęto założenie, że utworzono <xref:System.Web.UI.WebControls.HyperLink> formantu o nazwie `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (string routeName, System.Web.Routing.RouteValueDictionary routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(string routeName, class System.Web.Routing.RouteValueDictionary routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeName As String, routeParameters As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeParameters" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">Nazwa trasy.</param>
        <param name="routeParameters">Parametry trasy.</param>
        <summary>Pobiera adres URL, umożliwiająca zestaw parametrów trasy i nazwy trasy.</summary>
        <returns>Adres URL, który odpowiada określone parametry trasy i nazwy trasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to odpowiednik wywołania <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wywołania tej metody, aby uzyskać adres URL trasy, o nazwie `Product` i ma następujące parametry o nazwach `productid` i `category`. W tym przykładzie przyjęto założenie, że utworzono <xref:System.Web.UI.WebControls.HyperLink> formantu o nazwie `HyperLink1`.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueIDRelativeTo">
      <MemberSignature Language="C#" Value="public string GetUniqueIDRelativeTo (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUniqueIDRelativeTo(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUniqueIDRelativeTo(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Formant, który znajduje się w kontenerze nazewnictwa.</param>
        <summary>Zwraca część prefiksem <see cref="P:System.Web.UI.Control.UniqueID" /> właściwość określonego formantu.</summary>
        <returns>Prefiksem część <see cref="P:System.Web.UI.Control.UniqueID" /> właściwość określonego formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.UniqueID%2A> Właściwości formantu jest generowany przez dodanie prefiksu do formantu <xref:System.Web.UI.Control.ID%2A> właściwości. Prefiks składa się z <xref:System.Web.UI.Control.UniqueID%2A> właściwości formantu użytkownika nazewnictwa kontenera połączony z znaku separatora. Jeśli kontenera nazewnictwa jest strony, nie ma żadnego prefiksu. Ta metoda zwraca ciąg prefiksu. Jeśli nie istnieje żadne Ciąg prefiksu, zwraca <xref:System.Web.UI.Control.UniqueID%2A> wartość formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.Control.NamingContainer" /> Właściwość <paramref name="control" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChildViewState">
      <MemberSignature Language="C#" Value="protected bool HasChildViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.HasChildViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HasChildViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool HasChildViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formanty podrzędne bieżącego formantu serwera ma zapisanych ustawień stanu widoku.</summary>
        <value>
          <see langword="true" /> Jeśli formanty podrzędne zostały zapisane informacje o stanie widoku; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można uniknąć niepotrzebnych połączeń w celu <xref:System.Web.UI.Control.ClearChildViewState%2A> metody przy użyciu tej właściwości, aby sprawdzić, czy formanty podrzędne formantu serwera, są przechowywane informacje o stanie widoku.  
  
   
  
## Examples  
 [!code-csharp[Control_StateManagement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#5)]
 [!code-vb[Control_StateManagement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public virtual bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formant serwera zawiera formanty podrzędne.</summary>
        <returns>
          <see langword="true" /> Jeśli formant zawiera inne formanty; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ ta metoda po prostu Określa, czy formanty podrzędne istnieje, może poprawić wydajność, umożliwiając uniknąć niepotrzebnych <xref:System.Web.UI.ControlCollection.Count%2A> wywołanie właściwości. Wywołania do tej właściwości wymagają <xref:System.Web.UI.ControlCollection> można utworzyć wystąpienia obiektu. Jeśli nie ma żadnych elementów podrzędnych, to tworzenie obiektu marnuje zasoby serwera.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Web.UI.Control.HasControls%2A> metodę, aby ustalić, jeśli wszystkie istnieją środki zapobiegawcze, aby można było używać <xref:System.Web.UI.ControlCollection.Count%2A> właściwości do iteracji <xref:System.Web.UI.ControlCollection> obiektu.  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Control.HasControls" /> Metoda powinna zostać zastąpiona tak, aby zmienić atrybutów metadanych, takich jak <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />. Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="HasEvents">
      <MemberSignature Language="C#" Value="protected bool HasEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool HasEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.HasEvents" />
      <MemberSignature Language="VB.NET" Value="Protected Function HasEvents () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool HasEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą, czy formant lub formanty podrzędne są rejestrowane zdarzenia.</summary>
        <returns>
          <see langword="true" /> Jeśli zdarzenia są rejestrowane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator programowy przypisany do kontrolki serwera.</summary>
        <value>Identyfikator programowy, przypisane do formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości w formancie serwera zapewnia programowy dostęp do właściwości formantu serwera, zdarzeń i metody. Tej właściwości można ustawić przez deweloperów sieci Web przez zadeklarowanie <xref:System.Web.UI.Control.ID%2A> atrybut w tagu otwierającym formant serwera programu ASP.NET.  
  
 Jeśli nie określono tej właściwości dla formantu serwera, deklaratywnego lub programowo, można uzyskać odwołanie do formantu za pomocą kontrolki nadrzędnej <xref:System.Web.UI.Control.Controls%2A> właściwości.  
  
> [!NOTE]
>  Tylko kombinację znaków alfanumerycznych i znaku podkreślenia (_) są prawidłowe wartości dla tej właściwości. W tym spacji lub inne nieprawidłowe znaki spowoduje błąd analizatora strony ASP.NET.  
  
   
  
## Examples  
 [!code-csharp[Control_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples.cs.aspx#2)]
 [!code-vb[Control_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="IdSeparator">
      <MemberSignature Language="C#" Value="protected char IdSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IdSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IdSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IdSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property char IdSeparator { char get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera znak używany do rozdzielania identyfikatory formantu.</summary>
        <value>Znak separatora. Wartością domyślną jest "$".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Znak zawarte w <xref:System.Web.UI.Control.IdSeparator%2A> właściwość jest używana do oddzielania identyfikatory formantów podrzędnych formantu. Znak separatora identyfikator jest dołączany do <xref:System.Web.UI.Control.ID%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public event EventHandler Init;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Init" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Init" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Init As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Init;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zainicjowaniu formantu serwera, który jest pierwszym etapem cykl życia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty serwera należy wykonać wszystkie kroki inicjowania, które są wymagane do tworzenia i konfigurowania wystąpienia. Nie można użyć informacji stan widoku w ramach tego zdarzenia; nie jest jeszcze wypełniona. Podczas tego zdarzenia, niezależnie od tego, czy jest podrzędnej lub nadrzędnej do tego formantu nie mają do innego serwera formantu. Inne formanty serwera nie są pewne, utworzony i gotowa do dostępu. Aby uzyskać więcej informacji dotyczących zdarzeń formantu serwera, zobacz [Model kontroli zdarzeń serwera formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
   
  
## Examples  
 W poniższym przykładzie przypisano obsługi zdarzeń niestandardowych, `Calendar_Init`, do `Init` zdarzenie <xref:System.Web.UI.WebControls.Calendar> formantu.  
  
 [!code-aspx-csharp[Control_Sample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples2.cs.aspx#4)]
 [!code-aspx-vb[Control_Sample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples2.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsChildControlStateCleared">
      <MemberSignature Language="C#" Value="protected internal bool IsChildControlStateCleared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChildControlStateCleared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsChildControlStateCleared" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsChildControlStateCleared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsChildControlStateCleared { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formanty zawarte w tym formancie mają stan formantu.</summary>
        <value>
          <see langword="true" /> Jeśli elementy podrzędne tego formantu nie używaj stanu kontroli; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteralContent">
      <MemberSignature Language="C#" Value="protected bool IsLiteralContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsLiteralContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.IsLiteralContent" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsLiteralContent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsLiteralContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy kontrolki serwera zawartością tylko literału.</summary>
        <returns>
          <see langword="true" /> Jeśli formant serwera zawiera wyłącznie zawartość literałową; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zwraca `true`, kolekcji formantów serwera zawiera jeden formant literału.  
  
   
  
## Examples  
 Poniższy przykład umożliwia sprawdzenie, czy strona, która zawiera kontrolki serwera zostały przesłane z powrotem. Jeśli jest, wywołuje metodę <xref:System.Web.UI.Control.IsLiteralContent%2A> metodę, aby ustalić, czy formant zawiera zawartość literałową właśnie lub jest formant nadrzędny do innych formantów serwera. Zawiera wyłącznie zawartość literalna <xref:System.Web.UI.Control.UniqueID%2A> właściwość <xref:System.Web.UI.LiteralControl> reprezentujący, że zawartość jest zapisywany do odpowiedzi.  
  
 [!code-csharp[System.Web.UI.Control_ViewStateIgnoresCase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/cs/controlsample_7.cs#1)]
 [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/VB/controlsample_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.HasControls" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy stan widoku formantu serwera jest zapisywania zmian.</summary>
        <value>
          <see langword="true" /> Jeśli formant jest oznaczony do zapisania stanu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki niestandardowe serwera próbki, która używa tej właściwości, zobacz [przykład kontrolki serwera opartego na szablonie](http://msdn.microsoft.com/library/986f63b8-6b50-42b9-a62d-a2f13cafa88b)  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.DataBind%2A> metoda formantu niestandardowego serwera ASP.NET. Rozpoczyna wywołując bazie <xref:System.Web.UI.Control.OnDataBinding%2A> metody, a następnie używa `ControlCollection` obiektu. <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=nameWithType> do usunięcia wszystkich kontrolek podrzędnych i <xref:System.Web.UI.Control.ClearChildViewState%2A> metody do usuwania wszystkich zapisano ustawienia stanu widoku tych formantów podrzędnych. Na koniec <xref:System.Web.UI.Control.ChildControlsCreated%2A> właściwość jest ustawiona na `true`. Następnie używa kontrolki <xref:System.Web.UI.Control.IsTrackingViewState%2A> właściwości w celu określenia, czy dla formantu jest włączone śledzenie zmian stanu widoku. Jeśli nie jest włączona, <xref:System.Web.UI.Control.TrackViewState%2A> metoda jest wywoływana.  
  
 [!code-csharp[Control_StateManagement#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#4)]
 [!code-vb[Control_StateManagement#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="IsViewStateEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsViewStateEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsViewStateEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsViewStateEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsViewStateEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsViewStateEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy stan widoku jest włączony dla tego formantu.</summary>
        <value>
          <see langword="true" /> Jeśli stan widoku jest włączony dla formantu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku można włączyć na stronie, kontenera lub poziom kontroli. Gdy stan widoku jest wyłączona na poziomie strony lub kontenera, stan widoku jest wyłączona dla wszystkich kontrolek zawarty w strony lub kontenera. <xref:System.Web.UI.Control.IsViewStateEnabled%2A> Właściwość wskazuje, czy stan widoku jest włączony przez strony, w pojemnikach lub formantów.  
  
 Istnieje możliwość <xref:System.Web.UI.Control.EnableViewState%2A> właściwości i <xref:System.Web.UI.Control.IsViewStateEnabled%2A> właściwości na inny. Na przykład jeśli <xref:System.Web.UI.Page> zawierająca formant została wyłączona, stan widoku <xref:System.Web.UI.Control.EnableViewState%2A> właściwość może być `true` podczas <xref:System.Web.UI.Control.IsViewStateEnabled%2A> jest właściwość `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Deweloperzy strony ustawi <see cref="P:System.Web.UI.Control.EnableViewState" /> właściwości i <see cref="P:System.Web.UI.Control.ViewStateMode" /> Właściwość wskazująca, czy ich za pomocą stan widoku formantu. Użyj <see cref="P:System.Web.UI.Control.IsViewStateEnabled" /> właściwości i <see cref="P:System.Web.UI.Control.ViewStateMode" /> właściwość kod w celu określenia, czy stan widoku jest włączony dla formantu i dla wszystkich kontenerów.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewStateMode" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant serwera jest ładowany do <see cref="T:System.Web.UI.Page" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiadamia formantu serwera, aby wykonać wszystkie kroki przetwarzania, które są ustawione na występują na każdym żądaniu strony. Z tego zdarzenia są dostępne informacje o stanie widoku i formularza sieci Web danych POST. Można również uzyskać dostępu do innych kontrolek serwera w ramach hierarchii formantu strony.  
  
> [!NOTE]
>  Jeśli ustawisz szablonu niestandardowego w formancie podczas `Page_Load` zdarzeń, wartości tekstowe formantów podrzędnych w szablonu niestandardowego zostaną utracone. Dzieje się tak, ponieważ wartości formularza zostały już załadowane.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Load#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Load/CS/control_load.cs#2)]
 [!code-vb[System.Web.UI.Control_Load#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Load/VB/control_load.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący stan formantu ma zostać przywrócony.</param>
        <summary>Przywraca stan kontrolki informacje z poprzedniego żądania strony, która została zapisana przez <see cref="M:System.Web.UI.Control.SaveControlState" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy przesłonić tę metodę, gdy konieczne jest określenie, jak formantu niestandardowego serwera przywraca jego stan formantu. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
   
  
## Examples  
 Poniższy kod przykładowy zastąpienia <xref:System.Web.UI.Control.LoadControlState%2A> metody niestandardowe kontrolki ASP.NET. Gdy ta metoda jest wywoływana, określa czy stan formantu został wcześniej zapisany, zwalczania, a jeśli tak jest, ustawia właściwość wewnętrzna `currentIndex` zapisanych wartości.  
  
 <xref:System.Web.UI.Control.OnInit%2A> Metoda zostanie przesłonięta wywołać <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metoda <xref:System.Web.UI.Control.Page%2A> aby wskazać, że formant niestandardowy używa stanu formantu.  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> Reprezentujący stan formantu ma zostać przywrócony.</param>
        <summary>Przywraca stan widoku informacje z poprzedniego żądania strony, która została zapisana przez <see cref="M:System.Web.UI.Control.SaveViewState" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę programu .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jednak kontroli deweloperzy mogą przesłaniać tę metodę, aby określić, jak formantu niestandardowego serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.LoadViewState%2A> metody dla niestandardowej kontrolki serwera ASP.NET. Tworzy <xref:System.Object> tablica zawiera informacje o stanie widoku przekazano `savedState` parametr, a następnie wywołuje Podstawowa implementacja <xref:System.Web.UI.Control.LoadViewState%2A> metody pierwszy lokalizacji indeksu tablicy. Przypisuje wartości przechowywane w dwóch następnych lokalizacjach indeksu do zmiennych o nazwie `UserText` i `PasswordText`odpowiednio.  
  
 [!code-csharp[Control_StateManagement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#1)]
 [!code-vb[Control_StateManagement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewStateByID">
      <MemberSignature Language="C#" Value="protected bool LoadViewStateByID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadViewStateByID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.LoadViewStateByID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoadViewStateByID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool LoadViewStateByID { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant uczestniczy w ładowania swój stan widoku przez <see cref="P:System.Web.UI.Control.ID" /> zamiast indeksu.</summary>
        <value>
          <see langword="true" /> Jeśli formant ładuje swój stan widoku przez <see cref="P:System.Web.UI.Control.ID" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie, gdy formant nadrzędny ładuje stan widoku do formantów podrzędnych tworzy, robi to według położenia poszczególnych formantów podrzędnych formantu nadrzędnego <xref:System.Web.UI.Control.Controls%2A> kolekcji. Gdy stan widoku jest początkowo stosowane, wszystkie formanty podrzędne nie został utworzony. W takim przypadku stan widoku dla formantów, które jeszcze nie utworzono jest zapisany i stosowane podczas tworzenia formantów podrzędnych później.  
  
 Kontrolki nadrzędnej się stan widoku do jej kontrolkach podrzędnych muszą być spełnione dwa warunki:  
  
-   Strony formantu nadrzędnego należy utworzyć podrzędny formantów w dokładnie takiej samej kolejności jak poprzednie żądanie kolejności kontrolek funkcjonował spójne.  
  
-   Po odświeżeniu strony, należy dodać formanty podrzędne utworzone na końcu formantu nadrzędnego <xref:System.Web.UI.Control.Controls%2A> kolekcji.  
  
 Jeśli te dwa warunki nie może być spełnione, jak w przypadku tworzenia opóźnione kontrolki podrzędnej, kontrolki nadrzędnej można załadować stanu widoku przy użyciu <xref:System.Web.UI.Control.ID%2A>. Aby ustawić <xref:System.Web.UI.Control.LoadViewStateByID%2A> właściwości `true`, użyj <xref:System.Web.UI.ViewStateModeByIdAttribute> atrybutu metadanych dla kontrolki nadrzędnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.ViewStateModeByIdAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MapPathSecure">
      <MemberSignature Language="C#" Value="protected internal string MapPathSecure (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance string MapPathSecure(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.MapPathSecure(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function MapPathSecure (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::String ^ MapPathSecure(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Względny lub głównych względnego adresu URL.</param>
        <summary>Pobiera ścieżkę fizyczną, mapowana na ścieżkę wirtualną bezwzględny lub względny.</summary>
        <returns>Ścieżka fizyczna do żądanego pliku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć tylko przez formanty serwera, w tym uprawnienia do odczytu plików, które są częścią pliki dll w pełni zaufany, na przykład System.Web.dll. Pomaga to zapobiec naruszeń zabezpieczeń.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Web.UI.Control.MapPathSecure%2A> metody uzyskanie ścieżkę fizyczną katalogu wirtualnego zawierających <xref:System.Web.UI.Page> lub <xref:System.Web.UI.UserControl> obiektu.  
  
 [!code-csharp[Control_MapPathSecure#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_MapPathSecure/CS/control_templatesourcedirectory.cs#1)]
 [!code-vb[Control_MapPathSecure#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_MapPathSecure/VB/control_templatesourcedirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualPath" /> jest <see langword="null" /> lub ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="NamingContainer">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control NamingContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control NamingContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.NamingContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamingContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ NamingContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do formantu serwera na nazwy kontenera, który tworzy unikatowy obszar nazw dla rozróżnianie między formantami serwera o takiej samej <see cref="P:System.Web.UI.Control.ID" /> wartości właściwości.</summary>
        <value>Kontener obiektu nazw kontrolki serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdej strony w aplikacji sieci Web platformy ASP.NET zawiera hierarchię kontrolek. Ta hierarchia nie jest zależny od tego, czy formant generuje interfejsu użytkownika jest widoczny dla użytkownika. Kontener nazewnictwa dla danego formantu jest formantu nadrzędnego wyżej w hierarchii, która implementuje <xref:System.Web.UI.INamingContainer> interfejsu. Formantu serwera, który implementuje ten interfejs tworzy unikatowy obszar nazw dla <xref:System.Web.UI.Control.ID%2A> wartości właściwości jej kontrolkach podrzędnych serwera. Można użyć <xref:System.Web.UI.Control.NamingContainer%2A> właściwości formantu podrzędnego kontenera nazewnictwa, aby pobrać odwołanie do kontenera nadrzędnego.  
  
 Tworzenie unikatową przestrzeń nazw dla kontrolek serwera jest szczególnie ważne podczas powiąże kontrolki serwera sieci Web do danych, takich jak <xref:System.Web.UI.WebControls.Repeater> i <xref:System.Web.UI.WebControls.DataList> formantów serwera. Wiele wpisów w źródle danych, tworząc wiele wystąpień formantu serwera, który jest elementem podrzędnym powtarzającego się formantu kontenera nazewnictwa gwarantuje, że każde wystąpienie tych kontrolek podrzędnych <xref:System.Web.UI.Control.UniqueID%2A> wartości właściwości, które nie powodują konfliktu. Domyślny kontener nazewnictwa dla strony jest wystąpienie <xref:System.Web.UI.Page> klasy, która jest generowany, gdy tej strony.  
  
 <xref:System.Web.UI.Control.ClientID%2A> Właściwość zawiera wartość, która jest renderowane jako elementu `id` atrybutu w kod znaczników HTML. W zależności od wartości, który można przypisać do <xref:System.Web.UI.Control.ClientIDMode%2A> właściwości, wartość, która zostanie wygenerowany dla <xref:System.Web.UI.Control.ClientID%2A> właściwości mogą obejmować identyfikator <xref:System.Web.UI.Control.NamingContainer%2A> obiektu. Podczas ustawiania <xref:System.Web.UI.Control.ClientIDMode%2A> do <xref:System.Web.UI.ClientIDMode.Static>, <xref:System.Web.UI.Control.ClientID%2A> wartość nie obejmuje identyfikator <xref:System.Web.UI.Control.NamingContainer%2A> obiektu. Podczas ustawiania <xref:System.Web.UI.Control.ClientIDMode%2A> albo <xref:System.Web.UI.ClientIDMode.AutoID> lub <xref:System.Web.UI.ClientIDMode.Predictable>, <xref:System.Web.UI.Control.ClientID%2A> wartość będzie zawierać identyfikator z <xref:System.Web.UI.Control.NamingContainer%2A> obiektu. Aby uzyskać więcej informacji, zobacz [Identyfikacja kontrolki serwera sieci Web ASP.NET](http://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, przy użyciu <xref:System.Web.UI.Control.NamingContainer%2A> właściwości.  
  
 [!code-aspx-csharp[Control_NamingContainer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_NamingContainer/CS/control_namingcontainer.cs.aspx#1)]
 [!code-aspx-vb[Control_NamingContainer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_NamingContainer/VB/control_namingcontainer.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.INamingContainer" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnBubbleEvent (object source, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnBubbleEvent(object source, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBubbleEvent (source As Object, args As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnBubbleEvent(System::Object ^ source, EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="args">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Określa, czy zdarzenia dla kontrolki serwera jest przekazywany strony interfejsu użytkownika serwera kontroli hierarchii.</summary>
        <returns>
          <see langword="true" /> Jeśli zdarzenie zostało anulowane; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa serwera ASP.NET, takich jak <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList> i <xref:System.Web.UI.WebControls.GridView> formantów sieci Web mogą zawierać formantów podrzędnych, które uruchamiają zdarzenia. Na przykład każdego wiersza w <xref:System.Web.UI.WebControls.GridView> formant może zawierać jeden lub więcej przycisków dynamicznie utworzone za pomocą szablonów. Zamiast każdego przycisku indywidualnie wywołaniem zdarzenia zdarzeń z kontrolki zagnieżdżone są "przepuszcza" — to znaczy są wysyłane do kontenera nazewnictwa. Kontener nazewnictwa z kolei wywołuje zdarzenie generyczne o nazwie <xref:System.Web.UI.WebControls.GridView.RowCommand> z wartościami parametrów. Te wartości pozwalają określić, które poszczególnych kontrolek, który wywołał zdarzenie oryginalnego. Odpowiedzi na to pojedyncze zdarzenie, można uniknąć konieczności pisania poszczególne metody obsługi zdarzeń dla formantów podrzędnych.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.OnBubbleEvent%2A> metody w niestandardowych kontrolka serwerowa ASP.NET `ParentControl`. Ta metoda jest wywoływana, gdy formant podrzędny `ParentControl` wywołania <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metody. W takim przypadku `ParentControl` klasy zapisuje dwa ciągi zawierające strony ASP.NET, podając pierwszy który jego <xref:System.Web.UI.Control.OnBubbleEvent%2A> wywoływana metoda, drugi identyfikowanie kontroli źródła <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> — metoda.  
  
 [!code-csharp[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/CS/bubble.cs#1)]
 [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/VB/bubble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBinding(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.DataBinding" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powiadamia kontrolkę serwera do wykonania wszelka logika do wiązania danych, który jest skojarzony z nim.  
  
 Jeśli chcesz obsługiwać <xref:System.Web.UI.Control.DataBinding> zdarzenia, powinny przesłaniać tę metodę obsługi zdarzeń. Dzięki temu, że wszystkie obiekty delegowane dołączony do <xref:System.Web.UI.Control.DataBinding> zdarzenia są wywoływane.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób przesłonięcia <xref:System.Web.UI.Control.OnDataBinding%2A> metody do dodawania formantów podrzędnych do formantu nadrzędnego źródła danych.  
  
 [!code-csharp[TemplatedDataBoundControl#3](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#3)]
 [!code-vb[TemplatedDataBoundControl#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Init" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wywołuje tę metodę, aby podnieść <xref:System.Web.UI.Control.Init> zdarzeń. Jeśli tworzysz kontrolkę niestandardową można przesłonić tę metodę w celu zapewnienia dodatkowego przetwarzania. Razie przesłonięcia tej metody należy wywołać kontrolki podstawowej <xref:System.Web.UI.Control.OnInit%2A> metodę, aby powiadomić subskrybentów zdarzenia.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/CS/control1.cs#3)]
 [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/VB/control1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Load" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wywołuje tę metodę, aby podnieść <xref:System.Web.UI.Control.Load> zdarzeń. Jeśli tworzysz kontrolkę niestandardową można przesłonić tę metodę w celu zapewnienia dodatkowego przetwarzania. Razie przesłonięcia tej metody należy wywołać kontrolki podstawowej <xref:System.Web.UI.Control.OnLoad%2A> metodę, aby powiadomić subskrybentów zdarzenia.  
  
   
  
## Examples  
 [!code-csharp[Control_OnUnload#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_OnUnload/CS/control_onunload.cs#3)]
 [!code-vb[Control_OnUnload#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_OnUnload/VB/control_onunload.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wywołuje tę metodę, aby podnieść <xref:System.Web.UI.Control.PreRender> zdarzeń. Jeśli tworzysz kontrolkę niestandardową można przesłonić tę metodę w celu zapewnienia dodatkowego przetwarzania. Razie przesłonięcia tej metody należy wywołać kontrolki podstawowej <xref:System.Web.UI.Control.OnPreRender%2A> metodę, aby powiadomić subskrybentów zdarzenia.  
  
   
  
## Examples  
 [!code-csharp[Control_Sample_1_snipper#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1_snipper/CS/control_sample_1.cs#1)]
 [!code-vb[Control_Sample_1_snipper#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1_snipper/VB/control_sample_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal virtual void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnUnload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Unload" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wywołuje tę metodę, aby podnieść <xref:System.Web.UI.Control.Unload> zdarzeń. Jeśli tworzysz kontrolkę niestandardową można przesłonić tę metodę w celu zapewnienia dodatkowego przetwarzania. Razie przesłonięcia tej metody należy wywołać kontrolki podstawowej <xref:System.Web.UI.Control.OnUnload%2A> metodę, aby powiadomić subskrybentów zdarzenia.  
  
   
  
## Examples  
 [!code-csharp[Control_OnUnload#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_OnUnload/CS/control_onunload.cs#2)]
 [!code-vb[Control_OnUnload#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_OnUnload/VB/control_onunload.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.Unload" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="protected internal System.IO.Stream OpenFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.IO.Stream OpenFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function OpenFile (path As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::IO::Stream ^ OpenFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Ścieżka do żądanego pliku.</param>
        <summary>Pobiera <see cref="T:System.IO.Stream" /> używany do odczytu pliku.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> który odwołuje się do żądanego pliku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.OpenFile%2A> Metoda zwraca <xref:System.IO.Stream> obiektu, który może służyć do odczytu zawartości określonego w pliku `path` parametru. Parametr Ścieżka może być względny albo lub głównego adresu URL bez protokołu (takich jak "~ / mySite/myFile.txt), lub ścieżką fizyczną lokalny ("c:\mySite\myFile.txt") lub UNC ("\\\myServer\myFile.txt ").  
  
 <xref:System.Web.UI.Control.OpenFile%2A> Metoda używa zabezpieczeń dostępu do plików do kontrolowania dostępu do określonego pliku. Jeśli bieżący użytkownik ASP.NET nie ma dostępu do pliku, plik nie jest otwarty i moduł <xref:System.Web.HttpException> jest zwracany wyjątek, aby wskazać, że nastąpiła odmowa dostępu. Jeśli `path` określony parametr ścieżki względnej, wyjątek nie zawiera informacji na temat ścieżkę fizyczną do żądanego pliku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Odmowa dostępu do określonego pliku.</exception>
        <altmember cref="T:System.IO.FileStream" />
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Page" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.Page" /> wystąpienia, które zawiera kontrolki serwera.</summary>
        <value>
          <see cref="T:System.Web.UI.Page" /> Wystąpienia, które zawiera kontrolki serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość ta właściwość odzwierciedla nazwę plik .aspx, która zawiera kontrolki serwera.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> metody. Używa <xref:System.Web.UI.Page> właściwości, aby uzyskać dostęp do <xref:System.Web.UI.Page.IsPostBack%2A?displayProperty=nameWithType> właściwości i ustalić, czy strony zawierający ten formant został załadowany tylko po raz pierwszy lub jest wynikiem odświeżania strony.  
  
 [!code-csharp[Control_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples.cs#1)]
 [!code-vb[Control_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka jest <see cref="T:System.Web.UI.WebControls.Substitution" /> formantu.</exception>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ Parent { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do formantu nadrzędnego kontrolki serwera w hierarchii formantu strony.</summary>
        <value>Odwołanie do formantu nadrzędnego kontrolki serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zawsze, gdy strona jest wymagana, hierarchia formantów serwera na tej stronie jest wbudowany. Ta właściwość pozwala określić formantu nadrzędnego bieżącego formantu serwera, które są w tej hierarchii, do programu na nim.  
  
   
  
## Examples  
 Poniższy przykład przedstawia nowy <xref:System.Web.UI.Control> obiektu na stronie `myControl1`, do formantu określony w <xref:System.Web.UI.Control.FindControl%2A> wywołania metody. Jeśli wywołanie zwraca formantu, w kodzie użyto <xref:System.Web.UI.Control.Parent%2A> właściwość do identyfikacji formantu, który zawiera `myControl1`. Jeśli istnieje formantu nadrzędnego, ciąg "elementu nadrzędnego w polu tekstowym jest" jest połączony z <xref:System.Web.UI.Control.ID%2A> właściwości formantu nadrzędnego i zapisywania ich w <xref:System.Web.UI.Control.Page%2A>. Jeśli formant nadrzędny nie zostanie znaleziony, ciąg "formantu nie została odnaleziona" są zapisywane.  
  
 [!code-csharp[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/CS/control_parent.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/VB/control_parent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreRender">
      <MemberSignature Language="C#" Value="public event EventHandler PreRender;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRender" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.PreRender" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRender As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRender;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po <see cref="T:System.Web.UI.Control" /> obiektu jest załadowane, ale przed renderowaniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie służy do wykonywania żadnych aktualizacji, przed wyświetleniem kontrolki serwera do strony. Zmiany wprowadzone w stan widoku formantu serwera, mogą zostać zapisane podczas tego zdarzenia. Takie zmiany wprowadzone w fazie renderowania nie zostaną zapisane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseBubbleEvent">
      <MemberSignature Language="C#" Value="protected void RaiseBubbleEvent (object source, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseBubbleEvent(object source, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseBubbleEvent (source As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseBubbleEvent(System::Object ^ source, EventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="args">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Przypisuje dowolnego źródła zdarzenia i jego informacji do formantu nadrzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Określa serwera ASP.NET, takich jak <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList> i <xref:System.Web.UI.WebControls.GridView> formantów sieci Web mogą zawierać formantów podrzędnych, które uruchamiają zdarzenia. Na przykład każdego wiersza w <xref:System.Web.UI.WebControls.GridView> formant może zawierać jeden lub więcej przycisków dynamicznie utworzone za pomocą szablonów. Zamiast każdego przycisku indywidualnie wywołaniem zdarzenia zdarzeń z kontrolki zagnieżdżone są "przepuszcza" — to znaczy są wysyłane do formantu nadrzędnego. Element nadrzędny z kolei wywołuje zdarzenie generyczne o nazwie <xref:System.Web.UI.WebControls.GridView.RowCommand> z wartościami parametrów. Te wartości pozwalają określić, które poszczególnych kontrolek, który wywołał zdarzenie oryginalnego. Odpowiedzi na to pojedyncze zdarzenie, można uniknąć konieczności pisania poszczególne metody obsługi zdarzeń dla formantów podrzędnych.  
  
 Gdy nie można przesłonić tę metodę, tworzenia formantów można obsługi lub wywoływanie zdarzeń przepuszcza przez zastąpienie <xref:System.Web.UI.Control.OnBubbleEvent%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład kodu przedstawiają sposób tworzenia niestandardowej klasy `ChildControl`, zastępowanie <xref:System.Web.UI.WebControls.Button.OnClick%2A?displayProperty=nameWithType> metodę do wywołania <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metodę, która wysyła <xref:System.Web.UI.WebControls.Button.Click?displayProperty=nameWithType> zdarzenia do swojego elementu nadrzędnego kontrolki serwera ASP.NET. Kiedy użytkownik kliknie przycisk strony ASP.NET, który zawiera wystąpienie `ChildControl`, uruchamia <xref:System.Web.UI.Control.OnBubbleEvent%2A> metody dla formantu nadrzędnego, który zawiera wystąpienie `ChildControl` i zapisuje ciąg "ChildControl klasy OnClick jest — metoda o nazwie"do strony.  
  
 [!code-csharp[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/CS/bubble.cs#2)]
 [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/VB/bubble.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemovedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void RemovedControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RemovedControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RemovedControl(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> Który został usunięty.</param>
        <summary>Wywołuje się po kontrolka podrzędna zostanie usunięty z <see cref="P:System.Web.UI.Control.Controls" /> Kolekcja <see cref="T:System.Web.UI.Control" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.RemovedControl%2A> Metoda jest wywoływana natychmiast po danego formantu zostanie usunięty z <xref:System.Web.UI.Control.Controls%2A> kolekcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka jest <see cref="T:System.Web.UI.WebControls.Substitution" /> formantu.</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal virtual void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który odbiera zawartość sterującą serwera.</param>
        <summary>Wysyła zawartość sterującą serwera do udostępnionego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu, który zapisuje zawartość mają być odwzorowane na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia niestandardowe kontrolki serwera, można przesłonić tę metodę do generowania zawartości dla strony platformy ASP.NET.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje zastępowanie <xref:System.Web.UI.Control.Render%2A> metody. <xref:System.Web.UI.Control.HasControls%2A> Metoda służy do ustalania, czy formant serwera ma formanty podrzędne przechowywane w jego <xref:System.Web.UI.ControlCollection> obiektu, który jest dostępny za pośrednictwem <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> właściwości. Jeśli <xref:System.Web.UI.Control.HasControls%2A> zwraca wartość PRAWDA, a pierwszym formantu serwera, w kolekcji jest tekstowa, a następnie literału tekst jest dołączany do postaci ciągu HTML.  
  
 [!code-csharp[Classic Control.Render Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.Render Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Render Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.Render Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który odbiera renderowanej zawartości.</param>
        <summary>Wyświetla zawartość elementów podrzędnych formantu serwera do udostępnionego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu, który zapisuje zawartość mają być odwzorowane na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powiadamia program ASP.NET do renderowania dowolny kod Active Server Pages (ASP) na stronie. Jeśli ASP kodu nie istnieje na tej stronie, ta metoda renderuje wszystkich podrzędnych kontrolki dla kontrolki serwera. Ta metoda jest wywoływana przez <xref:System.Web.UI.Control.Render%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.RenderChildren%2A> metody w formancie niestandardowego serwera. Określa, czy bieżący formant ma formanty podrzędne w jego <xref:System.Web.UI.ControlCollection> obiektu. Jeśli tak, używa <xref:System.Web.UI.ControlCollection.Count%2A> właściwości do iterowania po kolekcji. Napotkanych każdego formantu podrzędnego, używa <xref:System.Web.UI.Control.RenderControl%2A> metody do renderowania nadrzędnego formantu i wszystkich jego formantów podrzędnych do strony zawierającej.  
  
 Zastąpione <xref:System.Web.UI.Control.Render%2A> metoda wywołuje przesłoniętych <xref:System.Web.UI.Control.RenderChildren%2A> metody.  
  
 [!code-csharp[Control_Sample_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#4)]
 [!code-vb[Control_Sample_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderControl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wysyła zawartość sterującą serwera i przechowuje śledzenie informacji na temat kontroli, gdy śledzenie jest włączone.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public virtual void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiektu, który odbiera zawartość sterującą.</param>
        <summary>Wysyła zawartość sterującą serwera do udostępnionego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu i przechowuje śledzenie informacji na temat kontroli, gdy śledzenie jest włączone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli formant serwera <xref:System.Web.UI.Control.Visible%2A> właściwość jest ustawiona na `true`, ta metoda określa, czy śledzenie jest włączone dla strony. Jeśli tak, przechowuje informacje o śledzeniu skojarzony z formantem i renderuje zawartość sterującą serwera do strony.  
  
 Ta metoda automatycznie jest wywoływana przez stronę podczas renderowania, ale może zostać przesłonięta przez deweloperów kontrolki niestandardowej.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.RenderChildren%2A> metody w formancie niestandardowego serwera. Określa, czy bieżący formant ma formanty podrzędne w jego <xref:System.Web.UI.ControlCollection> obiektu. Jeśli tak, używa <xref:System.Web.UI.ControlCollection.Count%2A> właściwości do iterowania po kolekcji. Napotkanych każdego formantu podrzędnego, używa <xref:System.Web.UI.Control.RenderControl%2A> metody do renderowania podrzędnych formantu i wszystkich jego formantów podrzędnych do strony zawierającej. <xref:System.Web.UI.XhtmlTextWriter> Obiekt, który jest przekazywany do tej metody jest utworzone przez <xref:System.Web.UI.Page.Render%2A> metody.  
  
 [!code-csharp[Control_Sample_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#3)]
 [!code-vb[Control_Sample_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="protected void RenderControl (System.Web.UI.HtmlTextWriter writer, System.Web.UI.Adapters.ControlAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderControl(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.Adapters.ControlAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderControl (writer As HtmlTextWriter, adapter As ControlAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderControl(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::Adapters::ControlAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="adapter" Type="System.Web.UI.Adapters.ControlAdapter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera zawartość sterującą.</param>
        <param name="adapter">
          <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> Definiuje renderowania.</param>
        <summary>Wysyła zawartość sterującą serwera do udostępnionego <see cref="T:System.Web.UI.HtmlTextWriter" /> przy użyciu podanego <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strony sieci Web ASP.NET są użyteczne w szerokim zakresie urządzeń i przeglądarek, które mogą żądać informacji z sieci Web. <xref:System.Web.UI.Control.Adapter%2A> Zwraca właściwość <xref:System.Web.UI.Adapters.ControlAdapter> obiektu, który renderuje formantów na urządzenia wysyłającego żądanie lub ekranu w przeglądarce.  
  
 Aby uzyskać więcej informacji na temat kart, zobacz [architektury omówienie adaptacyjną kontroli zachowania](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 Jeśli formant serwera <xref:System.Web.UI.Control.Visible%2A> właściwość jest ustawiona na `true` i śledzenie jest włączone dla strony, a następnie są przechwytywane informacje o śledzeniu skojarzony z formantem.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku przesłaniania <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" /> metody w formantach niestandardowych wywołania metody klasy podstawowej w celu zapewnienia poprawnie są przechwytywane informacje o śledzeniu.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="P:System.Web.HttpContext.Trace" />
      </Docs>
    </Member>
    <Member MemberName="RenderingCompatibility">
      <MemberSignature Language="C#" Value="public virtual Version RenderingCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RenderingCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.RenderingCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderingCompatibility As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ RenderingCompatibility { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która określa wersję platformy ASP.NET, który renderowany HTML będzie zgodna z.</summary>
        <value>Wersja programu ASP.NET renderowania kodu HTML będzie zgodna z.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program ASP.NET ustawia tę właściwość na wartość `controlRenderingCompatibilityVersion` atrybutu `pages` elementu w pliku Web.config. Jeśli `controlRenderingCompatibilityVersion` atrybut nie jest ustawiony w pliku Web.config, wartością domyślną jest bieżącą wersją programu ASP.NET.  
  
> [!CAUTION]
>  Brak publicznego dostępu Set tej właściwości, ale metody dostępu set obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jeśli ta wartość jest ustawiona w kodzie, efekt będzie nieprzewidywalny.  
  
 Każde wydanie programu ASP.NET może renderować kod HTML inaczej w starszych wersjach. Na przykład w programie ASP.NET 3.5 Jeśli <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> właściwość <xref:System.Web.UI.WebControls.Label> formant jest `false`, domyślnie platforma ASP.NET renderuje `span` element którego `disabled` atrybut jest ustawiony na "wyłączone". W przypadku programu ASP.NET 4, domyślnie `span` element jest renderowany z kaskadowy arkusz stylów (CSS) `class` atrybutu zamiast `disabled` atrybutu. Umożliwia określenie wyłączone wygląd formantu i pozwala uniknąć renderowania nieprawidłowy kod HTML. (Język HTML 4.0 i XHTML 1.1 `span` element nie obsługuje `disabled` atrybutu.)  
  
 Aplikacja sieci Web może zawierać kod, który nie będzie działać prawidłowo, jeśli zmieni się renderowanie kodu HTML. Aby uniknąć tego problemu, można ustawić `controlRenderingCompatibilityVersion` atrybutu `pages` elementu w pliku Web.config, aby wskazać, aby zachować zgodność z wcześniejszych wersji. Na przykład jeśli ustawisz <xref:System.Web.UI.Control.RenderingCompatibility%2A> właściwości `3.5`, wyłączona <xref:System.Web.UI.WebControls.Label> spowoduje, że formant `disabled` atrybutu, a nie klasę CSS.  
  
> [!NOTE]
>  Tę właściwość można ustawić, aby wersja najwcześniejszą będzie `3.5`.  
  
 Aby zachować zgodność z poprzednimi wersjami, podczas uaktualniania projektu sieci Web programu ASP.NET 4 ze starszej wersji za pomocą programu Visual Studio, automatycznie ustawia Visual Studio `controlRenderingCompatibilityVersion` atrybutu w pliku Web.config, aby `3.5`. Jeśli chcesz uaktualnionej witryny sieci Web do renderowania elementów HTML za pomocą algorytmu, który został wprowadzony w ASP.NET 4, można zmienić lub usunąć `controlRenderingCompatibilityVersion` atrybutu.  
  
 W większości przypadków, zachowanie kontrolowane przez właściwość ta jest automatycznie i nie trzeba sprawdzić <xref:System.Web.UI.Control.RenderingCompatibility%2A> właściwości w kodzie. Jednak jeśli są programowania kontrolki niestandardowej, może być konieczne uwzględnienie kodu, która zmienia zachowanie formantu na podstawie ustawienia tej właściwości. Na przykład kontrolkę niestandardową dla programu ASP.NET 4 może się składać z <xref:System.Web.UI.WebControls.Label> kontrolek i kontrolki niestandardowej może określać wyłączone wygląd formantu przez generowanie kodu JavaScript, która zmienia `aspNetDisabled` klasy. To będzie działać, jeśli oczekiwany <xref:System.Web.UI.Control.RenderingCompatibility%2A> jest `4.0` lub nowszym. Ale można uzyskać taki sam wpływ, kiedy <xref:System.Web.UI.Control.RenderingCompatibility%2A> jest `3.5`, formantu niestandardowego kodu musi ustawić formantu `CssClass` dla właściwości "aspNetDisabled" podczas <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> jest właściwość `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      </Docs>
    </Member>
    <Member MemberName="ResolveAdapter">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Adapters.ControlAdapter ResolveAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Adapters.ControlAdapter ResolveAdapter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveAdapter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveAdapter () As ControlAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Adapters::ControlAdapter ^ ResolveAdapter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.ControlAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera formant karty odpowiedzialny za renderowania określonego formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> który spowoduje, że formant.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strony sieci Web ASP.NET jest wyświetlana w szerokim zakresie urządzeń, które są w stanie żądanie strony sieci Web. <xref:System.Web.UI.Control.ResolveAdapter%2A> Metoda zwraca karty kontroli odpowiedzialne do renderowania kontrolki na urządzeniu lub konkretnej przeglądarki, który żądanej strony ASP.NET.  
  
 Typ określonej karty zwrócone, zależy od typu podrzędny <xref:System.Web.UI.Control> klasy, który jest renderowany.  
  
 Aby uzyskać więcej informacji na temat kart, zobacz [architektury omówienie adaptacyjną kontroli zachowania](http://msdn.microsoft.com/library/4ff05ae9-4109-4352-929e-ad893895dbff).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.Configuration.HttpCapabilitiesBase" />
      </Docs>
    </Member>
    <Member MemberName="ResolveClientUrl">
      <MemberSignature Language="C#" Value="public string ResolveClientUrl (string relativeUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveClientUrl(string relativeUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveClientUrl (relativeUrl As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ResolveClientUrl(System::String ^ relativeUrl);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IUrlResolutionService.ResolveClientUrl(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeUrl">Adres URL względem bieżącej strony.</param>
        <summary>Pobiera adres URL, które mogą być używane przez przeglądarkę.</summary>
        <returns>Pełni kwalifikowany adres URL do określonego zasobu odpowiednie do użycia w przeglądarce.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Control.ResolveClientUrl%2A> metoda zwraca ciągu adresu URL odpowiednie do użycia przez klienta dostęp do zasobów na serwerze sieci Web, takich jak pliki obrazów, zawiera linki do dodatkowych stron i tak dalej.  
  
> [!NOTE]
>  Adres URL zwracany przez tę metodę jest względne wobec folderu zawierającego plik źródłowy, w którym zostanie uruchomiony formantu. Formanty, które dziedziczą z tej właściwości, takie jak <xref:System.Web.UI.UserControl> i <xref:System.Web.UI.MasterPage>, zwróci w pełni kwalifikowany adres URL względem formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relativeUrl" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveUrl">
      <MemberSignature Language="C#" Value="public string ResolveUrl (string relativeUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ResolveUrl(string relativeUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveUrl (relativeUrl As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ResolveUrl(System::String ^ relativeUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeUrl">Adres URL skojarzone z <see cref="P:System.Web.UI.Control.TemplateSourceDirectory" /> właściwości.</param>
        <summary>Konwertuje adres URL, który można używać na klienta.</summary>
        <returns>Przekonwertowana adres URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `relativeUrl` parametr zawiera bezwzględny adres URL, zwracany jest adres URL bez zmian. Jeśli `relativeUrl` względny adres URL zawiera parametr, że adres URL jest zmieniany na względny adres URL jest poprawny dla bieżącej ścieżki żądania, dzięki czemu przeglądarki może rozpoznać adresu URL.  
  
 Na przykład rozważmy następujący scenariusz:  
  
-   Klient zażądał strony ASP.NET zawierający formantu użytkownika, który ma obrazu skojarzonego z nim.  
  
-   Strony ASP.NET znajduje się w /Store/page1.aspx.  
  
-   Kontrola użytkownika znajduje się w /Store/UserControls/UC1.ascx.  
  
-   Plik obrazu znajduje się w /UserControls/Images/Image1.jpg.  
  
 Jeśli formant użytkownika przekazuje ścieżkę względną do obrazu (czyli /Store/UserControls/Images/Image1.jpg) do <xref:System.Web.UI.Control.ResolveUrl%2A> metody, metoda zwraca wartość /Images/Image1.jpg.  
  
 Ta metoda używa <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> właściwość, aby rozpoznać bezwzględnego adresu URL. Zwrócony adres URL jest przeznaczona dla klientów.  
  
 Aby uzyskać więcej informacji na temat ścieżek zasobów w witrynie sieci Web, zobacz [ścieżki projektu sieci Web ASP.NET](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd).  
  
> [!NOTE]
>  Dla mobilnych stron sieci Web tylko wtedy, jeśli aplikacja zależy od sesji bez plików cookie lub może odbierać żądania z przeglądarek urządzeń przenośnych, które wymagają sesje bez plików cookie, przy użyciu tyldy ("~") w ścieżce może spowodować przypadkowe utworzenie nowej sesji i potencjalnie utraty dane sesji. Można ustawić właściwość o ścieżce, takie jak "~ /*ścieżki"*, rozpoznać ścieżki wywołując <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> z argumentem, takie jak "~ /*ścieżki"* przed przypisaniem go do właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Web.UI.WebControls.Image> sieci Web obiekt formantu serwera i używa <xref:System.Web.UI.Control.ResolveUrl%2A> metodę, aby ustawić ścieżkę do obrazu, który jest przechowywany przez <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> właściwości.  
  
 [!code-csharp[Control_ResolveUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_ResolveUrl/CS/control_resolveurl.cs#1)]
 [!code-vb[Control_ResolveUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_ResolveUrl/VB/control_resolveurl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Występuje, gdy <paramref name="relativeUrl" /> zawiera parametr <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Control.TemplateSourceDirectory" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje wszystkie kontrolki serwera zmian stanu, które wystąpiły po jej uruchomieniu strony zostało przesłane do serwera.</summary>
        <returns>Zwraca bieżący stan formantu serwera. Jeśli stan jest niedostępny skojarzony z formantem, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.Control.SaveControlState%2A> metodę, aby zapisać informacje o stanie wymaganych dla operacji określonego formantu. Te dane stanu kontroli były przechowywane osobno od danych stan widoku formantu.  
  
 Formanty niestandardowe przy użyciu kontroli stanu należy wywołać <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metoda <xref:System.Web.UI.Control.Page%2A> przed zapisaniem stanu formantu.  
  
   
  
## Examples  
 Poniższy kod przykładowy zastąpienia <xref:System.Web.UI.Control.SaveControlState%2A> metody niestandardowe kontrolki ASP.NET. Gdy ta metoda jest wywoływana, określa czy właściwość wewnętrzna `currentIndex` ma ustawioną wartość innych niż domyślne, a jeśli tak, zapisuje wartość Stan formantu.  
  
 <xref:System.Web.UI.Control.OnInit%2A> Metoda zostanie przesłonięta wywołać <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metoda <xref:System.Web.UI.Control.Page%2A> aby wskazać, że formant niestandardowy używa stanu formantu.  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Po zapisaniu stan kontrolki obiekt ciągu jest zwracana do klienta jako zmienna, która jest przechowywany w formacie HTML <see langword="HIDDEN" /> elementu. Zastępuje tę metodę, aby wyodrębnić informacje o stanie do użycia w formantu.  
  
 Stan kontrolki jest przeznaczony dla niewielkich ilości danych o kluczowym znaczeniu, takie jak indeks strony lub słowem kluczowym. Przy użyciu stanu kontroli w przypadku dużych ilości danych może niekorzystnie wpłynąć na działanie strony. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje wszystkie kontrolki serwera zmian stanu widoku, które wystąpiły po jej uruchomieniu strony zostało przesłane do serwera.</summary>
        <returns>Zwraca bieżący stan widoku formantu serwera. Jeśli stan jest niedostępny widok skojarzony z formantem, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku jest sumą wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane w formancie serwera <xref:System.Web.UI.Control.ViewState%2A> właściwość, która jest wystąpieniem programu <xref:System.Web.UI.StateBag> klasy. Wartość tej właściwości jest następnie trwale obiektowi ciągu po zapisywania stanu etapu cyklu życia serwera kontroli. Aby uzyskać więcej informacji, zobacz [Przegląd cyklu życia strony ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Po zapisaniu stan widoku, ten obiekt string jest zwracana do klienta jako zmienna, która jest przechowywany w formacie HTML `HIDDEN` elementu. Podczas tworzenia formantu niestandardowego serwera o stanie niestandardowy widok stanu widoku można zarządzać jawnie z <xref:System.Web.UI.Control.SaveViewState%2A> i <xref:System.Web.UI.Control.LoadViewState%2A> metody. Aby uzyskać więcej informacji, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce). Aby uzyskać informacje dotyczące implementacji niestandardowego dostawcę stanu sesji, zobacz [implementowanie dostawcy magazynu stanu sesji](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.SaveViewState%2A> metoda formantu niestandardowego serwera ASP.NET. Gdy ta metoda jest wywoływana, określa, czy formant ma formanty podrzędne i czy zawierający <xref:System.Web.UI.Page> obiektu jest wynikiem odświeżania strony. Jeśli oba warunki są spełnione, zmiany <xref:System.Web.UI.WebControls.Label.Text%2A> właściwość <xref:System.Web.UI.WebControls.Label> sieci Web kontrolki serwera można odczytać `Custom Control Has Saved State`. Następnie zapisuje stan widoku formantu jako tablica obiektów o nazwie `allStates`.  
  
 [!code-csharp[Control_StateManagement#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#2)]
 [!code-vb[Control_StateManagement#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected virtual void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" /> Zawierający dane czasu projektowania formantu.</param>
        <summary>Ustawia dane czasu projektowania formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.SetDesignModeState%2A> Metody zapisuje dane czasu projektowania formantu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Należy przesłonić tę metodę w celu zapisywania danych czasu projektowania, który wymaga formantu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetRenderMethodDelegate">
      <MemberSignature Language="C#" Value="public void SetRenderMethodDelegate (System.Web.UI.RenderMethod renderMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRenderMethodDelegate(class System.Web.UI.RenderMethod renderMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRenderMethodDelegate(System::Web::UI::RenderMethod ^ renderMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderMethod" Type="System.Web.UI.RenderMethod" />
      </Parameters>
      <Docs>
        <param name="renderMethod">Informacje niezbędne do przekazania do delegata, dzięki czemu można renderować kontrolki serwera.</param>
        <summary>Przypisuje obiektu delegowanego obsługi zdarzeń do renderowania kontrolki serwera i jego zawartości do kontrolki nadrzędnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostarczany tylko; na potrzeby wdrożenia Użytkownik powinien nigdy nie wywołują go bezpośrednio.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTraceData">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia śledzenia danych śledzenia w czasie projektowania renderowania danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTraceData">
      <MemberSignature Language="C#" Value="public void SetTraceData (object traceDataKey, object traceDataValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTraceData(object traceDataKey, object traceDataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetTraceData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTraceData (traceDataKey As Object, traceDataValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTraceData(System::Object ^ traceDataKey, System::Object ^ traceDataValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceDataKey" Type="System.Object" />
        <Parameter Name="traceDataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="traceDataKey">Klucz danych śledzenia.</param>
        <param name="traceDataValue">Wartość danych śledzenia.</param>
        <summary>Ustawia śledzenia danych czasu projektowania śledzenia renderowania danych, przy użyciu klucza danych śledzenia i wartość danych śledzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTraceData">
      <MemberSignature Language="C#" Value="public void SetTraceData (object tracedObject, object traceDataKey, object traceDataValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTraceData(object tracedObject, object traceDataKey, object traceDataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTraceData (tracedObject As Object, traceDataKey As Object, traceDataValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTraceData(System::Object ^ tracedObject, System::Object ^ traceDataKey, System::Object ^ traceDataValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracedObject" Type="System.Object" />
        <Parameter Name="traceDataKey" Type="System.Object" />
        <Parameter Name="traceDataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tracedObject">Obiekt śledzenia.</param>
        <param name="traceDataKey">Klucz danych śledzenia.</param>
        <param name="traceDataValue">Wartość danych śledzenia.</param>
        <summary>Ustawia śledzenia danych czasu projektowania śledzenia renderowania danych, przy użyciu obiektu śledzonych, klucz danych śledzenia i wartość danych śledzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o obsługujący bieżącego formantu podczas renderowania na powierzchnię projektu.</summary>
        <value>
          <see cref="T:System.ComponentModel.ISite" /> Zawierający informacje o kontenerze kontrolka jest hostowana w.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wiąże lokacji <xref:System.ComponentModel.Component> do obiektu <xref:System.ComponentModel.Container> obiektów i umożliwia komunikację między nimi. Umożliwia także sposób dla kontenera zarządzać jego składniki.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka jest <see cref="T:System.Web.UI.WebControls.Substitution" /> formantu.</exception>
        <altmember cref="T:System.ComponentModel.ISite" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public virtual string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia karnacji, aby zastosować do kontroli.</summary>
        <value>Nazwa karnacji, aby zastosować do kontroli. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Karnacje dostępne do formantu znajdują się w co najmniej jeden plik skórki w katalogu motywu. <xref:System.Web.UI.Control.SkinID%2A> Określa właściwość, która te karnacji można zastosować do kontroli. Karnacji jest przeznaczony dla określonego formantu; Nie można udostępnić ustawienia skórki między formantami różnych typów.  
  
 Jeśli nie ustawisz <xref:System.Web.UI.Control.SkinID%2A> właściwość, formantu używa karnację domyślną, jeśli jest zdefiniowana. Na przykład, jeśli skórki bez Identyfikatora jest zdefiniowany dla <xref:System.Web.UI.WebControls.Image> sterować tym skórki mają zastosowanie do wszystkich <xref:System.Web.UI.WebControls.Image> formantów, który nie należy jawnie odwoływać się skórki według Identyfikatora i nie są ustawione wyłączyć motywów. Jeśli zdefiniowano skórki o identyfikatorze dla <xref:System.Web.UI.WebControls.Image> sterować tym skórki mają zastosowanie tylko do <xref:System.Web.UI.WebControls.Image> kontrolki, których <xref:System.Web.UI.Control.SkinID%2A> właściwość jest ustawiona na ten identyfikator.  
  
 Jeśli pliki skórki w katalogu motywu nie zawierają skórki z określonym <xref:System.Web.UI.Control.SkinID%2A> właściwość <xref:System.ArgumentException> wyjątek w czasie wykonywania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Arkusz stylów została już zainstalowana.  
  
 \- lub -  
  
 <see langword="Page_PreInit" /> Już wystąpiło zdarzenie.  
  
 \- lub -  
  
 Formant został już dodany do <see langword="Controls" /> kolekcji.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlBuilderAccessor.ControlBuilder">
      <MemberSignature Language="C#" Value="System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ControlBuilder As ControlBuilder Implements IControlBuilderAccessor.ControlBuilder" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::ControlBuilder ^ System.Web.UI.IControlBuilderAccessor.ControlBuilder { System::Web::UI::ControlBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IControlBuilderAccessor.ControlBuilder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IControlBuilderAccessor.ControlBuilder" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ControlBuilder" /> Który wbudowane kontrolki; w przeciwnym razie <see langword="null" /> Jeśli użyto nie konstruktora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IControlBuilderAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.GetDesignModeState">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary IControlDesignerAccessor.GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Function GetDesignModeState () As IDictionary Implements IControlDesignerAccessor.GetDesignModeState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionary ^ System.Web.UI.IControlDesignerAccessor.GetDesignModeState() = System::Web::UI::IControlDesignerAccessor::GetDesignModeState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />.</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> Stanu formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IControlDesignerAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.SetDesignModeState">
      <MemberSignature Language="C#" Value="void IControlDesignerAccessor.SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub SetDesignModeState (data As IDictionary) Implements IControlDesignerAccessor.SetDesignModeState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System::Collections::IDictionary ^ data) = System::Web::UI::IControlDesignerAccessor::SetDesignModeState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" /> Zawierający dane czasu projektowania formantu.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IControlDesignerAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.SetOwnerControl">
      <MemberSignature Language="C#" Value="void IControlDesignerAccessor.SetOwnerControl (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Sub SetOwnerControl (owner As Control) Implements IControlDesignerAccessor.SetOwnerControl" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System::Web::UI::Control ^ owner) = System::Web::UI::IControlDesignerAccessor::SetOwnerControl;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner">Właściciel formantu.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IControlDesignerAccessor> interfejsu.  
  
 <xref:System.Web.UI.IControlDesignerAccessor> Interfejs jest używany przez projektanta formantów do wykonania akcji czasu projektowania w formancie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="owner" /> ma ustawioną wartość bieżącego formantu.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.UserData">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UserData As IDictionary Implements IControlDesignerAccessor.UserData" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::IDictionary ^ System.Web.UI.IControlDesignerAccessor.UserData { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IControlDesignerAccessor.UserData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IControlDesignerAccessor.UserData" />.</summary>
        <value>
          <see cref="T:System.Collections.IDictionary" /> Zawierający informacje o formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IControlDesignerAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataBindingsAccessor.DataBindings">
      <MemberSignature Language="C#" Value="System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataBindings As DataBindingCollection Implements IDataBindingsAccessor.DataBindings" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::DataBindingCollection ^ System.Web.UI.IDataBindingsAccessor.DataBindings { System::Web::UI::DataBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataBindingsAccessor.DataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IDataBindingsAccessor.DataBindings" />.</summary>
        <value>Kolekcja powiązania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IDataBindingsAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataBindingsAccessor.HasDataBindings">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IDataBindingsAccessor.HasDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasDataBindings As Boolean Implements IDataBindingsAccessor.HasDataBindings" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataBindingsAccessor.HasDataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IDataBindingsAccessor.HasDataBindings" />.</summary>
        <value>
          <see langword="true" /> Jeśli formant zawiera logikę wiązania danych; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IDataBindingsAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IExpressionsAccessor.Expressions">
      <MemberSignature Language="C#" Value="System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expressions As ExpressionBindingCollection Implements IExpressionsAccessor.Expressions" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::ExpressionBindingCollection ^ System.Web.UI.IExpressionsAccessor.Expressions { System::Web::UI::ExpressionBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IExpressionsAccessor.Expressions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ExpressionBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IExpressionsAccessor.Expressions" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ExpressionBindingCollection" /> Zawierający <see cref="T:System.Web.UI.ExpressionBinding" /> obiekty reprezentujące właściwości i wyrażenia w formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IExpressionsAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IExpressionsAccessor.HasExpressions">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IExpressionsAccessor.HasExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IExpressionsAccessor.HasExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasExpressions As Boolean Implements IExpressionsAccessor.HasExpressions" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IExpressionsAccessor.HasExpressions { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IExpressionsAccessor.HasExpressions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="P:System.Web.UI.IExpressionsAccessor.HasExpressions" />.</summary>
        <value>
          <see langword="true" /> Jeśli formant ma właściwości ustawione za pomocą wyrażenia; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IExpressionsAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IParserAccessor.AddParsedSubObject">
      <MemberSignature Language="C#" Value="void IParserAccessor.AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IParserAccessor.AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddParsedSubObject (obj As Object) Implements IParserAccessor.AddParsedSubObject" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IParserAccessor.AddParsedSubObject(System::Object ^ obj) = System::Web::UI::IParserAccessor::AddParsedSubObject;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do dodania.</param>
        <summary>Opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.Control> wystąpienia jest rzutowane na <xref:System.Web.UI.IParserAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.TemplateControl TemplateControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.TemplateControl TemplateControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.TemplateControl" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateControl As TemplateControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::TemplateControl ^ TemplateControl { System::Web::UI::TemplateControl ^ get(); void set(System::Web::UI::TemplateControl ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do szablonu, który zawiera ten formant.</summary>
        <value>
          <see cref="T:System.Web.UI.TemplateControl" /> Wystąpienia zawierający ten formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.Control> wystąpienie jest częścią szablonu formantu <xref:System.Web.UI.Control.TemplateControl%2A> właściwość zawiera odwołanie do formantu zawierającego. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.TemplateControl?displayProperty=nameWithType> dokumentacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateSourceDirectory">
      <MemberSignature Language="C#" Value="public virtual string TemplateSourceDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateSourceDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.TemplateSourceDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateSourceDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TemplateSourceDirectory { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera katalog wirtualny <see cref="T:System.Web.UI.Page" /> lub <see cref="T:System.Web.UI.UserControl" /> zawierający bieżącego formantu serwera.</summary>
        <value>Katalog wirtualny formantu strony lub użytkownika, który zawiera kontrolki serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> Właściwość określa ścieżkę do formantu strony lub użytkownika, który zawiera bieżącego formantu. Na przykład, jeśli strona sieci Web znajduje się w http://www.contoso.com/application/subdirectory, <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> właściwość zwraca "application/podkatalogu".  
  
 Aby przywrócić aplikacji bezwzględną ścieżką wirtualną ("~ / podkatalogu"), użyj <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> właściwości dwa razy. Jest on używany w po raz pierwszy <xref:System.Web.UI.Control.MapPathSecure%2A?displayProperty=nameWithType> wywołanie metody można uzyskać ścieżki do katalogu, w której znajduje się kontrolka. Drugim jest <xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType> wywołania metody, aby uzyskać listę wszystkich plików zawartych w tym katalogu.  
  
 [!code-csharp[Control_TemplateSourceDirectory#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_TemplateSourceDirectory/CS/control_templatesourcedirectory.cs#2)]
 [!code-vb[Control_TemplateSourceDirectory#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_TemplateSourceDirectory/VB/control_templatesourcedirectory.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.UserControl" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że śledzenie zmian stanu widoku w celu formantu serwera, mogą być przechowywane w formancie serwera <see cref="T:System.Web.UI.StateBag" /> obiektu. Ten obiekt jest dostępny za pośrednictwem <see cref="P:System.Web.UI.Control.ViewState" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana automatycznie z końcem okresu <xref:System.Web.UI.Control.Init> zdarzeń w cyklu życia kontrolki serwera.  
  
 Wywołanie tej metody, podczas opracowywania opartego na szablonie formantów powiązanych z danymi. Ta metoda alerty ASP.NET do monitorowania zmian w stan widoku formantu serwera, który jest wymagany, aby zastąpić <xref:System.Web.UI.Control.DataBind%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.DataBind%2A> metoda formantu niestandardowego serwera ASP.NET. Rozpoczyna wywołując bazie <xref:System.Web.UI.Control.OnDataBinding%2A> metody, a następnie używa <xref:System.Web.UI.ControlCollection.Clear%2A> do usunięcia wszystkich kontrolek podrzędnych i <xref:System.Web.UI.Control.ClearChildViewState%2A> metody do usuwania wszystkich zapisano ustawienia stanu widoku tych formantów podrzędnych. Na koniec <xref:System.Web.UI.Control.ChildControlsCreated%2A> właściwość jest ustawiona na `true`. Następnie używa kontrolki <xref:System.Web.UI.Control.IsTrackingViewState%2A> właściwości w celu określenia, czy dla formantu jest włączone śledzenie zmian stanu widoku. Jeśli nie jest włączona, <xref:System.Web.UI.Control.TrackViewState%2A> metoda jest wywoływana.  
  
 [!code-csharp[Control_StateManagement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#5)]
 [!code-vb[Control_StateManagement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public virtual string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator unikatowy, hierarchicznie kwalifikowaną dla kontrolki serwera.</summary>
        <value>Pełny identyfikator formantu serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość różni się od <xref:System.Web.UI.Control.ID%2A> właściwości, w którym <xref:System.Web.UI.Control.UniqueID%2A> właściwość zawiera identyfikator dla kontrolki serwera przez kontener nazw. Ten identyfikator jest generowany automatycznie podczas przetwarzania żądania strony.  
  
 Ta właściwość jest szczególnie ważne w rozróżnianie kontrolki serwera zawartych w wiązania danych formantu serwera, który powtarza się. Formant powtarzający się <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, i <xref:System.Web.UI.WebControls.GridView> kontrolki serwera (lub wszystkie niestandardowe kontrolki serwera tworzonych zawierające powtarzające się funkcje, gdy powiązany z danymi) w sieci Web służy jako kontener nazw podrzędnej kontrolki. Oznacza to, że tworzy unikatowy obszar nazw dla podrzędnej formantów, aby ich <xref:System.Web.UI.Control.ID%2A> wartości właściwości nie są w konflikcie.  
  
 Na przykład, Jeśli dołączysz ASP.NET <xref:System.Web.UI.WebControls.Label> formant serwera w sieci Web <xref:System.Web.UI.WebControls.Repeater> formantu serwera, a następnie przydzielić <xref:System.Web.UI.WebControls.Label> kontroli <xref:System.Web.UI.Control.ID%2A> wartość właściwości `MyLabel`i <xref:System.Web.UI.WebControls.Repeater> <xref:System.Web.UI.Control.ID%2A> z `MyRepeater`. W przypadku powiązania danych do <xref:System.Web.UI.WebControls.Repeater> do <xref:System.Collections.ArrayList> obiektu z trzech wpisów powstałe w ten sposób <xref:System.Web.UI.Control.UniqueID%2A> właściwości dla każdego wystąpienia <xref:System.Web.UI.WebControls.Label> kontrolki serwera są `MyRepeater$ctl00$MyLabel`, `MyRepeater$ctl01$MyLabel`, i `MyRepeater$ctl02$MyLabel`.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Collections.ArrayList> obiektów i wypełnia trzy ciągi znaków, a następnie wiąże <xref:System.Web.UI.WebControls.Repeater> formant serwera do danych w sieci Web <xref:System.Collections.ArrayList> po załadowaniu strony. Pobiera kod <xref:System.Web.UI.Control.UniqueID%2A> właściwości dla każdego formantu podrzędnego wygenerowanych podczas wiązania z danymi. Trzy wersje tych generuje kod <xref:System.Web.UI.WebControls.Label> kontroli, jak i zapisów ich `UniqueID` wartości właściwości do strony.  
  
 [!code-aspx-csharp[AccessingAspNetControlsProgramaticallyConcepts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AccessingAspNetControlsProgramaticallyConcepts/CS/WebFormsControlIdResolution12.aspx#2)]
 [!code-aspx-vb[AccessingAspNetControlsProgramaticallyConcepts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AccessingAspNetControlsProgramaticallyConcepts/VB/WebFormsControlIdResolution12.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public event EventHandler Unload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unload" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unload;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant serwera jest usuwane z pamięci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty serwera należy wykonać wszelkie końcowego oczyszczania, takich jak zamykanie plików, połączenia z bazą danych i odrzuca obiekty na tym etapie kontroli cyklu życia, zanim wystąpienie zostanie zwolniony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant sprawdza klienta dane wejściowe przeglądarki pod kątem potencjalnie niebezpiecznych wartości.</summary>
        <value>Wartość, która określa, czy formant sprawdza dane wejściowe klienta. Wartości mogą zawierać <see cref="F:System.Web.UI.ValidateRequestMode.Disabled" />, <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />, i <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />. Wartość domyślna to <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />, co oznacza, że kontrolka pobiera wartość po swoim obiekcie nadrzędnym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o weryfikacji żądań, zobacz <xref:System.Web.UnvalidatedRequestValues>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik informacje o stanie, który służy do zapisywania i przywracania stanu widoku sterowania serwerem dla wielu żądań przesyłanych do tej samej stronie.</summary>
        <value>Wystąpienie <see cref="T:System.Web.UI.StateBag" /> klasy, który zawiera informacje o stan widoku formantu serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku formantu server jest sumą wszystkich wartości właściwości. Aby zachować te wartości na żądania HTTP, kontrolek serwera ASP.NET, użyj tej właściwości, który jest wystąpieniem programu <xref:System.Web.UI.StateBag> klasy do przechowywania wartości właściwości. Wartości następnie są przekazywane jako zmienną do ukryty element input języka HTML podczas przetwarzania kolejnych żądań. Aby uzyskać więcej informacji na temat zapisywania stan widoku formantu serwera, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Stan widoku jest domyślnie włączona dla wszystkich kontrolek serwera, ale istnieją okoliczności, w których można ją wyłączyć. Aby uzyskać więcej informacji, zobacz [ASP.NET wydajności — omówienie](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).  
  
 Informacje o słowniki i sposobu ich używania, zobacz [kolekcje i struktury danych](http://msdn.microsoft.com/library/60cc581f-1db5-445b-ba04-a173396bf872).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano implementacja `Text` właściwość, która przechowuje oraz pobiera wartość z jego kontrolą <xref:System.Web.UI.Control.ViewState%2A> właściwości.  
  
 [!code-csharp[SysWebUIControlViewState#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SysWebUIControlViewState/CS/controlviewstate.cs#2)]
 [!code-vb[SysWebUIControlViewState#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SysWebUIControlViewState/VB/controlviewstate.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateIgnoresCase">
      <MemberSignature Language="C#" Value="protected virtual bool ViewStateIgnoresCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewStateIgnoresCase" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewStateIgnoresCase" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ViewStateIgnoresCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ViewStateIgnoresCase { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.StateBag" /> obiekt jest rozróżniana wielkość liter.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.StateBag" /> wystąpienie jest rozróżniana wielkość liter, a w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku utworzenia formantu niestandardowego serwera, który zapisuje swój stan widoku, bez uwzględnienia przypadek, należy przesłonić tę metodę. Po wykonaniu tak wielu obiektów mających taki sam klucz, ale o innej wielkości znaków, mogą być przechowywane w <xref:System.Web.UI.StateBag> skojarzone z <xref:System.Web.UI.Control.ViewState%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób przesłonięcia <xref:System.Web.UI.Control.ViewStateIgnoresCase%2A> właściwości do zwrócenia `true`.  
  
 [!code-csharp[System.Web.UI.Control_ViewStateIgnoresCase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/cs/controlsample_7.cs#2)]
 [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/VB/controlsample_7.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ViewStateMode ViewStateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateMode ViewStateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewStateMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewStateMode As ViewStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ViewStateMode ViewStateMode { System::Web::UI::ViewStateMode get(); void set(System::Web::UI::ViewStateMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb stanu widoku tego formantu.</summary>
        <value>Tryb stan widoku formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.Control.ViewStateMode%2A> właściwość, aby włączyć stan widoku dla poszczególnych kontrolek, nawet po wyłączeniu stanu widoku strony. Aby uzyskać więcej informacji o stanie widoku i stan kontrolki, zobacz <xref:System.Web.UI.Control.EnableViewState%2A> właściwości.  
  
 Aby wyłączyć stanu widoku strony i włącz ją dla określonego formantu na stronie, ustaw <xref:System.Web.UI.Control.EnableViewState%2A> właściwość strony i kontrolki `true`ustaw <xref:System.Web.UI.Control.ViewStateMode%2A> właściwości strony, aby <xref:System.Web.UI.ViewStateMode.Disabled>i ustaw <xref:System.Web.UI.Control.ViewStateMode%2A> właściwości formant <xref:System.Web.UI.ViewStateMode.Enabled>.  
  
 Wartość domyślna <xref:System.Web.UI.Control.ViewStateMode%2A> właściwość strony jest <xref:System.Web.UI.ViewStateMode.Enabled>. Wartość domyślna <xref:System.Web.UI.Control.ViewStateMode%2A> właściwość kontrolki serwera sieci Web, na stronie jest <xref:System.Web.UI.ViewStateMode.Inherit>. Dzięki temu, jeśli ta właściwość nie jest ustawiona na stronie lub poziom kontroli, wartość <xref:System.Web.UI.Control.EnableViewState%2A> właściwość określa zachowanie stanu widoku.  
  
 <xref:System.Web.UI.Control.ViewStateMode%2A> Właściwość strony lub formant ma wpływ tylko wtedy, gdy <xref:System.Web.UI.Control.EnableViewState%2A> właściwość jest ustawiona na `true`. Jeśli <xref:System.Web.UI.Control.EnableViewState%2A> właściwość jest ustawiona na `false`, stan widoku zostaną wyłączone nawet wtedy, gdy <xref:System.Web.UI.Control.ViewStateMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.ViewStateMode.Enabled>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Aby ustawić tę właściwość na wartość, która nie jest nastąpiła próba <see cref="T:System.Web.UI.ViewStateMode" /> wyliczenia.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant serwera jest renderowane jako interfejsu użytkownika na stronie.</summary>
        <value>
          <see langword="true" /> Jeśli formant jest widoczny na stronie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość jest `false`, kontrolki serwera nie jest renderowany. Należy wziąć to pod uwagę podczas organizowania układ strony.  
  
> [!NOTE]
>  Jeśli nie są odtwarzane formantu kontenera, wszystkie formanty, które zawiera nie są wyświetlane nawet w przypadku ustawienia <xref:System.Web.UI.Control.Visible%2A> właściwości poszczególnych kontrolek do `true`. W takim przypadku zwraca poszczególnych kontrolek `false` dla <xref:System.Web.UI.Control.Visible%2A> właściwości, nawet jeśli użytkownik ma jawnie ustawiona na `true`. (To znaczy, jeśli `Visible` ma ustawioną właściwość formantu nadrzędnego `false`formant podrzędny dziedziczy to ustawienie i ustawienie mają pierwszeństwo przed każdego ustawienia lokalne.)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>