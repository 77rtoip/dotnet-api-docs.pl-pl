<Type Name="Control" FullName="System.Web.UI.Control">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7997fce117ccc7ae23044ec686939cb810bed93e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69389122" /></Metadata><TypeSignature Language="C#" Value="public class Control : IDisposable, System.ComponentModel.IComponent, System.Web.UI.IControlBuilderAccessor, System.Web.UI.IControlDesignerAccessor, System.Web.UI.IDataBindingsAccessor, System.Web.UI.IExpressionsAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IUrlResolutionService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Control extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable, class System.Web.UI.IControlBuilderAccessor, class System.Web.UI.IControlDesignerAccessor, class System.Web.UI.IDataBindingsAccessor, class System.Web.UI.IExpressionsAccessor, class System.Web.UI.IParserAccessor, class System.Web.UI.IUrlResolutionService" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Implements IComponent, IControlBuilderAccessor, IControlDesignerAccessor, IDataBindingsAccessor, IDisposable, IExpressionsAccessor, IParserAccessor, IUrlResolutionService" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : IDisposable, System::ComponentModel::IComponent, System::Web::UI::IControlBuilderAccessor, System::Web::UI::IControlDesignerAccessor, System::Web::UI::IDataBindingsAccessor, System::Web::UI::IExpressionsAccessor, System::Web::UI::IParserAccessor, System::Web::UI::IUrlResolutionService" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IParserAccessor&#xA;    interface IUrlResolutionService&#xA;    interface IDataBindingsAccessor&#xA;    interface IControlBuilderAccessor&#xA;    interface IControlDesignerAccessor&#xA;    interface IExpressionsAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IControlBuilderAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IControlDesignerAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataBindingsAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IExpressionsAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IParserAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUrlResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ID")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("Code")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VSDesigner.WebForms.ControlCodeDomSerializer, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ControlDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.UI", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje właściwości, metody i zdarzenia, które są współużytkowane przez wszystkie kontrolki serwera ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to klasa podstawowa, z której pochodzi podczas tworzenia niestandardowych kontrolek serwera ASP.NET. <xref:System.Web.UI.Control>nie ma żadnych funkcji specyficznych dla interfejsu użytkownika. Jeśli tworzysz formant, który nie ma interfejsu użytkownika, lub łączy inne kontrolki, które renderuje własny interfejs użytkownika, pochodzi od <xref:System.Web.UI.Control>. W przypadku tworzenia kontrolki, która ma interfejs użytkownika, należy dziedziczyć <xref:System.Web.UI.WebControls.WebControl> z lub dowolnej kontrolki w przestrzeninazw,którazapewniaodpowiednipunktpoczątkowydlakontrolkiniestandardowej.<xref:System.Web.UI.WebControls>  
  
 <xref:System.Web.UI.Control> Klasa jest klasą bazową dla wszystkich kontrolek serwera ASP.NET, w tym formantów niestandardowych, kontrolek użytkownika i stron. ASP.NET strony są wystąpieniami <xref:System.Web.UI.Page> klasy, które są dziedziczone <xref:System.Web.UI.Control> z klasy i obsługują żądania dla plików, które mają rozszerzenie. aspx.  
  
 <xref:System.Web.UI.Control> Klasa może być używana bezpośrednio lub pośrednio jako część interfejsu użytkownika dla aplikacji sieci Web, a jako taka powinna być scrutinized, aby upewnić się, że są spełnione najlepsze rozwiązania dotyczące pisania bezpiecznego kodu i zabezpieczania aplikacji.  
  
 Aby uzyskać ogólne informacje dotyczące tych tematów, zobacz [Omówienie zagrożeń zabezpieczeń aplikacji sieci Web](https://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a), [NIB: Najlepsze rozwiązania](https://msdn.microsoft.com/library/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05)w zakresie zasad zabezpieczeń i [kluczowe koncepcje zabezpieczeń](~/docs/standard/security/key-security-concepts.md). Aby uzyskać bardziej szczegółowe informacje, zobacz [Zabezpieczanie standardowych kontrolek](https://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [jak: Wyświetlaj bezpieczne komunikaty](https://msdn.microsoft.com/library/6f70ac33-6e11-4e98-ab7d-bae9c0e7eefa)o [błędach, jak: Ochrona przed programami wykorzystującymi luki w zabezpieczeniach w aplikacji sieci Web przez zastosowanie](https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)kodowania HTML do ciągów i [wprowadzenie do kontrolek walidacji](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85)).  
  
   
  
## Examples  
 Poniższy przykład ilustruje niestandardowy formant serwera, który pochodzi od <xref:System.Web.UI.Control> klasy. `InnerContent` Klasa<xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> przesłania metodę, sprawdza, czy Klasa ma jakiekolwiek kontrolki podrzędne na stronie i określa, czy pierwszy element podrzędny formantu jest formantem literału. Jeśli oba te warunki są spełnione, zastąpiona metoda zapisuje ciąg \<HTML H2 > wiadomości:, zawartość kontrolki literału i zamykający \<tag/H2 > na stronie formularzy sieci Web.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[Classic Control Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control Example/CS/source.cs#1)]
 [!code-vb[Classic Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.TemplateControl" />
    <altmember cref="T:System.Web.UI.LiteralControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Tworzenie niestandardowych kontrolek serwera ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.Control" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Adapters.ControlAdapter Adapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.ControlAdapter Adapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Adapter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Adapter As ControlAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Adapters::ControlAdapter ^ Adapter { System::Web::UI::Adapters::ControlAdapter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Adapter : System.Web.UI.Adapters.ControlAdapter" Usage="System.Web.UI.Control.Adapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.ControlAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kartę specyficzną dla przeglądarki dla kontrolki.</summary>
        <value>A <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> dla tej kontrolki. Jeśli docelowa przeglądarka nie wymaga karty, zwraca <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET strony sieci Web są użyteczne na wielu urządzeniach i w przeglądarkach, które mogą żądać informacji z sieci Web. <xref:System.Web.UI.Control.Adapter%2A> Właściwość<xref:System.Web.UI.Adapters.ControlAdapter> zwraca obiekt, który renderuje formant na ekranie żądającym urządzenia lub przeglądarki.  
  
 Aby uzyskać więcej informacji na temat kart sieciowych, zobacz [Omówienie architektury działania kontroli adaptacyjnej](https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100)">Omówienie architektury zachowania kontroli adaptacyjnej</related>
      </Docs>
    </Member>
    <Member MemberName="AddedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void AddedControl (System.Web.UI.Control control, int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddedControl(class System.Web.UI.Control control, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddedControl(System::Web::UI::Control ^ control, int index);" />
      <MemberSignature Language="F#" Value="abstract member AddedControl : System.Web.UI.Control * int -&gt; unit&#xA;override this.AddedControl : System.Web.UI.Control * int -&gt; unit" Usage="control.AddedControl (control, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Web.UI.Control" /> Został dodany.</param>
        <param name="index">Indeks kontrolki w <see cref="P:System.Web.UI.Control.Controls" /> kolekcji.</param>
        <summary>Wywołuje się po dodaniu formantu podrzędnego do <see cref="P:System.Web.UI.Control.Controls" /> kolekcji <see cref="T:System.Web.UI.Control" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana natychmiast po dodaniu kontrolki <xref:System.Web.UI.Control.Controls%2A> do kolekcji. <xref:System.Web.UI.Control.AddedControl%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="control" /><see cref="T:System.Web.UI.WebControls.Substitution" /> jest formantem.</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected virtual void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member AddParsedSubObject : obj -&gt; unit&#xA;override this.AddParsedSubObject : obj -&gt; unit" Usage="control.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><see cref="T:System.Object" /> Reprezentujący przeanalizowany element.</param>
        <summary>Powiadamia formant serwera o przeanalizowaniu elementu, XML lub HTML, a następnie dodaje element do <see cref="T:System.Web.UI.ControlCollection" /> obiektu formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 O ile nie zostanie on zastąpiony, ta <xref:System.Web.UI.LiteralControl> Metoda automatycznie dodaje obiekty do <xref:System.Web.UI.ControlCollection> obiektu formantu serwera. Ta kolekcja jest dostępna za <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> poorednictwem właściwości.  
  
   
  
## Examples  
 Poniższy przykład to niestandardowa kontrolka serwera, która <xref:System.Web.UI.Control.AddParsedSubObject%2A> używa metody do określenia, czy elementy zadeklarowane między tagiem otwierającym i zamykającym <xref:System.Web.UI.WebControls.TextBox> tej kontrolki są kontrolkami serwera sieci Web. Jeśli są, są dodawane do <xref:System.Collections.ArrayList> obiektu,. `items` Gdy zastąpiona <xref:System.Web.UI.Control.CreateChildControls%2A> Metoda jest wywoływana, wykonuje iterację <xref:System.Collections.ArrayList> przez i dodaje każdy <xref:System.Web.UI.ControlCollection> obiekt w nim do niestandardowej kontrolki serwerowej.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[Control_AddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_AddParsedSubObject/CS/control_addparsedsubobject.cs#1)]
 [!code-vb[Control_AddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_AddParsedSubObject/VB/control_addparsedsubobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public virtual void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="abstract member ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit&#xA;override this.ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit" Usage="control.ApplyStyleSheetSkin page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="page"><see cref="T:System.Web.UI.Page" /> Zawiera kontrolkę.</param>
        <summary>Stosuje właściwości stylu zdefiniowane w arkuszu stylów strony do kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> Metoda ustawia właściwości stylu kontrolki na podstawie właściwości skórki zdefiniowanych w katalogu motywu. Zastosowana skórka jest domyślną karnacją dla kontrolki lub karnacją określoną we <xref:System.Web.UI.Control.SkinID%2A> właściwości. <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> Metoda jest wywoływana przez ASP.NET dla formantów deklaratywnych umieszczonych na stronie. Należy wywołać <xref:System.Web.UI.Control.ApplyStyleSheetSkin%2A> metodę dla wszystkich kontrolek utworzonych programowo w czasie wykonywania dla karnacji arkuszy stylów, które mają być zastosowane do kontrolki. Karnacje motywu są stosowane automatycznie. Aby uzyskać więcej informacji na temat różnic między motywami i kaskadowymi arkuszami stylów, zobacz [motywy i karnacje ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Arkusz stylów został już zastosowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeTemplateSourceDirectory">
      <MemberSignature Language="C#" Value="public string AppRelativeTemplateSourceDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeTemplateSourceDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.AppRelativeTemplateSourceDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property AppRelativeTemplateSourceDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeTemplateSourceDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeTemplateSourceDirectory : string with get, set" Usage="System.Web.UI.Control.AppRelativeTemplateSourceDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia katalog <see cref="T:System.Web.UI.Page" /> wirtualny względem aplikacji lub <see cref="T:System.Web.UI.UserControl" /> obiekt, który zawiera tę kontrolkę.</summary>
        <value>Katalog wirtualny względem aplikacji lub kontrolki użytkownika, który zawiera tę kontrolkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> Właściwość zawiera ścieżkę względną aplikacji do kontrolki strony lub użytkownika, która zawiera bieżącą kontrolkę. Na przykład, jeśli strona sieci Web znajduje się w `http://www.contoso.com/application/subdirectory` <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> , właściwość zwraca wartość "~/subdirectory".  
  
 Aby zwrócić ścieżkę wirtualną ("aplikacja/podkatalog"), użyj <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRenderTracing">
      <MemberSignature Language="C#" Value="protected void BeginRenderTracing (System.IO.TextWriter writer, object traceObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BeginRenderTracing(class System.IO.TextWriter writer, object traceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BeginRenderTracing (writer As TextWriter, traceObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BeginRenderTracing(System::IO::TextWriter ^ writer, System::Object ^ traceObject);" />
      <MemberSignature Language="F#" Value="member this.BeginRenderTracing : System.IO.TextWriter * obj -&gt; unit" Usage="control.BeginRenderTracing (writer, traceObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="traceObject" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt, który zapisuje dane śledzenia.</param>
        <param name="traceObject">Obiekt śledzenia.</param>
        <summary>Rozpoczyna śledzenie danych renderowania w czasie projektowania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control BindingContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control BindingContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.BindingContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ BindingContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingContainer : System.Web.UI.Control" Usage="System.Web.UI.Control.BindingContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera formant, który zawiera powiązanie danych tego formantu.</summary>
        <value><see cref="T:System.Web.UI.Control" /> Zawiera powiązanie danych tego formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość zawiera odwołanie <xref:System.Web.UI.Control> do obiektu, który zawiera informacje o powiązaniu danych dla bieżącego formantu. <xref:System.Web.UI.Control.BindingContainer%2A>  
  
 Właściwość jest taka sama <xref:System.Web.UI.Control.NamingContainer%2A> jak właściwość, z wyjątkiem sytuacji, gdy kontrolka jest częścią szablonu. <xref:System.Web.UI.Control.BindingContainer%2A> W takim przypadku <xref:System.Web.UI.Control.BindingContainer%2A> właściwość jest ustawiona <xref:System.Web.UI.Control> na, która definiuje szablon.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="BuildProfileTree">
      <MemberSignature Language="C#" Value="protected void BuildProfileTree (string parentId, bool calcViewState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BuildProfileTree(string parentId, bool calcViewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BuildProfileTree (parentId As String, calcViewState As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BuildProfileTree(System::String ^ parentId, bool calcViewState);" />
      <MemberSignature Language="F#" Value="member this.BuildProfileTree : string * bool -&gt; unit" Usage="control.BuildProfileTree (parentId, calcViewState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentId" Type="System.String" />
        <Parameter Name="calcViewState" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentId">Identyfikator elementu nadrzędnego formantu.</param>
        <param name="calcViewState">Wartość logiczna wskazująca, czy rozmiar widoku jest obliczany.</param>
        <summary>Zbiera informacje o formancie serwera i dostarcza go do <see cref="P:System.Web.UI.Page.Trace" /> właściwości, która będzie wyświetlana po włączeniu śledzenia dla strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość gromadzi informacje niezbędne do hierarchii interfejsu użytkownika strony i przekazuje je do właściwości [ &lt;śledzenia&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/trace-element.md) strony. Po włączeniu śledzenia dla strony lub aplikacji, te informacje są wyświetlane w `Control Tree` sekcji danych wyjściowych śledzenia. Dane wyjściowe śledzenia dla strony są dołączane na końcu strony; śledzenie danych wyjściowych dla aplikacji może być wyświetlane w podglądzie śledzenia (plik Trace. axd), który jest przechowywany w katalogu głównym aplikacji. Aby uzyskać więcej informacji na temat śledzenia, zobacz [Omówienie śledzenia ASP.NET](https://msdn.microsoft.com/library/1552561d-887c-4002-8770-f92662cdf416).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildControlsCreated">
      <MemberSignature Language="C#" Value="protected bool ChildControlsCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildControlsCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ChildControlsCreated" />
      <MemberSignature Language="VB.NET" Value="Protected Property ChildControlsCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ChildControlsCreated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildControlsCreated : bool with get, set" Usage="System.Web.UI.Control.ChildControlsCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy zostały utworzone formanty podrzędne kontrolki serwera.</summary>
        <value><see langword="true" />Jeśli zostały utworzone formanty podrzędne; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje przesłonięcie <xref:System.Web.UI.Control.OnDataBinding%2A> metody kontrolki niestandardowej. <xref:System.Web.UI.WebControls.Repeater> Aby upewnić się, że kontrolki podrzędne nie zostaną utworzone do momentu <xref:System.Web.UI.Control.ChildControlsCreated%2A> ponownego utworzenia powiązania danych `true` , właściwość <xref:System.Web.UI.WebControls.RepeaterItem> zostanie ustawiona na po utworzeniu obiektów i dodaniu <xref:System.Web.UI.ControlCollection> do obiektu formantu.  
  
 [!code-csharp[TemplatedDataBoundControl3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl3/cs/customrepeater.cs#1)]
 [!code-vb[TemplatedDataBoundControl3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl3/vb/customrepeater.vb#1)]  
  
 Poniższy przykład ilustruje sposób używania niestandardowego formantu wzmacniania na stronie sieci Web.  
  
 [!code-aspx-csharp[TemplatedDataBoundControl3#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl3/cs/default.aspx#2)]
 [!code-aspx-vb[TemplatedDataBoundControl3#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl3/vb/default.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedClientID">
      <MemberSignature Language="C#" Value="protected void ClearCachedClientID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearCachedClientID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearCachedClientID" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearCachedClientID ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearCachedClientID();" />
      <MemberSignature Language="F#" Value="member this.ClearCachedClientID : unit -&gt; unit" Usage="control.ClearCachedClientID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia wartość w <see cref="P:System.Web.UI.Control.ClientID" /> pamięci podręcznej na. <see langword="null" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearChildControlState">
      <MemberSignature Language="C#" Value="protected void ClearChildControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildControlState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildControlState();" />
      <MemberSignature Language="F#" Value="member this.ClearChildControlState : unit -&gt; unit" Usage="control.ClearChildControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa informacje o stanie formantu dla kontrolek podrzędnych kontrolki serwerowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.ClearChildControlState%2A> Metoda jest używana, gdy informacje o stanie formantu podrzędnego zapisywana w stanie kontroli nadrzędnego formantu są zastępowane w miarę tworzenia nowych formantów podrzędnych, na przykład w przypadku formantów podrzędnych powiązań danych w formancie serwera powiązanego z danymi. Wywołanie metody do pustych kontrolek podrzędnych przed <xref:System.Web.UI.Control.SaveControlState%2A> wywołaniem metody zmniejsza rozmiar informacji o stanie formantu, które muszą być przechowywane lub przesyłane. <xref:System.Web.UI.Control.ClearChildControlState%2A>  
  
 Podczas ponownego tworzenia formantów <xref:System.Web.UI.Control> podrzędnych obiektu <xref:System.Web.UI.Control.ClearChildControlState%2A> Użyj metody, aby wyczyścić stan formantu podrzędnego, tak aby nie został zastosowany do nowych formantów przypadkowo.  
  
 Aby wyczyścić stan formantu podrzędnego i stan widoku, użyj <xref:System.Web.UI.Control.ClearChildState%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.ClearChildState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildViewState" />
      </Docs>
    </Member>
    <Member MemberName="ClearChildState">
      <MemberSignature Language="C#" Value="protected void ClearChildState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildState();" />
      <MemberSignature Language="F#" Value="member this.ClearChildState : unit -&gt; unit" Usage="control.ClearChildState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa informacje o stanie widoku i kontroli dla wszystkich formantów podrzędnych formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.ClearChildState%2A> Metoda czyści wszystkie informacje o stanie widoku i kontroli dla formantów podrzędnych. Jest równoważne wywołaniu <xref:System.Web.UI.Control.ClearChildViewState%2A> metody <xref:System.Web.UI.Control.ClearChildControlState%2A> i metody.  
  
 Podczas ponownego tworzenia formantów <xref:System.Web.UI.Control> podrzędnych obiektu <xref:System.Web.UI.Control.ClearChildState%2A> Użyj metody, aby wyczyścić stan podrzędny, aby nie został zastosowany do nowych kontrolek przypadkowo.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, <xref:System.Web.UI.Control.OnDataBinding%2A> jak zastąpić metodę dla kontrolki powiązanej z danymi. Jeśli źródło danych, z którym jest powiązane sterowanie, jest wypełnione, <xref:System.Web.UI.ControlCollection> kolekcja kontrolki zostanie opróżniona <xref:System.Web.UI.ControlCollection.Clear%2A> przy użyciu metody, a <xref:System.Web.UI.Control.ClearChildState%2A> Metoda jest używana do usuwania wszelkich informacji o stanie, które zostały zapisane dla formantów podrzędnych.  
  
 [!code-csharp[TemplatedDataBoundControl2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl2/cs/templatedataboundcontrol.cs#3)]
 [!code-vb[TemplatedDataBoundControl2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl2/vb/templatedataboundcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.ClearChildControlState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildViewState" />
      </Docs>
    </Member>
    <Member MemberName="ClearChildViewState">
      <MemberSignature Language="C#" Value="protected void ClearChildViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearChildViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearChildViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearChildViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearChildViewState();" />
      <MemberSignature Language="F#" Value="member this.ClearChildViewState : unit -&gt; unit" Usage="control.ClearChildViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa informacje o stanie widoku dla wszystkich formantów podrzędnych formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest często używana podczas przesłonięcia <xref:System.Web.UI.Control.DataBind%2A> metody podczas tworzenia formantów serwera powiązanego z danymi. Jeśli ta metoda nie zostanie wywołana, widok kontroli podrzędnej — informacje o stanie mogą być zapisywane w formancie nadrzędnego serwera tylko wtedy, gdy dane są powiązane.  
  
 Podczas ponownego tworzenia formantów <xref:System.Web.UI.Control>podrzędnych obiektu, użyj metody, <xref:System.Web.UI.Control.ClearChildViewState%2A> aby wyczyścić stan widoku podrzędnego, tak aby nie był zastosowany do nowych kontrolek przypadkowo.  
  
 Aby uzyskać więcej informacji na temat korzystania z tej [metody, zobacz How to: Tworzenie kontrolek](https://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2)użytkownika ASP.NET z szablonami.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="M:System.Web.UI.Control.ClearChildControlState" />
        <altmember cref="M:System.Web.UI.Control.ClearChildState" />
        <related type="Article" href="https://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2">Instrukcje: Tworzenie kontrolek użytkownika z szablonami</related>
      </Docs>
    </Member>
    <Member MemberName="ClearEffectiveClientIDMode">
      <MemberSignature Language="C#" Value="protected void ClearEffectiveClientIDMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearEffectiveClientIDMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ClearEffectiveClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearEffectiveClientIDMode ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearEffectiveClientIDMode();" />
      <MemberSignature Language="F#" Value="member this.ClearEffectiveClientIDMode : unit -&gt; unit" Usage="control.ClearEffectiveClientIDMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia właściwość bieżącego wystąpienia kontrolki i wszystkich formantów podrzędnych na <see cref="F:System.Web.UI.ClientIDMode.Inherit" />. <see cref="P:System.Web.UI.Control.ClientIDMode" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public virtual string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.Control.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator formantu dla znacznika HTML, który jest generowany przez ASP.NET.</summary>
        <value>Identyfikator kontrolki dla znacznika HTML, który jest generowany przez ASP.NET.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy formant serwera sieci Web jest renderowany jako element HTML, `id` atrybut elementu HTML jest ustawiany na wartość <xref:System.Web.UI.Control.ClientID%2A> właściwości. Wartość jest często używana do uzyskiwania dostępu do elementu HTML w skrypcie klienta przy `document.getElementById` użyciu metody. <xref:System.Web.UI.Control.ClientID%2A> Identyfikator jest również często używany w regułach CSS, aby określić elementy do stylu. Na przykład następująca reguła stylu CSS `span` wybiera wszystkie elementy, które `id` mają wartość `ProductIDLabel` atrybutu i ustawia ich `background-color` atrybut na `white`:  
  
```  
span#ProductIDLabel { background-color: white; }  
```  
  
 ASP.NET udostępnia wiele algorytmów służących do generowania <xref:System.Web.UI.Control.ClientID%2A> wartości właściwości. Wybierz algorytm, który ma być używany dla kontrolki przez ustawienie <xref:System.Web.UI.Control.ClientIDMode%2A> jej właściwości. Algorytmy są identyfikowane przez <xref:System.Web.UI.ClientIDMode> wartości wyliczenia, które są wymienione w poniższej tabeli.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.ClientIDMode.AutoID>|Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ID%2A> wartości każdego <xref:System.Web.UI.Control.ID%2A> nadrzędnego kontenera nazw z wartością formantu. <xref:System.Web.UI.Control.ClientID%2A> W scenariuszach wiązania z danymi, w których renderowane jest wiele wystąpień kontrolki, wartość zwiększania jest wstawiana przed <xref:System.Web.UI.Control.ID%2A> wartością kontrolki. Każdy segment jest oddzielony znakiem podkreślenia (_). Ten algorytm został użyty w wersjach programu ASP.NET wcześniejszych niż ASP.NET 4.|  
|<xref:System.Web.UI.ClientIDMode.Static>|Wartość jest ustawiona na wartość <xref:System.Web.UI.Control.ID%2A> właściwości. <xref:System.Web.UI.Control.ClientID%2A> Jeśli formant jest kontenerem nazewnictwa, formant jest używany jako Góra hierarchii nazewnictwa kontenerów dla wszystkich kontrolek, które zawiera.|  
|<xref:System.Web.UI.ClientIDMode.Predictable>|Ten algorytm jest używany dla formantów, które znajdują się w formantach powiązanych z danymi. Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ClientID%2A> wartości <xref:System.Web.UI.Control.ID%2A> nadrzędnego kontenera nazw z wartością formantu. <xref:System.Web.UI.Control.ClientID%2A> Jeśli formant jest kontrolką powiązaną z danymi, która generuje wiele wierszy, wartość pola danych określonego we <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> właściwości zostanie dodana na końcu. <xref:System.Web.UI.WebControls.GridView> Dla kontrolki można określić wiele pól danych. <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Jeśli właściwość jest pusta, na końcu zostanie dodany numer sekwencyjny zamiast wartości pola danych. Każdy segment jest oddzielony znakiem podkreślenia (_).|  
|<xref:System.Web.UI.ClientIDMode.Inherit>|Formant dziedziczy <xref:System.Web.UI.ClientIDMode> ustawienie <xref:System.Web.UI.Control.NamingContainer%2A> kontrolki.|  
  
 Wartość <xref:System.Web.UI.Control.ClientIDMode%2A> domyślna strony to <xref:System.Web.UI.ClientIDMode.Predictable>. Wartość <xref:System.Web.UI.Control.ClientIDMode%2A> domyślna dla kontrolki to <xref:System.Web.UI.ClientIDMode.Inherit>. Ponieważ wartością domyślną dla formantów jest <xref:System.Web.UI.ClientIDMode.Inherit>, domyślnym trybem generowania jest <xref:System.Web.UI.ClientIDMode.Predictable>. Jeśli jednak użyjesz programu Visual Studio do przekonwertowania projektu sieci Web na ASP.NET 4 ze starszej wersji, program Visual Studio automatycznie ustawi domyślną <xref:System.Web.UI.ClientIDMode.AutoID> lokację w pliku Web. config.  
  
 Aby uzyskać więcej informacji, zobacz [Identyfikacja kontrolki serwera sieci Web ASP.NET](https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 W poniższych przykładach pokazano kontrolkę użytkownika sieci Web, która znajduje się wewnątrz strony zawartości strony wzorcowej. Kontrolka użytkownika zawiera <xref:System.Web.UI.WebControls.DropDownList> kontrolkę <xref:System.Web.UI.WebControls.Label> i kontrolkę. Tekst wyświetlany w <xref:System.Web.UI.WebControls.Label> kontrolce jest określany przez wartość, którą użytkownik wybiera <xref:System.Web.UI.WebControls.DropDownList> z formantu. Wartość tekstowa jest ustawiana za pomocą skryptu klienta, dzięki czemu Strona sieci Web nie musi ogłaszać z powrotem na serwerze w celu ustawienia tej wartości. Aby uzyskać odwołanie do elementu HTML, który jest renderowany dla <xref:System.Web.UI.WebControls.Label> formantu w skrypcie klienta, należy znać wartość <xref:System.Web.UI.Control.ClientID%2A> właściwości kontrolki. Jednak ponieważ kontrolka użytkownika może być umieszczona w dowolnym miejscu na stronie sieci Web, nie jest możliwe uzyskanie informacji o tym, które kontenery nazewnictwa będą zawierać formanty. Aby upewnić się, <xref:System.Web.UI.Control.ClientID%2A> że wartość będzie taka sama <xref:System.Web.UI.Control.ID%2A> jak wartość <xref:System.Web.UI.Control.ClientIDMode%2A> , kod ustawia wartość na <xref:System.Web.UI.WebControls.ValidatorDisplay.Static>.  
  
 Poniższy przykład pokazuje kontrolkę użytkownika.  
  
  
  
 Poniższy przykład pokazuje stronę zawartości, która zawiera kontrolkę użytkownika.  
  
  
  
 Poniższy przykład pokazuje stronę wzorcową zawierającą stronę zawartość.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET — identyfikacja formantu</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fb58ed73-d8f7-401c-9560-d99dd9ca7db8">Instrukcje: Kontrola dostępu z JavaScript według identyfikatora</related>
        <related type="Article" href="https://msdn.microsoft.com/library/776f3747-7fa7-4851-ae27-f728ede1a564">Przewodnik: Łatwiejsze uzyskiwanie dostępu do formantów związanych z danymi przy użyciu języka JavaScript</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f0eaf202-61b6-4cd8-9604-6b7638fdf0ae">Przewodnik: Łatwiejsze dostęp do kontrolek w kontrolkach użytkownika sieci Web przy użyciu języka JavaScript</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Skrypt klienta na stronach sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.UI.Control.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia algorytm używany do generowania wartości <see cref="P:System.Web.UI.Control.ClientID" /> właściwości.</summary>
        <value>Wartość, która wskazuje sposób <see cref="P:System.Web.UI.Control.ClientID" /> generowania właściwości. Wartość domyślna to <see cref="F:System.Web.UI.ClientIDMode.Inherit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET udostępnia wiele algorytmów służących do generowania <xref:System.Web.UI.Control.ClientID%2A> wartości właściwości. Wybierz algorytm, który ma być używany dla kontrolki przez ustawienie <xref:System.Web.UI.Control.ClientIDMode%2A> jej właściwości. Algorytmy są identyfikowane przez <xref:System.Web.UI.ClientIDMode> wartości wyliczenia, które są wymienione w poniższej tabeli.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|<xref:System.Web.UI.ClientIDMode.AutoID>|Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ID%2A> wartości każdego <xref:System.Web.UI.Control.ID%2A> nadrzędnego kontenera nazw z wartością formantu. <xref:System.Web.UI.Control.ClientID%2A> W scenariuszach wiązania z danymi, w których renderowane jest wiele wystąpień kontrolki, wartość zwiększania jest wstawiana przed <xref:System.Web.UI.Control.ID%2A> wartością kontrolki. Każdy segment jest oddzielony znakiem podkreślenia (_). Ten algorytm został użyty w wersjach programu ASP.NET wcześniejszych niż ASP.NET 4.|  
|<xref:System.Web.UI.ClientIDMode.Static>|Wartość jest ustawiona na wartość <xref:System.Web.UI.Control.ID%2A> właściwości. <xref:System.Web.UI.Control.ClientID%2A> Jeśli formant jest kontenerem nazewnictwa, formant jest używany jako Góra hierarchii nazewnictwa kontenerów dla wszystkich kontrolek, które zawiera.|  
|<xref:System.Web.UI.ClientIDMode.Predictable>|Ten algorytm jest używany dla formantów, które znajdują się w formantach powiązanych z danymi. Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ClientID%2A> wartości <xref:System.Web.UI.Control.ID%2A> nadrzędnego kontenera nazw z wartością formantu. <xref:System.Web.UI.Control.ClientID%2A> Jeśli formant jest kontrolką powiązaną z danymi, która generuje wiele wierszy, wartość pola danych określonego we <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> właściwości zostanie dodana na końcu. <xref:System.Web.UI.WebControls.GridView> Dla kontrolki można określić wiele pól danych. <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Jeśli właściwość jest pusta, na końcu zostanie dodany numer sekwencyjny zamiast wartości pola danych. Ta liczba zaczyna się od zera i zwiększa się o 1 dla każdego wiersza. Każdy segment jest oddzielony znakiem podkreślenia (_).|  
|<xref:System.Web.UI.ClientIDMode.Inherit>|Formant dziedziczy <xref:System.Web.UI.ClientIDMode> ustawienie <xref:System.Web.UI.Control.NamingContainer%2A> kontrolki.|  
  
 Wartość <xref:System.Web.UI.Control.ClientIDMode%2A> domyślna strony to <xref:System.Web.UI.ClientIDMode.Predictable>. Wartość <xref:System.Web.UI.Control.ClientIDMode%2A> domyślna dla kontrolki to <xref:System.Web.UI.ClientIDMode.Inherit>. Ponieważ wartością domyślną dla formantów jest <xref:System.Web.UI.ClientIDMode.Inherit>, domyślnym trybem generowania jest <xref:System.Web.UI.ClientIDMode.Predictable>. Jeśli jednak użyjesz programu Visual Studio do przekonwertowania projektu sieci Web na ASP.NET 4 ze starszej wersji, program Visual Studio automatycznie ustawi domyślną <xref:System.Web.UI.ClientIDMode.AutoID> lokację w pliku Web. config.  
  
 Aby uzyskać więcej informacji, zobacz [Identyfikacja kontrolki serwera sieci Web ASP.NET](https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 Poniższy przykład pokazuje <xref:System.Web.UI.WebControls.Label> kontrolki, które są zawarte <xref:System.Web.UI.WebControls.ListView> w kontrolce. <xref:System.Web.UI.Control.ClientIDMode%2A> <xref:System.Web.UI.ClientIDMode.Predictable> Na kontrolce `ProductID` Właściwość<xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> jest ustawiona na, a właściwość jest ustawiona na. <xref:System.Web.UI.WebControls.ListView> W renderowanym kodzie HTML tworzy trzy `span` elementy, które odpowiadają trzem `ProductIDLabel` kontrolkom. Po uruchomieniu `id` strony atrybuty `span` dla elementów są ustawiane na następujące wartości:  
  
-   `ListView1_ProductIDLabel_1`  
  
-   `ListView1_ProductIDLabel_34`  
  
-   `ListView1_ProductIDLabel_43`  
  
  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7">ASP.NET — identyfikacja formantu</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fb58ed73-d8f7-401c-9560-d99dd9ca7db8">Instrukcje: Kontrola dostępu z JavaScript według identyfikatora</related>
        <related type="Article" href="https://msdn.microsoft.com/library/776f3747-7fa7-4851-ae27-f728ede1a564">Przewodnik: Łatwiejsze uzyskiwanie dostępu do formantów związanych z danymi przy użyciu języka JavaScript</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f0eaf202-61b6-4cd8-9604-6b7638fdf0ae">Przewodnik: Łatwiejsze dostęp do kontrolek w kontrolkach użytkownika sieci Web przy użyciu języka JavaScript</related>
      </Docs>
    </Member>
    <Member MemberName="ClientIDSeparator">
      <MemberSignature Language="C#" Value="protected char ClientIDSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char ClientIDSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ClientIDSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientIDSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property char ClientIDSeparator { char get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDSeparator : char" Usage="System.Web.UI.Control.ClientIDSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość znaku reprezentującą znak separatora używany we <see cref="P:System.Web.UI.Control.ClientID" /> właściwości.</summary>
        <value>Zawsze zwraca znak podkreślenia (_).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość jest generowana przez połączenie <xref:System.Web.UI.Control.ID%2A> wartości kontrolki i <xref:System.Web.UI.Control.UniqueID%2A> wartości jej kontrolki nadrzędnej. <xref:System.Web.UI.Control.ClientID%2A> Każda część wygenerowanej <xref:System.Web.UI.Control.ID%2A> właściwości jest oddzielona <xref:System.Web.UI.Control.ClientIDSeparator%2A> wartością właściwości. Wartość zawsze zwraca znak podkreślenia (_).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="P:System.Web.UI.Control.ClientID" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.Control.IdSeparator" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Context" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.UI.Control.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.HttpContext" /> Pobiera obiekt skojarzony z kontrolką serwera dla bieżącego żądania sieci Web.</summary>
        <value>Określony <see cref="T:System.Web.HttpContext" /> obiekt skojarzony z bieżącym żądaniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość daje dostęp do <xref:System.Web.HttpContext> obiektu dla bieżącego żądania sieci Web. Obiekt <xref:System.Web.HttpContext.Application%2A>zawiera właściwości <xref:System.Web.HttpContext.Session%2A> ,któreuzyskują<xref:System.Web.HttpContext.Response%2A> dostęp do obiektów, ,iinnych,którezawierająinformacjeobieżącymżądaniuHTTP.<xref:System.Web.HttpContext.Request%2A> Zawiera również metody, które umożliwiają uzyskiwanie informacji o konfiguracji i Ustawianie lub czyszczenie błędów dla żądania.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/CS/control1.cs#1)]
 [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/VB/control1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="T:System.Web.HttpApplication" />
        <altmember cref="T:System.Web.HttpServerUtility" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.Control.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.ControlCollection" /> Pobiera obiekt reprezentujący kontrolki podrzędne dla określonej kontrolki serwera w hierarchii interfejsu użytkownika.</summary>
        <value>Kolekcja formantów podrzędnych dla określonej kontrolki serwerowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na stronie ASP.NET, gdy kontrolki są dodawane deklaratywnie między tagiem otwierającym i zamykającym kontrolki serwer, ASP.NET automatycznie dodaje formanty do zawartej kontrolki <xref:System.Web.UI.ControlCollection>serwerowej. Wszystkie Tagi HTML lub ciągi tekstowe, które nie są przetwarzane na serwerze, są traktowane <xref:System.Web.UI.LiteralControl> jako obiekty. Są one dodawane do kolekcji, podobnie jak inne kontrolki serwera.  
  
 Właściwość umożliwia programistyczny dostęp do wystąpienia <xref:System.Web.UI.ControlCollection> klasy dla dowolnej kontrolki serwerowej. <xref:System.Web.UI.Control.Controls%2A> Można dodać kontrolki do kolekcji, usunąć kontrolki z kolekcji lub wykonać iterację w formantach serwera w kolekcji.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dodać kontrolki podrzędne do <xref:System.Web.UI.ControlCollection> obiektu formantu serwera za pomocą jego <xref:System.Web.UI.Control.Controls%2A> właściwości.  
  
 [!code-csharp[Classic Control.Controls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.Controls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Controls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.Controls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="P:System.Web.UI.Control.Controls" /> właściwości należy <see cref="M:System.Web.UI.Control.EnsureChildControls" /> wywołać metodę. Ponadto, jeśli planujesz dodać kontrolki do kolekcji formantów programowo, rozważ dodanie kontrolek w zastąpionej <see cref="M:System.Web.UI.Control.CreateChildControls" /> metodzie.</para></block>
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal virtual void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void CreateChildControls();" />
      <MemberSignature Language="F#" Value="abstract member CreateChildControls : unit -&gt; unit&#xA;override this.CreateChildControls : unit -&gt; unit" Usage="control.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wywoływane przez platformę strony ASP.NET w celu powiadomienia formantów serwera, które używają implementacji opartej na kompozycjach, do tworzenia wszelkich formantów podrzędnych, które zawierają w przygotowaniu do ponownego ogłaszania lub renderowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas opracowywania kontrolki serwera złożonego lub z szablonem należy zastąpić tę metodę. Kontrolki, które <xref:System.Web.UI.Control.CreateChildControls%2A> zastępują metodę, <xref:System.Web.UI.INamingContainer> powinny implementować interfejs, aby uniknąć konfliktów nazw.  
  
 Aby uzyskać więcej informacji, zobacz [Szablony formantów serwera sieci Web](https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae) i [Opracowywanie niestandardowych kontrolek serwera ASP.NET](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 Poniższy przykład ilustruje przesłoniętą wersję <xref:System.Web.UI.Control.CreateChildControls%2A> metody. W tej implementacji formant złożony wyświetla <xref:System.Web.UI.WebControls.TextBox> kontrolkę ujętą w dwie kontrolki literału, które renderują kod HTML.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/CS/compositecontrolsample1.cs#2)]
 [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/VB/compositecontrolsample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
        <altmember cref="P:System.Web.UI.Control.ChildControlsCreated" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Tworzenie niestandardowych kontrolek serwera ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f769d290-fd04-4084-85fc-4ea30dd2e8ae">Szablony kontrolek serwera sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection&#xA;override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="control.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Web.UI.ControlCollection" /> obiekt do przechowywania formantów podrzędnych (zarówno literału, jak i serwera) formantu serwera.</summary>
        <returns><see cref="T:System.Web.UI.ControlCollection" /> Obiekt, który zawiera kontrolki serwera podrzędnego bieżącego formantu serwera.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp tę metodę w niestandardowej kontrolce serwera, jeśli utworzono obiekt kolekcji, który jest pochodną <xref:System.Web.UI.ControlCollection> klasy. Następnie można utworzyć wystąpienie tej klasy kolekcji w przesłonięciu tej metody.  
  
   
  
## Examples  
 Poniższy przykład kodu przesłania <xref:System.Web.UI.Control.CreateControlCollection%2A> metodę <xref:System.Web.UI.ControlCollection> , aby utworzyć wystąpienie `CustomControlCollection` klasy, która dziedziczy z klasy.  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#2)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#2)]  
  
 Poniższy przykład kodu używa <xref:System.Web.UI.Control.CreateControlCollection%2A> metody w niestandardowym przesłonięciu <xref:System.Web.UI.Control.CreateChildControls%2A> kontroli serwera metody. Nowa kolekcja zostanie utworzona, a następnie uzupełniona dwoma kontrolkami `firstControl` podrzędnymi i. `secondControl`  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBind">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy powiązanie źródła danych z wywołaną kontrolką serwera i wszystkimi jego kontrolkami podrzędnymi.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public virtual void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DataBind();" />
      <MemberSignature Language="F#" Value="abstract member DataBind : unit -&gt; unit&#xA;override this.DataBind : unit -&gt; unit" Usage="control.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy powiązanie źródła danych z wywołaną kontrolką serwera i wszystkimi jego kontrolkami podrzędnymi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej metody, aby powiązać dane ze źródła z kontrolką serwera. Ta metoda jest często używana po pobraniu zestawu danych za pomocą zapytania do bazy danych. Większość formantów automatycznie wykonuje powiązania danych, co oznacza, że zwykle nie trzeba wywoływać tej metody jawnie.  
  
 Ta metoda jest zwykle zastępowana podczas tworzenia niestandardowego formantu powiązanego z danymi. Aby uzyskać więcej informacji, zobacz [jak: Twórz kontrolki](https://msdn.microsoft.com/library/07664410-02dd-4494-af53-a9259741d4f2) użytkownika ASP.NET z szablonami i [Opracowuj niestandardowe formanty serwera sieci Web powiązane z danymi](https://msdn.microsoft.com/library/88fe02a3-957f-4ff7-84f5-2d7ab78db4c1). Gdy jest wywoływana w formancie serwera, ta metoda rozwiązuje wszystkie wyrażenia powiązań danych w formancie serwera i w dowolnej jego kontrolce podrzędnej.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.DataBind%2A> metodę w niestandardowej kontrolce serwera ASP.NET. Zaczyna od wywołania metody bazowej <xref:System.Web.UI.Control.OnDataBinding%2A> , a następnie <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=nameWithType> używa metody do usuwania wszystkich formantów podrzędnych i <xref:System.Web.UI.Control.ClearChildViewState%2A> metody usuwania wszystkich zapisanych ustawień stanu widoku dla tych formantów podrzędnych. Na koniec `true` <xref:System.Web.UI.Control.TrackViewState%2A> właściwość jest ustawiona na, a formant jest polecany do śledzenia zmian stanu widoku nowo utworzonych kontrolek za pomocą metody. <xref:System.Web.UI.Control.ChildControlsCreated%2A> Jest to typowa technika, w której można powiązać dane z kontrolką, aby upewnić się, że nowe dane nie powodują <xref:System.Web.UI.Control.DataBind%2A> konfliktu z danymi przechowywanymi w poprzednim wywołaniu metody.  
  
 [!code-csharp[Control_StateManagement#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#6)]
 [!code-vb[Control_StateManagement#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Tworzenie niestandardowych kontrolek serwera ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Cykl życia strony ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="protected virtual void DataBind (bool raiseOnDataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DataBind(bool raiseOnDataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBind(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DataBind (raiseOnDataBinding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DataBind(bool raiseOnDataBinding);" />
      <MemberSignature Language="F#" Value="abstract member DataBind : bool -&gt; unit&#xA;override this.DataBind : bool -&gt; unit" Usage="control.DataBind raiseOnDataBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raiseOnDataBinding" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="raiseOnDataBinding"><see langword="true" />Jeśli zdarzenie jest zgłaszane; <see langword="false" />w przeciwnym razie. <see cref="E:System.Web.UI.Control.DataBinding" /></param>
        <summary>Tworzy powiązanie źródła danych z wywoływanym formantem serwera i wszystkimi jego kontrolkami podrzędnymi z opcją podniesienia <see cref="E:System.Web.UI.Control.DataBinding" /> poziomu zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody w scenariuszu, gdy kontrolka niestandardowa <xref:System.Web.UI.Control.DataBind%2A> zastępuje metodę i implementuje <xref:System.Web.UI.IDataItemContainer> interfejs. <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> W tym scenariuszu kontrolka niestandardowa <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> wywołuje metodę `raiseOnDataBinding` z ustawionym `false` na tak, aby upewnić <xref:System.Web.UI.Control.DataBind%2A> się, że metoda klasy bazowej zostanie wywołana.  
  
 Metoda wywołuje metodę z `raiseOnDataBinding` ustawioną na `true`. <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> <xref:System.Web.UI.Control.DataBind?displayProperty=nameWithType>  
  
> [!NOTE]
>  Wywołanie metody <xref:System.Web.UI.Control.DataBind%28System.Boolean%29?displayProperty=nameWithType> z `raiseOnDataBinding` zestawem powoduje `false` , że wszystkie kontrolki <xref:System.Web.UI.Control.DataBind?displayProperty=nameWithType> podrzędne są powiązane z tą metodą.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Cykl życia strony ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="DataBindChildren">
      <MemberSignature Language="C#" Value="protected virtual void DataBindChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DataBindChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.DataBindChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DataBindChildren ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DataBindChildren();" />
      <MemberSignature Language="F#" Value="abstract member DataBindChildren : unit -&gt; unit&#xA;override this.DataBindChildren : unit -&gt; unit" Usage="control.DataBindChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy powiązanie źródła danych z kontrolkami podrzędnymi formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.Control.DataBindChildren%2A> , aby powiązać źródło danych z kontrolkami podrzędnymi formantu serwera.  
  
> [!NOTE]
>  Gdy jest wywoływana w formancie serwera, ta metoda nie wiąże danych z kontrolką. Aby powiązać formant serwera i wszystkie jego formanty podrzędne, wywołaj <xref:System.Web.UI.Control.DataBind%2A> metodę.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">Tworzenie niestandardowych kontrolek serwera ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DataBinding">
      <MemberSignature Language="C#" Value="public event EventHandler DataBinding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataBinding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.DataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataBinding As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataBinding;" />
      <MemberSignature Language="F#" Value="member this.DataBinding : EventHandler " Usage="member this.DataBinding : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant serwera wiąże się ze źródłem danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie powiadamia formant serwera w celu wykonania dowolnej logiki powiązania danych, która została przez nią zapisywana.  
  
   
  
## Examples  
 [!code-csharp[ITemplate_Interface#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ITemplate_Interface/CS/itemplate.cs#1)]
 [!code-vb[ITemplate_Interface#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ITemplate_Interface/VB/itemplate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DataItemContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control DataItemContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control DataItemContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DataItemContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ DataItemContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemContainer : System.Web.UI.Control" Usage="System.Web.UI.Control.DataItemContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kontenera nazewnictwa, jeśli kontener nazewnictwa jest <see cref="T:System.Web.UI.IDataItemContainer" />zaimplementowany.</summary>
        <value>Kontener nazewnictwa. W hierarchii nazw <see cref="T:System.Web.UI.IDataItemContainer" />kontenerów, które implementują, ta właściwość zwraca kontener nazewnictwa w górnej części hierarchii lub <see langword="null" /> Jeśli bieżący <see cref="T:System.Web.UI.Control" /> obiekt nie znajduje się w kontenerze nazewnictwa, który implementuje <see cref="T:System.Web.UI.IDataItemContainer" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataKeysContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control DataKeysContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control DataKeysContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DataKeysContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataKeysContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ DataKeysContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKeysContainer : System.Web.UI.Control" Usage="System.Web.UI.Control.DataKeysContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kontenera nazewnictwa, jeśli kontener nazewnictwa jest <see cref="T:System.Web.UI.IDataKeysControl" />zaimplementowany.</summary>
        <value>Kontener nazewnictwa. W hierarchii nazw kontenerów, które <see cref="T:System.Web.UI.IDataKeysControl" />implementują, właściwość zwraca kontener nazewnictwa w górnej części hierarchii lub <see langword="null" /> Jeśli bieżący <see cref="T:System.Web.UI.Control" /> obiekt nie znajduje się w kontenerze nazewnictwa, który implementuje <see cref="T:System.Web.UI.IDataKeysControl" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignMode">
      <MemberSignature Language="C#" Value="protected internal bool DesignMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.DesignMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DesignMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool DesignMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignMode : bool" Usage="System.Web.UI.Control.DesignMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kontrolka jest używana na powierzchni projektowej.</summary>
        <value><see langword="true" />Jeśli formant jest używany w projektancie; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana`true` przez właściwość wskazuje, że formant jest używany w kontekście projektanta. <xref:System.Web.UI.Control.DesignMode%2A> Niestandardowe kontrolki mogą używać tej właściwości, gdy zachowanie czasu projektowania jest inne niż zachowanie w czasie wykonywania.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wxh45wzs(v=vs.100)">Projektant formantów ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="control.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia formantowi serwera przeprowadzenie końcowego oczyszczania przed jego zwolnieniem z pamięci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj <xref:System.Web.UI.Control.Dispose%2A> po zakończeniu korzystania z <xref:System.Web.UI.Control>. <xref:System.Web.UI.Control.Dispose%2A> Metoda<xref:System.Web.UI.Control> pozostawia w stanie niezdatnym do użytku. Po wywołaniu tej metody należy wydać wszystkie odwołania do kontrolki, aby pamięć, która zajmowała się, mogła zostać odbrana przez wyrzucanie elementów bezużytecznych.  
  
   
  
## Examples  
 Poniższy przykład <xref:System.Web.UI.Control.Dispose%2A> kodu przesłania metodę, aby <xref:System.Web.UI.HtmlTextWriter> zamknąć obiekt skojarzony z <xref:System.Web.UI.Control.Dispose%2A> kontrolką i <xref:System.Web.UI.WebControls.Button> wywołać metodę w kontrolce o nazwie `myButton`. Jeśli jest zgłaszany, gdy ta wersja <xref:System.Web.UI.Control.Dispose%2A> metody jest wywoływana, formant zapisuje komunikat do bieżącego <xref:System.Web.HttpResponse> obiektu. <xref:System.Exception>  
  
 [!code-csharp[Control_Dispose#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Dispose/CS/control_disposemethod.cs#1)]
 [!code-vb[Control_Dispose#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Dispose/VB/control_disposemethod.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.IComponent.Disposed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant serwera zostanie wystawiony z pamięci, który jest ostatnim etapem cyklu życia formantu serwera, gdy zażądano strony ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zasoby, które wymagają znaczącego czasu procesora, takie jak połączenia z bazą danych, powinny zostać wydane przy użyciu tego zdarzenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Dispose" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public virtual bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.Control.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy motywy stosują się do tej kontrolki.</summary>
        <value><see langword="true" />Aby korzystać z motywów; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość <xref:System.Web.UI.Control.EnableTheming%2A> wskazuje, czy motywy są włączone dla określonej kontrolki. Gdy właściwość ma `true`wartość, katalog motywu aplikacji jest przeszukiwany pod kątem karnacji kontroli do zastosowania. <xref:System.Web.UI.Control.EnableTheming%2A> Jeśli żadna skórka dla danej kontrolki nie istnieje w katalogu motywu, karnacje nie są stosowane.  
  
 Gdy właściwość ma `false`wartość, katalog motywu nie jest przeszukiwany <xref:System.Web.UI.Control.SkinID%2A> i zawartość właściwości nie jest używana. <xref:System.Web.UI.Control.EnableTheming%2A>  
  
 Motywy można włączyć na poziomie strony, kontenera lub formantu. Kontrolka może przesłonić <xref:System.Web.UI.Control.EnableTheming%2A> wartość ustawioną przez kontrolkę nadrzędną lub stronę zawierającą.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Zdarzenie <see langword="Page_PreInit" /> już się nie poszło.  
  
—lub— 
Formant został już dodany do <see langword="Controls" /> kolekcji.</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">Przegląd motywów ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public virtual bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewState : bool with get, set" Usage="System.Web.UI.Control.EnableViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant serwera utrzymuje stan widoku, oraz stan widoku wszystkich formantów podrzędnych, które zawiera, do żądającego klienta.</summary>
        <value><see langword="true" />Jeśli formant serwera utrzymuje stan widoku; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku umożliwia formantowi serwera zachowanie jego stanu w żądaniach HTTP. Stan widoku kontrolki jest włączony w przypadku spełnienia wszystkich następujących warunków:  
  
-   Właściwość strony jest ustawiona na `true`. <xref:System.Web.UI.Control.EnableViewState%2A>  
  
-   Właściwość kontrolki jest ustawiona na `true`. <xref:System.Web.UI.Control.EnableViewState%2A>  
  
-   Właściwość kontrolki jest ustawiona na <xref:System.Web.UI.ViewStateMode.Enabled> lub dziedziczy <xref:System.Web.UI.ViewStateMode.Enabled> ustawienie. <xref:System.Web.UI.Control.ViewStateMode%2A>  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.Control.ViewStateMode%2A> właściwość.  
  
 Stan widoku kontrolki serwera to akumulacja wszystkich wartości właściwości. Aby zachować te wartości w żądaniach HTTP, ASP.NET używa wystąpienia <xref:System.Web.UI.StateBag> klasy do przechowywania wartości właściwości. Wartości są następnie przenoszone jako zmienna do ukrytego pola, gdy kolejne żądania są przetwarzane. Aby uzyskać więcej informacji o stanie widoku, zobacz [przegląd stanu widoku ASP.NET](https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818).  
  
 Istnieją przypadki, w których konieczne jest wyłączenie stanu widoku, szczególnie w celu zwiększenia wydajności aplikacji. Na przykład w przypadku ładowania żądania bazy danych do formantu serwera należy ustawić tę właściwość na `false`. W przeciwnym razie czas procesora będzie tracić stan widoku ładowania do formantu serwera, który zostanie zastąpiony przez zapytanie bazy danych. Jeśli <xref:System.Web.UI.Control.EnableViewState%2A> jest`false`, można użyć stanu formantu, aby zachować informacje o właściwościach, które są specyficzne dla kontrolki i nie można go wyłączyć, podobnie jak właściwość widoku stanu. Aby uzyskać więcej informacji na temat różnic między stanem kontroli i stanem [widoku, zobacz Kontrola stanu a. Wyświetl przykład](https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681)stanu.  
  
 Aby uzyskać informacje na temat sposobu włączania lub wyłączania stanu widoku dla strony ASP.NET, zobacz [ \@ stronę](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)).
  
   
  
## Examples  
 Poniższy przykład ustawia <xref:System.Web.UI.Control.EnableViewState%2A> właściwość na `false`.  
  
 [!code-csharp[Control_StateManagement#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_statemanagement.cs.aspx#7)]
 [!code-vb[Control_StateManagement#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_statemanagement.vb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewStateMode" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">Stan formantu a Przykład widoku stanu</related>
      </Docs>
    </Member>
    <Member MemberName="EndRenderTracing">
      <MemberSignature Language="C#" Value="protected void EndRenderTracing (System.IO.TextWriter writer, object traceObject);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndRenderTracing(class System.IO.TextWriter writer, object traceObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndRenderTracing (writer As TextWriter, traceObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndRenderTracing(System::IO::TextWriter ^ writer, System::Object ^ traceObject);" />
      <MemberSignature Language="F#" Value="member this.EndRenderTracing : System.IO.TextWriter * obj -&gt; unit" Usage="control.EndRenderTracing (writer, traceObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="traceObject" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt, który zapisuje dane śledzenia.</param>
        <param name="traceObject">Obiekt śledzenia.</param>
        <summary>Przerywa śledzenie danych renderowania w czasie projektowania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureChildControls">
      <MemberSignature Language="C#" Value="protected virtual void EnsureChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EnsureChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureChildControls();" />
      <MemberSignature Language="F#" Value="abstract member EnsureChildControls : unit -&gt; unit&#xA;override this.EnsureChildControls : unit -&gt; unit" Usage="control.EnsureChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formant serwera zawiera kontrolki podrzędne. Jeśli tak nie jest, tworzy kontrolki podrzędne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda najpierw sprawdza bieżącą wartość <xref:System.Web.UI.Control.ChildControlsCreated%2A> właściwości. Jeśli ta wartość jest `false` <xref:System.Web.UI.Control.CreateChildControls%2A> , wywoływana jest metoda.  
  
 <xref:System.Web.UI.Control.EnsureChildControls%2A> Metoda jest zwykle używana w kontrolkach złożonych, które są kontrolkami, które korzystają z formantów podrzędnych dla niektórych lub wszystkich ich funkcji. <xref:System.Web.UI.Control.EnsureChildControls%2A> Metoda jest wywoływana w kolejności, aby upewnić się, że kontrolki podrzędne zostały utworzone i są gotowe do przetwarzania danych wejściowych, wykonywania powiązania z danymi lub wykonywania innych zadań.  
  
 <xref:System.Web.UI.WebControls.GridView> Formant jest przykładem złożonego formantu. Tworzy formanty podrzędne, takie jak <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.TableRow>, <xref:System.Web.UI.WebControls.TableCell> <xref:System.Web.UI.WebControls.Label>,, i <xref:System.Web.UI.WebControls.TextBox> kontrolki, które są używane do renderowania tabeli HTML <xref:System.Web.UI.WebControls.GridView> generowanej przez program.  
  
 W większości przypadków niestandardowe deweloperzy kontroli serwera nie muszą przesłaniać tej metody. Jeśli zastąpisz tę metodę, użyj jej w sposób podobny do zachowania domyślnego.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Web.UI.Control.EnsureChildControls%2A> metodę, aby upewnić się, że bieżący formant serwera ma kontrolki podrzędne. Następnie pobiera lub ustawia <xref:System.Web.UI.WebControls.TextBox.Text%2A> Właściwość podrzędnego <xref:System.Web.UI.WebControls.TextBox> formantu sieci Web w <xref:System.Web.UI.ControlCollection> obiekcie bieżącego formantu serwera.  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/CS/compositecontrolsample1.cs#1)]
 [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUIControl CreateChildControls and EnsureChildControls/VB/compositecontrolsample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="P:System.Web.UI.Control.ChildControlsCreated" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="EnsureID">
      <MemberSignature Language="C#" Value="protected void EnsureID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.EnsureID" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureID ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureID();" />
      <MemberSignature Language="F#" Value="member this.EnsureID : unit -&gt; unit" Usage="control.EnsureID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy identyfikator dla kontrolek, które nie mają przypisanego identyfikatora.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.EnsureID%2A> Metoda generuje identyfikator dla kontrolek, które są zawarte w innej kontrolce. Identyfikatory są generowane tylko dla kontrolek, które nie mają wartości przypisanej do <xref:System.Web.UI.Control.ID%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.Control.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę delegatów obsługi zdarzeń dla formantu. Ta właściwość jest tylko do odczytu.</summary>
        <value>Lista delegatów obsługi zdarzeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest typu <xref:System.ComponentModel.EventHandlerList>, który używa algorytmu wyszukiwania liniowego do znajdowania wpisów na liście delegatów. Algorytm wyszukiwania liniowego jest nieefektywny podczas pracy z dużą liczbą wpisów. W związku z tym, gdy masz dużą listę, znalezienie wpisów z tą właściwością będzie powolne.  
  
   
  
## Examples  
 Poniższy przykład tworzy zdarzenie o nazwie `Click`, które dodaje i usuwa programy obsługi z <xref:System.ComponentModel.EventHandlerList> kolekcji kontrolki, gdy zdarzenie jest wywoływane ze strony.  
  
 **Uwaga** Ten przykład optymalizuje, jak kontrolka dodaje i usuwa zdarzenia z listy formantów, które przechowuje. Jeśli tworzysz kontrolkę niestandardową i chcesz zdefiniować zdarzenie, użyj kodu podobnego do tego. Ta technika może być używana w C#, ale nie w Visual Basic.  
  
 [!code-csharp[System.Web.UI.Page_VerifyRenderingInServerForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/CS/testlinkbutton.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventHandlerList" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindControl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyszukuje w bieżącym kontenerze nazewnictwa dla określonego formantu serwera.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member FindControl : string -&gt; System.Web.UI.Control&#xA;override this.FindControl : string -&gt; System.Web.UI.Control" Usage="control.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identyfikator formantu, który ma zostać znaleziony.</param>
        <summary>Wyszukuje w bieżącym kontenerze nazewnictwa dla kontrolki serwera <paramref name="id" /> z określonym parametrem.</summary>
        <returns>Określony formant lub <see langword="null" /> Jeśli określony formant nie istnieje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy <xref:System.Web.UI.Control.FindControl%2A> do uzyskiwania dostępu do formantu z funkcji na stronie powiązanej z kodem, aby uzyskać dostęp do formantu znajdującego się wewnątrz innego kontenera lub w innych sytuacjach, gdy formant docelowy nie jest bezpośrednio dostępny dla obiektu wywołującego. Ta metoda znajdzie formant tylko wtedy, gdy formant jest bezpośrednio zawarty w określonym kontenerze; oznacza to, że metoda nie przeszukuje całej hierarchii formantów w kontrolkach. Aby uzyskać informacje o tym, jak znaleźć formant, gdy nie znasz jego bezpośredniego kontenera, zobacz [How to: Dostęp do kontrolek serwera](https://msdn.microsoft.com/library/59964ef8-72ef-4159-9f1a-5b230ff46fb3)według identyfikatora.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano `Button1_Click` procedurę obsługi zdarzeń. Gdy wywoływana, ta procedura obsługi używa <xref:System.Web.UI.Control.FindControl%2A> metody do lokalizowania kontrolki <xref:System.Web.UI.Control.ID%2A> z właściwością `TextBox2` na stronie zawierającej. Jeśli formant zostanie znaleziony, jego element nadrzędny jest określany przy <xref:System.Web.UI.Control.Parent%2A> użyciu właściwości, a <xref:System.Web.UI.Control.ID%2A> kontrolka nadrzędna jest zapisywana na stronie. Jeśli `TextBox2` nie zostanie znaleziona, na stronie jest zapisywana wartość "nie znaleziono kontrolki".  
  
> [!IMPORTANT]
>  Ten przykład zawiera pole tekstowe akceptujące dane wejściowe użytkownika, które jest potencjalnym zagrożeniem bezpieczeństwa. Domyślnie strony sieci Web ASP.NET sprawdzają, czy dane wejściowe użytkownika nie obejmują elementów skryptu ani HTML. Aby uzyskać więcej informacji, zobacz [Omówienie luk](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)w zabezpieczeniach.  
  
 [!code-csharp[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/CS/control_parent.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/VB/control_parent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/59964ef8-72ef-4159-9f1a-5b230ff46fb3">Instrukcje: Dostęp do kontrolek serwera według identyfikatora</related>
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindControl (string id, int pathOffset);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindControl(string id, int32 pathOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.FindControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FindControl (id As String, pathOffset As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ FindControl(System::String ^ id, int pathOffset);" />
      <MemberSignature Language="F#" Value="abstract member FindControl : string * int -&gt; System.Web.UI.Control&#xA;override this.FindControl : string * int -&gt; System.Web.UI.Control" Usage="control.FindControl (id, pathOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="pathOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">Identyfikator formantu, który ma zostać znaleziony.</param>
        <param name="pathOffset">Liczba kontrolek w górę hierarchii kontrolki strony, która jest wymagana do osiągnięcia kontenera nazw.</param>
        <summary>Wyszukuje w bieżącym kontenerze nazewnictwa dla kontrolki serwera <paramref name="id" /> z określoną i liczbą całkowitą, która <paramref name="pathOffset" /> jest określona w parametrze, który ułatwia wyszukiwanie. Nie należy przesłaniać tej wersji <see cref="Overload:System.Web.UI.Control.FindControl" /> metody.</summary>
        <returns>Określony formant lub <see langword="null" /> Jeśli określony formant nie istnieje.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public virtual void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; unit&#xA;override this.Focus : unit -&gt; unit" Usage="control.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia fokus wprowadzania dla kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.Focus%2A> Użyj metody, aby ustawić początkowy fokus strony sieci Web na kontrolkę. Strona zostanie otwarta w przeglądarce z wybraną kontrolką.  
  
 <xref:System.Web.UI.Control.Focus%2A> Metoda powoduje, że wywołanie skryptu fokus strony jest emitowane na renderowanej stronie. Jeśli strona nie zawiera formantu z atrybutem HTML `ID` , który jest zgodny z kontrolką, w <xref:System.Web.UI.Control.Focus%2A> której wywoływana jest metoda, fokus strony nie zostanie ustawiony. Przykład może to być spowodowane ustawieniem fokusu w kontrolce użytkownika zamiast ustawiania fokusu na formancie podrzędnym kontrolki użytkownika. W tym scenariuszu można użyć <xref:System.Web.UI.Control.FindControl%2A> metody, aby znaleźć formant podrzędny kontrolki użytkownika i wywołać jej <xref:System.Web.UI.Control.Focus%2A> metodę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.FindControl(System.String)" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignModeState : unit -&gt; System.Collections.IDictionary&#xA;override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="control.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera dane czasu projektowania dla kontrolki.</summary>
        <returns><see cref="T:System.Collections.IDictionary" /> Zawierający dane czasu projektowania dla kontrolki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.GetDesignModeState%2A> Metoda zwraca dane czasu projektowania dla kontrolki.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Metoda domyślnie zwraca <see langword="null" />wartość. <see cref="M:System.Web.UI.Control.GetDesignModeState" /> Należy zastąpić tę metodę, aby podać dane wymagane przez kontrolkę czasu projektowania.</para></block>
        <altmember cref="T:System.Web.UI.IControlDesignerAccessor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRouteUrl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera adres URL, który odnosi się do zestawu parametrów trasy i opcjonalnie do nazwy trasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to równoważne wywołaniu <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=nameWithType> metody.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (object routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(object routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeParameters As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::Object ^ routeParameters);" />
      <MemberSignature Language="F#" Value="member this.GetRouteUrl : obj -&gt; string" Usage="control.GetRouteUrl routeParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParameters" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeParameters">Parametry trasy.</param>
        <summary>Pobiera adres URL odpowiadający zestawowi parametrów trasy.</summary>
        <returns>Adres URL odpowiadający określonym parametrom trasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to równoważne wywołaniu <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metody. Ta metoda konwertuje obiekt, który jest przesyłany `routeParameters` <xref:System.Web.Routing.RouteValueDictionary> do obiektu za pomocą <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wywołać metodę, <xref:System.Web.UI.Control.GetRouteUrl%2A?displayProperty=nameWithType> Aby uzyskać adres URL trasy, która ma parametry o nazwach `productid` i `category`. W <xref:System.Web.UI.WebControls.HyperLink> tym przykładzie przyjęto założenie, że utworzono kontrolkę `HyperLink1`o nazwie.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (System.Web.Routing.RouteValueDictionary routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(class System.Web.Routing.RouteValueDictionary routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeParameters As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::Web::Routing::RouteValueDictionary ^ routeParameters);" />
      <MemberSignature Language="F#" Value="member this.GetRouteUrl : System.Web.Routing.RouteValueDictionary -&gt; string" Usage="control.GetRouteUrl routeParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeParameters" Type="System.Web.Routing.RouteValueDictionary" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeParameters">Parametry trasy.</param>
        <summary>Pobiera adres URL odpowiadający zestawowi parametrów trasy.</summary>
        <returns>Adres URL odpowiadający określonym parametrom trasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to równoważne wywołaniu <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wywołać tę metodę, aby uzyskać adres URL trasy mającej parametry o nazwach `productid` i. `category` W <xref:System.Web.UI.WebControls.HyperLink> tym przykładzie przyjęto założenie, że utworzono kontrolkę `HyperLink1`o nazwie.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (string routeName, object routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(string routeName, object routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeName As String, routeParameters As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::String ^ routeName, System::Object ^ routeParameters);" />
      <MemberSignature Language="F#" Value="member this.GetRouteUrl : string * obj -&gt; string" Usage="control.GetRouteUrl (routeName, routeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeParameters" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName">Nazwa trasy.</param>
        <param name="routeParameters">Parametry trasy.</param>
        <summary>Pobiera adres URL, który odnosi się do zestawu parametrów trasy i nazwy trasy.</summary>
        <returns>Adres URL odpowiadający określonym parametrom trasy i nazwie trasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to równoważne wywołaniu <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metody. Ta metoda konwertuje obiekt, który jest przesyłany `routeParameters` <xref:System.Web.Routing.RouteValueDictionary> do obiektu za pomocą <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=nameWithType> konstruktora.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wywołać tę metodę, aby uzyskać adres URL trasy o nazwie `Product` i ma parametry o nazwach `productid` i `category`. W <xref:System.Web.UI.WebControls.HyperLink> tym przykładzie przyjęto założenie, że utworzono kontrolkę `HyperLink1`o nazwie.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  New With {.productid = "1", .category = "widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  new { productid = "1", category = "widgets" });  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public string GetRouteUrl (string routeName, System.Web.Routing.RouteValueDictionary routeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetRouteUrl(string routeName, class System.Web.Routing.RouteValueDictionary routeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteUrl (routeName As String, routeParameters As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetRouteUrl(System::String ^ routeName, System::Web::Routing::RouteValueDictionary ^ routeParameters);" />
      <MemberSignature Language="F#" Value="member this.GetRouteUrl : string * System.Web.Routing.RouteValueDictionary -&gt; string" Usage="control.GetRouteUrl (routeName, routeParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="routeParameters" Type="System.Web.Routing.RouteValueDictionary" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="routeName">Nazwa trasy.</param>
        <param name="routeParameters">Parametry trasy.</param>
        <summary>Pobiera adres URL, który odnosi się do zestawu parametrów trasy i nazwy trasy.</summary>
        <returns>Adres URL odpowiadający określonym parametrom trasy i nazwie trasy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest dostępna dla wygody kodowania. Jest to równoważne wywołaniu <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wywołać tę metodę, aby uzyskać adres URL trasy o nazwie `Product` i ma parametry o nazwach `productid` i `category`. W <xref:System.Web.UI.WebControls.HyperLink> tym przykładzie przyjęto założenie, że utworzono kontrolkę `HyperLink1`o nazwie.  
  
```vb  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  new RouteValueDictionary {productId="1", category="widgets"})  
```  
  
```csharp  
HyperLink1.NavigateUrl = HyperLink1.GetRouteUrl("Product",  
  (new RouteValueDictionary {productId="1", category="widgets"});  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">Routing ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUniqueIDRelativeTo">
      <MemberSignature Language="C#" Value="public string GetUniqueIDRelativeTo (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUniqueIDRelativeTo(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUniqueIDRelativeTo(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetUniqueIDRelativeTo : System.Web.UI.Control -&gt; string" Usage="control.GetUniqueIDRelativeTo control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control">Kontrolka znajdująca się w kontenerze nazw.</param>
        <summary>Zwraca przedznaczoną część <see cref="P:System.Web.UI.Control.UniqueID" /> właściwości określonej kontrolki.</summary>
        <returns>Przedprawiona część <see cref="P:System.Web.UI.Control.UniqueID" /> właściwości określonej kontrolki.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość kontrolki jest generowana przez dodanie prefiksu do <xref:System.Web.UI.Control.ID%2A> właściwości kontrolki. <xref:System.Web.UI.Control.UniqueID%2A> Prefiks składa się z <xref:System.Web.UI.Control.UniqueID%2A> właściwości kontenera nazewnictwa kontrolki połączonej ze znakiem separatora. Jeśli kontener nazewnictwa jest stroną, nie ma prefiksu. Ta metoda zwraca ciąg prefiksu. Jeśli nie ma ciągu prefiksu, zwraca <xref:System.Web.UI.Control.UniqueID%2A> wartość formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość ma wartość<see langword="null" />. <see cref="P:System.Web.UI.Control.NamingContainer" /> <paramref name="control" /></exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasChildViewState">
      <MemberSignature Language="C#" Value="protected bool HasChildViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.HasChildViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HasChildViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool HasChildViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildViewState : bool" Usage="System.Web.UI.Control.HasChildViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy bieżące kontrolki formantu serwera mają jakiekolwiek zapisane ustawienia stanu widoku.</summary>
        <value><see langword="true" />Jeśli jakiekolwiek kontrolki podrzędne mają zapisane informacje o stanie widoku; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można uniknąć niepotrzebnych wywołań <xref:System.Web.UI.Control.ClearChildViewState%2A> metody za pomocą tej właściwości, aby sprawdzić, czy wszystkie kontrolki podrzędne formantu serwera przechowują informacje o stanie widoku.  
  
   
  
## Examples  
 [!code-csharp[Control_StateManagement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#5)]
 [!code-vb[Control_StateManagement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public virtual bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasControls();" />
      <MemberSignature Language="F#" Value="abstract member HasControls : unit -&gt; bool&#xA;override this.HasControls : unit -&gt; bool" Usage="control.HasControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formant serwera zawiera wszystkie kontrolki podrzędne.</summary>
        <returns><see langword="true" />Jeśli kontrolka zawiera inne kontrolki; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ ta metoda po prostu określa, czy istnieją jakiekolwiek kontrolki podrzędne, można zwiększyć wydajność, umożliwiając uniknięcie niepotrzebnego <xref:System.Web.UI.ControlCollection.Count%2A> wywołania właściwości. Wywołania tej właściwości wymagają <xref:System.Web.UI.ControlCollection> utworzenia wystąpienia obiektu. Jeśli nie ma żadnych elementów podrzędnych, ten obiekt nie spowoduje powstania zasobów serwera.  
  
   
  
## Examples  
 W poniższym przykładzie użyto metody <xref:System.Web.UI.Control.HasControls%2A> , aby określić, czy istnieją jakieś kontrolki przed <xref:System.Web.UI.ControlCollection.Count%2A> użyciem <xref:System.Web.UI.ControlCollection> właściwości do iteracji przez obiekt.  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Metoda powinna zostać przesłonięta tylko w celu zmiany atrybutów metadanych, takich jak <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />. <see cref="M:System.Web.UI.Control.HasControls" /> Aby uzyskać więcej informacji o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).</para></block>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="HasEvents">
      <MemberSignature Language="C#" Value="protected bool HasEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool HasEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.HasEvents" />
      <MemberSignature Language="VB.NET" Value="Protected Function HasEvents () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool HasEvents();" />
      <MemberSignature Language="F#" Value="member this.HasEvents : unit -&gt; bool" Usage="control.HasEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą czy zdarzenia są rejestrowane dla kontrolki lub wszelkich formantów podrzędnych.</summary>
        <returns><see langword="true" />Jeśli zdarzenia są rejestrowane; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.Control.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator programowy przypisany do kontrolki serwerowej.</summary>
        <value>Identyfikator programowy przypisany do kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości w formancie serwera zapewnia programistyczny dostęp do właściwości, zdarzeń i metod formantu serwera. Tę właściwość można ustawić dla deweloperów sieci Web, deklarując <xref:System.Web.UI.Control.ID%2A> atrybut w tagu otwierającym kontrolki serwera ASP.NET.  
  
 Jeśli ta właściwość nie jest określona dla kontrolki serwerowej ani deklaratywnie lub programowo, można uzyskać odwołanie do formantu za pomocą jego <xref:System.Web.UI.Control.Controls%2A> właściwości kontrolki nadrzędnej.  
  
> [!NOTE]
>  Tylko kombinacje znaków alfanumerycznych i znaku podkreślenia (_) są prawidłowymi wartościami dla tej właściwości. W tym spacje lub inne nieprawidłowe znaki spowodują błąd analizatora strony ASP.NET.  
  
   
  
## Examples  
 [!code-csharp[Control_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples.cs.aspx#2)]
 [!code-vb[Control_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
        <altmember cref="T:System.Web.UI.INamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="IdSeparator">
      <MemberSignature Language="C#" Value="protected char IdSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IdSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IdSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IdSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property char IdSeparator { char get(); };" />
      <MemberSignature Language="F#" Value="member this.IdSeparator : char" Usage="System.Web.UI.Control.IdSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera znak używany do oddzielania identyfikatorów kontroli.</summary>
        <value>Znak separatora. Wartość domyślna to "$".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Znak zawarty we <xref:System.Web.UI.Control.IdSeparator%2A> właściwości jest używany do oddzielania identyfikatorów kontroli dla formantów podrzędnych. Znak separatora identyfikatora jest dołączany do <xref:System.Web.UI.Control.ID%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public event EventHandler Init;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Init" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Init" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Init As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Init;" />
      <MemberSignature Language="F#" Value="member this.Init : EventHandler " Usage="member this.Init : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zainicjowaniu formantu serwera, który jest pierwszym krokiem w jego cyklu życia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty serwera powinny wykonać wszelkie kroki inicjowania wymagane do utworzenia i skonfigurowania wystąpienia. W tym zdarzeniu nie można używać informacji o stanie widoku; nie została jeszcze wypełniona. Nie należy uzyskiwać dostępu do innej kontrolki serwera w trakcie tego zdarzenia, niezależnie od tego, czy jest to element podrzędny, czy nadrzędny dla tego formantu. Inne kontrolki serwera nie mają być tworzone i gotowe do dostępu. Aby uzyskać więcej informacji na temat zdarzeń kontroli serwera, zobacz [ASP.NET kontrolki serwerowe dla formularzy sieci Web Event Model](https://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
   
  
## Examples  
 Poniższy przykład przypisuje niestandardowe procedury obsługi `Calendar_Init`zdarzeń, `Init` do zdarzenia <xref:System.Web.UI.WebControls.Calendar> kontrolki.  
  
 [!code-aspx-csharp[Control_Sample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples2.cs.aspx#4)]
 [!code-aspx-vb[Control_Sample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples2.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsChildControlStateCleared">
      <MemberSignature Language="C#" Value="protected internal bool IsChildControlStateCleared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsChildControlStateCleared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsChildControlStateCleared" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsChildControlStateCleared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsChildControlStateCleared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsChildControlStateCleared : bool" Usage="System.Web.UI.Control.IsChildControlStateCleared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kontrolki zawarte w tym formancie mają stan kontroli.</summary>
        <value><see langword="true" />Jeśli elementy podrzędne tej kontrolki nie używają stanu formantu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteralContent">
      <MemberSignature Language="C#" Value="protected bool IsLiteralContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsLiteralContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.IsLiteralContent" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsLiteralContent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsLiteralContent();" />
      <MemberSignature Language="F#" Value="member this.IsLiteralContent : unit -&gt; bool" Usage="control.IsLiteralContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formant serwera przechowuje tylko zawartość literału.</summary>
        <returns><see langword="true" />Jeśli formant serwera zawiera wyłącznie zawartość literału; w <see langword="false" />przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy ta metoda zwraca `true`, kolekcja kontrolki serwera zawiera formant pojedynczego literału.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy strona zawierająca kontrolki serwera została opublikowana ponownie. Jeśli ma, wywołuje <xref:System.Web.UI.Control.IsLiteralContent%2A> metodę, aby określić, czy formant zawiera tylko zawartość literału, czy też jest formantem nadrzędnym do innych kontrolek serwera. Jeśli zawiera wyłącznie zawartość literału, <xref:System.Web.UI.Control.UniqueID%2A> Właściwość <xref:System.Web.UI.LiteralControl> reprezentująca zawartość jest zapisywana w odpowiedzi.  
  
 [!code-csharp[System.Web.UI.Control_ViewStateIgnoresCase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/cs/controlsample_7.cs#1)]
 [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/VB/controlsample_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.HasControls" />
        <altmember cref="T:System.Web.UI.LiteralControl" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.Control.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant serwera zapisuje zmiany w stanie widoku.</summary>
        <value><see langword="true" />Jeśli formant jest oznaczony do zapisania jego stanu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zapoznać się z przykładowym formantem serwera niestandardowego, który używa tej właściwości, zobacz [przykład kontrolki serwera](https://msdn.microsoft.com/library/986f63b8-6b50-42b9-a62d-a2f13cafa88b) z szablonem  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.DataBind%2A> metodę w niestandardowej kontrolce serwera ASP.NET. Rozpoczyna się od wywołania metody bazowej <xref:System.Web.UI.Control.OnDataBinding%2A> , a następnie `ControlCollection` używa obiektu. <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=nameWithType>Metoda usuwania wszystkich formantów podrzędnych i <xref:System.Web.UI.Control.ClearChildViewState%2A> metody usuwania wszystkich zapisanych ustawień stanu widoku dla tych formantów podrzędnych. Na <xref:System.Web.UI.Control.ChildControlsCreated%2A> koniec właściwość jest ustawiona na `true`. Kontrolka używa następnie właściwości <xref:System.Web.UI.Control.IsTrackingViewState%2A> , aby określić, czy dla formantu włączono śledzenie zmian stanu widoku. Jeśli nie jest włączona, <xref:System.Web.UI.Control.TrackViewState%2A> Metoda jest wywoływana.  
  
 [!code-csharp[Control_StateManagement#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#4)]
 [!code-vb[Control_StateManagement#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="IsViewStateEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsViewStateEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsViewStateEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.IsViewStateEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsViewStateEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsViewStateEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsViewStateEnabled : bool" Usage="System.Web.UI.Control.IsViewStateEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy stan widoku jest włączony dla tego formantu.</summary>
        <value><see langword="true" />Jeśli stan widoku jest włączony dla kontrolki; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku można włączyć na poziomie strony, kontenera lub formantu. Gdy stan widoku jest wyłączony na poziomie strony lub kontenera, stan widoku jest wyłączony dla wszystkich kontrolek zawartych na stronie lub kontenerze. <xref:System.Web.UI.Control.IsViewStateEnabled%2A> Właściwość wskazuje, czy stan widoku jest włączony przez strony, kontenery lub formanty.  
  
 Istnieje możliwość <xref:System.Web.UI.Control.EnableViewState%2A> , że właściwość <xref:System.Web.UI.Control.IsViewStateEnabled%2A> i Właściwość będą się różnić. Na przykład, jeśli okno <xref:System.Web.UI.Page> zawierające kontrolkę ma wyłączony stan widoku <xref:System.Web.UI.Control.EnableViewState%2A> , <xref:System.Web.UI.Control.IsViewStateEnabled%2A> właściwość może być `true` , gdy właściwość jest `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Deweloperzy stron ustawiją <see cref="P:System.Web.UI.Control.EnableViewState" /> Właściwość <see cref="P:System.Web.UI.Control.ViewStateMode" /> i właściwość, aby wskazać, czy używali stanu widoku z kontrolką. <see cref="P:System.Web.UI.Control.IsViewStateEnabled" /> Użyj właściwości<see cref="P:System.Web.UI.Control.ViewStateMode" /> i właściwości w kodzie, aby określić, czy stan widoku jest włączony dla kontrolki i dla wszystkich kontenerów.</para></block>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewStateMode" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public event EventHandler Load;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Load" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Load" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Load As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Load;" />
      <MemberSignature Language="F#" Value="member this.Load : EventHandler " Usage="member this.Load : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy kontrolka serwera jest załadowana <see cref="T:System.Web.UI.Page" /> do obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiadamia formant serwera, aby wykonywał wszystkie kroki przetwarzania, które są ustawione na wystąpienie poszczególnych żądań strony. Możesz uzyskać dostęp do widoku informacje o stanie i dane POST formularza sieci Web z tego zdarzenia. Możesz również uzyskać dostęp do innych formantów serwera w hierarchii formantów strony.  
  
> [!NOTE]
>  Jeśli ustawisz szablon niestandardowy w kontrolce podczas `Page_Load` zdarzenia, wartości tekstowe formantów podrzędnych w szablonie niestandardowym zostaną utracone. Dzieje się tak, ponieważ wartości formularza zostały już załadowane.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Load#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Load/CS/control_load.cs#2)]
 [!code-vb[System.Web.UI.Control_Load#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Load/VB/control_load.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal virtual void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadControlState : obj -&gt; unit&#xA;override this.LoadControlState : obj -&gt; unit" Usage="control.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="savedState">Reprezentuje stan formantu, który ma zostać przywrócony. <see cref="T:System.Object" /></param>
        <summary>Przywraca informacje o stanie kontroli z poprzedniego żądania strony, które zostało zapisane przez <see cref="M:System.Web.UI.Control.SaveControlState" /> metodę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp tę metodę, gdy trzeba określić sposób przywracania stanu formantu przez niestandardowy formant serwera. Aby uzyskać więcej informacji, zobacz [ASP.NET State Management — Omówienie](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
   
  
## Examples  
 Poniższy przykład kodu przesłania <xref:System.Web.UI.Control.LoadControlState%2A> metodę w niestandardowej kontrolce ASP.NET. Gdy ta metoda jest wywoływana, określa, czy stan kontroli był wcześniej zapisywany dla kontrolki i, jeśli tak, ustawia właściwość `currentIndex` wewnętrzną na zapisaną wartość.  
  
 Metoda jest zastępowana, <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> aby wywołać metodę w <xref:System.Web.UI.Control.Page%2A> celu wskazania, że Kontrolka niestandardowa używa stanu formantu. <xref:System.Web.UI.Control.OnInit%2A>  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="control.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Reprezentuje stan formantu, który ma zostać przywrócony. <see cref="T:System.Object" /></param>
        <summary>Przywraca informacje o stanie widoku z poprzedniego żądania strony, które zostało zapisane przez <see cref="M:System.Web.UI.Control.SaveViewState" /> metodę.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana głównie przez infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jednak kontrolowanie deweloperów może zastąpić tę metodę, aby określić, jak niestandardowy formant serwera przywraca stan widoku. Aby uzyskać więcej informacji, zobacz [ASP.NET State Management — Omówienie](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.LoadViewState%2A> metodę dla niestandardowej kontrolki serwera ASP.NET. Tworzy <xref:System.Object> tablicę zawierającą informacje o stanie widoku przekazaną `savedState` w parametrze, a następnie wywołuje podstawową implementację <xref:System.Web.UI.Control.LoadViewState%2A> metody dla pierwszej lokalizacji indeksu tablicy. Przypisuje wartości przechowywane w dwóch następnych lokalizacjach indeksu do zmiennych o `UserText` nazwach i `PasswordText`, odpowiednio.  
  
 [!code-csharp[Control_StateManagement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#1)]
 [!code-vb[Control_StateManagement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewStateByID">
      <MemberSignature Language="C#" Value="protected bool LoadViewStateByID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadViewStateByID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.LoadViewStateByID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoadViewStateByID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool LoadViewStateByID { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.LoadViewStateByID : bool" Usage="System.Web.UI.Control.LoadViewStateByID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant uczestniczy w ładowaniu stanu widoku przez <see cref="P:System.Web.UI.Control.ID" /> zamianę na indeks.</summary>
        <value><see langword="true" />Jeśli formant ładuje stan widoku przez <see cref="P:System.Web.UI.Control.ID" />; w przeciwnym razie,. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie, gdy kontrolka nadrzędna załaduje stan widoku do formantów podrzędnych, robi to przez położenie każdej kontrolki podrzędnej w <xref:System.Web.UI.Control.Controls%2A> kolekcji kontrolki nadrzędnej. Gdy stan widoku jest początkowo stosowany, wszystkie kontrolki podrzędne mogły nie zostać utworzone. W takim przypadku stan widoku dla kontrolek, które nie został jeszcze utworzony, jest zapisywany i stosowany podczas późniejszego tworzenia formantów podrzędnych.  
  
 Aby formant nadrzędny miał zastosowanie stanu widoku do jego formantów podrzędnych, muszą zostać spełnione dwa warunki:  
  
-   Na stronie ogłaszania zwrotnego formant nadrzędny musi utworzyć kontrolki podrzędne w dokładnie takiej samej kolejności jak poprzednie żądanie, aby kolejność formantów była spójna.  
  
-   Po odświeżeniu należy dodać wszystkie utworzone kontrolki podrzędne do końca <xref:System.Web.UI.Control.Controls%2A> kolekcji kontrolki nadrzędnej.  
  
 Jeśli te dwa warunki nie mogą zostać spełnione, tak jak w przypadku opóźnionego tworzenia kontrolki podrzędnej, formant nadrzędny może załadować stan widoku przy użyciu <xref:System.Web.UI.Control.ID%2A>. Aby ustawić <xref:System.Web.UI.Control.LoadViewStateByID%2A> właściwość na `true`, użyj <xref:System.Web.UI.ViewStateModeByIdAttribute> atrybutu metadanych dla kontrolki nadrzędnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.ViewStateModeByIdAttribute" />
      </Docs>
    </Member>
    <Member MemberName="MapPathSecure">
      <MemberSignature Language="C#" Value="protected internal string MapPathSecure (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance string MapPathSecure(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.MapPathSecure(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function MapPathSecure (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::String ^ MapPathSecure(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPathSecure : string -&gt; string" Usage="control.MapPathSecure virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Względny lub główny adres URL.</param>
        <summary>Pobiera ścieżkę fizyczną, do której jest mapowana ścieżka wirtualna (absolutna lub względna).</summary>
        <returns>Ścieżka fizyczna do żądanego pliku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może być używana tylko przez formanty serwera, które mają uprawnienia do odczytu plików i które są częścią w pełni zaufanych plików DLL, takich jak system. Web. dll. Pozwala to zapobiec naruszeniom zabezpieczeń.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Web.UI.Control.MapPathSecure%2A> metodę w celu uzyskania ścieżki fizycznej katalogu zawierającego <xref:System.Web.UI.Page> lub <xref:System.Web.UI.UserControl> obiektu.  
  
 [!code-csharp[Control_MapPathSecure#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_MapPathSecure/CS/control_templatesourcedirectory.cs#1)]
 [!code-vb[Control_MapPathSecure#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_MapPathSecure/VB/control_templatesourcedirectory.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" />jest <see langword="null" /> lub jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="NamingContainer">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control NamingContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control NamingContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.NamingContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NamingContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ NamingContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamingContainer : System.Web.UI.Control" Usage="System.Web.UI.Control.NamingContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kontenera nazw kontrolki serwera, który tworzy unikatową przestrzeń nazw do rozróżniania między kontrolkami serwera z tą <see cref="P:System.Web.UI.Control.ID" /> samą wartością właściwości.</summary>
        <value>Kontener nazewnictwa kontrolki serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każda Strona w aplikacji sieci Web ASP.NET zawiera hierarchię formantów. Ta hierarchia nie jest zależna od tego, czy kontrolka generuje interfejs użytkownika widoczny dla użytkownika. Kontener nazewnictwa dla danej kontrolki jest formantem nadrzędnym powyżej w hierarchii, która implementuje <xref:System.Web.UI.INamingContainer> interfejs. Formant serwera, który implementuje ten interfejs, tworzy unikatową przestrzeń nazw <xref:System.Web.UI.Control.ID%2A> dla wartości właściwości w kontrolkach serwera podrzędnego. Można użyć <xref:System.Web.UI.Control.NamingContainer%2A> właściwości formantu podrzędnego kontenera nazewnictwa, aby uzyskać odwołanie do jego kontenera nadrzędnego.  
  
 Tworzenie unikatowej przestrzeni nazw dla formantów serwerowych jest szczególnie ważne w przypadku powiązania kontrolek serwera sieci Web z danymi <xref:System.Web.UI.WebControls.Repeater> , <xref:System.Web.UI.WebControls.DataList> takimi jak formanty serwera i. Gdy wiele wpisów w źródle danych tworzy wiele wystąpień formantu serwera, który jest elementem podrzędnym kontrolki powtarzanej, kontener nazewnictwa gwarantuje, że każde wystąpienie tych formantów podrzędnych ma <xref:System.Web.UI.Control.UniqueID%2A> wartości właściwości, które nie powodują konfliktu. Domyślny kontener nazewnictwa strony to wystąpienie <xref:System.Web.UI.Page> klasy, która jest generowana, gdy ta strona jest żądana.  
  
 Właściwość zawiera wartość, która jest renderowana jako `id` atrybut elementu w znaczniku html. <xref:System.Web.UI.Control.ClientID%2A> W zależności od wartości przypisanej do <xref:System.Web.UI.Control.ClientIDMode%2A> właściwości, wartość, która jest generowana <xref:System.Web.UI.Control.ClientID%2A> dla właściwości, może <xref:System.Web.UI.Control.NamingContainer%2A> zawierać identyfikator obiektu. <xref:System.Web.UI.Control.ClientIDMode%2A> Po ustawieniu <xref:System.Web.UI.ClientIDMode.Static> wartościwartośćnie<xref:System.Web.UI.Control.NamingContainer%2A> obejmuje identyfikatora obiektu. <xref:System.Web.UI.Control.ClientID%2A> Po ustawieniu <xref:System.Web.UI.Control.ClientIDMode%2A> <xref:System.Web.UI.ClientIDMode.AutoID> <xref:System.Web.UI.Control.NamingContainer%2A> wartości albo wartośćspowodujeuwzględnienieidentyfikatorazobiektu.<xref:System.Web.UI.ClientIDMode.Predictable> <xref:System.Web.UI.Control.ClientID%2A> Aby uzyskać więcej informacji, zobacz [Identyfikacja kontrolki serwera sieci Web ASP.NET](https://msdn.microsoft.com/library/45a8c3ef-5ac7-48f1-862a-0cd5073742e7).  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Web.UI.Control.NamingContainer%2A> właściwości.  
  
 [!code-aspx-csharp[Control_NamingContainer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_NamingContainer/CS/control_namingcontainer.cs.aspx#1)]
 [!code-aspx-vb[Control_NamingContainer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_NamingContainer/VB/control_namingcontainer.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.INamingContainer" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnBubbleEvent (object source, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnBubbleEvent(object source, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBubbleEvent (source As Object, args As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnBubbleEvent(System::Object ^ source, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnBubbleEvent : obj * EventArgs -&gt; bool&#xA;override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="control.OnBubbleEvent (source, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="args"><see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Określa, czy zdarzenie dla formantu serwera jest przenoszone do hierarchii kontroli serwera interfejsu użytkownika strony.</summary>
        <returns><see langword="true" />Jeśli zdarzenie zostało anulowane; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki serwera ASP.NET <xref:System.Web.UI.WebControls.Repeater>, takie jak formanty <xref:System.Web.UI.WebControls.GridView> , i kontrolki sieci Web, <xref:System.Web.UI.WebControls.DataList> mogą zawierać kontrolki podrzędne, które powodują wygenerowanie zdarzeń. Na przykład każdy wiersz w <xref:System.Web.UI.WebControls.GridView> kontrolce może zawierać jeden lub więcej przycisków utworzonych dynamicznie przez szablony. Zamiast każdego przycisku wywołującego zdarzenie pojedynczo zdarzenia z formantów zagnieżdżonych są "bąbelkowe" — oznacza to, że są wysyłane do kontenera nazewnictwa. Kontener nazewnictwa z kolei wywołuje zdarzenie ogólne wywołane <xref:System.Web.UI.WebControls.GridView.RowCommand> wartościami parametrów. Te wartości umożliwiają określenie, który pojedynczy formant, który wywołał pierwotne zdarzenie. Odpowiedź na to pojedyncze zdarzenie pozwala uniknąć konieczności pisania poszczególnych metod obsługi zdarzeń dla formantów podrzędnych.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.OnBubbleEvent%2A> metodę w niestandardowej `ParentControl`kontrolce serwera ASP.NET. Ta metoda jest wywoływana, `ParentControl` <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> gdy formant podrzędny wywołuje metodę. Gdy tak się stanie, `ParentControl` Klasa zapisuje dwa ciągi na stronie zawierającej ASP.NET, a pierwszy wskazuje, <xref:System.Web.UI.Control.OnBubbleEvent%2A> że metoda została wywołana, drugi identyfikujący kontrolę <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> źródła metody.  
  
 [!code-csharp[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/CS/bubble.cs#1)]
 [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/VB/bubble.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBinding : EventArgs -&gt; unit&#xA;override this.OnDataBinding : EventArgs -&gt; unit" Usage="control.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.DataBinding" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powiadamia formant serwera w celu wykonania dowolnej logiki dotyczącej powiązań skojarzonych z nią danych.  
  
 Jeśli chcesz obsłużyć <xref:System.Web.UI.Control.DataBinding> zdarzenie, należy przesłonić tę metodę obsługi zdarzeń. Gwarantuje to, że wszystkie Delegaty dołączone <xref:System.Web.UI.Control.DataBinding> do zdarzenia są wywoływane.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zastąpić metodę <xref:System.Web.UI.Control.OnDataBinding%2A> , aby dodać kontrolki podrzędne do kontrolki nadrzędnej ze źródła danych.  
  
 [!code-csharp[TemplatedDataBoundControl#3](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#3)]
 [!code-vb[TemplatedDataBoundControl#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Cykl życia strony ASP.NET — Omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal virtual void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="control.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wywołuje tę metodę, aby zgłosić <xref:System.Web.UI.Control.Init> zdarzenie. Jeśli tworzysz kontrolkę niestandardową, możesz zastąpić tę metodę, aby zapewnić dodatkowe przetwarzanie. Jeśli zastąpisz tę metodę, wywołaj <xref:System.Web.UI.Control.OnInit%2A> metodę formantu podstawowego, aby powiadomić subskrybentów o zdarzeniu.  
  
   
  
## Examples  
 [!code-csharp[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/CS/control1.cs#3)]
 [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_Context_OnInit_ResolveUrl/VB/control1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="control.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.Load" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wywołuje tę metodę, aby zgłosić <xref:System.Web.UI.Control.Load> zdarzenie. Jeśli tworzysz kontrolkę niestandardową, możesz zastąpić tę metodę, aby zapewnić dodatkowe przetwarzanie. Jeśli zastąpisz tę metodę, wywołaj <xref:System.Web.UI.Control.OnLoad%2A> metodę formantu podstawowego, aby powiadomić subskrybentów o zdarzeniu.  
  
   
  
## Examples  
 [!code-csharp[Control_OnUnload#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_OnUnload/CS/control_onunload.cs#3)]
 [!code-vb[Control_OnUnload#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_OnUnload/VB/control_onunload.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="control.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wywołuje tę metodę, aby zgłosić <xref:System.Web.UI.Control.PreRender> zdarzenie. Jeśli tworzysz kontrolkę niestandardową, możesz zastąpić tę metodę, aby zapewnić dodatkowe przetwarzanie. Jeśli zastąpisz tę metodę, wywołaj <xref:System.Web.UI.Control.OnPreRender%2A> metodę formantu podstawowego, aby powiadomić subskrybentów o zdarzeniu.  
  
   
  
## Examples  
 [!code-csharp[Control_Sample_1_snipper#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1_snipper/CS/control_sample_1.cs#1)]
 [!code-vb[Control_Sample_1_snipper#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1_snipper/VB/control_sample_1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal virtual void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="control.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary><see cref="E:System.Web.UI.Control.Unload" /> Podnosi zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wywołuje tę metodę, aby zgłosić <xref:System.Web.UI.Control.Unload> zdarzenie. Jeśli tworzysz kontrolkę niestandardową, możesz zastąpić tę metodę, aby zapewnić dodatkowe przetwarzanie. Jeśli zastąpisz tę metodę, wywołaj <xref:System.Web.UI.Control.OnUnload%2A> metodę formantu podstawowego, aby powiadomić subskrybentów o zdarzeniu.  
  
   
  
## Examples  
 [!code-csharp[Control_OnUnload#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_OnUnload/CS/control_onunload.cs#2)]
 [!code-vb[Control_OnUnload#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_OnUnload/VB/control_onunload.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.Unload" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="protected internal System.IO.Stream OpenFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.IO.Stream OpenFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function OpenFile (path As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::IO::Stream ^ OpenFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.OpenFile : string -&gt; System.IO.Stream" Usage="control.OpenFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path">Ścieżka do żądanego pliku.</param>
        <summary>Pobiera informacje <see cref="T:System.IO.Stream" /> używane do odczytu pliku.</summary>
        <returns><see cref="T:System.IO.Stream" /> Odwołuje się do żądanego pliku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca obiekt, którego można użyć do odczytu zawartości pliku określonego w `path` parametrze. <xref:System.IO.Stream> <xref:System.Web.UI.Control.OpenFile%2A> Parametr path może być względnym lub głównym adresem URL bez protokołu (na przykład "~/mysite/myfile.txt) lub ścieżką fizyczną (" c:\mySite\myFile.txt ") lub UNC ("\\\myServer\myFile.txt ").  
  
 <xref:System.Web.UI.Control.OpenFile%2A> Metoda używa zabezpieczeń dostępu do plików w celu kontrolowania dostępu do określonego pliku. Jeśli bieżący użytkownik ASP.NET nie ma dostępu do pliku, plik nie zostanie otwarty i <xref:System.Web.HttpException> zostanie zgłoszony wyjątek wskazujący, że dostęp został zabroniony. `path` Jeśli parametr określił ścieżkę względną, wyjątek nie zawiera informacji o ścieżce fizycznej do żądanego pliku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Odmowa dostępu do określonego pliku.</exception>
        <altmember cref="T:System.IO.FileStream" />
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Page" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.Control.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do <see cref="T:System.Web.UI.Page" /> wystąpienia, które zawiera formant serwera.</summary>
        <value><see cref="T:System.Web.UI.Page" /> Wystąpienie, które zawiera formant serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości odzwierciedla nazwę pliku. aspx, który zawiera formant serwera.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> metodę. Używa <xref:System.Web.UI.Page> właściwości, aby <xref:System.Web.UI.Page.IsPostBack%2A?displayProperty=nameWithType> uzyskać dostęp do właściwości i określić, czy strona, która zawiera tę kontrolkę, została po raz pierwszy załadowana lub jest wynikiem odświeżenia.  
  
 [!code-csharp[Control_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample/CS/controlclass_samples.cs#1)]
 [!code-vb[Control_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample/VB/controlclass_samples.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka jest <see cref="T:System.Web.UI.WebControls.Substitution" /> kontrolką.</exception>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ Parent { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.Control" Usage="System.Web.UI.Control.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera odwołanie do kontrolki nadrzędnej kontrolki serwera w hierarchii formantów strony.</summary>
        <value>Odwołanie do kontrolki nadrzędnej kontrolki serwerowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za każdym razem, gdy żądana jest strona, tworzona jest hierarchia formantów serwera na tej stronie. Ta właściwość pozwala określić kontrolkę nadrzędną bieżącej kontrolki serwera w tej hierarchii oraz do programu.  
  
   
  
## Examples  
 Poniższy przykład ustawia nowy <xref:System.Web.UI.Control> obiekt na `myControl1`stronie, do kontrolki określonej w <xref:System.Web.UI.Control.FindControl%2A> wywołaniu metody. Jeśli wywołanie zwraca kontrolkę, kod używa <xref:System.Web.UI.Control.Parent%2A> właściwości do identyfikowania kontrolki, która zawiera. `myControl1` Jeśli formant nadrzędny istnieje, ciąg "nadrzędnym polu tekstowym jest" zostanie połączony z <xref:System.Web.UI.Control.ID%2A> właściwością kontrolki nadrzędnej i zapisany <xref:System.Web.UI.Control.Page%2A>w. Jeśli nie zostanie znaleziona żadna kontrolka nadrzędna, ciąg "nie znaleziono kontrolki" jest zapisywana.  
  
 [!code-csharp[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/CS/control_parent.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Parent_FindControl/VB/control_parent.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreRender">
      <MemberSignature Language="C#" Value="public event EventHandler PreRender;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRender" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.PreRender" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRender As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRender;" />
      <MemberSignature Language="F#" Value="member this.PreRender : EventHandler " Usage="member this.PreRender : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po załadowaniu obiektu, <see cref="T:System.Web.UI.Control" /> ale przed renderowaniem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego zdarzenia, aby wykonać wszystkie aktualizacje przed renderowaniem formantu serwera na stronie. Wszystkie zmiany stanu widoku kontrolki serwer można zapisać w tym zdarzeniu. Takie zmiany wprowadzone w fazie renderowania nie zostaną zapisane.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RaiseBubbleEvent">
      <MemberSignature Language="C#" Value="protected void RaiseBubbleEvent (object source, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseBubbleEvent(object source, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseBubbleEvent (source As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseBubbleEvent(System::Object ^ source, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.RaiseBubbleEvent : obj * EventArgs -&gt; unit" Usage="control.RaiseBubbleEvent (source, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Źródło zdarzenia.</param>
        <param name="args"><see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Przypisuje wszystkie źródła zdarzenia i informacje do elementu nadrzędnego formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki serwera ASP.NET <xref:System.Web.UI.WebControls.Repeater>, takie jak formanty <xref:System.Web.UI.WebControls.GridView> , i kontrolki sieci Web, <xref:System.Web.UI.WebControls.DataList> mogą zawierać kontrolki podrzędne, które powodują wygenerowanie zdarzeń. Na przykład każdy wiersz w <xref:System.Web.UI.WebControls.GridView> kontrolce może zawierać jeden lub więcej przycisków utworzonych dynamicznie przez szablony. Zamiast każdego przycisku wywołującego zdarzenie pojedynczo zdarzenia z formantów zagnieżdżonych są "bąbelkowe" — oznacza to, że są wysyłane do obiektu nadrzędnego formantu. Element nadrzędny z kolei wywołuje zdarzenie ogólne wywołane <xref:System.Web.UI.WebControls.GridView.RowCommand> wartościami parametrów. Te wartości umożliwiają określenie, który pojedynczy formant, który wywołał pierwotne zdarzenie. Odpowiedź na to pojedyncze zdarzenie pozwala uniknąć konieczności pisania poszczególnych metod obsługi zdarzeń dla formantów podrzędnych.  
  
 Chociaż nie można przesłonić tej metody, formanty, które autor może obsługiwać lub wzbudzają zdarzenia bąbelkowe, zastępując <xref:System.Web.UI.Control.OnBubbleEvent%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład `ChildControl`kodu pokazuje, jak utworzyć klasę niestandardową, <xref:System.Web.UI.WebControls.Button.OnClick%2A?displayProperty=nameWithType> zastępując metodę, aby wywołać <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> metodę, która wysyła <xref:System.Web.UI.WebControls.Button.Click?displayProperty=nameWithType> zdarzenie do jego nadrzędnej kontrolki serwera ASP.NET. Gdy użytkownik kliknie przycisk na stronie ASP.NET, który zawiera wystąpienie `ChildControl`, <xref:System.Web.UI.Control.OnBubbleEvent%2A> wywołuje metodę w formancie nadrzędnym, `ChildControl` która zawiera wystąpienie i zapisuje ciąg "Metoda onkliknięcia klasy ChildControl jest wywołane "na stronie.  
  
 [!code-csharp[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/CS/bubble.cs#2)]
 [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent/VB/bubble.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemovedControl">
      <MemberSignature Language="C#" Value="protected internal virtual void RemovedControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RemovedControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RemovedControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RemovedControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RemovedControl : System.Web.UI.Control -&gt; unit&#xA;override this.RemovedControl : System.Web.UI.Control -&gt; unit" Usage="control.RemovedControl control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Web.UI.Control" /> , Który został usunięty.</param>
        <summary>Wywoływana po usunięciu formantu podrzędnego z <see cref="P:System.Web.UI.Control.Controls" /> kolekcji <see cref="T:System.Web.UI.Control" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest wywoływana natychmiast po usunięciu formantu <xref:System.Web.UI.Control.Controls%2A> z kolekcji. <xref:System.Web.UI.Control.RemovedControl%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka jest <see cref="T:System.Web.UI.WebControls.Substitution" /> kontrolką.</exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal virtual void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="control.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który odbiera zawartość kontrolki serwera.</param>
        <summary>Wysyła zawartość kontrolki serwera do podanego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu, który zapisuje zawartość, która ma być renderowana na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia niestandardowych kontrolek serwera można zastąpić tę metodę, aby wygenerować zawartość dla strony ASP.NET.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje zastępowanie <xref:System.Web.UI.Control.Render%2A> metody. Metoda jest używana do określenia, czy formant serwera ma wszystkie kontrolki podrzędne przechowywane <xref:System.Web.UI.ControlCollection> w obiekcie, <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> który jest dostępny za pomocą właściwości. <xref:System.Web.UI.Control.HasControls%2A> Jeśli <xref:System.Web.UI.Control.HasControls%2A> zwraca wartość true, a pierwszy formant serwera w kolekcji jest tekstem literału, tekst literału jest dołączany do ciągu html.  
  
 [!code-csharp[Classic Control.Render Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.Render Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Render Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.Render Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="control.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który odbiera wyrenderowaną zawartość.</param>
        <summary>Wyprowadza zawartość elementu podrzędnego kontrolki serwera do podanego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu, który zapisuje zawartość, która ma być renderowana na kliencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda powiadamia ASP.NET o wyrenderowaniu na stronie dowolnego kodu stron Active Server (ASP). Jeśli na stronie nie istnieje kod ASP, ta metoda renderuje wszelkie kontrolki podrzędne dla formantu serwera. Ta metoda jest wywoływana przez <xref:System.Web.UI.Control.Render%2A> metodę.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.RenderChildren%2A> metodę w niestandardowej kontrolce serwerowej. Określa, czy bieżący formant ma wszystkie kontrolki podrzędne w <xref:System.Web.UI.ControlCollection> obiekcie. Jeśli tak, używa <xref:System.Web.UI.ControlCollection.Count%2A> właściwości do iteracji w kolekcji. Gdy napotka każdy formant podrzędny, używa <xref:System.Web.UI.Control.RenderControl%2A> metody do renderowania kontrolki nadrzędnej i wszystkich jej formantów podrzędnych do strony zawierającej.  
  
 Zastąpiona <xref:System.Web.UI.Control.Render%2A> metoda wywołuje przesłoniętą <xref:System.Web.UI.Control.RenderChildren%2A> metodę.  
  
 [!code-csharp[Control_Sample_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#4)]
 [!code-vb[Control_Sample_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderControl">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyprowadza zawartość kontrolki serwera i przechowuje informacje o śledzeniu, jeśli śledzenie jest włączone.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public virtual void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="control.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który odbiera zawartość kontrolki.</param>
        <summary>Wyprowadza zawartość kontrolki serwera do podanego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu i przechowuje informacje o śledzeniu dla kontrolki, jeśli śledzenie jest włączone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.Control.Visible%2A> właściwość kontrolki serwerowej jest ustawiona na `true`, ta metoda określa, czy śledzenie jest włączone dla strony. Jeśli tak, przechowuje informacje o śledzeniu skojarzone z kontrolką i renderuje zawartość kontrolki serwer na stronie.  
  
 Ta metoda jest automatycznie wywoływana przez stronę podczas renderowania, ale może zostać przesłonięta przez deweloperów kontrolek niestandardowych.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.RenderChildren%2A> metodę w niestandardowej kontrolce serwerowej. Określa, czy bieżący formant ma wszystkie kontrolki podrzędne w <xref:System.Web.UI.ControlCollection> obiekcie. Jeśli tak, używa <xref:System.Web.UI.ControlCollection.Count%2A> właściwości do iteracji w kolekcji. Gdy napotka każdy formant podrzędny, używa <xref:System.Web.UI.Control.RenderControl%2A> metody, aby renderować formant podrzędny i wszystkie jego formanty podrzędne do strony zawierającej. Obiekt, który jest przesyłany do tej metody jest skonkretyzowany <xref:System.Web.UI.Page.Render%2A> przez metodę. <xref:System.Web.UI.XhtmlTextWriter>  
  
 [!code-csharp[Control_Sample_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#3)]
 [!code-vb[Control_Sample_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="protected void RenderControl (System.Web.UI.HtmlTextWriter writer, System.Web.UI.Adapters.ControlAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderControl(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.Adapters.ControlAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderControl (writer As HtmlTextWriter, adapter As ControlAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderControl(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::Adapters::ControlAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="member this.RenderControl : System.Web.UI.HtmlTextWriter * System.Web.UI.Adapters.ControlAdapter -&gt; unit" Usage="control.RenderControl (writer, adapter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="adapter" Type="System.Web.UI.Adapters.ControlAdapter" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer">, <see cref="T:System.Web.UI.HtmlTextWriter" /> Który odbiera zawartość kontrolki.</param>
        <param name="adapter"><see cref="T:System.Web.UI.Adapters.ControlAdapter" /> Definiuje renderowanie.</param>
        <summary>Wyprowadza zawartość kontrolki serwera do podanego <see cref="T:System.Web.UI.HtmlTextWriter" /> obiektu za pomocą podanego <see cref="T:System.Web.UI.Adapters.ControlAdapter" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET strony sieci Web są użyteczne na wielu urządzeniach i w przeglądarkach, które mogą żądać informacji z sieci Web. <xref:System.Web.UI.Control.Adapter%2A> Właściwość<xref:System.Web.UI.Adapters.ControlAdapter> zwraca obiekt, który renderuje formant na ekranie żądającym urządzenia lub przeglądarki.  
  
 Aby uzyskać więcej informacji na temat kart sieciowych, zobacz [Omówienie architektury działania kontroli adaptacyjnej](https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100)).  
  
 Jeśli <xref:System.Web.UI.Control.Visible%2A> właściwość kontrolki serwerowej jest ustawiona na `true` , a śledzenie jest włączone dla strony, śledzenie informacji skojarzonych z kontrolką jest przechwytywane.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)" /> metody w kontrolkach niestandardowych Wywołaj metodę klasy bazowej, aby upewnić się, że informacje o śledzeniu są prawidłowo przechwytywane.</para></block>
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
        <altmember cref="P:System.Web.HttpContext.Trace" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100)">Omówienie architektury zachowania kontroli adaptacyjnej</related>
      </Docs>
    </Member>
    <Member MemberName="RenderingCompatibility">
      <MemberSignature Language="C#" Value="public virtual Version RenderingCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version RenderingCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.RenderingCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderingCompatibility As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Version ^ RenderingCompatibility { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingCompatibility : Version with get, set" Usage="System.Web.UI.Control.RenderingCompatibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą ASP.NET wersję, która będzie zgodna z językiem HTML.</summary>
        <value>Wersja ASP.NET, która renderowanego kodu HTML będzie zgodna z programem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ustawia tę właściwość na wartość `controlRenderingCompatibilityVersion` atrybutu `pages` elementu w pliku Web. config. `controlRenderingCompatibilityVersion` Jeśli atrybut nie jest ustawiony w pliku Web. config, wartością domyślną jest bieżąca wersja ASP.NET.  
  
> [!CAUTION]
>  Istnieje metoda dostępu do zestawu publicznego dla tej właściwości, ale metoda dostępu set obsługuje infrastrukturę .NET Framework i nie jest przeznaczona do użycia bezpośrednio w kodzie. Jeśli ustawisz tę wartość w kodzie, efekt będzie nieprzewidywalny.  
  
 Każda wersja programu ASP.NET może renderować kod HTML inaczej niż w poprzednich wersjach. Na przykład w ASP.NET 3,5, jeśli <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> Właściwość <xref:System.Web.UI.WebControls.Label> kontrolki jest `false`domyślnie, ASP.NET renderuje element, `span` którego `disabled` atrybut jest ustawiony na wartość "wyłączone". W ASP.NET 4 domyślnie `span` element jest renderowany przy użyciu atrybutu kaskadowego arkusza stylów (CSS) `class` zamiast `disabled` atrybutu. Pozwala to na określenie wyłączonego wyglądu kontrolki i uniknięcie renderowania nieprawidłowego kodu HTML. (W języku HTML 4,0 i XHTML 1,1 `span` element nie `disabled` obsługuje atrybutu).  
  
 Aplikacja sieci Web może zawierać kod, który nie działa poprawnie, jeśli renderowanie HTML zostanie zmienione. Aby uniknąć tego problemu, można ustawić `controlRenderingCompatibilityVersion` atrybut `pages` elementu w pliku Web. config, aby wskazać, która wcześniejsza wersja ma zachować zgodność z programem. Na <xref:System.Web.UI.Control.RenderingCompatibility%2A> przykład, jeśli ustawisz właściwość na `3.5`, `disabled` wyłączona <xref:System.Web.UI.WebControls.Label> kontrolka będzie renderować atrybut, a nie klasę CSS.  
  
> [!NOTE]
>  Najwcześniejsza wersja, do której można ustawić tę właściwość, `3.5`to.  
  
 Aby zachować zgodność z poprzednimi wersjami, w przypadku korzystania z programu Visual Studio w celu uaktualnienia projektu sieci Web do ASP.NET 4 ze starszej `controlRenderingCompatibilityVersion` wersji program Visual Studio automatycznie ustawia atrybut w `3.5`pliku Web. config na. Jeśli chcesz, aby uaktualniona witryna sieci Web renderować HTML przy użyciu algorytmu, który został wprowadzony w ASP.NET 4, możesz zmienić lub usunąć `controlRenderingCompatibilityVersion` ten atrybut.  
  
 W większości przypadków zachowanie kontrolowane przez tę właściwość jest automatyczne i nie trzeba sprawdzać <xref:System.Web.UI.Control.RenderingCompatibility%2A> właściwości w kodzie. Jeśli jednak tworzysz kontrolkę niestandardową, może być konieczne dołączenie kodu, który zmienia zachowanie kontrolki na podstawie ustawienia tej właściwości. Na przykład kontrolka niestandardowa dla ASP.NET 4 może składać się <xref:System.Web.UI.WebControls.Label> z kontrolek, a kontrolka niestandardowa może określić wyłączony wygląd kontrolki, generując kod JavaScript, który `aspNetDisabled` modyfikuje klasę. Będzie to działało zgodnie z <xref:System.Web.UI.Control.RenderingCompatibility%2A> oczekiwaniami `4.0` , jeśli jest lub później. Aby jednak uzyskać ten sam efekt, <xref:System.Web.UI.Control.RenderingCompatibility%2A> gdy `3.5`ma to zastosowanie, kod kontrolki niestandardowej `CssClass` musi mieć ustawioną właściwość kontrolki na "aspNetDisabled <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> ", `false`gdy właściwość jest.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
      </Docs>
    </Member>
    <Member MemberName="ResolveAdapter">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Adapters.ControlAdapter ResolveAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Adapters.ControlAdapter ResolveAdapter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveAdapter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResolveAdapter () As ControlAdapter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Adapters::ControlAdapter ^ ResolveAdapter();" />
      <MemberSignature Language="F#" Value="abstract member ResolveAdapter : unit -&gt; System.Web.UI.Adapters.ControlAdapter&#xA;override this.ResolveAdapter : unit -&gt; System.Web.UI.Adapters.ControlAdapter" Usage="control.ResolveAdapter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.ControlAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera adapter sterowania odpowiedzialny za renderowanie określonego formantu.</summary>
        <returns><see cref="T:System.Web.UI.Adapters.ControlAdapter" /> , Który będzie renderować formant.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strony sieci Web ASP.NET są widoczne na wielu urządzeniach, które mogą żądać stron z sieci Web. <xref:System.Web.UI.Control.ResolveAdapter%2A> Metoda zwraca adapter sterowania odpowiedzialny za renderowanie kontrolki w określonej przeglądarce lub na urządzeniu, które zażądało strony ASP.NET.  
  
 Zwracany typ karty zależy od typu <xref:System.Web.UI.Control> potomnego klasy, która jest renderowana.  
  
 Aby uzyskać więcej informacji na temat kart sieciowych, zobacz [Omówienie architektury działania kontroli adaptacyjnej](https://docs.microsoft.com/previous-versions/aspnet/67276kc5(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Adapter" />
        <altmember cref="T:System.Web.Configuration.HttpCapabilitiesBase" />
      </Docs>
    </Member>
    <Member MemberName="ResolveClientUrl">
      <MemberSignature Language="C#" Value="public string ResolveClientUrl (string relativeUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveClientUrl(string relativeUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveClientUrl (relativeUrl As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ResolveClientUrl(System::String ^ relativeUrl);" />
      <MemberSignature Language="F#" Value="abstract member ResolveClientUrl : string -&gt; string&#xA;override this.ResolveClientUrl : string -&gt; string" Usage="control.ResolveClientUrl relativeUrl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IUrlResolutionService.ResolveClientUrl(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUrl" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="relativeUrl">Adres URL względny do bieżącej strony.</param>
        <summary>Pobiera adres URL, który może być używany przez przeglądarkę.</summary>
        <returns>W pełni kwalifikowany adres URL do określonego zasobu odpowiedni do użycia w przeglądarce.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.Control.ResolveClientUrl%2A> , aby zwrócić ciąg adresu URL odpowiedni do użycia przez klienta w celu uzyskania dostępu do zasobów na serwerze sieci Web, takich jak pliki obrazów, linki do dodatkowych stron i tak dalej.  
  
> [!NOTE]
>  Adres URL zwracany przez tę metodę jest względny wobec folderu zawierającego plik źródłowy, w którym jest tworzone wystąpienie kontrolki. Kontrolki dziedziczące tę właściwość, takie jak <xref:System.Web.UI.UserControl> i <xref:System.Web.UI.MasterPage>, zwracają w pełni kwalifikowany adres URL względem kontrolki.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relativeUrl" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveUrl">
      <MemberSignature Language="C#" Value="public string ResolveUrl (string relativeUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ResolveUrl(string relativeUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.ResolveUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveUrl (relativeUrl As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ResolveUrl(System::String ^ relativeUrl);" />
      <MemberSignature Language="F#" Value="member this.ResolveUrl : string -&gt; string" Usage="control.ResolveUrl relativeUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeUrl">Adres URL skojarzony z <see cref="P:System.Web.UI.Control.TemplateSourceDirectory" /> właściwością.</param>
        <summary>Konwertuje adres URL na taki, który jest używany na żądającym klienta.</summary>
        <returns>Przekonwertowany adres URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `relativeUrl` Jeśli parametr zawiera bezwzględny adres URL, adres URL jest zwracany bez zmian. `relativeUrl` Jeśli parametr zawiera względny adres URL, ten adres URL zostanie zmieniony na względny adres URL, który jest poprawny dla bieżącej ścieżki żądania, dzięki czemu przeglądarka może rozpoznać adres URL.  
  
 Na przykład rozważmy następujący scenariusz:  
  
-   Klient zażądał strony ASP.NET, która zawiera kontrolkę użytkownika, z którą skojarzono obraz.  
  
-   Strona ASP.NET znajduje się w witrynie/Store/page1.aspx.  
  
-   Kontrolka użytkownika znajduje się w/Store/UserControls/UC1.ascx.  
  
-   Plik obrazu znajduje się w lokalizacji/UserControls/Images/Image1.jpg.  
  
 Jeśli kontrolka użytkownika przekaże ścieżkę względną do obrazu (czyli/Store/UserControls/images/image1.jpg) do <xref:System.Web.UI.Control.ResolveUrl%2A> metody, metoda zwróci wartość/images/image1.jpg.  
  
 Ta metoda używa <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> właściwości do rozpoznawania jako bezwzględnego adresu URL. Zwrócony adres URL jest używany do użycia przez klienta.  
  
 Aby uzyskać więcej informacji na temat ścieżek zasobów w witrynie sieci Web, zobacz [ścieżki projektu sieci web ASP.NET](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd).  
  
> [!NOTE]
>  W przypadku tylko stron sieci Web dla urządzeń przenośnych, jeśli aplikacja korzysta z sesji bez plików cookie lub może odbierać żądania z przeglądarek mobilnych, które wymagają bezplikowego sesji,\~przy użyciu tyldy ("") w ścieżce może spowodować niezamierzone utworzenie nowej sesji i potencjalnie utrata danych sesji. Aby ustawić właściwość ze ścieżką\~ <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A> , taką jak "/*Path"*, należy rozwiązać ścieżkę, wywołując metodę z argumentem, takim jak\~"/*Path"* przed przypisaniem go do właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Web.UI.WebControls.Image> obiekt formantu serwera sieci Web i <xref:System.Web.UI.Control.ResolveUrl%2A> używa metody do ustawiania ścieżki do obrazu, <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> który jest przechowywany przez właściwość.  
  
 [!code-csharp[Control_ResolveUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_ResolveUrl/CS/control_resolveurl.cs#1)]
 [!code-vb[Control_ResolveUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_ResolveUrl/VB/control_resolveurl.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Występuje, <paramref name="relativeUrl" /> gdy parametr zawiera <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Control.TemplateSourceDirectory" />
        <related type="Article" href="https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd">Ścieżki witryny sieci Web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="abstract member SaveControlState : unit -&gt; obj&#xA;override this.SaveControlState : unit -&gt; obj" Usage="control.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje wszelkie zmiany stanu formantu serwera, które wystąpiły od momentu, gdy strona została opublikowana na serwerze.</summary>
        <returns>Zwraca bieżący stan formantu serwera. Jeśli z kontrolką nie jest skojarzony żaden stan, Metoda ta zwraca <see langword="null" />wartość.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody <xref:System.Web.UI.Control.SaveControlState%2A> , aby zapisać informacje o stanie wymagane do działania konkretnej kontrolki. Dane stanu formantu są przechowywane niezależnie od danych stanu widoku kontrolki.  
  
 Kontrolki niestandardowe korzystające z stanu kontrolki muszą wywoływać <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metodę <xref:System.Web.UI.Control.Page%2A> na stanie przed zapisaniem formantu.  
  
   
  
## Examples  
 Poniższy przykład kodu przesłania <xref:System.Web.UI.Control.SaveControlState%2A> metodę w niestandardowej kontrolce ASP.NET. Gdy ta metoda jest wywoływana, określa, czy właściwość `currentIndex` wewnętrzna jest ustawiona na wartość niedomyślną, a jeśli tak, zapisuje wartość w polu Stan formantu.  
  
 Metoda jest zastępowana, <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> aby wywołać metodę w <xref:System.Web.UI.Control.Page%2A> celu wskazania, że Kontrolka niestandardowa używa stanu formantu. <xref:System.Web.UI.Control.OnInit%2A>  
  
 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Gdy stan kontroli jest zapisywany, obiekt ciągu jest zwracany do klienta jako zmienna, która jest przechowywana w elemencie HTML <see langword="HIDDEN" /> . Zastąp tę metodę, aby wyodrębnić informacje o stanie do użycia w kontrolce.  
  
Stan kontroli jest przeznaczony dla małych ilości danych krytycznych, takich jak indeks strony lub słowo kluczowe. Użycie stanu formantu w przypadku dużych ilości danych może niekorzystnie wpłynąć na wydajność strony. Aby uzyskać więcej informacji, zobacz [ASP.NET State Management — Omówienie](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).</para></block>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="control.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje dowolny widok kontroli serwera — zmiany stanu, które wystąpiły od momentu, gdy strona została opublikowana na serwerze.</summary>
        <returns>Zwraca stan bieżącego widoku formantu serwera. Jeśli nie ma stanu widoku skojarzonego z kontrolką, ta metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku to akumulacja wartości właściwości kontrolki serwera. Te wartości są automatycznie umieszczane we <xref:System.Web.UI.Control.ViewState%2A> właściwości kontrolki serwera, która jest wystąpieniem <xref:System.Web.UI.StateBag> klasy. Wartość tej właściwości jest następnie utrwalana w obiekcie String po etapie zapisywania stanu w cyklu działania kontroli serwera. Aby uzyskać więcej informacji, zobacz [ASP.NET cykl życia strony](https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 Gdy stan widoku jest zapisywany, ten obiekt ciągu jest zwracany do klienta jako zmienna, która jest przechowywana w elemencie HTML `HIDDEN` . W przypadku tworzenia niestandardowej kontrolki serwera z niestandardowym stanem widoku stan wyświetlania można jawnie zarządzać przy użyciu <xref:System.Web.UI.Control.SaveViewState%2A> metod i. <xref:System.Web.UI.Control.LoadViewState%2A> Aby uzyskać więcej informacji, zobacz [ASP.NET State Management — Omówienie](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)). Aby uzyskać informacje na temat implementowania niestandardowego dostawcy stanu sesji, zobacz [implementowanie dostawcy magazynu stanów sesji](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.SaveViewState%2A> metodę w niestandardowej kontrolce serwera ASP.NET. Gdy ta metoda jest wywoływana, określa, czy kontrolka ma jakiekolwiek kontrolki podrzędne i czy obiekt <xref:System.Web.UI.Page> zawierający jest wynikiem odświeżenia. Jeśli oba są spełnione, zmienia <xref:System.Web.UI.WebControls.Label.Text%2A> Właściwość <xref:System.Web.UI.WebControls.Label> kontrolki serwer sieci Web na odczyt `Custom Control Has Saved State`. Następnie zapisuje stan widoku kontrolki jako tablicę obiektów o nazwie `allStates`.  
  
 [!code-csharp[Control_StateManagement#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#2)]
 [!code-vb[Control_StateManagement#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66">Implementowanie dostawcy magazynu stanów sesji</related>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected virtual void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetDesignModeState : System.Collections.IDictionary -&gt; unit&#xA;override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="control.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><see cref="T:System.Collections.IDictionary" /> Zawierający dane czasu projektowania dla kontrolki.</param>
        <summary>Ustawia dane czasu projektowania dla kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.SetDesignModeState%2A> Metoda zapisuje dane czasu projektowania dla kontrolki.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Należy zastąpić tę metodę, aby zapisać dane wymagane przez kontrolkę czasu projektowania.</para></block>
      </Docs>
    </Member>
    <Member MemberName="SetRenderMethodDelegate">
      <MemberSignature Language="C#" Value="public void SetRenderMethodDelegate (System.Web.UI.RenderMethod renderMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRenderMethodDelegate(class System.Web.UI.RenderMethod renderMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRenderMethodDelegate(System::Web::UI::RenderMethod ^ renderMethod);" />
      <MemberSignature Language="F#" Value="member this.SetRenderMethodDelegate : System.Web.UI.RenderMethod -&gt; unit" Usage="control.SetRenderMethodDelegate renderMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderMethod" Type="System.Web.UI.RenderMethod" />
      </Parameters>
      <Docs>
        <param name="renderMethod">Informacje niezbędne do przekazania do delegata, aby można było renderować formant serwera.</param>
        <summary>Przypisuje delegata programu obsługi zdarzeń, aby renderować formant serwera i jego zawartość w jego formancie nadrzędnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona tylko do celów implementacji; nigdy nie należy wywoływać go bezpośrednio.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTraceData">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ustawia dane śledzenia na potrzeby śledzenia danych renderowania w czasie projektowania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTraceData">
      <MemberSignature Language="C#" Value="public void SetTraceData (object traceDataKey, object traceDataValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTraceData(object traceDataKey, object traceDataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetTraceData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTraceData (traceDataKey As Object, traceDataValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTraceData(System::Object ^ traceDataKey, System::Object ^ traceDataValue);" />
      <MemberSignature Language="F#" Value="member this.SetTraceData : obj * obj -&gt; unit" Usage="control.SetTraceData (traceDataKey, traceDataValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceDataKey" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="traceDataValue" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="traceDataKey">Klucz danych śledzenia.</param>
        <param name="traceDataValue">Wartość danych śledzenia.</param>
        <summary>Ustawia dane śledzenia dla śledzenia czasu projektowania danych renderowania przy użyciu klucza danych śledzenia i wartości danych śledzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTraceData">
      <MemberSignature Language="C#" Value="public void SetTraceData (object tracedObject, object traceDataKey, object traceDataValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTraceData(object tracedObject, object traceDataKey, object traceDataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTraceData (tracedObject As Object, traceDataKey As Object, traceDataValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTraceData(System::Object ^ tracedObject, System::Object ^ traceDataKey, System::Object ^ traceDataValue);" />
      <MemberSignature Language="F#" Value="member this.SetTraceData : obj * obj * obj -&gt; unit" Usage="control.SetTraceData (tracedObject, traceDataKey, traceDataValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tracedObject" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="traceDataKey" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="traceDataValue" Type="System.Object" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="tracedObject">Obiekt śledzony.</param>
        <param name="traceDataKey">Klucz danych śledzenia.</param>
        <param name="traceDataValue">Wartość danych śledzenia.</param>
        <summary>Ustawia dane śledzenia dla śledzenia czasu projektowania danych renderowania przy użyciu obiektu śledzenia, klucza danych śledzenia i wartości danych śledzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Web.UI.Control.Site" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IComponent.Site</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera informacje o kontenerze, który hostuje bieżącą kontrolkę, gdy jest renderowany na powierzchni projektowej.</summary>
        <value><see cref="T:System.ComponentModel.ISite" /> Zawierający informacje o kontenerze, w którym znajduje się kontrolka.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokacja wiąże <xref:System.ComponentModel.Component> obiekt <xref:System.ComponentModel.Container> z obiektem i umożliwia komunikację między nimi. Zapewnia także sposób, w jaki kontener może zarządzać swoimi składnikami.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kontrolka jest <see cref="T:System.Web.UI.WebControls.Substitution" /> kontrolką.</exception>
        <altmember cref="T:System.ComponentModel.ISite" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public virtual string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.Control.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia skórkę, która ma zostać zastosowana do kontrolki.</summary>
        <value>Nazwa skórki, która ma zostać zastosowana do kontrolki. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Karnacje dostępne dla kontrolki są zawarte w co najmniej jednym pliku skórki w katalogu motywu. <xref:System.Web.UI.Control.SkinID%2A> Właściwość określa, które z tych karnacji mają być stosowane do kontrolki. Skórka jest specyficzna dla konkretnej kontrolki; nie można udostępniać ustawień skórki między kontrolkami różnych typów.  
  
 Jeśli <xref:System.Web.UI.Control.SkinID%2A> właściwość nie zostanie ustawiona, formant używa domyślnej karnacji, jeśli jest zdefiniowany. Na przykład jeśli skórka bez identyfikatora jest zdefiniowana dla <xref:System.Web.UI.WebControls.Image> kontrolki, to karnacja ma zastosowanie do wszystkich <xref:System.Web.UI.WebControls.Image> kontrolek, które nie odwołują się jawnie do skórki według identyfikatora i nie są ustawione do wyłączania motywów. Jeśli skórka o identyfikatorze jest zdefiniowana dla <xref:System.Web.UI.WebControls.Image> kontrolki, to karnacja ma zastosowanie tylko do <xref:System.Web.UI.WebControls.Image> kontrolek, których <xref:System.Web.UI.Control.SkinID%2A> właściwość jest ustawiona na ten identyfikator.  
  
 Jeśli pliki skórki w katalogu motywu nie zawierają karnacji z określoną <xref:System.Web.UI.Control.SkinID%2A> właściwością <xref:System.ArgumentException> , wyjątek jest zgłaszany w czasie wykonywania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Arkusz stylów został już zastosowany.  
  
—lub— 
Zdarzenie <see langword="Page_PreInit" /> już się nie poszło.  
  
—lub— 
Formant został już dodany do <see langword="Controls" /> kolekcji.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">Przegląd motywów ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlBuilderAccessor.ControlBuilder">
      <MemberSignature Language="C#" Value="System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ControlBuilder As ControlBuilder Implements IControlBuilderAccessor.ControlBuilder" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::ControlBuilder ^ System::Web::UI::IControlBuilderAccessor::ControlBuilder { System::Web::UI::ControlBuilder ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IControlBuilderAccessor.ControlBuilder" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IControlBuilderAccessor.ControlBuilder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IControlBuilderAccessor.ControlBuilder" />Zobacz.</summary>
        <value>, Który utworzył formant; w przeciwnym razie <see langword="null" /> , jeśli nie został użyty żaden Konstruktor. <see cref="T:System.Web.UI.ControlBuilder" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IControlBuilderAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.GetDesignModeState">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary IControlDesignerAccessor.GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Function GetDesignModeState () As IDictionary Implements IControlDesignerAccessor.GetDesignModeState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionary ^ System.Web.UI.IControlDesignerAccessor.GetDesignModeState() = System::Web::UI::IControlDesignerAccessor::GetDesignModeState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />Zobacz.</summary>
        <returns><see cref="T:System.Collections.IDictionary" /> Stan formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IControlDesignerAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.SetDesignModeState">
      <MemberSignature Language="C#" Value="void IControlDesignerAccessor.SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub SetDesignModeState (data As IDictionary) Implements IControlDesignerAccessor.SetDesignModeState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System::Collections::IDictionary ^ data) = System::Web::UI::IControlDesignerAccessor::SetDesignModeState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="data"><see cref="T:System.Collections.IDictionary" /> Zawierający dane czasu projektowania dla kontrolki.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Web.UI.IControlDesignerAccessor.SetDesignModeState(System.Collections.IDictionary)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IControlDesignerAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.SetOwnerControl">
      <MemberSignature Language="C#" Value="void IControlDesignerAccessor.SetOwnerControl (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Sub SetOwnerControl (owner As Control) Implements IControlDesignerAccessor.SetOwnerControl" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System::Web::UI::Control ^ owner) = System::Web::UI::IControlDesignerAccessor::SetOwnerControl;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="owner">Właściciel formantu.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Web.UI.IControlDesignerAccessor.SetOwnerControl(System.Web.UI.Control)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IControlDesignerAccessor> do interfejsu.  
  
 <xref:System.Web.UI.IControlDesignerAccessor> Interfejs jest używany przez projektanta formantów do wykonywania akcji czasu projektowania w formancie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="owner" />jest ustawiony na bieżącą kontrolkę.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IControlDesignerAccessor.UserData">
      <MemberSignature Language="C#" Value="System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UserData As IDictionary Implements IControlDesignerAccessor.UserData" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::IDictionary ^ System::Web::UI::IControlDesignerAccessor::UserData { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IControlDesignerAccessor.UserData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IControlDesignerAccessor.UserData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IControlDesignerAccessor.UserData" />Zobacz.</summary>
        <value><see cref="T:System.Collections.IDictionary" /> Zawierające informacje o formancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IControlDesignerAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataBindingsAccessor.DataBindings">
      <MemberSignature Language="C#" Value="System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataBindings As DataBindingCollection Implements IDataBindingsAccessor.DataBindings" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::DataBindingCollection ^ System::Web::UI::IDataBindingsAccessor::DataBindings { System::Web::UI::DataBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataBindingsAccessor.DataBindings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataBindingsAccessor.DataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IDataBindingsAccessor.DataBindings" />Zobacz.</summary>
        <value>Kolekcja powiązań danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IDataBindingsAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataBindingsAccessor.HasDataBindings">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IDataBindingsAccessor.HasDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasDataBindings As Boolean Implements IDataBindingsAccessor.HasDataBindings" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IDataBindingsAccessor::HasDataBindings { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataBindingsAccessor.HasDataBindings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataBindingsAccessor.HasDataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IDataBindingsAccessor.HasDataBindings" />Zobacz.</summary>
        <value><see langword="true" />Jeśli kontrolka zawiera logikę powiązania danych; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IDataBindingsAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IExpressionsAccessor.Expressions">
      <MemberSignature Language="C#" Value="System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expressions As ExpressionBindingCollection Implements IExpressionsAccessor.Expressions" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::ExpressionBindingCollection ^ System::Web::UI::IExpressionsAccessor::Expressions { System::Web::UI::ExpressionBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IExpressionsAccessor.Expressions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IExpressionsAccessor.Expressions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ExpressionBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IExpressionsAccessor.Expressions" />Zobacz.</summary>
        <value>Obiekty <see cref="T:System.Web.UI.ExpressionBindingCollection" /> zawierające<see cref="T:System.Web.UI.ExpressionBinding" /> , które reprezentują właściwości i wyrażenia dla kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IExpressionsAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IExpressionsAccessor.HasExpressions">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IExpressionsAccessor.HasExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IExpressionsAccessor.HasExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasExpressions As Boolean Implements IExpressionsAccessor.HasExpressions" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IExpressionsAccessor::HasExpressions { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IExpressionsAccessor.HasExpressions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IExpressionsAccessor.HasExpressions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Web.UI.IExpressionsAccessor.HasExpressions" />Zobacz.</summary>
        <value><see langword="true" />Jeśli kontrolka ma właściwości ustawiane za pomocą wyrażeń; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IExpressionsAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IParserAccessor.AddParsedSubObject">
      <MemberSignature Language="C#" Value="void IParserAccessor.AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IParserAccessor.AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddParsedSubObject (obj As Object) Implements IParserAccessor.AddParsedSubObject" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IParserAccessor.AddParsedSubObject(System::Object ^ obj) = System::Web::UI::IParserAccessor::AddParsedSubObject;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do dodania.</param>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Web.UI.IParserAccessor.AddParsedSubObject(System.Object)" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Web.UI.Control> gdy wystąpienie jest rzutowane <xref:System.Web.UI.IParserAccessor> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.TemplateControl TemplateControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.TemplateControl TemplateControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.TemplateControl" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateControl As TemplateControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::TemplateControl ^ TemplateControl { System::Web::UI::TemplateControl ^ get(); void set(System::Web::UI::TemplateControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TemplateControl : System.Web.UI.TemplateControl with get, set" Usage="System.Web.UI.Control.TemplateControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odwołanie do szablonu, który zawiera tę kontrolkę.</summary>
        <value><see cref="T:System.Web.UI.TemplateControl" /> Wystąpienie, które zawiera tę kontrolkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wystąpienie jest częścią szablonu kontrolki <xref:System.Web.UI.Control.TemplateControl%2A> , właściwość zawiera odwołanie do kontrolki zawierającej. <xref:System.Web.UI.Control> Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.TemplateControl?displayProperty=nameWithType> dokumentacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateSourceDirectory">
      <MemberSignature Language="C#" Value="public virtual string TemplateSourceDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateSourceDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.TemplateSourceDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateSourceDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TemplateSourceDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplateSourceDirectory : string" Usage="System.Web.UI.Control.TemplateSourceDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera katalog <see cref="T:System.Web.UI.Page" /> wirtualny lub <see cref="T:System.Web.UI.UserControl" /> zawierający bieżącą kontrolkę serwerową.</summary>
        <value>Katalog wirtualny kontrolki Strona lub użytkownik zawierający formant serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> Właściwość określa ścieżkę do strony lub kontrolki użytkownika, która zawiera bieżącą kontrolkę. Na przykład, jeśli strona sieci Web znajduje się w `http://www.contoso.com/application/subdirectory` <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> , właściwość zwraca wartość "Application/subdirectory".  
  
 Aby zwrócić ścieżkę wirtualną względną dla aplikacji ("~/subdirectory"), użyj <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Web.UI.Control.TemplateSourceDirectory%2A> właściwości dwukrotnie. Pierwszy raz jest używany w <xref:System.Web.UI.Control.MapPathSecure%2A?displayProperty=nameWithType> wywołaniu metody w celu uzyskania ścieżki do katalogu, w którym znajduje się kontrolka. Drugi raz w <xref:System.IO.Directory.GetFiles%2A?displayProperty=nameWithType> wywołaniu metody, aby uzyskać listę wszystkich plików zawartych w tym katalogu.  
  
 [!code-csharp[Control_TemplateSourceDirectory#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_TemplateSourceDirectory/CS/control_templatesourcedirectory.cs#2)]
 [!code-vb[Control_TemplateSourceDirectory#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_TemplateSourceDirectory/VB/control_templatesourcedirectory.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.UserControl" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Control.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="control.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje śledzenie zmian stanu widoku w formancie serwera, aby mogły być przechowywane w <see cref="T:System.Web.UI.StateBag" /> obiekcie formantu serwera. Ten obiekt jest dostępny za pomocą <see cref="P:System.Web.UI.Control.ViewState" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana automatycznie na końcu <xref:System.Web.UI.Control.Init> zdarzenia w cyklu życia formantu serwera.  
  
 Wywołaj tę metodę podczas tworzenia formantów powiązanych z danymi z szablonu. Ta metoda ostrzega ASP.NET o monitorowaniu zmian stanu widoku kontrolki serwera, który jest wymagany podczas przesłonięcia <xref:System.Web.UI.Control.DataBind%2A?displayProperty=nameWithType> metody.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.Control.DataBind%2A> metodę w niestandardowej kontrolce serwera ASP.NET. Zaczyna od wywołania metody bazowej <xref:System.Web.UI.Control.OnDataBinding%2A> , a następnie <xref:System.Web.UI.ControlCollection.Clear%2A> używa metody do usuwania wszystkich formantów podrzędnych i <xref:System.Web.UI.Control.ClearChildViewState%2A> metody usuwania wszystkich zapisanych ustawień stanu widoku dla tych formantów podrzędnych. Na <xref:System.Web.UI.Control.ChildControlsCreated%2A> koniec właściwość jest ustawiona na `true`. Kontrolka używa następnie właściwości <xref:System.Web.UI.Control.IsTrackingViewState%2A> , aby określić, czy dla formantu włączono śledzenie zmian stanu widoku. Jeśli nie jest włączona, <xref:System.Web.UI.Control.TrackViewState%2A> Metoda jest wywoływana.  
  
 [!code-csharp[Control_StateManagement#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_StateManagement/CS/control_state.cs#5)]
 [!code-vb[Control_StateManagement#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_StateManagement/VB/control_state.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public virtual string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueID : string" Usage="System.Web.UI.Control.UniqueID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy, hierarchicznie kwalifikowany identyfikator dla kontrolki serwerowej.</summary>
        <value>W pełni kwalifikowany identyfikator kontrolki serwerowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość różni się od <xref:System.Web.UI.Control.ID%2A> właściwości, w <xref:System.Web.UI.Control.UniqueID%2A> tym, że właściwość zawiera identyfikator kontenera nazw kontrolki serwera. Ten identyfikator jest generowany automatycznie podczas przetwarzania żądania strony.  
  
 Ta właściwość jest szczególnie ważna w przypadku rozróżniania formantów serwera zawartych w kontrolce serwer powiązań danych, która powtarza się. Kontrolka powtarzająca się, <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DetailsView>i <xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.GridView> kontrolki serwera sieci Web (lub wszelkie niestandardowe formanty serwera, które są tworzone, które obejmują powtarzające się funkcje, gdy dane są powiązane), pełni rolę Określanie nazwy kontenera dla jego formantów podrzędnych. Oznacza to, że tworzy unikatowy obszar nazw dla jego formantów podrzędnych, tak aby <xref:System.Web.UI.Control.ID%2A> ich wartości właściwości nie powodowały konfliktów.  
  
 Na przykład, jeśli dołączysz kontrolkę serwer sieci Web <xref:System.Web.UI.WebControls.Label> ASP.NET <xref:System.Web.UI.WebControls.Repeater> w <xref:System.Web.UI.WebControls.Label> kontrolce serwer <xref:System.Web.UI.Control.ID%2A> i przypiszesz <xref:System.Web.UI.WebControls.Repeater> kontrolkę wartość `MyLabel`właściwości, i a <xref:System.Web.UI.Control.ID%2A> `MyRepeater`. W przypadku powiązania danych do <xref:System.Web.UI.WebControls.Repeater> <xref:System.Collections.ArrayList> obiektu z trzema wpisami, wyniki <xref:System.Web.UI.Control.UniqueID%2A> właściwości dla każdego wystąpienia <xref:System.Web.UI.WebControls.Label> formantów serwera to `MyRepeater$ctl00$MyLabel`, `MyRepeater$ctl01$MyLabel`, i `MyRepeater$ctl02$MyLabel`.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Collections.ArrayList> obiekt i wypełnia go trzema ciągami tekstowymi, a następnie wiąże <xref:System.Web.UI.WebControls.Repeater> formant serwera sieci Web <xref:System.Collections.ArrayList> z danymi w czasie ładowania strony. Kod pobiera <xref:System.Web.UI.Control.UniqueID%2A> właściwość dla każdej kontrolki podrzędnej wygenerowanej podczas tworzenia powiązania danych. Kod generuje trzy wersje <xref:System.Web.UI.WebControls.Label> kontrolki i zapisuje ich `UniqueID` wartości właściwości na stronie.  
  
 [!code-aspx-csharp[AccessingAspNetControlsProgramaticallyConcepts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AccessingAspNetControlsProgramaticallyConcepts/CS/WebFormsControlIdResolution12.aspx#2)]
 [!code-aspx-vb[AccessingAspNetControlsProgramaticallyConcepts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AccessingAspNetControlsProgramaticallyConcepts/VB/WebFormsControlIdResolution12.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public event EventHandler Unload;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Unload" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Control.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unload As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Unload;" />
      <MemberSignature Language="F#" Value="member this.Unload : EventHandler " Usage="member this.Unload : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant serwera zostanie zwolniony z pamięci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolki serwera muszą wykonać wszelkie końcowe czyszczenie, takie jak zamykanie plików, połączenia z bazą danych i obiekty odrzucania, na tym etapie cyklu życia kontroli przed wyładowaniem wystąpienia.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Wprowadzenie do cyklu życia strony ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.Control.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy formant sprawdza dane wejściowe klienta z przeglądarki pod kątem potencjalnie niebezpiecznych wartości.</summary>
        <value>Wartość określająca, czy formant sprawdza dane wejściowe klienta. Wartości mogą zawierać <see cref="F:System.Web.UI.ValidateRequestMode.Disabled" />, <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />i <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />. Wartością domyślną jest <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />, co oznacza, że kontrolka Pobiera wartość z jej elementu nadrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat weryfikacji żądań <xref:System.Web.UnvalidatedRequestValues>, zobacz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.Control.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera słownik informacji o stanie, który umożliwia zapisanie i przywrócenie stanu widoku kontrolki serwera w wielu żądaniach na tej samej stronie.</summary>
        <value>Wystąpienie <see cref="T:System.Web.UI.StateBag" /> klasy zawierającej informacje o stanie widoku kontrolki serwera.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku kontrolki serwera to akumulacja wszystkich wartości właściwości. Aby zachować te wartości w żądaniach HTTP, formanty serwera ASP.NET używają tej właściwości, która jest wystąpieniem <xref:System.Web.UI.StateBag> klasy do przechowywania wartości właściwości. Wartości są następnie przenoszone jako zmienna do ukrytego elementu wejściowego HTML w przypadku przetwarzania kolejnych żądań. Aby uzyskać więcej informacji na temat zapisywania stanu widoku kontroli serwera, zobacz [ASP.NET State Management — Omówienie](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Stan widoku jest domyślnie włączony dla wszystkich kontrolek serwera, ale istnieją sytuacje, w których chcesz go wyłączyć. Aby uzyskać więcej informacji, zobacz [Omówienie wydajności ASP.NET](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).  
  
 Informacje o słownikach i sposobach ich użycia znajdują się w temacie [kolekcje i struktury danych](~/docs/standard/collections/index.md).  
  
   
  
## Examples  
 Poniższy przykład demonstruje implementację `Text` właściwości, która przechowuje i pobiera jej wartość z <xref:System.Web.UI.Control.ViewState%2A> właściwości kontrolki.  
  
 [!code-csharp[SysWebUIControlViewState#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SysWebUIControlViewState/CS/controlviewstate.cs#2)]
 [!code-vb[SysWebUIControlViewState#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SysWebUIControlViewState/VB/controlviewstate.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ViewStateIgnoresCase">
      <MemberSignature Language="C#" Value="protected virtual bool ViewStateIgnoresCase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewStateIgnoresCase" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewStateIgnoresCase" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ViewStateIgnoresCase As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ViewStateIgnoresCase { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateIgnoresCase : bool" Usage="System.Web.UI.Control.ViewStateIgnoresCase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy w <see cref="T:System.Web.UI.StateBag" /> obiekcie nie jest rozróżniana wielkość liter.</summary>
        <value><see langword="true" />Jeśli wystąpienie nie uwzględnia wielkości liter; <see langword="false" />w przeciwnym razie. <see cref="T:System.Web.UI.StateBag" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąp tę metodę, jeśli utworzysz niestandardową kontrolkę serwera, która zapisuje jej stan widoku bez uwzględniania wielkości liter. W takim przypadku wiele obiektów z tym samym kluczem, ale z inną wielkością liter, może być przechowywane w <xref:System.Web.UI.StateBag> skojarzony <xref:System.Web.UI.Control.ViewState%2A> z właściwością.  
  
   
  
## Examples  
 Poniższy przykład ilustruje sposób zastąpienia <xref:System.Web.UI.Control.ViewStateIgnoresCase%2A> właściwości do zwrócenia. `true`  
  
 [!code-csharp[System.Web.UI.Control_ViewStateIgnoresCase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/cs/controlsample_7.cs#2)]
 [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Control_ViewStateIgnoresCase/VB/controlsample_7.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ViewStateMode ViewStateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateMode ViewStateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.ViewStateMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewStateMode As ViewStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ViewStateMode ViewStateMode { System::Web::UI::ViewStateMode get(); void set(System::Web::UI::ViewStateMode value); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateMode : System.Web.UI.ViewStateMode with get, set" Usage="System.Web.UI.Control.ViewStateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb widoku stanu tego formantu.</summary>
        <value>Tryb widoku stanu tego formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.Control.ViewStateMode%2A> właściwości, aby włączyć stan widoku dla poszczególnych kontrolek, nawet jeśli stan widoku jest wyłączony dla strony. Aby uzyskać więcej informacji o stanie widoku stanu i kontroli, zobacz <xref:System.Web.UI.Control.EnableViewState%2A> właściwość.  
  
 Aby wyłączyć wyświetlanie stanu strony i włączyć ją dla konkretnej kontrolki na stronie, <xref:System.Web.UI.Control.EnableViewState%2A> ustaw właściwość strony i kontrolki na `true`, ustaw <xref:System.Web.UI.Control.ViewStateMode%2A> Właściwość strony na <xref:System.Web.UI.ViewStateMode.Disabled>, a następnie ustaw <xref:System.Web.UI.Control.ViewStateMode%2A> Właściwość Kontrolka <xref:System.Web.UI.ViewStateMode.Enabled>.  
  
 Wartość <xref:System.Web.UI.Control.ViewStateMode%2A> domyślna właściwości strony to <xref:System.Web.UI.ViewStateMode.Enabled>. Wartością <xref:System.Web.UI.Control.ViewStateMode%2A> domyślną właściwości kontrolki serwer sieci Web na stronie jest <xref:System.Web.UI.ViewStateMode.Inherit>. W związku z tym, jeśli ta właściwość nie zostanie ustawiona na stronie lub na poziomie formantu, wartość <xref:System.Web.UI.Control.EnableViewState%2A> właściwości określa zachowanie stanu widoku.  
  
 Właściwość strony lub kontrolki ma efekt tylko wtedy, <xref:System.Web.UI.Control.EnableViewState%2A> gdy właściwość jest ustawiona na `true`. <xref:System.Web.UI.Control.ViewStateMode%2A> Jeśli właściwość jest ustawiona na `false`, stan widoku zostanie wyłączony, nawet jeśli <xref:System.Web.UI.Control.ViewStateMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.ViewStateMode.Enabled>. <xref:System.Web.UI.Control.EnableViewState%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Podjęto próbę ustawienia tej właściwości na wartość, która nie znajduje się w <see cref="T:System.Web.UI.ViewStateMode" /> wyliczeniu.</exception>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">Omówienie zarządzania stanem ASP.NET</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386448(v%3dvs.100)">Przegląd stanu widoku ASP.NET</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cteh3e77(v=vs.100)">Kontrolowanie stanu widoku</related>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Control.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.Control.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kontrolka serwera jest renderowana jako interfejs użytkownika na stronie.</summary>
        <value><see langword="true" />Jeśli formant jest widoczny na stronie; w <see langword="false" />przeciwnym razie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość ma `false`wartość, formant serwera nie jest renderowany. Należy to wziąć pod uwagę podczas organizowania układu strony.  
  
> [!NOTE]
>  Jeśli kontrolka kontenera nie jest renderowana, żadne kontrolki, które zawiera, nie będą renderowane nawet wtedy, <xref:System.Web.UI.Control.Visible%2A> gdy właściwość poszczególnych kontrolek zostanie `true`ustawiona na. W takim przypadku poszczególne kontrolki powracają `false` do właściwości, <xref:System.Web.UI.Control.Visible%2A> nawet jeśli jawnie ją `true`ustawisz. (Oznacza to, że jeśli `Visible` właściwość kontrolki nadrzędnej jest ustawiona na `false`, formant podrzędny dziedziczy to ustawienie, a ustawienie ma pierwszeństwo przed każdym ustawieniem lokalnym.)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
