<Type Name="PageStatePersister" FullName="System.Web.UI.PageStatePersister">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0281a61e3dd268dd9a9a917b22d7857cea78924b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36376566" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageStatePersister extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageStatePersister" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageStatePersister" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageStatePersister abstract" />
  <TypeSignature Language="F#" Value="type PageStatePersister = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia podstawowe funkcje dla mechanizmów trwałości stanu widoku programu ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Żądania HTTP i odpowiedzi są z założenia bezstanowe. Aby zachować informacje o stanie między żądaniami HTTP, strony serwera ASP.NET mogą przechowywać <xref:System.Web.UI.Page> stanu. Ten stan, nazywany stan widoku składa się z strony i kontrola ustawień i danych, strony i formanty pojawiają się tak, jakby są takie same, jak, które użytkownik był wyświetlany i interakcji z na ich ostatniego obiegu do serwera. Istnieje kilka mechanizmów do przechowywania stanu widoku między kolejnych żądań do tej samej strony. Abstract <xref:System.Web.UI.PageStatePersister> klasa reprezentuje klasę podstawową dla tych mechanizmów magazynu informacji o stanie.  
  
 Domyślny mechanizm trwałości stanu widoku w programie ASP.NET ma przechowuje informacji o stanie jako ciąg zakodowany w formacie Base64 w ukrytym elemencie HTML (element z `type` ustawić atrybutu `"hidden"`) na stronie. Strony ASP.NET używa <xref:System.Web.UI.HiddenFieldPageStatePersister> obiektów, które należy wykonać pracę, za pomocą <xref:System.Web.UI.IStateFormatter> wystąpienie do serializacji i deserializacji obiektu informacji o stanie. Alternatywnie można przechowywać stan widoku stron w <xref:System.Web.HttpContext.Session%2A> obiektu na serwerze przy użyciu <xref:System.Web.UI.SessionPageStatePersister> klasy dla klientów mobilnych, z ograniczoną przepustowością sieci i zasobów. W niektórych przypadkach może być całkowicie wyłączyć trwałość stanu widoku. Jeśli to zrobisz, wynikiem jest, że czasami stron i kontrolek, które opierają się na trwałość stanu nie działają prawidłowo. Aby uzyskać więcej informacji dotyczących stanu zarządzania i sprawdź stan strony, zobacz [omówienie zarządzania stanu ASP.NET](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Jeśli piszesz formantów, można zapisać informacji o stanie formantów w <xref:System.Web.UI.Control.ViewState%2A> słownik, który jest <xref:System.Web.UI.StateBag> obiektu. Deweloper może pobrać stanu kontroli za pośrednictwem <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości. Przypisz kluczy i wartości do <xref:System.Web.UI.Control.ViewState%2A> właściwości oraz <xref:System.Web.UI.Page> obiektu serializuje informacje o stanie między żądaniami. Aby wykonać niestandardowe stanu obsługi formantu, należy zastąpić <xref:System.Web.UI.Control.LoadViewState%2A> i <xref:System.Web.UI.Control.SaveViewState%2A> metody. Informacje o stanie, który jest przechowywany w tym słowniku jest utracone, jeśli stan widoku jest wyłączone przez dewelopera strony. Aby temu zaradzić, w programie ASP.NET w wersji 2.0, można przechowywać informacje stan krytyczny w oddzielny obiekt o nazwie Stan formantu. Obiekt stanu formantu nie występuje, gdy stan widoku jest wyłączony przez dewelopera strony. Przechowywanie informacji o stanie w obiekcie stan formantu wymaga czy zastąpić formantu <xref:System.Web.UI.Control.LoadControlState%2A> i <xref:System.Web.UI.Control.SaveControlState%2A> metody zarejestrowania formantu do przechowywania informacji o stanie w kontrolę i stan za każdym razem, gdy formant jest inicjowany. Można zarejestrować formantu do korzystania ze stanu kontroli przez zastąpienie <xref:System.Web.UI.Control.OnInit%2A> — metoda i wywoływania <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metody. Aby uzyskać więcej informacji o korzystaniu z <xref:System.Web.UI.Control.ViewState%2A> właściwości i kontroli stanu przy opracowywaniu formantów, zobacz [tworzenia kontrolek serwera ASP.NET niestandardowe](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
 Aby zachować stan widoku na klientów, które nie obsługują istniejące wyświetlić mechanizmów trwałości stanu, można rozszerzyć <xref:System.Web.UI.PageStatePersister> klasy wprowadzenie własnych metod trwałości stanu widoku, a strona karty służy do konfigurowania aplikacji platformy ASP.NET do korzystania z mechanizmów trwałości stanu inny widok na podstawie typu dostarczanej strony klienta. Klasy, które pochodzą z <xref:System.Web.UI.PageStatePersister> przesłonięcie abstrakcyjna klasa <xref:System.Web.UI.PageStatePersister.Save%2A> metoda przechowywania stan widoku i kontroli stanu na nośniku trwałości i zastępowania <xref:System.Web.UI.PageStatePersister.Load%2A> metody Wyodrębnij go. Jeśli potrzebujesz serializować stanu widoku i kontroli stanu na ciąg, możesz użyć <xref:System.Web.UI.IStateFormatter> obiektu, do których uzyskuje się dostęp przy użyciu <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> właściwości. Efektywne serializuje i deserializuje informacje dotyczące stanu obiektu na ciąg kodowany w formacie Base64. Możesz też przesłonić <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> właściwość, aby podać własne mechanizmu serializacji stanu obiektu.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Web.UI.PageStatePersister> obiekt, który zapisuje stan widoku i sterowania na serwerze sieci Web. `StreamPageStatePersister` Pokazano, jak zastąpić <xref:System.Web.UI.PageStatePersister.Load%2A> i <xref:System.Web.UI.PageStatePersister.Save%2A> metody, aby wyodrębnić i zapisać widok stanu informacji. Ponieważ mechanizmów trwałości stanu są związane z adaptacyjną renderowania i możliwości klienta `MyPageAdapter` klasy jest dostarczany w celu aktywowania `StreamPageStatePersister` dla aplikacji ASP.NET. Na koniec pliku (.browser) możliwości przeglądarki jest umożliwiające `MyPageAdapter` karty dla określonej klasy klientów (w tym przypadku domyślnej przeglądarki sieci Web).  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#1)]  
  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Web.UI.Adapters.PageAdapter> klasy, która zwraca wystąpienie klasy `StreamPageStatePersister`, które są używane do utrwalenia widoku i kontroli stanu strony sieci Web ASP.NET.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#5)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#5)]  
  
 Te dwie klasy kompiluje się do zestawu, który służy do uruchamiania próbki, przy użyciu następującego wiersza polecenia kompilatora. Upewnij się, że skompilowanego zestawu znajduje się w katalogu \Bin poniżej katalogu głównego aplikacji ASP.NET.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#6)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#6)]  
  
 Na koniec aby włączyć `MyPageAdapter` karty, należy utworzyć katalog o nazwie przeglądarki poniżej katalogu głównego aplikacji ASP.NET i dołączyć plik do .browser informacji o konfiguracji. `<refid>` w pliku konfiguracji wskazuje, że konfiguracja zastępuje wartości określone dla domyślnej przeglądarki w pliku konfiguracyjnym Default.browser. W tym przykładzie `MyPageAdapter` jest używany dla stron sieci Web platformy ASP.NET (gdzie zwykle karty nie jest używany).  
  
```  
<browsers>  
    <browser refid="Default" >  
        <controlAdapters>  
            <adapter   
                controlType="System.Web.UI.Page"                              
                adapterType="Samples.AspNet.CS.MyPageAdapter" />  
        </controlAdapters>  
    </browser>  
</browsers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.Pair" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageStatePersister(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageStatePersister : System.Web.UI.Page -&gt; System.Web.UI.PageStatePersister" Usage="new System.Web.UI.PageStatePersister page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">
          <see cref="T:System.Web.UI.Page" /> Utworzonego dla mechanizmu stanu trwałego stanu widoku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageStatePersister" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="page" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlState">
      <MemberSignature Language="C#" Value="public object ControlState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ControlState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ControlState" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ControlState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ControlState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt reprezentujący dane, które kontroluje zawarty w bieżącej <see cref="T:System.Web.UI.Page" /> użycie obiektu być zachowany po żądania HTTP do serwera sieci Web.</summary>
        <value>Obiekt zawierający dane stanu widoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan kontrolki jest obiektem obejmuje dane stanu krytycznego widoku sieci Web serwera formanty potrzebę funkcji, która znajduje się w oddzielnych obiektu z informacji o stanie widoku normalnym. Dane stanu formantu nie wpływa na stan widoku jest wyłączone w <xref:System.Web.UI.Page> poziomie, ale wymaga wykonania dodatkowych czynności w celu. Aby uzyskać więcej informacji na temat używania <xref:System.Web.UI.Control.ViewState%2A> właściwości i kontroli stanu przy opracowywaniu formantów, zobacz [tworzenia kontrolek serwera ASP.NET niestandardowe](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak klasy, która jest pochodną <xref:System.Web.UI.PageStatePersister> klasy inicjuje <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości. W tym przykładzie <xref:System.Web.UI.PageStatePersister.ControlState%2A> ustawiono właściwość <xref:System.Web.UI.Pair.Second> pole <xref:System.Web.UI.Pair> obiektu i zserializowanym przy użyciu <xref:System.Web.UI.ObjectStateFormatter> klasy. Gdy <xref:System.Web.UI.PageStatePersister.Load%2A> metoda jest wywoływana, <xref:System.Web.UI.ObjectStateFormatter> klasa jest używana do deserializacji widok stanu i kontroli informacje o stanie i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwość jest inicjowana z powstałe w ten sposób <xref:System.Web.UI.Pair> obiektu <xref:System.Web.UI.Pair.Second> pola. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Load" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="pageStatePersister.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastąpione klas pochodnych do deserializacji i ładowania stanu utrwalonego informacji podczas <see cref="T:System.Web.UI.Page" /> hierarchii formant inicjuje obiekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą z <xref:System.Web.UI.PageStatePersister> implementacji klasy <xref:System.Web.UI.PageStatePersister.Load%2A> metodę, aby zainicjować <xref:System.Web.UI.PageStatePersister.ViewState%2A> i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości z niektórych utrwalonego formatu.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak klasy, która jest pochodną <xref:System.Web.UI.PageStatePersister> klasa implementuje <xref:System.Web.UI.PageStatePersister.Load%2A> metody ładowania stanu widoku z nośnika trwałości. `StreamPageStatePersister` Próbuje odczytać danych ze strumienia. Używa <xref:System.Web.UI.IStateFormatter> obiekt do deserializacji dane stanu widoku i zainicjuj <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwości i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwość, która używa strony zainicjować kontrolki. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.Page" />
      <MemberSignature Language="VB.NET" Value="Protected Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.PageStatePersister.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.UI.Page" /> utworzony mechanizmu stanu trwałego stanu widoku dla obiekt.</summary>
        <value>
          <see cref="T:System.Web.UI.Page" /> Który <see cref="T:System.Web.UI.PageStatePersister" /> jest skojarzony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Web.UI.PageStatePersister.Page%2A> właściwości do bieżącego <xref:System.Web.HttpContext> obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Save" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit" Usage="pageStatePersister.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastąpione klas pochodnych serializować stanu utrwalonego informacji podczas <see cref="T:System.Web.UI.Page" /> obiekt jest usuwane z pamięci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które pochodzą z <xref:System.Web.UI.PageStatePersister> implementacji klasy <xref:System.Web.UI.PageStatePersister.Save%2A> metodę, aby zachować zawartość <xref:System.Web.UI.PageStatePersister.ViewState%2A> i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości na wartość średnią trwałości.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak klasy, która jest pochodną <xref:System.Web.UI.PageStatePersister> klasa implementuje <xref:System.Web.UI.PageStatePersister.Save%2A> metodę, aby zachować stan widoku na nośniku trwałości. `StreamPageStatePersister` Używa <xref:System.Web.UI.IStateFormatter> obiektu do serializacji zawartość <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwości i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateFormatter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.IStateFormatter StateFormatter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IStateFormatter StateFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StateFormatter As IStateFormatter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::IStateFormatter ^ StateFormatter { System::Web::UI::IStateFormatter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StateFormatter : System.Web.UI.IStateFormatter" Usage="System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IStateFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.IStateFormatter" /> obiekt, który jest używany do serializacji i deserializacji stanu informacji zawartych w <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> i <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> właściwości podczas wywołania <see cref="M:System.Web.UI.PageStatePersister.Save" /> i <see cref="M:System.Web.UI.PageStatePersister.Load" /> metody.</summary>
        <value>Wystąpienie <see cref="T:System.Web.UI.IStateFormatter" /> używany do serializacji i deserializacji stanu obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastąpić <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> właściwość, aby podać własne program formatujący stanu widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób klasą pochodzącą z <xref:System.Web.UI.PageStatePersister> klas uzyskuje dostęp do <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> właściwości do pobrania <xref:System.Web.UI.ObjectStateFormatter> obiektu, który jest domyślna implementacja elementu <xref:System.Web.UI.IStateFormatter> interfejs do serializacji widoku Stan stanu i kontroli do strumienia. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="public object ViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ViewState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt reprezentujący dane, które kontroluje zawarty w bieżącej <see cref="T:System.Web.UI.Page" /> użycie obiektu być zachowany po żądania HTTP do serwera sieci Web.</summary>
        <value>Obiekt zawierający dane stanu widoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku jest słownikiem kontrolki serwera sieci Web muszą działać i renderowania same dane stanu. Deweloperzy kontroli zwykle uzyskują dostęp do widoku stanu obiektu przy użyciu <xref:System.Web.UI.Control.ViewState%2A> właściwości. Stan widoku występuje, gdy stan widoku jest wyłączona w <xref:System.Web.UI.Page> poziomu i w związku z tym formanty mogą nie zachowywać się poprawnie w tych scenariuszach. Aby uzyskać więcej informacji na temat używania <xref:System.Web.UI.Control.ViewState%2A> i kontrolować stan przy opracowywaniu formantów, zobacz [tworzenia kontrolek serwera ASP.NET niestandardowe](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano, jak klasy, która jest pochodną <xref:System.Web.UI.PageStatePersister> klasy inicjuje <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwości. W tym przykładzie <xref:System.Web.UI.PageStatePersister.ViewState%2A> ustawiono właściwość <xref:System.Web.UI.Pair.First> pole <xref:System.Web.UI.Pair> obiektu i zserializowanym przy użyciu <xref:System.Web.UI.ObjectStateFormatter> obiektu, który jest wystąpieniem programu <xref:System.Web.UI.IStateFormatter> interfejsu. Gdy <xref:System.Web.UI.PageStatePersister.Load%2A> metoda jest wywoływana, <xref:System.Web.UI.ObjectStateFormatter> interfejs jest używany do deserializacji Wyświetl informacje o stanie i <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwość jest inicjowana z powstałe w ten sposób <xref:System.Web.UI.Pair> obiektu <xref:System.Web.UI.Pair.First> pola. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>