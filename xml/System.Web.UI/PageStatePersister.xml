<Type Name="PageStatePersister" FullName="System.Web.UI.PageStatePersister">
  <Metadata><Meta Name="ms.openlocfilehash" Value="221c40c806b2709ceb47c005e59947a1f6d712ee" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51914256" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageStatePersister extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageStatePersister" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageStatePersister" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageStatePersister abstract" />
  <TypeSignature Language="F#" Value="type PageStatePersister = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Oferuje podstawowe funkcje mechanizmów stanów trwałych stanu widoku programu ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Żądania HTTP i odpowiedzi są założenia bezstanowe. Aby zachować informacje o stanie między żądaniami HTTP, można przechowywać strony serwera ASP.NET <xref:System.Web.UI.Page> stanu. Ten stan, o nazwie stan widoku składa się z strony i kontrola ustawień i danych, strony i formanty są wyświetlane tak, jakby były takie same te, które użytkownik był wyświetlany i interakcji z na ich ostatniej komunikacji dwustronnej z serwerem. Istnieje kilka mechanizmów do przechowywania stanu widoku między kolejnymi żądaniami na tej samej stronie. Abstrakcyjna <xref:System.Web.UI.PageStatePersister> klasa reprezentuje klasę bazową dla tych mechanizmów magazynu informacje o stanie.  
  
 Domyślnego mechanizmu stanu trwałego stanu widoku w programie ASP.NET jest zachowanie informacji o stanie jako ciąg zakodowany w formacie Base64 w ukrytym elemencie HTML (element z `type` ustawioną wartość atrybutu `"hidden"`) na stronie. Strony ASP.NET używa <xref:System.Web.UI.HiddenFieldPageStatePersister> obiektów, które należy wykonać pracę, za pomocą <xref:System.Web.UI.IStateFormatter> wystąpienia do serializacji i deserializacji obiektu informacji o stanie. Alternatywnie można przechowywać stan widoku stron w <xref:System.Web.HttpContext.Session%2A> obiektu na serwerze za pomocą <xref:System.Web.UI.SessionPageStatePersister> klasy dla klientów mobilnych za pomocą ograniczonej przepustowości i zasobów. W niektórych przypadkach może być całkowicie wyłączyć utrwalanie stanu widoku. Jeśli to zrobisz, wynik jest, że czasami stron i kontrolek, które polegają na trwałości stanu nie działają prawidłowo. Aby uzyskać więcej informacji na temat stanu zarządzania i widok stanu strony zobacz [omówienie zarządzania stanie ASP.NET](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Jeśli piszesz formantów, może przechowywać informacje o stanie dla formantów w <xref:System.Web.UI.Control.ViewState%2A> słownik, który jest <xref:System.Web.UI.StateBag> obiektu. Deweloper może pobrać stanu kontroli za pośrednictwem <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości. Przypisywanie kluczy i wartości do <xref:System.Web.UI.Control.ViewState%2A> właściwości i <xref:System.Web.UI.Page> obiektu serializuje informacje o stanie między żądaniami. Aby wykonać stanów niestandardowych, obsługa w kontrolce, należy zastąpić <xref:System.Web.UI.Control.LoadViewState%2A> i <xref:System.Web.UI.Control.SaveViewState%2A> metody. Informacje o stanie, który jest przechowywany w tym słowniku jest utracone w przypadku, gdy stan widoku jest wyłączona przez dewelopera strony. Aby temu zapobiec, na platformie ASP.NET w wersji 2.0, można przechowywać informacje stan krytyczny w oddzielnym obiektem, o nazwie Stan kontrolki. Obiekt stanu formantu nie występuje, gdy stan widoku jest wyłączona przez dewelopera strony. Przechowywanie informacji o stanie w obiekt stanu kontrolki wymaga, że kontrolka zastąpić <xref:System.Web.UI.Control.LoadControlState%2A> i <xref:System.Web.UI.Control.SaveControlState%2A> metody i kontrolki można zarejestrować przechowują informacje o stanie w kontrolowany stan za każdym razem, gdy kontrolka jest zainicjowany. Możesz zarejestrować kontrolki do użycia stan formantu przez zastąpienie <xref:System.Web.UI.Control.OnInit%2A> metody i wywoływania <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> metody. Aby uzyskać więcej informacji o korzystaniu z <xref:System.Web.UI.Control.ViewState%2A> właściwości i kontroli stanu podczas tworzenia formantów, zobacz [tworzenia formanty serwera ASP.NET niestandardowe](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
 Do zarządzania stanem widoku na klientów, którzy nie obsługują istniejące wyświetlić stan trwałości mechanizmów, można rozszerzyć <xref:System.Web.UI.PageStatePersister> klasy wprowadzenie własnych metod trwałości stanu widoku, a strona karty można użyć do konfigurowania aplikacji ASP.NET Aby użyć inny widok stanu trwałości mechanizmów, zależy od typu klienta, w którym strona jest obsługiwana. Klasy, które wynikają z <xref:System.Web.UI.PageStatePersister> przesłonięcie klasy abstrakcyjnej <xref:System.Web.UI.PageStatePersister.Save%2A> metodę, aby przechowywać stan widoku i stan formantu średni trwałości, a zastąpienie <xref:System.Web.UI.PageStatePersister.Load%2A> metody i Wyodrębnij jego zawartość. Jeśli zachodzi potrzeba serializowanie Wyświetl stan i stan formantu na ciąg, możesz użyć <xref:System.Web.UI.IStateFormatter> obiekt, który jest dostępny za pomocą <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> właściwości. Efektywne serializuje i deserializuje informacje dotyczące stanu obiektu na ciąg kodowany w formacie Base64. Możesz również zastąpić <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> właściwość, aby podać własne mechanizm serializacji stanu obiektu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób tworzenia <xref:System.Web.UI.PageStatePersister> obiekt, który zapisuje stan widoku i kontroli na serwerze sieci Web. `StreamPageStatePersister` Ilustruje sposób zastąpienia <xref:System.Web.UI.PageStatePersister.Load%2A> i <xref:System.Web.UI.PageStatePersister.Save%2A> metody, aby wyodrębnić i zapisywanie widoku stanu informacji. Ponieważ mechanizmy trwałość stanu są powiązane z adaptacyjne renderowania i możliwości klienta `MyPageAdapter` klasy jest dostarczany do aktywowania `StreamPageStatePersister` dla aplikacji ASP.NET. Na koniec pliku możliwości (.browser) przeglądarki jest dostarczana, aby umożliwić `MyPageAdapter` adapter dla określonej klasy klientów (w tym przypadku domyślnej przeglądarki sieci Web).  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób tworzenia <xref:System.Web.UI.Adapters.PageAdapter> klasę, która zwraca wystąpienie `StreamPageStatePersister`, która umożliwia utrwalanie stanu przeglądania i kontrolowania dla strony sieci Web platformy ASP.NET.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#5)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#5)]  
  
 Skompilować tych dwóch klas do zestawu, który umożliwia uruchamianie przykładu, przy użyciu następującego wiersza polecenia kompilatora. Upewnij się, że skompilowanego zestawu znajduje się w katalogu \Bin poniżej katalogu głównego aplikacji ASP.NET.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#6)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#6)]  
  
 Na koniec aby umożliwić `MyPageAdapter` karty, należy utworzyć katalog o nazwie przeglądarek poniżej katalogu głównego aplikacji ASP.NET i dołączyć plik .browser informacji konfiguracyjnych. `<refid>` Elementu w pliku konfiguracyjnym wskazuje, że konfiguracja zastępuje wartości określone dla domyślnej przeglądarki w pliku konfiguracyjnym Default.browser. W tym przykładzie `MyPageAdapter` służy do wzorca ASP.NET Web pages (gdzie normalnie żadna karta nie jest używany).  
  
```  
<browsers>  
    <browser refid="Default" >  
        <controlAdapters>  
            <adapter   
                controlType="System.Web.UI.Page"                              
                adapterType="Samples.AspNet.CS.MyPageAdapter" />  
        </controlAdapters>  
    </browser>  
</browsers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.Pair" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageStatePersister(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageStatePersister : System.Web.UI.Page -&gt; System.Web.UI.PageStatePersister" Usage="new System.Web.UI.PageStatePersister page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page"><see cref="T:System.Web.UI.Page" /> Utworzonego dla mechanizmu stanu trwałego stanu widoku.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.PageStatePersister" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" /> Parametr <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlState">
      <MemberSignature Language="C#" Value="public object ControlState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ControlState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ControlState" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ControlState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ControlState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który reprezentuje dane, który kontroluje zawarte przez bieżącą <see cref="T:System.Web.UI.Page" /> użycie obiektu do ulegają zmianie podczas żądania HTTP do serwera sieci Web.</summary>
        <value>Obiekt, który zawiera dane o stanie widoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan formantu jest obiektem obejmuje dane stanu widoku na krytyczny, sieci Web potrzebę formantów serwera funkcji, która znajduje się w oddzielnym obiektem z informacji o stanie widok normalny. Dane o stanie formantu nie wpływa na stan widoku jest wyłączona w <xref:System.Web.UI.Page> poziomu, ale wymaga wykonania dodatkowych czynności w celu. Aby uzyskać więcej informacji na temat korzystania z <xref:System.Web.UI.Control.ViewState%2A> właściwości i kontroli stanu podczas tworzenia formantów, zobacz [tworzenia formanty serwera ASP.NET niestandardowe](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak klasa, która pochodzi od klasy <xref:System.Web.UI.PageStatePersister> klasy inicjuje <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości. W tym przykładzie <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwość została przypisana do <xref:System.Web.UI.Pair.Second> pole <xref:System.Web.UI.Pair> obiektu i zserializowanym przy użyciu <xref:System.Web.UI.ObjectStateFormatter> klasy. Gdy <xref:System.Web.UI.PageStatePersister.Load%2A> metoda jest wywoływana, <xref:System.Web.UI.ObjectStateFormatter> klasa jest używana do deserializacji widok stanu i kontrola informacji o stanie i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwość jest inicjowana z wynikowy <xref:System.Web.UI.Pair> obiektu <xref:System.Web.UI.Pair.Second> pola. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Load" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="pageStatePersister.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastąpiony przez klasy pochodne do deserializacji i załadować utrwalonego stanu informacji podczas <see cref="T:System.Web.UI.Page" /> obiektu inicjuje hierarchii kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które wynikają z <xref:System.Web.UI.PageStatePersister> implementacji klasy <xref:System.Web.UI.PageStatePersister.Load%2A> metodę, aby zainicjować <xref:System.Web.UI.PageStatePersister.ViewState%2A> i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości z niektórych utrwalonych formatu.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak klasa, która pochodzi od klasy <xref:System.Web.UI.PageStatePersister> klasy implementuje <xref:System.Web.UI.PageStatePersister.Load%2A> metodę, aby załadować stan widoku średnie trwałości. `StreamPageStatePersister` Próbuje odczytać danych ze strumienia. Używa ona <xref:System.Web.UI.IStateFormatter> obiekt do deserializacji danych o stanie widoku i zainicjować <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwości i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwość, która strona korzysta zainicjować kontrolki. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.Page" />
      <MemberSignature Language="VB.NET" Value="Protected Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.PageStatePersister.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.UI.Page" /> obiektu utworzonego dla mechanizmu stanu trwałego stanu widoku.</summary>
        <value><see cref="T:System.Web.UI.Page" /> , <see cref="T:System.Web.UI.PageStatePersister" /> Jest skojarzony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.UI.PageStatePersister.Page%2A> właściwość dostęp do bieżącego <xref:System.Web.HttpContext> obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Save" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit" Usage="pageStatePersister.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastąpione przez klasy pochodne, aby serializacja informacji o utrwalonego stanu po <see cref="T:System.Web.UI.Page" /> obiekt jest usuwane z pamięci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy, które wynikają z <xref:System.Web.UI.PageStatePersister> implementacji klasy <xref:System.Web.UI.PageStatePersister.Save%2A> metodę, aby zachować zawartość <xref:System.Web.UI.PageStatePersister.ViewState%2A> i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości średni trwałości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak klasa, która pochodzi od klasy <xref:System.Web.UI.PageStatePersister> klasy implementuje <xref:System.Web.UI.PageStatePersister.Save%2A> metodę, aby utrwalić stanu widoku na nośniku trwałości. `StreamPageStatePersister` Używa <xref:System.Web.UI.IStateFormatter> obiektu do zserializowania zawartość <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwości i <xref:System.Web.UI.PageStatePersister.ControlState%2A> właściwości. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateFormatter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.IStateFormatter StateFormatter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IStateFormatter StateFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StateFormatter As IStateFormatter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::IStateFormatter ^ StateFormatter { System::Web::UI::IStateFormatter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StateFormatter : System.Web.UI.IStateFormatter" Usage="System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IStateFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.IStateFormatter" /> obiekt, który jest używany do serializacji i deserializacji informacje o stanie zawarte w <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> i <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> właściwościami w okresie wywołania <see cref="M:System.Web.UI.PageStatePersister.Save" /> i <see cref="M:System.Web.UI.PageStatePersister.Load" /> metody.</summary>
        <value>Wystąpienie <see cref="T:System.Web.UI.IStateFormatter" /> używany do serializacji i deserializacji stan obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastąpić <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> właściwość, aby podać własne program formatujący stanu widoku.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak klasa, która pochodzi od klasy <xref:System.Web.UI.PageStatePersister> uzyskuje dostęp do klasy <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> właściwość służąca do pobierania <xref:System.Web.UI.ObjectStateFormatter> obiektu, który jest domyślna implementacja z <xref:System.Web.UI.IStateFormatter> interfejsu do serializacji widoku Stan i kontroli stanu do strumienia. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="public object ViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ViewState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który reprezentuje dane, który kontroluje zawarte przez bieżącą <see cref="T:System.Web.UI.Page" /> użycie obiektu do ulegają zmianie podczas żądania HTTP do serwera sieci Web.</summary>
        <value>Obiekt, który zawiera dane o stanie widoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan widoku jest słownikiem dane o stanie, które formanty serwera sieci Web muszą działać, a same renderowania. Deweloperzy kontroli zwykle dostęp do widoku stanu obiektu przy użyciu <xref:System.Web.UI.Control.ViewState%2A> właściwości. Wyświetl stan ma wpływ stan widoku jest wyłączona w <xref:System.Web.UI.Page> poziomie i w związku z kontrolki mogą nie zachowywać się poprawnie w tych scenariuszach. Aby uzyskać więcej informacji na temat korzystania z <xref:System.Web.UI.Control.ViewState%2A> i kontrolowany stan podczas tworzenia formantów, zobacz [tworzenia formanty serwera ASP.NET niestandardowe](https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje, jak klasa, która pochodzi od klasy <xref:System.Web.UI.PageStatePersister> klasy inicjuje <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwości. W tym przykładzie <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwość została przypisana do <xref:System.Web.UI.Pair.First> pole <xref:System.Web.UI.Pair> obiektu i zserializowanym przy użyciu <xref:System.Web.UI.ObjectStateFormatter> obiektu, który jest wystąpieniem elementu <xref:System.Web.UI.IStateFormatter> interfejsu. Gdy <xref:System.Web.UI.PageStatePersister.Load%2A> metoda jest wywoływana, <xref:System.Web.UI.ObjectStateFormatter> interfejs jest używany do deserializacji informacji o stanie widoku i <xref:System.Web.UI.PageStatePersister.ViewState%2A> właściwość jest inicjowana z wynikowy <xref:System.Web.UI.Pair> obiektu <xref:System.Web.UI.Pair.First> pola. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Web.UI.PageStatePersister> klasy.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>