<Type Name="ControlBuilder" FullName="System.Web.UI.ControlBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9f189e34352a9bc82c2ac71e575d4e05ef76238" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30694856" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Tworzenie formantu i podrzędne kontrolki, które zawiera obsługuje analizator strony.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie jest skojarzony z domyślną każdego formantu na stronie <xref:System.Web.UI.ControlBuilder> klasy. Podczas analizy struktury strony ASP.NET buduje drzewo <xref:System.Web.UI.ControlBuilder> obiekty odpowiadające drzewa formantów strony. <xref:System.Web.UI.ControlBuilder> Drzewa jest następnie używany do generowania kodu strony można utworzyć drzewa formantów. Oprócz formantów podrzędnych <xref:System.Web.UI.ControlBuilder> definiuje zachowanie sposób analizowania zawartości tagów formantów. To zachowanie domyślne można zastąpić, definiując własne kontrolki niestandardowej konstruktora klasy. Jest to realizowane przez stosowanie <xref:System.Web.UI.ControlBuilderAttribute> atrybutu do konstruktora klasy formantu w następujący sposób:  
  
 `[ControlBuilderAttribute(typeof(ControlBuilderType))]`  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Web.UI.WebControls.Table> kontroli, których atrybutów i zawartości są zdefiniowane w tym czasie spis jest tworzony. Poniżej znajduje się na potrzeby kompilacji pliku wykonywalnego wiersza polecenia.  
  
```vb  
vbc /r:System.dll /r:System.Web.dll /r:System.Drawing.dll /t:library /out:myWebAppPath/Bin/vb_mycontrolbuilder.dll myControlBuilder.vb  
```  
  
```csharp  
csc /t:library /out:myWebAppPath/Bin/cs_mycontrolbuilder.dll myControlBuilder.cs  
```  
  
 [!code-csharp[SystemWebUI_ControlBuilder_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/CS/controlbuilder.cs#1)]
 [!code-vb[SystemWebUI_ControlBuilder_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/VB/controlbuilder.vb#1)]  
  
 Poniższy przykład kodu wykorzystuje poprzedniej kontrolki niestandardowej. W szczególności tworzy tabelę w których atrybuty i zawartości są definiowane w czasie wykonywania. Należy zauważyć, że wartości podanych w dyrektywie odzwierciedlają poprzedniego wiersza polecenia.  
  
 [!code-aspx-csharp[SystemWebUI_ControlBuilder_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/CS/controlbuilder.aspx#2)]
 [!code-aspx-vb[SystemWebUI_ControlBuilder_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_ControlBuilder_2/VB/controlbuilder.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.ControlBuilderAttribute" />
    <altmember cref="T:System.Web.UI.ParseChildrenAttribute" />
    <altmember cref="T:System.Web.UI.PersistChildrenAttribute" />
    <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ControlBuilder" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor umożliwia utworzenie nowego wystąpienia <xref:System.Web.UI.ControlBuilder> klasy.  
  
> [!NOTE]
>  Ten konstruktor jest zazwyczaj używana przez platformę ASP.NET, podczas analizowania strony i tworzenie hierarchii formantu. Nie jest przeznaczony do użycia w kodzie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public virtual bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AllowWhitespaceLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AllowWhitespaceLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy biały znak literały są dozwolone w zawartości między otwierające i zamykające znaczniki formantu. Ta metoda jest wywoływana przez platformę ASP.NET, strona.</summary>
        <returns>Zawsze zwraca <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A> Metoda jest używana do określenia, czy biały znak literały są dozwolone w zawartości między otwierające i zamykające znaczniki formantu. Ta metoda zwraca `false`, literały biały znak są usuwane z zawartości, zanim zawartość jest przetwarzana przez parser strony. Ta metoda zwraca `true`, literały biały znak, nie został usunięty.  
  
 Ta metoda jest wywoływana przez platformę ASP.NET, strona podczas analizy i nie jest przeznaczona do wywoływania bezpośrednio w kodzie.  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#4)]
 [!code-vb[ControlBuilderSamples_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Mogą przesłaniać tę metodę w klasie pochodnej, aby wskazać, czy biały znak literały są dozwolone w niestandardowych formantu.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AppendLiteralString">
      <MemberSignature Language="C#" Value="public virtual void AppendLiteralString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendLiteralString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AppendLiteralString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendLiteralString (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendLiteralString(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Zawartość można dodać do formantu.</param>
        <summary>Dodaje określony Zawartość literalna do formantu. Ta metoda jest wywoływana przez platformę ASP.NET, strona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąpienie <xref:System.Web.UI.ControlBuilder.AppendLiteralString%2A> metodę, aby kontrolować sposób literału zawartości między otwierające i zamykające znaczniki formantu jest przetwarzany. Zawartość literalna może być dowolny tekst, który jest przekazywany przez przeglądarkę do kontrolki serwera. Na przykład żadnych elementów HTML i tekstowym od ich tagów otwierających i zamykających, są zawartość literałową.  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#3)]
 [!code-vb[ControlBuilderSamples_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Literał ciągu nie jest poprawnie sformułowany.</exception>
      </Docs>
    </Member>
    <Member MemberName="AppendSubBuilder">
      <MemberSignature Language="C#" Value="public virtual void AppendSubBuilder (System.Web.UI.ControlBuilder subBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendSubBuilder(class System.Web.UI.ControlBuilder subBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AppendSubBuilder (subBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AppendSubBuilder(System::Web::UI::ControlBuilder ^ subBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="subBuilder">
          <see cref="T:System.Web.UI.ControlBuilder" /> Obiektu przypisane do formantu podrzędnego.</param>
        <summary>Dodaje producenci <see cref="T:System.Web.UI.ControlBuilder" /> obiektu dla wszystkich formantów podrzędnych, które należą do formantu kontenera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.ControlBuilder.AppendSubBuilder%2A> metodę, aby zgłosić <xref:System.Exception> Konstruktor ten formant jest stosowana do formantu będzie próbować należą formanty w jego wystąpienie <xref:System.Web.UI.ControlCollection> klasy.  
  
 [!code-csharp[ControlBuilderSamples_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_2/cs/ctrlbuilder1.cs#1)]
 [!code-vb[ControlBuilderSamples_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_2/VB/ctrlbuilder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlBuilder" />
      </Docs>
    </Member>
    <Member MemberName="BindingContainerBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ControlBuilder BindingContainerBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlBuilder BindingContainerBuilder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.BindingContainerBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BindingContainerBuilder As ControlBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlBuilder ^ BindingContainerBuilder { System::Web::UI::ControlBuilder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera konstruktora formantu, który odpowiada do kontenera powiązania kontrolki, która tworzy tego konstruktora.</summary>
        <value>Konstruktor kontrola umożliwiająca kontener wiązania dla kontrolki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingContainerType">
      <MemberSignature Language="C#" Value="public virtual Type BindingContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.BindingContainerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BindingContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BindingContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ kontenera powiązań dla formantu, który jest tworzony tego konstruktora.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujące typ kontenera powiązań dla formantu, który jest tworzony tego konstruktora.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.BindingContainer" />
      </Docs>
    </Member>
    <Member MemberName="BuildObject">
      <MemberSignature Language="C#" Value="public virtual object BuildObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BuildObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.BuildObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ BuildObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie czasu projektowania formantu, który odwołuje się ten <see cref="T:System.Web.UI.ControlBuilder" /> obiektu.</summary>
        <returns>Powstałe w ten sposób wbudowane formantu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseControl">
      <MemberSignature Language="C#" Value="public virtual void CloseControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.CloseControl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Metoda wywoływana przez parser informują konstruktora o tym, że analiza otwierające i zamykające znaczniki formantu została zakończona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ControlBuilder.CloseControl%2A> Metoda jest używana przez parser do wskazać konstruktora, że zakończeniu analizy formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComplexPropertyEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection ComplexPropertyEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ComplexPropertyEntries" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ComplexPropertyEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComplexPropertyEntries As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ ComplexPropertyEntries { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję właściwości złożonej wpisów.</summary>
        <value>Kolekcja wpisów właściwości złożonej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma żadnych wpisów, zwracany jest statyczny pustej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> dla formantu, który ma zostać utworzony.</summary>
        <value>
          <see cref="T:System.Type" /> Dla formantu, który ma zostać utworzony.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład zastępuje <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> metodę sprawdzania <xref:System.Web.UI.ControlBuilder.ControlType%2A> właściwość Określanie typu formantu tego konstruktora jest stosowana do. Jeśli jest `CustomTextBox`, kontroli konstruktora czy wartość <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> właściwości znajduje się w formancie. Jeśli tak, jest zwracany wyjątek, jeśli nie <xref:System.Web.UI.ControlBuilder.HasBody%2A> metoda jest wywoływana.  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="CreateBuilderFromType">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ControlBuilder CreateBuilderFromType (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs, int line, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ControlBuilder CreateBuilderFromType(class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attribs, int32 line, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ControlBuilder ^ CreateBuilderFromType(System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attribs, int line, System::String ^ sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parser">
          <see cref="T:System.Web.UI.TemplateParser" /> Obiekt odpowiedzialny za analizowanie formantu.</param>
        <param name="parentBuilder">
          <see cref="T:System.Web.UI.ControlBuilder" /> Odpowiedzialnego za budowanie formantu nadrzędnego obiektu.</param>
        <param name="type">
          <see cref="T:System.Type" /> Obiektu, który spowoduje utworzenie konstruktora.</param>
        <param name="tagName">Nazwa tagu, który ma zostać utworzony. Dzięki temu konstruktora do obsługi wielu typów znaczników.</param>
        <param name="id">
          <see cref="P:System.Web.UI.ControlBuilder.ID" /> Atrybutu przypisany do kontrolki.</param>
        <param name="attribs">
          <see cref="T:System.Collections.IDictionary" /> Obiektu, który zawiera wszystkie atrybuty określonego tagu.</param>
        <param name="line">Numer wiersza pliku źródłowego dla określonego formantu.</param>
        <param name="sourceFileName">Nazwa pliku źródłowego, z którego ma być tworzony formantu.</param>
        <summary>Tworzy <see cref="T:System.Web.UI.ControlBuilder" /> obiektu z określonej nazwie tagu i typ obiektu, a także inne parametry Definiowanie konstruktora.</summary>
        <returns>Konstruktor, który jest odpowiedzialny za tworzenie formantu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentFilterResolutionService">
      <MemberSignature Language="C#" Value="public System.Web.UI.IFilterResolutionService CurrentFilterResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IFilterResolutionService CurrentFilterResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.CurrentFilterResolutionService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentFilterResolutionService As IFilterResolutionService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IFilterResolutionService ^ CurrentFilterResolutionService { System::Web::UI::IFilterResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IFilterResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.IFilterResolutionService" /> obiekt, który jest używany do zarządzania filtr urządzenia usług związanych z podczas analizowania i przechowywanie formantów w projektancie.</summary>
        <value>
          <see cref="T:System.Web.UI.IFilterResolutionService" /> Obiekt, który jest używany do zarządzania urządzeniami filtru usług związanych z podczas analizowania i przechowywanie formantów w projektancie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IFilterResolutionService> Interfejs jest interfejs, który jest przeznaczony dla formantu używaniu filtrów urządzeń w projektancie. Gdy formanty są analizowane lub utrwalone w Projektancie poza kontekstem żądanie przeglądarki <xref:System.Web.UI.IFilterResolutionService> zapewnia możliwość określenia, czy bieżący formant dotyczy filtru o nazwie i czy nazwanego filtr jest częścią określony filtr urządzenia Hierarchia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IFilterResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="DeclareType">
      <MemberSignature Language="C#" Value="public virtual Type DeclareType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclareType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.DeclareType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeclareType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclareType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ, który będzie używany przez generowanie kodu Aby zadeklarować formantu.</summary>
        <value>
          <see cref="T:System.Type" /> Formantu używane przez generowanie kodu, aby zadeklarować formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerFilter">
      <MemberSignature Language="C#" Value="public static readonly string DesignerFilter;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DesignerFilter" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ControlBuilder.DesignerFilter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignerFilter As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DesignerFilter;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje <c>"__designer"</c> literału ciągu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FChildrenAsProperties">
      <MemberSignature Language="C#" Value="protected bool FChildrenAsProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.FChildrenAsProperties" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FChildrenAsProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool FChildrenAsProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy formant ma <see cref="T:System.Web.UI.ParseChildrenAttribute" /> z <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> ustawioną <see langword="true" />.</summary>
        <value>
          <see langword="true" /> Jeśli formant ma <see cref="T:System.Web.UI.ParseChildrenAttribute" /> z <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> ustawioną <see langword="true" />, w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FIsNonParserAccessor">
      <MemberSignature Language="C#" Value="protected bool FIsNonParserAccessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FIsNonParserAccessor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.FIsNonParserAccessor" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FIsNonParserAccessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool FIsNonParserAccessor { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy formant implementuje <see cref="T:System.Web.UI.IParserAccessor" /> interfejsu.</summary>
        <value>
          <see langword="false" /> Jeśli formant implementuje <see cref="T:System.Web.UI.IParserAccessor" /> interfejsu, w przeciwnym razie <see langword="true" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public virtual Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildControlType (tagName As String, attribs As IDictionary) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetChildControlType(System::String ^ tagName, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">Nazwa tagu elementu podrzędnego.</param>
        <param name="attribs">Tablica atrybutów, zawarte w formantu podrzędnego.</param>
        <summary>Uzyskuje <see cref="T:System.Type" /> typu kontrolki odpowiadających tagu podrzędnych. Ta metoda jest wywoływana przez platformę ASP.NET, strona.</summary>
        <returns>
          <see cref="T:System.Type" /> Określonego formantu podrzędnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez platformę ASP.NET, strona podczas analizy i nie jest przeznaczona do wywoływania bezpośrednio w kodzie.  
  
   
  
## Examples  
 [!code-csharp[ControlBuilderSamples_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_1/CS/ctrlbuilder_1.cs#2)]
 [!code-vb[ControlBuilderSamples_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_1/VB/ctrlbuilder_1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectPersistData">
      <MemberSignature Language="C#" Value="public System.Web.UI.ObjectPersistData GetObjectPersistData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.ObjectPersistData GetObjectPersistData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetObjectPersistData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectPersistData () As ObjectPersistData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::ObjectPersistData ^ GetObjectPersistData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ObjectPersistData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see cref="T:System.Web.UI.ObjectPersistData" /> obiekt dla tego <see cref="T:System.Web.UI.ControlBuilder" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Web.UI.ObjectPersistData" /> Dla tego <see cref="T:System.Web.UI.ControlBuilder" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ObjectPersistData" />
      </Docs>
    </Member>
    <Member MemberName="GetResourceKey">
      <MemberSignature Language="C#" Value="public string GetResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetResourceKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.GetResourceKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResourceKey () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetResourceKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera klucz zasobu dla tego <see cref="T:System.Web.UI.ControlBuilder" /> obiektu.</summary>
        <returns>Klucz zasobu dla tego <see cref="T:System.Web.UI.ControlBuilder" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasAspCode">
      <MemberSignature Language="C#" Value="public virtual bool HasAspCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAspCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.HasAspCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAspCode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAspCode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy formant zawiera wszystkie bloki kodu.</summary>
        <value>
          <see langword="true" /> Jeśli formant zawiera co najmniej jeden blok kodu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład zastępuje <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> metodę sprawdzania <xref:System.Web.UI.ControlBuilder.ControlType%2A> właściwość Określanie typu formantu tego konstruktora jest stosowana do. Jeśli jest `CustomTextBox`, kontroli konstruktora czy wartość <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> właściwości znajduje się w formancie. Jeśli tak, jest zwracany wyjątek, jeśli nie <xref:System.Web.UI.ControlBuilder.HasBody%2A> metoda jest wywoływana.  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBody">
      <MemberSignature Language="C#" Value="public virtual bool HasBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.HasBody" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasBody () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasBody();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy formant ma otwierania i tagu zamykającego. Ta metoda jest wywoływana przez platformę ASP.NET, strona.</summary>
        <returns>
          <see langword="true" /> Jeśli formant ma otwierający i zamykający tag; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez platformę ASP.NET, strona podczas analizy i nie jest przeznaczona do wywoływania bezpośrednio w kodzie.  
  
   
  
## Examples  
 Ten przykład zastępuje <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> metodę sprawdzania <xref:System.Web.UI.ControlBuilder.ControlType%2A> właściwość Określanie typu formantu tego konstruktora jest stosowana do. Jeśli jest `CustomTextBox`, kontroli konstruktora czy wartość <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> właściwości znajduje się w formancie. Jeśli tak, jest zwracany wyjątek, jeśli nie <xref:System.Web.UI.ControlBuilder.HasBody%2A> metoda jest wywoływana.  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecodeLiterals">
      <MemberSignature Language="C#" Value="public virtual bool HtmlDecodeLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HtmlDecodeLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.HtmlDecodeLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlDecodeLiterals () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HtmlDecodeLiterals();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy literał kontrolkę HTML musi być zdekodowany HTML. Ta metoda jest wywoływana przez platformę ASP.NET, strona.</summary>
        <returns>
          <see langword="true" /> Jeśli kod HTML kontrolować literału ciągu jest ma być zdekodowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Literał ciągu odnosi się do tekstu pomiędzy otwierającym, a tagu zamykającego kontrolki HTML. Kodowanie HTML jest, gdy tekst jest konwertowany na reprezentację ciągu, który przeglądarki będą wyświetlane zamiast zinterpretować jako kodu HTML. Znaki, takie jak pytanie znaku (?) ampersand (&), ukośnik znaku (/) i spacje może być obcięty lub uszkodzona przez niektóre przeglądarki, więc te znaki, które muszą zostać zakodowane, gdy są one wyświetlane w `a` znaczników lub ciągi zapytań.  
  
 <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> Metoda jest wywoływana przez platformę ASP.NET, strona podczas analizy i nie jest przeznaczona do wywoływania bezpośrednio w kodzie.  
  
   
  
## Examples  
 Poniższy przykład zastępuje <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A> metodę umożliwiającą literałów ciągów w żadnym formantem tego konstruktora jest stosowany do dekodowanie HTML.  
  
 [!code-csharp[ControlBuilderSamples_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_2/cs/ctrlbuilder1.cs#2)]
 [!code-vb[ControlBuilderSamples_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_2/VB/ctrlbuilder1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwość identyfikatora formantu ma zostać utworzony.</summary>
        <value>Właściwość identyfikatora formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InDesigner">
      <MemberSignature Language="C#" Value="protected bool InDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.InDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InDesigner As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InDesigner { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca czy <see cref="T:System.Web.UI.ControlBuilder" /> działa w projektancie.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.ControlBuilder" /> działa w projektancie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwości podczas <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> metoda jest wywoływana. Jeśli formant ma tego konstruktora dołączone do niego, <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> Metoda określa, czy formant jest uzyskiwany w czasie projektowania za pomocą projektanta. <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> Zwraca wartość <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwości, a następnie <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> metoda jest wywoływana. Jeśli <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwość jest ustawiona na `false`, <xref:System.Exception> jest generowany. W przeciwnym razie wewnętrzny tekst formantu jest zwracany w <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> wywołania.  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.UI.TemplateParser parser, class System.Web.UI.ControlBuilder parentBuilder, class System.Type type, string tagName, string id, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::UI::TemplateParser ^ parser, System::Web::UI::ControlBuilder ^ parentBuilder, Type ^ type, System::String ^ tagName, System::String ^ id, System::Collections::IDictionary ^ attribs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Web.UI.TemplateParser" />
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="parser">
          <see cref="T:System.Web.UI.TemplateParser" /> Obiekt odpowiedzialny za analizowanie formantu.</param>
        <param name="parentBuilder">
          <see cref="T:System.Web.UI.ControlBuilder" /> Odpowiedzialnego za budowanie formantu nadrzędnego obiektu.</param>
        <param name="type">
          <see cref="T:System.Type" /> Przypisany do kontrolki, który tworzy konstruktora.</param>
        <param name="tagName">Nazwa tagu, który ma zostać utworzony. Dzięki temu konstruktora do obsługi wielu typów znaczników.</param>
        <param name="id">
          <see cref="P:System.Web.UI.ControlBuilder.ID" /> Atrybutu przypisany do kontrolki.</param>
        <param name="attribs">
          <see cref="T:System.Collections.IDictionary" /> Obiektu, który zawiera wszystkie atrybuty określonego tagu.</param>
        <summary>Inicjuje <see cref="T:System.Web.UI.ControlBuilder" /> do użycia po zostanie on uruchomiony. Ta metoda jest wywoływana przez platformę ASP.NET, strona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez platformę ASP.NET, strona podczas analizy i nie jest przeznaczona do wywoływania bezpośrednio w kodzie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPageTheme">
      <MemberSignature Language="C#" Value="protected bool InPageTheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPageTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.InPageTheme" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InPageTheme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InPageTheme { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość Boolean wskazującą czy to <see cref="T:System.Web.UI.ControlBuilder" /> obiekt jest używany do generowania strony motywów.</summary>
        <value>
          <see langword="true" /> Aby użyć tego <see cref="T:System.Web.UI.ControlBuilder" /> do generowania strony kompozycje; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public virtual string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ ustawiony w kontenerze powiązania.</summary>
        <value>Typ ustawiony w kontenerze powiązania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public bool Localize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Localize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.Localize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Localize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Localize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość logiczna wskazująca, czy formant jest utworzone to <see cref="T:System.Web.UI.ControlBuilder" /> obiektu jest zlokalizowana.</summary>
        <value>
          <see langword="true" /> Aby wskazać, czy formant ma być utworzony przez to <see cref="T:System.Web.UI.ControlBuilder" /> obiekt jest zlokalizowane w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamingContainerType">
      <MemberSignature Language="C#" Value="public Type NamingContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type NamingContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.NamingContainerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamingContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ NamingContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ kontenera nazewnictwa dla formantu, który jest tworzony tego konstruktora.</summary>
        <value>A <see cref="T:System.Type" /> reprezentujące typ kontenera nazewnictwa dla formantu, który jest tworzony tego konstruktora.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.ControlBuilder.ControlType" />
      </Docs>
    </Member>
    <Member MemberName="NeedsTagInnerText">
      <MemberSignature Language="C#" Value="public virtual bool NeedsTagInnerText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NeedsTagInnerText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.NeedsTagInnerText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NeedsTagInnerText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool NeedsTagInnerText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, jeśli formant konstruktora musi uzyskać wewnętrzny tekst. Jeśli tak, <see cref="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" /> metoda musi zostać wywołana. Ta metoda jest wywoływana przez platformę ASP.NET, strona.</summary>
        <returns>
          <see langword="true" /> Jeśli musi uzyskać wewnętrzny tekst formantu konstruktora. Wartość domyślna to <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wewnętrzny tekst jest wyświetlany tekst pomiędzy otwierającym, a zamykającym tagiem formantu.  
  
 Ta metoda jest wywoływana przez platformę ASP.NET, strona podczas analizy i nie jest przeznaczona do wywoływania bezpośrednio w kodzie.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwości podczas <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> metoda jest wywoływana. Jeśli formant ma tego konstruktora dołączone do niego, <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> Określa, czy formant jest uzyskiwany w czasie projektowania za pomocą projektanta. <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> Zwraca wartość <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwości, a następnie <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> metoda jest wywoływana. Jeśli <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwość jest ustawiona na `false`, <xref:System.Exception> jest generowany. W przeciwnym razie wewnętrzny tekst formantu jest zwracany w <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> wywołania.  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAppendToParentBuilder">
      <MemberSignature Language="C#" Value="public virtual void OnAppendToParentBuilder (System.Web.UI.ControlBuilder parentBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAppendToParentBuilder(class System.Web.UI.ControlBuilder parentBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAppendToParentBuilder (parentBuilder As ControlBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAppendToParentBuilder(System::Web::UI::ControlBuilder ^ parentBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentBuilder" Type="System.Web.UI.ControlBuilder" />
      </Parameters>
      <Docs>
        <param name="parentBuilder">
          <see cref="T:System.Web.UI.ControlBuilder" /> Do dodaje się bieżący Konstruktor obiektu.</param>
        <summary>Powiadamia <see cref="T:System.Web.UI.ControlBuilder" /> , który jest dodawany do konstruktora kontrolki nadrzędnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład zastępuje <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> metodę sprawdzania <xref:System.Web.UI.ControlBuilder.ControlType%2A> właściwość Określanie typu formantu tego konstruktora jest stosowana do. Jeśli jest `CustomTextBox`, kontroli konstruktora czy wartość <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> właściwości znajduje się w formancie. Jeśli tak, jest zwracany wyjątek, jeśli nie <xref:System.Web.UI.ControlBuilder.HasBody%2A> metoda jest wywoływana.  
  
 [!code-csharp[ControlBuilderSamples_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_4/cs/controlbuilder_4.cs#1)]
 [!code-vb[ControlBuilderSamples_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_4/VB/controlbuilder_4.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageVirtualPath">
      <MemberSignature Language="C#" Value="public string PageVirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.PageVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageVirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ścieżkę wirtualną strony mają zostać utworzone przez to <see cref="T:System.Web.UI.ControlBuilder" /> wystąpienia.</summary>
        <value>Ścieżka wirtualna strony, który ma zostać utworzony.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parser">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.TemplateParser Parser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.TemplateParser Parser" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.Parser" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Parser As TemplateParser" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::TemplateParser ^ Parser { System::Web::UI::TemplateParser ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateParser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.TemplateParser" /> odpowiedzialny za analizowanie formantu.</summary>
        <value>
          <see cref="T:System.Web.UI.TemplateParser" /> Używany do analizowania formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość pobiera <xref:System.Web.UI.TemplateParser> odpowiedzialny za analizowanie formantu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.TemplateParser" />
      </Docs>
    </Member>
    <Member MemberName="ProcessGeneratedCode">
      <MemberSignature Language="C#" Value="public virtual void ProcessGeneratedCode (System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessGeneratedCode(class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.CodeTypeDeclaration baseType, class System.CodeDom.CodeTypeDeclaration derivedType, class System.CodeDom.CodeMemberMethod buildMethod, class System.CodeDom.CodeMemberMethod dataBindingMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessGeneratedCode(System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::CodeTypeDeclaration ^ baseType, System::CodeDom::CodeTypeDeclaration ^ derivedType, System::CodeDom::CodeMemberMethod ^ buildMethod, System::CodeDom::CodeMemberMethod ^ dataBindingMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="baseType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="derivedType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="buildMethod" Type="System.CodeDom.CodeMemberMethod" />
        <Parameter Name="dataBindingMethod" Type="System.CodeDom.CodeMemberMethod" />
      </Parameters>
      <Docs>
        <param name="codeCompileUnit">Nadrzędny kontener wykresu CodeDOM formantu, który jest kompilowany.</param>
        <param name="baseType">Typ podstawowy formantu strony lub użytkownika, który zawiera formant, który jest kompilowany.</param>
        <param name="derivedType">Typ pochodny formantu strony lub użytkownika, który zawiera formant, który jest kompilowany.</param>
        <param name="buildMethod">Kod, który jest używany do tworzenia kontrolki.</param>
        <param name="dataBindingMethod">Kod, który jest używany do tworzenia metody wiązania danych formantu.</param>
        <summary>Umożliwia konstruktorów formantu niestandardowego kodu wygenerowanego Document Object Model (CodeDom) i Wstaw modyfikacji i dostępu kodu podczas analizowania i tworzenia kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W modelu pojedynczego pliku strony `baseType` i `derivedType` parametry są takie same <xref:System.CodeDom.CodeTypeDeclaration> typu, który zazwyczaj jest pochodną <xref:System.Web.UI.Page> klasy.  
  
 W modelu strony CodeBehind `baseType` jest <xref:System.CodeDom.CodeTypeDeclaration> typu, który reprezentuje klasę częściowe kodem, który zazwyczaj jest pochodną <xref:System.Web.UI.Page> klasy. `derivedType` Parametr jest klasa, która pochodzi z częściowa klasę, która zawiera kod znaczników.  
  
 Aby uzyskać więcej informacji o modelach strony sieci Web programu ASP.NET, zobacz [Przegląd składni stron formularzy sieci Web ASP.NET](http://msdn.microsoft.com/library/09074b20-ece9-46fa-bc8f-ab2595ed2c02).  
  
 Aby uzyskać więcej informacji o tym, jak za pomocą modelu CodeDOM reprezentują i generowanie kodu źródłowego, zobacz [dynamiczne generowanie kodu źródłowego i kompilacja](~/docs/framework/reflection-and-codedom/dynamic-source-code-generation-and-compilation.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt usługi dla tego <see cref="T:System.Web.UI.ControlBuilder" /> obiektu.</summary>
        <value>
          <see cref="T:System.IServiceProvider" /> Reprezentujący obiekt usługi dla tego <see cref="T:System.Web.UI.ControlBuilder" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="SetResourceKey">
      <MemberSignature Language="C#" Value="public void SetResourceKey (string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceKey(string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetResourceKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceKey (resourceKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceKey(System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceKey">Klucz zasobu dla tego <see cref="T:System.Web.UI.ControlBuilder" />.</param>
        <summary>Ustawia klucz zasobów dla tego <see cref="T:System.Web.UI.ControlBuilder" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.GetResourceKey" />
      </Docs>
    </Member>
    <Member MemberName="SetServiceProvider">
      <MemberSignature Language="C#" Value="public void SetServiceProvider (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetServiceProvider(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetServiceProvider (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetServiceProvider(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <see cref="T:System.IServiceProvider" /> Reprezentujący obiekt usługi dla <see cref="T:System.Web.UI.ControlBuilder" />.</param>
        <summary>Ustawia dla tego obiektu usługi <see cref="T:System.Web.UI.ControlBuilder" /> obiektu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="SetTagInnerText">
      <MemberSignature Language="C#" Value="public virtual void SetTagInnerText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTagInnerText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTagInnerText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTagInnerText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który można podać.</param>
        <summary>Udostępnia <see cref="T:System.Web.UI.ControlBuilder" /> z Tekst wewnętrzny tagu formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana tylko wtedy, gdy <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> wcześniej zostały zwrócone `true`.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwości podczas <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> metoda jest wywoływana. Jeśli formant ma tego konstruktora dołączone do niego, <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> Określa, czy formant jest uzyskiwany w czasie projektowania za pomocą projektanta. <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> Zwraca wartość <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwości, a następnie <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> metoda jest wywoływana. Jeśli <xref:System.Web.UI.ControlBuilder.InDesigner%2A> właściwość jest ustawiona na `false`, <xref:System.Exception> jest generowany. W przeciwnym razie wewnętrzny tekst formantu jest zwracany w <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> wywołania.  
  
 [!code-csharp[ControlBuilderSamples_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlBuilderSamples_3/cs/controlbuilder_samples3.cs#1)]
 [!code-vb[ControlBuilderSamples_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlBuilderSamples_3/VB/controlbuilder_samples3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubBuilders">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList SubBuilders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList SubBuilders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.SubBuilders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubBuilders As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ SubBuilders { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę podrzędnych <see cref="T:System.Web.UI.ControlBuilder" /> obiektów w tym <see cref="T:System.Web.UI.ControlBuilder" /> obiektu.</summary>
        <value>Lista podrzędnych <see cref="T:System.Web.UI.ControlBuilder" /> obiektów.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="public string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.TagName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TagName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę tagu kontrolki ma zostać utworzony.</summary>
        <value>Nazwa tagu formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatePropertyEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection TemplatePropertyEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection TemplatePropertyEntries" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.TemplatePropertyEntries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatePropertyEntries As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ TemplatePropertyEntries { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wpisy właściwości szablonu.</summary>
        <value>Kolekcja wpisów właściwości szablonu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma żadnych wpisów, zwracany jest statyczny pustej kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeResolutionService">
      <MemberSignature Language="C#" Value="public System.Web.UI.IThemeResolutionService ThemeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IThemeResolutionService ThemeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlBuilder.ThemeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThemeResolutionService As IThemeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::IThemeResolutionService ^ ThemeResolutionService { System::Web::UI::IThemeResolutionService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IThemeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.IThemeResolutionService" /> obiekt używany do zarządzania kontroli kompozycje i karnacji w czasie projektowania.</summary>
        <value>
          <see cref="T:System.Web.UI.IThemeResolutionService" /> Obiekt używany do zarządzania kontroli kompozycje i karnacji w czasie projektowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IThemeResolutionService> Interfejsu jest kontenerem dla co najmniej jednego <xref:System.Web.UI.ThemeProvider> obiektów, które z kolei dostarczają <xref:System.Web.UI.SkinBuilder> obiekty, które motywy i kontrolować Karnacje formantów podczas ich tworzenia za pomocą projektanta.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IThemeResolutionService" />
      </Docs>
    </Member>
  </Members>
</Type>