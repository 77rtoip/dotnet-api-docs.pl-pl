<Type Name="AttributeCollection" FullName="System.Web.UI.AttributeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bedda36b3b3ef4306ef9f7930408a283f3d7fd5a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69399095" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttributeCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection sealed" />
  <TypeSignature Language="F#" Value="type AttributeCollection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dostęp modelu obiektu do wszystkich atrybutów zadeklarowanych w tagu otwierającym elementu formantu serwera ASP.NET. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poszczególne elementy w kolekcji zwracają <xref:System.String> obiekt jako ich wartość. Jeśli kolekcja nie zawiera żadnych elementów, kolekcja zwraca wartość `null`.  
  
 Atrybuty kontrolki serwera HTML są programowo dostępne za pomocą <xref:System.Web.UI.HtmlControls.HtmlControl.Attributes%2A> właściwości, która jest dziedziczona przez wszystkie kontrolki serwera HTML. ASP.NET uwidacznia atrybuty formantów serwera HTML jako właściwości tych kontrolek.  
  
 Można dodać atrybuty do kontrolki serwera sieci Web za pomocą <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> właściwości, która jest dziedziczona przez wszystkie formanty serwera sieci Web. Atrybuty w kolekcji atrybutów dla kontrolki serwera sieci Web nie muszą odpowiadać właściwości jednoznacznie wpisanej kontrolki dla tej kontrolki.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy <xref:System.Web.UI.AttributeCollection> obiekt o nazwie `myAttributeCollection`, a następnie sprawdza, czy strona została opublikowana. Jeśli nie, kod dodaje dwa atrybuty do kolekcji. Następnie pobiera liczbę atrybutów w kolekcji i wykonuje iterację w kolekcji, pisząc klucz do każdego atrybutu na stronie. Jeśli strona jest ogłaszania zwrotnego, kod pobiera nową liczbę atrybutów i wykonuje iterację kolekcji, pisząc klucz i wartość każdego atrybutu na stronie.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#1)]
 [!code-vb[AttributeCollection_AttributeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (System.Web.UI.StateBag bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.StateBag bag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bag As StateBag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(System::Web::UI::StateBag ^ bag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.AttributeCollection : System.Web.UI.StateBag -&gt; System.Web.UI.AttributeCollection" Usage="new System.Web.UI.AttributeCollection bag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bag" Type="System.Web.UI.StateBag" />
      </Parameters>
      <Docs>
        <param name="bag">Obiekt, który zawiera klucze atrybutów i ich wartości ze taga otwierającego kontrolki serwer.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.AttributeCollection" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Web.UI.AttributeCollection> jak użyć konstruktora, aby utworzyć wystąpienie klasy `myAttributeCollection`o nazwie. Kod przekazuje <xref:System.Web.UI.Control.ViewState%2A> właściwość kontrolki jako argument parametru.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#2)]
 [!code-vb[AttributeCollection_AttributeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; unit" Usage="attributeCollection.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa atrybutu.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>Dodaje atrybut do <see cref="T:System.Web.UI.AttributeCollection" /> obiektu formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ciąg w `value` parametrze zawiera znak handlowego "i" (&), znak zostanie automatycznie zakodowany. Wynikiem jest&amp;reprezentacja HTML "".  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Web.UI.AttributeCollection.Add%2A> jak używać metody do programistycznego dodawania atrybutu do obiektu formantu <xref:System.Web.UI.AttributeCollection> serwera ASP.NET.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public void AddAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.AddAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="attributeCollection.AddAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Wystąpienie, które zapisuje atrybut w tagu otwierającym kontrolki serwera ASP.NET.</param>
        <summary>Dodaje atrybuty z <see cref="T:System.Web.UI.AttributeCollection" /> klasy <see cref="T:System.Web.UI.HtmlTextWriter" /> do obiektu, który jest odpowiedzialny za renderowanie atrybutów jako znaczników.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda kopiuje wszystkie atrybuty kontrolki serwera do <xref:System.Web.UI.HtmlTextWriter> obiektu, aby mogły być renderowane przez następne wywołanie <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> metody.  
  
 W przypadku kontrolek, które znajdują się w <xref:System.Web.UI.WebControls.Calendar> innych <xref:System.Web.UI.WebControls.CheckBoxList>kontrolkach, takich jak i, można zwiększyć wydajność poprzez bezpośrednie renderowanie zawartych kontrolek. Renderowanie bezpośrednie może być szybsze niż renderowanie przez kontrolkę kontenera, ponieważ formanty kontenera wymagają skopiowania wszystkich atrybutów kontrolki podrzędnej do kontrolki kontenera i renderowania ich po skopiowaniu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dodać nowe atrybuty <xref:System.Web.UI.WebControls.Button> do formantu serwera o nazwie `myButton` i <xref:System.Web.UI.WebControls.TextBox> kontrolki serwera o nazwie `myTextBox`. Następnie dodaje te atrybuty do niestandardowego <xref:System.Web.UI.HtmlTextWriter> obiektu, który zapisze te atrybuty do strumienia wyjściowego dla każdej z tych kontrolek.  
  
 [!code-csharp[AttributeCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_Item/CS/attributecollection_item.cs.aspx#1)]
 [!code-vb[AttributeCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_Item/VB/attributecollection_item.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="attributeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wszystkie atrybuty z <see cref="T:System.Web.UI.AttributeCollection" /> obiektu formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak programowo usunąć wszystkie atrybuty z <xref:System.Web.UI.AttributeCollection> obiektu kontrolki serwera HTML.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.AttributeCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę atrybutów w <see cref="T:System.Web.UI.AttributeCollection" /> obiekcie.</summary>
        <value>Liczba elementów w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak używać właściwości, <xref:System.Web.UI.AttributeCollection.Count%2A> aby napisać liczbę atrybutów kontrolki do strony zawierającej.  
  
 [!code-csharp[AttributeCollection_AttributeCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#4)]
 [!code-vb[AttributeCollection_AttributeCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="CssStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection CssStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection CssStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.CssStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CssStyle As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ CssStyle { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CssStyle : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.AttributeCollection.CssStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję stylów dla formantu serwera ASP.NET, do którego należy bieżący <see cref="T:System.Web.UI.AttributeCollection" /> obiekt.</summary>
        <value>Kolekcja zawierająca style bieżącej kontrolki serwerowej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy styl zadeklarowany dla konkretnego formantu serwera HTML jest dodawany do <xref:System.Web.UI.CssStyleCollection> obiektu, gdy zostanie przeanalizowana zawierająca ją Strona sieci Web ASP.NET. Ta właściwość służy do dodawania, usuwania i iteracji stylów zadeklarowanych dla kontrolki serwer.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak dodać wartość stylu CSS programistycznie do <xref:System.Web.UI.AttributeCollection> obiektu formantu serwera. Po <xref:System.Web.UI.WebControls.TextBox> kliknięciu przycisku kolor tła kontrolki serwera o nazwie `TextBox1` jest ustawiony na wybrany element w <xref:System.Web.UI.WebControls.DropDownList> kontrolce serwera o nazwie `DropDownList1`.  
  
 [!code-csharp[AttributeCollection_CssStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_CssStyle/CS/attributecollection_cssstyle.cs.aspx#1)]
 [!code-vb[AttributeCollection_CssStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_CssStyle/VB/attributecollection_cssstyle.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attributeCollection.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="o">Wystąpienie obiektu do porównania z tym wystąpieniem.</param>
        <summary>Określa, czy bieżące wystąpienie <see cref="T:System.Web.UI.AttributeCollection" /> obiektu jest równe podanemu obiektowi.</summary>
        <returns><see langword="true" />Jeśli obiekt znajdujący się w <paramref name="o" /> parametrze jest równy bieżącemu <see cref="T:System.Web.UI.AttributeCollection" />wystąpieniu; w przeciwnym razie, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby porównywane obiekty były równe, muszą spełniać następujące kryteria:  
  
-   Obiekt znajdujący się w `o` parametrze musi <xref:System.Web.UI.AttributeCollection> być obiektem.  
  
-   Obie kolekcje muszą zawierać taką samą liczbę elementów.  
  
-   Wartość klucza każdego wpisu w obu kolekcjach musi być zgodna.  
  
    > [!NOTE]
    >  Ta metoda jest używana głównie przez deweloperów kontroli.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attributeCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu dla tego wystąpienia.</summary>
        <returns>Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj metody, aby określić kod skrótu dla tego <xref:System.Web.UI.AttributeCollection> obiektu. <xref:System.Web.UI.AttributeCollection.GetHashCode%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.UI.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Lokalizacja atrybutu w kolekcji.</param>
        <summary>Pobiera lub ustawia wartość określonej wartości atrybutu dla kontrolki serwerowej.</summary>
        <value>Wartość atrybutu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można dodać atrybut lub pobrać go z kontrolki serwera ASP.NET, która używa tej właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić dynamiczny atrybut HTML `onblur` , aby uruchomić polecenie ECMAScript (JavaScript), <xref:System.Web.UI.WebControls.TextBox> gdy formant serwera sieci Web utraci fokus.  
  
 [!code-aspx-csharp[Classic AttributeCollection Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Web.UI.AttributeCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję kluczy do wszystkich atrybutów w <see cref="T:System.Web.UI.AttributeCollection" /> obiekcie formantu serwera.</summary>
        <value>Kolekcja kluczy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zawiera wszystkie klucze, które znajdują się <xref:System.Web.UI.AttributeCollection> w kontrolce serwera ASP.NET, bez względu na to, czy zostały <xref:System.Web.UI.AttributeCollection.Add%2A> one dodane programowo przy użyciu metody, czy deklaratywnie.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wykonać iterację przez <xref:System.Web.UI.AttributeCollection.Keys%2A> Właściwość <xref:System.Web.UI.AttributeCollection> obiektu dla <xref:System.Web.UI.HtmlControls.HtmlSelect> kontrolki serwerowej.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Keys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Keys Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Keys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Keys Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="attributeCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa atrybutu do usunięcia.</param>
        <summary>Usuwa atrybut z <see cref="T:System.Web.UI.AttributeCollection" /> obiektu formantu serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obiekt nie zawiera atrybutu, który ma określony `key`, kolekcja pozostaje niezmieniona. <xref:System.Web.UI.AttributeCollection> Nie zgłoszono żadnego wyjątku.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak programowo usunąć atrybut z <xref:System.Web.UI.AttributeCollection> obiektu kontrolki HTML Server.  
  
 [!code-aspx-csharp[Classic AttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="attributeCollection.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> Wystąpienie, które zapisuje kolekcję atrybutów w bieżącym strumieniu wyjściowym.</param>
        <summary>Zapisuje kolekcję atrybutów do określonego <see cref="T:System.Web.UI.HtmlTextWriter" /> strumienia wyjściowego dla kontrolki, do której należy kolekcja.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu pokazuje, jak dziedziczyć z <xref:System.Web.UI.WebControls.WebControl> klasy w celu utworzenia kontrolki niestandardowej o nazwie `AttribRender` , która <xref:System.Web.UI.AttributeCollection.Render%2A> zastąpi metodę. Drugi przykład kodu pokazuje, jak używać kontrolki niestandardowej na stronie sieci Web ASP.NET.  
  
 Poniższy przykład pokazuje, jak utworzyć kontrolkę niestandardową `AttribRender` o nazwie, <xref:System.Web.UI.WebControls.WebControl.Render%2A> która zastępuje metodę <xref:System.Web.UI.WebControls.WebControl> klasy bez wywoływania <xref:System.Web.UI.WebControls.WebControl.Render%2A> metody klasy bazowej. Zamiast tego `AttribRender` wywołuje metodę <xref:System.Web.UI.AttributeCollection.Render%2A> .  
  
 [!code-csharp[AttributeCollection.Render_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/CS/attributecollection_render.cs#1)]
 [!code-vb[AttributeCollection.Render_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/VB/attributecollection_render.vb#1)]  
  
 Poniższy przykład pokazuje, `AttribRender` jak używać kontrolki niestandardowej na stronie sieci Web. Przyjęto założenie, że plik kodu dla kontrolki niestandardowej znajduje się w folderze App_Code dla aplikacji.  
  
 [!code-aspx-csharp[AttributeCollection.Render_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/CS/attributecollection_rendercs.aspx#2)]
 [!code-aspx-vb[AttributeCollection.Render_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/VB/attributecollection_rendervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
  </Members>
</Type>
