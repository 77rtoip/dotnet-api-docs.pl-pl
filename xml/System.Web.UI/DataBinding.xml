<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e915345435b8c5e768afcc088fce8f6170747f8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30693677" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinding sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje o jedno wyrażenie powiązania danych w formancie serwera ASP.NET, dzięki czemu projektowanie aplikacji szybko projektantów (RAD), takich jak program Microsoft Visual Studio, aby utworzyć wyrażenia wiązania danych w czasie projektowania. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każde wyrażenie powiązania danych w formancie serwera jest reprezentowana w czasie projektowania przez wystąpienie <xref:System.Web.UI.DataBinding> klasy. Żadnego formantu serwera, który zawiera co najmniej jednego wyrażenia wiązania danych ma <xref:System.Web.UI.DataBindingCollection> obiekt, który zawiera <xref:System.Web.UI.DataBinding> obiektów. Ta kolekcja jest dostępny za pośrednictwem <xref:System.Web.UI.Control> Implementacja klasy <xref:System.Web.UI.IDataBindingsAccessor> interfejsu. Podczas tworzenia niestandardowego projektanta RAD Użyj tę implementację, aby uzyskać dostępu do kolekcji. Wszelkie <xref:System.Web.UI.DataBinding> lub <xref:System.Web.UI.DataBindingCollection> obiekty skojarzone z formantu serwera, istnieje tylko w czasie projektowania. One nie istnieją w czasie wykonywania i, w związku z tym nie są dostępne w czasie wykonywania.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Web.UI.DataBinding> obiekt i ustawia ona równa do istniejącego obiektu w formancie <xref:System.Web.UI.DataBindingCollection> kolekcji, która ma `propertyName` parametru z wartością `Text`. Jeśli kolekcja zawiera <xref:System.Web.UI.DataBinding> obiekt z `propertyName` wartość `Text`, ten kod zwraca wartość obiektu <xref:System.Web.UI.DataBinding.Expression%2A> właściwości. Jeśli nie ma takiego obiektu, zwraca ciąg pusty ("").  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBinder" />
    <altmember cref="T:System.Web.UI.DataBindingCollection" />
    <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, expression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinding(System::String ^ propertyName, Type ^ propertyType, System::String ^ expression);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Właściwości do powiązania danych.</param>
        <param name="propertyType">Typ .NET Framework właściwości do powiązania danych.</param>
        <param name="expression">Wyrażenie wiązania danych, która ma zostać obliczone.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataBinding" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Web.UI.DataBinding> obiekt i ustawia ona równa do istniejącego obiektu w formancie <xref:System.Web.UI.DataBindingCollection> kolekcji, która ma `propertyName` parametru z wartością `Text`. Jeśli kolekcja zawiera <xref:System.Web.UI.DataBinding> obiekt z `propertyName` wartość `Text`, ten kod zwraca wartość obiektu <xref:System.Web.UI.DataBinding.Expression%2A> właściwości. Jeśli nie ma takiego obiektu, zwraca ciąg pusty ("").  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataBinder" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania z bieżącą <see cref="T:System.Web.UI.DataBinding" />.</param>
        <summary>Określa, czy określony obiekt jest to samo wystąpienie elementu <see cref="T:System.Web.UI.DataBinding" /> klasy do bieżącego obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli nazwy właściwości wiązania danych są zgodne z; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataBinding.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wyrażenia wiązania danych ma zostać obliczone.</summary>
        <value>Wyrażenie wiązania danych, która ma zostać obliczone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Web.UI.DataBinding> obiekt i ustawia ona równa do istniejącego obiektu w formancie <xref:System.Web.UI.DataBindingCollection> kolekcji, która ma `propertyName` parametru z wartością `Text`. Jeśli kolekcja zawiera <xref:System.Web.UI.DataBinding> obiekt z `propertyName` wartość `Text`, ten kod zwraca wartość obiektu <xref:System.Web.UI.DataBinding.Expression%2A> właściwości. Jeśli nie ma takiego obiektu, zwraca ciąg pusty ("").  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość skrótu dla wystąpienia <see cref="T:System.Web.UI.DataBinding" /> obiektu.</summary>
        <returns>Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinding> obiekty są umieszczane w <xref:System.Web.UI.DataBindingCollection> obiektu, dostępny tylko w czasie projektowania. Kolekcja jest tabeli wyznaczania wartości skrótu, która reprezentuje powiązania w formancie. Może istnieć tylko jedno powiązanie dla właściwości, więc obliczenia kod skrótu zgodna <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> implementacji i przyjmuje tylko właściwość nazwy pod uwagę.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę właściwości kontroli serwera ASP.NET do powiązania danych.</summary>
        <value>Właściwości do powiązania danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod deklaruje trzy zmienne `dataBindingOutput1`, `dataBindingOutput2`, i `dataBindingOutput3`, których dostęp na różne właściwości <xref:System.Web.UI.DataBinding> obiektu `myDataBinding2`. Następnie przypisuje wartość <xref:System.Web.UI.DataBinding.PropertyName%2A> właściwości `dataBindingOutput1`, łączy go z ciągiem "jest nazwa właściwości" i zapisuje wartość do pliku.  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ .NET Framework właściwość formantu serwera ASP.NET z danymi.</summary>
        <value>Typ .NET Framework właściwości powiązanych z danymi.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod deklaruje trzy zmienne `dataBindingOutput1`, `dataBindingOutput2`, i `dataBindingOutput3`, których dostęp na różne właściwości <xref:System.Web.UI.DataBinding> obiektu `myDataBinding2`. <xref:System.Web.UI.DataBinding.PropertyType%2A> Wartość właściwości jest przypisany do `dataBindingOutput2` i połączony z ciągiem "jest typem właściwości" i zapisuje wartość do pliku.  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>