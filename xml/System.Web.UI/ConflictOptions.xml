<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5858112fb87350d31cb6e005cc12a65b7e51d560" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64016149" /></Metadata><TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <TypeSignature Language="F#" Value="type ConflictOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa, jak źródło danych ASP.NET kontroluje uchwyt konflikty podczas aktualizowania lub usuwania danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrola współbieżności to technika, używanego przez magazyny danych do kontroli danych odczytu i zmienić w magazynie, jeśli wielu klientów są uzyskiwania dostępu i manipulowania tych samych danych. Na przykład jednego klienta odczytuje dane i prezentuje je do użytkownika, podczas gdy inny klient odczytuje te same dane i prezentuje je do innego użytkownika. Jeśli użytkownicy aktualizacji danych i przesłać go do magazynu danych, niektórych nieoczekiwany wynik mogą wystąpić, ponieważ klienci mogą aktualizować różne wartości dla tych samych danych. To jest traktowany jako konflikt.  
  
 `ConflictDetection` Właściwość, która jest zdefiniowana dla kontrolki źródła danych ASP.NET służy do określenia, jak formant obsługuje konflikty w podstawowym magazynie danych, gdy podstawowy magazyn danych używa optymistycznej współbieżności i usuwania lub operacja aktualizacji wykonywane.  
  
 Domyślnie `ConflictDetection` właściwość jest ustawiona na OverwriteChanges, co oznacza, kontrola źródła danych spowoduje zastąpienie wszelkich zmian wprowadzonych wiersz danych między czas, kontrola źródła danych najpierw odczytywać dane z wiersza i czas, który wiersz jest aktualizowany. Klucz podstawowy jest używana do lokalizowania wiersza danych, które zostaną zaktualizowane lub usunięte, ale nie porównywanie danych jest wykonywana. Jeśli do kontroli źródła danych jest skonfigurowany do korzystania z opcji CompareAllValues, jednak kontrola przechodzi oryginalne dane w `oldValues` kolekcji `Update` i `Delete` metody, aby mogły zapisywać logikę aktualizować lub usuwać dane, tylko wtedy, gdy te wartości odpowiadają wartościom aktualnie w magazynie danych. Pasujących wartości wskazują, że dane nie uległy zmianie od czasu jej została odczytana.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberSignature Language="F#" Value="CompareAllValues = 1" Usage="System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Kontrola źródła danych używa <paramref name="oldValues" /> zbiór <see langword="Update" /> i <see langword="Delete" /> metod umożliwiających ustalenie, czy dane zostały zmienione przez inny proces.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 0" Usage="System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Kontrola źródła danych zastępuje wszystkie wartości w wierszu danych przy użyciu własnych wartości wiersza.</summary>
      </Docs>
    </Member>
  </Members>
</Type>