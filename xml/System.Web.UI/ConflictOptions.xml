<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="123f2908dfdfb230aecb07c7722e88ff73268af3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69389210" /></Metadata><TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <TypeSignature Language="F#" Value="type ConflictOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa, jak formanty źródła danych ASP.NET obsługują konflikty danych podczas aktualizowania lub usuwania danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrola współbieżności jest techniką używaną przez magazyn danych do kontrolowania sposobu odczytu i zmiany danych w magazynie, gdy wielu klientów uzyskuje dostęp do tych samych danych i manipulowanie nimi. Na przykład jeden klient odczytuje dane i prezentuje je użytkownikowi, a inny klient odczytuje te same dane i prezentuje go innemu użytkownikowi. Jeśli obaj użytkownicy aktualizują dane i przesyłają je do magazynu danych, może wystąpić nieoczekiwany wynik, ponieważ klienci mogą aktualizować różne wartości dla tych samych danych. Jest to uznawane za konflikt.  
  
 `ConflictDetection` Właściwość zdefiniowana dla formantów źródła danych ASP.net służy do określenia, w jaki sposób formant obsługuje konflikty danych w źródłowym magazynie danych, gdy podstawowy magazyn danych korzysta z optymistycznej współbieżności, a operacja DELETE lub Update jest wykonać.  
  
 Domyślnie `ConflictDetection` właściwość jest ustawiona na OverwriteChanges, co oznacza, że kontrolka źródła danych zastąpi wszelkie zmiany wprowadzone w wierszu danych między momentu, w którym formant źródła danych najpierw odczytaje dane z wiersza, a także godzinę aktualizacji wiersza. Klucz podstawowy służy do lokalizowania wiersza danych, który zostanie zaktualizowany lub usunięty, ale nie jest wykonywane żadne inne porównanie danych. Jeśli formant źródła danych jest skonfigurowany do korzystania z opcji CompareAllValues, formant przekazuje oryginalne dane w `oldValues` kolekcjach `Update` i `Delete` metodach, tak aby można było pisać logikę do aktualizowania lub usuwania danych tylko wtedy, gdy te wartości pasują do wartości obecnie znajdujących się w magazynie danych. Pasujące wartości wskazują, że dane nie uległy zmianie od czasu odczytu.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberSignature Language="F#" Value="CompareAllValues = 1" Usage="System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Kontrola źródła danych używa <paramref name="oldValues" /> kolekcji <see langword="Update" /> metod i <see langword="Delete" /> , aby określić, czy dane zostały zmienione przez inny proces.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 0" Usage="System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Formant źródła danych zastępuje wszystkie wartości w wierszu danych własnymi wartościami wiersza.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
