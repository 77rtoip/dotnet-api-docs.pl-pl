<Type Name="TemplateParser" FullName="System.Web.UI.TemplateParser">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fccb9f88f959e311e1378de291d3e3bd824c77e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TemplateParser : System.Web.UI.BaseParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TemplateParser extends System.Web.UI.BaseParser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.TemplateParser" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TemplateParser&#xA;Inherits BaseParser" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateParser abstract : System::Web::UI::BaseParser" />
  <TypeSignature Language="F#" Value="type TemplateParser = class&#xA;    inherit BaseParser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.BaseParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy jako abstrakcyjna klasa podstawowa dla analizatory pliku programu ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateParser> Klasy udostępnia typowe funkcje klasy analizatora. Ponieważ <xref:System.Web.UI.TemplateParser> klasa jest abstrakcyjna, wystąpienie tej klasy nie jest bezpośrednio tworzone.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Web.UI.BaseTemplateParser" />
  </Docs>
  <Members>
    <Member MemberName="ParseFile">
      <MemberSignature Language="C#" Value="protected void ParseFile (string physicalPath, string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ParseFile(string physicalPath, string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateParser.ParseFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ParseFile (physicalPath As String, virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ParseFile(System::String ^ physicalPath, System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.ParseFile : string * string -&gt; unit" Usage="templateParser.ParseFile (physicalPath, virtualPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="physicalPath">Ścieżka fizyczna, można przeanalizować pliku. <c>physicalPath</c> ma pierwszeństwo przed <c>virtualPath</c>.</param>
        <param name="virtualPath">Ścieżka wirtualna pliku do analizy.</param>
        <summary>Analizuje zawartość pliku, który jest określony przez jego wirtualny lub fizyczny ścieżki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określono ścieżkę fizyczną, służy za pośrednictwem ścieżki wirtualnej do lokalizacji pliku do analizy.  
  
 Jeśli ścieżka do pliku, aby przeanalizować jest odwołanie cykliczne; oznacza to, odnosi się do tego samego pliku, który obecnie analizy analizator <xref:System.Web.HttpException> wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="physicalPath" /> lub <paramref name="virtualPath" /> odwołuje się do pliku, w obecnie przetwarzane.</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Web.UI.TemplateParser.ProcessError(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ITemplate ParseTemplate (string content, string virtualPath, bool ignoreFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ITemplate ParseTemplate(string content, string virtualPath, bool ignoreFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateParser.ParseTemplate(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseTemplate (content As String, virtualPath As String, ignoreFilter As Boolean) As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ITemplate ^ ParseTemplate(System::String ^ content, System::String ^ virtualPath, bool ignoreFilter);" />
      <MemberSignature Language="F#" Value="static member ParseTemplate : string * string * bool -&gt; System.Web.UI.ITemplate" Usage="System.Web.UI.TemplateParser.ParseTemplate (content, virtualPath, ignoreFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="ignoreFilter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Zawartość.</param>
        <param name="virtualPath">Ścieżka wirtualna.</param>
        <param name="ignoreFilter">
          <see langword="true" /> ignorowanie filtru; w przeciwnym razie <see langword="false" />.</param>
        <summary>Analizuje szablon.</summary>
        <returns>Zwraca szablonu.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessError">
      <MemberSignature Language="C#" Value="protected void ProcessError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ProcessError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateParser.ProcessError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ProcessError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ProcessError(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.ProcessError : string -&gt; unit" Usage="templateParser.ProcessError message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Tekst komunikatu o błędzie pozwala utworzyć nowy <see cref="T:System.Web.ParserError" />.</param>
        <summary>Zgłasza błąd procesu przez utworzenie nowej <see cref="T:System.Web.ParserError" /> obiektu z określonym komunikatem i dodanie go do <see cref="T:System.Web.ParserErrorCollection" /> kolekcji.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="M:System.Web.UI.TemplateParser.ProcessException(System.Exception)" />
        <altmember cref="T:System.Web.ParserError" />
        <altmember cref="T:System.Web.ParserErrorCollection" />
      </Docs>
    </Member>
    <Member MemberName="ProcessException">
      <MemberSignature Language="C#" Value="protected void ProcessException (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ProcessException(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateParser.ProcessException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ProcessException (ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ProcessException(Exception ^ ex);" />
      <MemberSignature Language="F#" Value="member this.ProcessException : Exception -&gt; unit" Usage="templateParser.ProcessException ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex">
          <see cref="T:System.Exception" /> Pozwala utworzyć nowy <see cref="T:System.Web.ParserError" />.</param>
        <summary>Zgłasza wyjątek analizator przez utworzenie nowej <see cref="T:System.Web.ParserError" /> obiektu jako określonego <see cref="T:System.Exception" /> wyjątku i dodanie go do <see cref="T:System.Web.ParserErrorCollection" /> kolekcji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpCompileException">
          <see cref="T:System.Exception" /> Do przetwarzania jest błąd kompilatora.</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Web.UI.TemplateParser.ProcessError(System.String)" />
        <altmember cref="T:System.Web.HttpCompileException" />
        <altmember cref="T:System.Web.ParserError" />
        <altmember cref="T:System.Web.ParserErrorCollection" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TemplateParser.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Web.UI.TemplateParser.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg, który zawiera dane do przeanalizowania.</summary>
        <value>Dane do przeanalizowania.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>