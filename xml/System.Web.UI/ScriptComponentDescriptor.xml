<Type Name="ScriptComponentDescriptor" FullName="System.Web.UI.ScriptComponentDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf735825564cb0f9c28199856f5e8e45b9ccd622" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30693923" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptComponentDescriptor : System.Web.UI.ScriptDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptComponentDescriptor extends System.Web.UI.ScriptDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptComponentDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptComponentDescriptor&#xA;Inherits ScriptDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptComponentDescriptor : System::Web::UI::ScriptDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia otokę dla konwersji składników serwera na skrypt po stronie klienta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa używa wewnętrznego słownika do przechowywania odwołań do składników, elementy, właściwości i zdarzeń. Aby wypełnić tego słownika, należy użyć <xref:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty%2A>, <xref:System.Web.UI.ScriptComponentDescriptor.AddElementProperty%2A>, <xref:System.Web.UI.ScriptComponentDescriptor.AddProperty%2A>, i <xref:System.Web.UI.ScriptComponentDescriptor.AddEvent%2A> metody. Po ukończeniu wywołania <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> sposób generowania skryptu klienta.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptComponentDescriptor (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptComponentDescriptor(System::String ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Typ docelowy składnika klienta.</param>
        <summary>Inicjuje wystąpienie klasy <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" /> jest <see langword="null" /> lub ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="AddComponentProperty">
      <MemberSignature Language="C#" Value="public void AddComponentProperty (string name, string componentID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddComponentProperty(string name, string componentID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddComponentProperty (name As String, componentID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddComponentProperty(System::String ^ name, System::String ^ componentID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="componentID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości.</param>
        <param name="componentID">Identyfikator elementu docelowego.</param>
        <summary>Dodaje określonej właściwości i kojarzy tej właściwości z określonego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje określonej właściwości do wewnętrznego słownika właściwości, które są używane przez formant i przekonwertowane na skrypt po stronie klienta przez <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> lub <paramref name="componentID" /> jest <see langword="null" /> lub ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="AddElementProperty">
      <MemberSignature Language="C#" Value="public void AddElementProperty (string name, string elementID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddElementProperty(string name, string elementID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddElementProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddElementProperty (name As String, elementID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddElementProperty(System::String ^ name, System::String ^ elementID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="elementID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości.</param>
        <param name="elementID">Identyfikator elementu docelowego.</param>
        <summary>Dodaje określonej właściwości i kojarzy tej właściwości z określonego składnika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje określonej właściwości do wewnętrznego słownika właściwości, które są konwertowane na skrypt po stronie klienta przez <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> lub <paramref name="component" /> jest <see langword="null" /> lub ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="AddEvent">
      <MemberSignature Language="C#" Value="public void AddEvent (string name, string handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEvent(string name, string handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEvent (name As String, handler As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEvent(System::String ^ name, System::String ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="handler" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zdarzenia.</param>
        <param name="handler">Nazwa funkcji obsługi określonego zdarzenia.</param>
        <summary>Dodaje określone zdarzenie i obsługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje zdarzeń i program obsługi do słownik wewnętrzny zdarzeń, które są konwertowane na skrypt po stronie klienta przez <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> lub <paramref name="handler" /> jest <see langword="null" /> lub ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości.</param>
        <param name="value">Wartość właściwości.</param>
        <summary>Dodaje określonej właściwości i wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje właściwości i wartości do słownika wewnętrzny właściwości, które są konwertowane na skrypt po stronie klienta przez <xref:System.Web.UI.ScriptComponentDescriptor.GetScript%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest <see langword="null" /> lub ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="AddScriptProperty">
      <MemberSignature Language="C#" Value="public void AddScriptProperty (string name, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddScriptProperty(string name, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddScriptProperty (name As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddScriptProperty(System::String ^ name, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości.</param>
        <param name="script">Skrypt, który jest renderowany w przeglądarce.</param>
        <summary>Dodaje określonej właściwości i kojarzy właściwość z określonego skryptu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty%2A> metody do renderowania skrypt, który nie jest serializowany w przeglądarce.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="script" /> jest <see langword="null" /> lub ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public virtual string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera identyfikator składnika klienta.</summary>
        <value>Identyfikator składnika klienta.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScript">
      <MemberSignature Language="C#" Value="protected internal override string GetScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptComponentDescriptor.GetScript" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetScript () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetScript();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera skrypt klienta, który implementuje formantu docelowego na stronie.</summary>
        <returns>Skrypt klienta, który implementuje formantu docelowego na stronie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator bieżącego <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> wystąpienia.</summary>
        <value>Identyfikator bieżącego <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> wystąpienie, jeśli ustawiona; w przeciwnym razie, ciąg pusty ("").</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptComponentDescriptor.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ docelowy składnika klienta.</summary>
        <value>Typ docelowy składnika klienta.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Podjęto próbę ustawienia właściwości <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>