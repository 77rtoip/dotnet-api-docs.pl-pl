<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f2497c33eaf27f68789628a3955254edac82843" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37588605" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Służy do wskazania, że formant może być celem zdarzenia wywołania zwrotnego na serwerze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementowanie <xref:System.Web.UI.ICallbackEventHandler> interfejsu dla formantu niestandardowego, który wymaga, aby odbierać zdarzenia wywołania zwrotnego. Aby uzyskać więcej informacji, zobacz [Implementowanie klienta wywołania zwrotne bez ogłaszania zwrotnego](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).  
  
 Przykłady formantów, które implementują <xref:System.Web.UI.ICallbackEventHandler> obejmują interfejs <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.TreeView> kontrolki. Gdy zdarzenie wywołania zwrotnego jest przeznaczony dla formantu, który implementuje <xref:System.Web.UI.ICallbackEventHandler> interfejsu <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> metoda jest wywoływana, aby obsłużyć zdarzenie, przekazując argumentu zdarzenia jako parametr i <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> metoda zwraca wynik wywołania zwrotnego.  
  
 Formanty, które pobierają dane z kontroli źródła danych podczas wywołania zwrotnego zrobić synchronicznie lub asynchronicznie. Kontrolki ASP.NET, takie jak <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, i <xref:System.Web.UI.WebControls.TreeView> są wykonywane synchronicznie. Synchroniczne wywołania zwrotne nie uniemożliwia użytkownikowi pracy w przeglądarce. W trybie synchronicznym tylko jedno wywołanie zwrotne w danym momencie można wykonywać z ostatnim wywołaniem zwrotnym, biorąc pierwszeństwo. Po zaimplementowaniu formantu sieci Web do obsługi zachowanie asynchroniczne wiele wywołań zwrotnych mogą jednocześnie wygenerowany. Aby uzyskać szczegółowe informacje dotyczące programowania asynchronicznego, zobacz [oparte na zdarzeniach asynchroniczny wzorzec (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).  
  
 Można określić, czy zdarzenia wywołania zwrotnego pochodzące z interfejsu użytkownika renderowany przez zaimplementowanie kontroli <xref:System.Web.UI.ICallbackEventHandler> interfejsu są prawidłowe. Sprawdzanie poprawności zdarzeń jest dobrą praktyką. Jednak ze względu na wydajność można je wyłączyć. Do kontrolowania tego, czy zdarzenie jest przeprowadzana Walidacja zdarzeń wywołania zwrotnego, ustaw `enableEventValidation` atrybutu [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) dyrektywy lub `enableEventValidation` atrybutu [strony — Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) pliku Web.config. Jeśli ustawisz <xref:System.Web.UI.Page.EnableEventValidation%2A> właściwości w kodzie, ustaw go w `Page_Init` fazy przetwarzania strony. Aby uzyskać więcej informacji na temat równoważenia zabezpieczeń zaletą Weryfikacja zdarzeń przy użyciu jego spadek wydajności, zobacz [ASP.NET wydajności — omówienie](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wyniki zdarzeń wywołania zwrotnego, który jest przeznaczony dla formantu.</summary>
        <returns>Wynik wywołania zwrotnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyjątki zgłaszane w <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> nie zapobiega <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> wywołanego i zwraca wynik. Aby zapobiec <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> zwracanie wyniku, ustawić flagę, gdy wyjątek jest zgłaszany w <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> i zwraca pusty ciąg z <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Ciąg, który reprezentuje argumentu zdarzenia do przekazania do narzędzia obsługi zdarzeń.</param>
        <summary>Przetwarza zdarzenia wywołania zwrotnego, który jest przeznaczony dla formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy `null` jest używany jako parametr argumentu zdarzenia, ciąg jest serializowane na spód "null" i wysłane do serwera. Ponieważ nie istnieje żaden sposób odróżnić `null` i "null", należy unikać używania `null` argument parametrów za pomocą wywołania zwrotne.  
  
 Wyjątki zgłaszane w <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> nie zapobiega <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> wywołanego i zwraca wynik. Aby zapobiec <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> zwracanie wyniku, ustawić flagę, gdy wyjątek jest zgłaszany w <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> i zwraca pusty ciąg z <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>