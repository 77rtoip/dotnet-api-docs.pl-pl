<Type Name="ParseChildrenAttribute" FullName="System.Web.UI.ParseChildrenAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17ae40729d74e930933a639312946e1819ad3848" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37530378" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ParseChildrenAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParseChildrenAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ParseChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParseChildrenAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParseChildrenAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParseChildrenAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje atrybut metadanych, który można użyć podczas tworzenia kontrolek serwera ASP.NET. Użyj <see cref="T:System.Web.UI.ParseChildrenAttribute" /> klasy, aby wskazać, jak parser strony powinny traktować zawartość zagnieździć tag kontroli serwera, zadeklarowany na stronie. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ParseChildrenAttribute> Klasy można określić podczas analizowania logikę niestandardowy formant serwera, oznaczając kontrolki serwera z <xref:System.Web.UI.ParseChildrenAttribute> atrybutu metadanych.  
  
 Oznaczanie kontrolki serwera za pomocą atrybutu metadanych `ParseChildren(true)` powoduje, że analizator do interpretacji elementy, które są zawarte w tagach kontrolki serwera jako właściwości. W tym scenariuszu <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> właściwość `true`.  
  
 Oznaczanie kontrolki serwera za pomocą atrybutu metadanych `ParseChildren(true,"<Default Property>")` ustawia <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> właściwość na nazwę właściwości, która została przekazana do atrybutu.  
  
 Oznaczanie kontrolki serwera za pomocą atrybutu metadanych `ParseChildren(false)`, wartość domyślna to powoduje, że analizator do interpretacji elementy, które są zawarte w tagów formantów serwera jako zawartość, która zostanie przetworzona przy użyciu skojarzonego <xref:System.Web.UI.ControlBuilder> oznacza to, jako kontrolki. W tym scenariuszu <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> właściwość `false`.  
  
 Aby uzyskać informacje o korzystaniu z atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Przykład kodu w tej sekcji zawiera dwie części. Pierwszy przykład kodu demonstruje sposób ustawiania właściwości <xref:System.Web.UI.ParseChildrenAttribute> klasy. Drugi przykład kodu pokazuje, jak używać klas na stronie ASP.NET.  
  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.ParseChildrenAttribute> obiekt niestandardowy formant serwera o nazwie `CollectionPropertyControl`. <xref:System.Web.UI.ParseChildrenAttribute> Ustawia <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> właściwości `true` i <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> właściwość `Employee` klasy.  
  
 [!code-csharp[ParseChildrenAttribute_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób używania `CollectionPropertyControl` i `Employee` klasy strony ASP.NET. Wystąpienia elementu `Employee` klasy zostaną dodane w sposób deklaratywny.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Web.UI.PersistChildrenAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ParseChildrenAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ParseChildrenAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nowe wystąpienie klasy <xref:System.Web.UI.ParseChildrenAttribute> klasa jest tworzona z <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> właściwością `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childrenAsProperties As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(bool childrenAsProperties);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : bool -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute childrenAsProperties" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties">
          <see langword="true" /> Aby przeanalizować elementy jako właściwości kontrolki serwera; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ParseChildrenAttribute" /> przy użyciu <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" /> właściwości w celu określenia, jeśli elementy, które są zawarte w ramach kontroli serwera są analizowane jako właściwości kontrolki serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `childrenAsProperties` jest `false`, elementy, które są zawarte w ramach kontroli serwera są analizowane jako formant. `false` jest ustawieniem domyślnym dla <xref:System.Web.UI.ParseChildrenAttribute>.  
  
   
  
## Examples  
 Przykład kodu w tej sekcji zawiera dwie części. Pierwszy przykład kodu demonstruje sposób ustawiania właściwości <xref:System.Web.UI.ParseChildrenAttribute> klasy. Drugi przykład kodu pokazuje, jak używać klas na stronie ASP.NET.  
  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.ParseChildrenAttribute> obiekt niestandardowy formant serwera o nazwie `CollectionPropertyControl`. Gdy <xref:System.Web.UI.ParseChildrenAttribute> jest zadeklarowana przed zdefiniowaniem klasy `CollectionPropertyControl`, <xref:System.Web.UI.ParseChildrenAttribute> ustawia <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> właściwość `true`.  
  
 [!code-csharp[ParseChildrenAttribute_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.cs#1)]
 [!code-vb[ParseChildrenAttribute_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.vb#1)]  
  
 Poniższy przykład kodu demonstruje sposób używania `CollectionPropertyControl` i `Employee` klasy strony ASP.NET. Jedno wystąpienie `Employee` klasy jest dodawana w sposób deklaratywny i innym programowo dodane.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (Type childControlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type childControlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childControlType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(Type ^ childControlType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : Type -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute childControlType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childControlType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="childControlType">Typ formantu można przeanalizować jako właściwość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ParseChildrenAttribute" /> przy użyciu <see cref="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" /> właściwości w celu określenia, które elementy, które są zawarte w ramach kontroli serwera są analizowane jako kontrolki.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="childControlType" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParseChildrenAttribute (bool childrenAsProperties, string defaultProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool childrenAsProperties, string defaultProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (childrenAsProperties As Boolean, defaultProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParseChildrenAttribute(bool childrenAsProperties, System::String ^ defaultProperty);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ParseChildrenAttribute : bool * string -&gt; System.Web.UI.ParseChildrenAttribute" Usage="new System.Web.UI.ParseChildrenAttribute (childrenAsProperties, defaultProperty)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childrenAsProperties" Type="System.Boolean" />
        <Parameter Name="defaultProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childrenAsProperties">
          <see langword="true" /> Aby przeanalizować elementy jako właściwości kontrolki serwera; w przeciwnym razie <see langword="false" />.</param>
        <param name="defaultProperty">Ciąg, który definiuje właściwość kolekcji formant serwera, do którego zagnieżdżonej zawartości jest analizowany domyślnie.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.ParseChildrenAttribute" /> przy użyciu <paramref name="childrenAsProperties" /> i <paramref name="defaultProperty" /> parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `childrenAsProperties` jest `false`, elementy są analizowane jako kontrolki.  
  
   
  
## Examples  
 Przykład kodu w tej sekcji zawiera dwie części. Pierwszy przykład kodu demonstruje sposób ustawiania właściwości <xref:System.Web.UI.ParseChildrenAttribute> klasy. Drugi przykład kodu pokazuje, jak używać klas na stronie ASP.NET.  
  
 Poniższy przykład kodu demonstruje sposób ustawiania <xref:System.Web.UI.ParseChildrenAttribute> obiekt niestandardowy formant serwera o nazwie `CollectionPropertyControl`. <xref:System.Web.UI.ParseChildrenAttribute> Ustawia <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> właściwości `true` i <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> właściwość `Employee` klasy.  
  
 [!code-csharp[ParseChildrenAttribute_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.cs#2)]
 [!code-vb[ParseChildrenAttribute_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.vb#2)]  
  
 Poniższy przykład kodu demonstruje sposób używania `CollectionPropertyControl` i `Employee` klasy strony ASP.NET.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="ChildControlType">
      <MemberSignature Language="C#" Value="public Type ChildControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ChildControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ChildControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildControlType : Type" Usage="System.Web.UI.ParseChildrenAttribute.ChildControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, dozwolony typ formantu.</summary>
        <value>Typ formantu. Wartość domyślna to <see cref="T:System.Web.UI.Control" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli typ kontroli dozwolonych `null`, co oznacza, że jej nie został określony, domyślny typ, który jest <xref:System.Web.UI.Control?displayProperty=nameWithType> sterowania, jest zwracana.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wykonywania zapytań <xref:System.Web.UI.ParseChildrenAttribute.ChildControlType%2A> właściwości. Aby uzyskać definicje `CollectionPropertyControl` i `Employee` klas, które są używane w tym przykładzie kodu, zobacz <xref:System.Web.UI.ParseChildrenAttribute.%23ctor%2A>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_2/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_2/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsProperties">
      <MemberSignature Language="C#" Value="public bool ChildrenAsProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsProperties : bool with get, set" Usage="System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy chcesz analizować elementy, które są zawarte w ramach kontroli serwera jako właściwości.</summary>
        <value>
          <see langword="true" /> Aby przeanalizować elementy jako właściwości; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> właściwość jest ustawiona na `false`, elementy, które są zawarte w ramach kontroli serwera są analizowane jako formant.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wykonywania zapytań <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties%2A> właściwości. Aby uzyskać definicje `CollectionPropertyControl` i `Employee` klas, które są używane w tym przykładzie kodu, zobacz <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Web.UI.ParseChildrenAttribute" /> została wywołana z <paramref name="childrenAsProperties" /> równa <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa wartość domyślną dla <see cref="T:System.Web.UI.ParseChildrenAttribute" /> klasy. To pole jest tylko do odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartością domyślną dla <xref:System.Web.UI.ParseChildrenAttribute.Default> pole jest `false`, co oznacza, że elementy nie są analizowane jako właściwości kontrolki serwera.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultProperty">
      <MemberSignature Language="C#" Value="public string DefaultProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProperty As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultProperty { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProperty : string with get, set" Usage="System.Web.UI.ParseChildrenAttribute.DefaultProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia domyślną właściwość dla kontrolki serwera, do której elementy są analizowane.</summary>
        <value>Nazwa domyślna właściwość kolekcji formant serwera, do której elementy są analizowane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> Właściwość jest używana tylko wtedy, gdy ciąg jest przekazywany do <xref:System.Web.UI.ParseChildrenAttribute> konstruktora. Gdy <xref:System.Web.UI.ParseChildrenAttribute> klasa jest tworzona, <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> właściwość definiuje właściwość domyślną dla kontrolki serwera, które są analizowane.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wykonywania zapytań <xref:System.Web.UI.ParseChildrenAttribute.DefaultProperty%2A> właściwości. Aby uzyskać definicje `CollectionPropertyControl` i `Employee` klas, które są używane w tym przykładzie kodu, zobacz <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Bieżący <see cref="T:System.Web.UI.ParseChildrenAttribute" /> została wywołana z <paramref name="childrenAsProperties" /> równa <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.ParseChildrenAttribute.#ctor(System.Boolean,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="parseChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania z bieżącym obiektem.</param>
        <summary>Określa, czy określony obiekt jest równy bieżącemu obiektowi.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="obj" /> jest taki sam jak bieżący obiekt; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="parseChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pełni rolę funkcji skrótu dla <see cref="T:System.Web.UI.ParseChildrenAttribute" /> obiektu.</summary>
        <returns>Wartość skrótu dla bieżącego <see cref="T:System.Web.UI.ParseChildrenAttribute" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="parseChildrenAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość wskazującą czy wartości bieżącego wystąpienia <see cref="T:System.Web.UI.ParseChildrenAttribute" /> klasy jest wartością domyślną klasy pochodnej.</summary>
        <returns>
          <see langword="true" /> Jeśli bieżący <see cref="T:System.Web.UI.ParseChildrenAttribute" /> wartość jest wystąpieniem domyślnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartością domyślną dla <xref:System.Web.UI.ParseChildrenAttribute> klasa jest <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> pola.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób wykonywania zapytań <xref:System.Web.UI.ParseChildrenAttribute.IsDefaultAttribute%2A> właściwości. Aby uzyskać definicje `CollectionPropertyControl` i `Employee` klas, które są używane w tym przykładzie kodu, zobacz <xref:System.Web.UI.ParseChildrenAttribute>.  
  
 [!code-aspx-csharp[ParseChildrenAttribute_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ParseChildrenAttribute_1/CS/parsechildren.aspx#3)]
 [!code-aspx-vb[ParseChildrenAttribute_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ParseChildrenAttribute_1/VB/parsechildren.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsChildren">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsChildren;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsChildren" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParseAsChildren As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ ParseAsChildren;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParseAsChildren : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, że zagnieżdżone zawartość, która znajduje się w ramach kontroli serwera jest analizowany jako kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.ParseChildrenAttribute.ParseAsChildren> nosi nazwę pola, zagnieżdżone zawartości znajdują się w ramach kontroli serwera nie są analizowane jako właściwości; raczej są parsowane jako formant.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
        <altmember cref="P:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties" />
      </Docs>
    </Member>
    <Member MemberName="ParseAsProperties">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.ParseChildrenAttribute ParseAsProperties;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.ParseChildrenAttribute ParseAsProperties" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ParseAsProperties As ParseChildrenAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::ParseChildrenAttribute ^ ParseAsProperties;" />
      <MemberSignature Language="F#" Value=" staticval mutable ParseAsProperties : System.Web.UI.ParseChildrenAttribute" Usage="System.Web.UI.ParseChildrenAttribute.ParseAsProperties" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ParseChildrenAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, że zagnieżdżone zawartość, która znajduje się w ramach kontroli serwera jest analizowany jako właściwości formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.ParseChildrenAttribute.ParseAsProperties> nosi nazwę pola, zagnieżdżonej zawartości znajdujących się w ramach kontroli serwera jest analizowany jako właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.Default" />
        <altmember cref="F:System.Web.UI.ParseChildrenAttribute.ParseAsChildren" />
      </Docs>
    </Member>
  </Members>
</Type>