<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66ef0d171c99e6ddb1e86ae6595f835a04020b98" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36575469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IUpdatePanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IUpdatePanel" />
  <TypeSignature Language="F#" Value="type UpdatePanel = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IUpdatePanel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUpdatePanel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia sekcjach strony do renderowania częściowo bez odświeżania strony.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Odświeżanie zawartości w elemencie UpdatePanel](#refreshing_updatepanel_content)  
  
-   [Użycie elementu UpdatePanel](#updatepanel_usage)  
  
-   [Stosowanie stylów](#applying_styles)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.UpdatePanel> Formanty są centralnej część funkcjonalności interfejsu AJAX w programie ASP.NET. Są one używane przez <xref:System.Web.UI.ScriptManager> formantu, aby umożliwić renderowanie stron częściowych. Częściowego renderowania strony zmniejsza potrzebę synchroniczne ogłaszania zwrotnego strony pełnej aktualizacji, gdy tylko część strony ma zostać zaktualizowany. Renderowanie stron częściowych poprawia środowisko użytkownika, ponieważ redukuje migotania ekranu, który występuje podczas całej strony ogłaszania zwrotnego i zwiększa interakcyjności strony sieci Web.  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>Odświeżanie zawartości UpdatePanel  
 Po włączeniu częściowego renderowania strony formantu można wykonać odświeżenie strony, która aktualizuje całej strony lub asynchronicznego ogłaszania zwrotnego, która aktualizuje zawartość jednego lub więcej <xref:System.Web.UI.UpdatePanel> kontrolki. Określa, czy formant powoduje, że aktualizacje i asynchronicznego ogłaszania zwrotnego <xref:System.Web.UI.UpdatePanel> kontroli zależy od następujących czynników:  
  
-   Jeśli <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwość <xref:System.Web.UI.UpdatePanel> kontrola jest ustawiona na <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, <xref:System.Web.UI.UpdatePanel> zawartość formantu jest aktualizowany co odświeżania strony, od którego pochodzi ze strony. Dotyczy to również asynchronicznego ogłaszania zwrotnego z formantami, które znajdują się wewnątrz innych <xref:System.Web.UI.UpdatePanel> kontrolek i ogłaszania zwrotnego z formantami, które nie są w <xref:System.Web.UI.UpdatePanel> kontrolki.  
  
-   Jeśli <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, <xref:System.Web.UI.UpdatePanel> zawartość formantu jest aktualizowana w następujących okolicznościach:  
  
    -   Podczas wywoływania <xref:System.Web.UI.UpdatePanel.Update%2A> metody <xref:System.Web.UI.UpdatePanel> jawnie kontroli.  
  
    -   Gdy <xref:System.Web.UI.UpdatePanel> kontroli jest zagnieżdżony w innym <xref:System.Web.UI.UpdatePanel> kontroli i panelu nadrzędny jest aktualizowany.  
  
    -   Podczas odświeżania strony jest spowodowany przez formant, który jest zdefiniowany jako wyzwalacz za pomocą `Triggers` właściwość <xref:System.Web.UI.UpdatePanel> formantu. W tym scenariuszu formantu jawnie wyzwala aktualizacji zawartości panelu. Formant może być wewnętrznego lub zewnętrznego <xref:System.Web.UI.UpdatePanel> formant, który jest skojarzony wyzwalacz.  
  
    -   Gdy <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> właściwość jest ustawiona na `true` i podrzędne formantu <xref:System.Web.UI.UpdatePanel> formant powoduje odświeżenie strony. Formanty podrzędne zagnieżdżone <xref:System.Web.UI.UpdatePanel> formanty nie powodują aktualizację zewnętrznego <xref:System.Web.UI.UpdatePanel> kontrolować, chyba że jawnie są zdefiniowane jako wyzwalacze.  
  
 Kombinacja ustawienie <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> właściwości `false` i <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwości <xref:System.Web.UI.UpdatePanelUpdateMode.Always> nie jest dozwolone i zgłosi wyjątek.  
  
 Gdy <xref:System.Web.UI.UpdatePanel> kontroli wykonuje asynchroniczne post, dodaje niestandardowy nagłówek HTTP. Niektóre serwery proxy, Usuń ten niestandardowy nagłówek HTTP. W takim przypadku serwer obsługuje żądanie jako zwykły ogłaszania zwrotnego, co powoduje, że błąd klienta. Aby rozwiązać ten problem, należy wstawić niestandardowego pola formularza, podczas wykonywania asynchronicznych ogłoszeń. Następnie zaznacz nagłówek lub niestandardowego pola w kodzie serwera.  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>Korzystanie z UpdatePanel  
 Można użyć wielu <xref:System.Web.UI.UpdatePanel> formanty zaktualizować różnych regionów strony niezależnie. Gdy strona, która zawiera co najmniej jeden <xref:System.Web.UI.UpdatePanel> formanty najpierw renderowania całą zawartość wszystkich <xref:System.Web.UI.UpdatePanel> formanty są renderowane i wysyłany do przeglądarki. W kolejnych asynchroniczne ogłaszanie zwrotne, zawartości każdej <xref:System.Web.UI.UpdatePanel> kontroli mogły nie zostać zaktualizowane, w zależności od ustawienia panelu i na logice klienta lub serwera dla poszczególnych paneli.  
  
 Można również użyć <xref:System.Web.UI.UpdatePanel> formantów w następujących scenariuszach:  
  
-   W formantach użytkownika.  
  
-   Na stronie głównej i zawartości.  
  
-   Zagnieżdżone w innych <xref:System.Web.UI.UpdatePanel> kontrolki.  
  
-   Określa wewnątrz opartego na szablonie, takie jak <xref:System.Web.UI.WebControls.GridView> lub <xref:System.Web.UI.WebControls.Repeater> kontrolki.  
  
 <xref:System.Web.UI.UpdatePanel> można dodawać formanty deklaratywnie lub programowo.  
  
 Możesz dodać <xref:System.Web.UI.UpdatePanel> kontrolować programowo, ale nie można dodać wyzwalaczy programowo. Można utworzyć wyzwalacza podobne zachowania, można zarejestrować formantu na stronie jako formant asynchronicznego odświeżania strony. Można to zrobić przez wywołanie metody <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> metody <xref:System.Web.UI.ScriptManager> formantu. Następnie możesz utworzyć program obsługi zdarzeń, który jest uruchamiany w odpowiedzi na asynchronicznego ogłaszania zwrotnego i obsługi wywołania <xref:System.Web.UI.UpdatePanel.Update%2A> metody <xref:System.Web.UI.UpdatePanel> formantu.  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>Stosowanie stylów  
 <xref:System.Web.UI.UpdatePanel> Kontroli akceptuje expando atrybuty. Dzięki temu można ustawić klasę CSS dla HTMLelements, renderowanie kontrolek. Na przykład można utworzyć kod znaczników pokazano w poniższym przykładzie:  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 Kod znaczników w poprzednim przykładzie renderuje HTML podobny do następującego po uruchomieniu na stronie:  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 W poniższych przykładach pokazano różnych zastosowań <xref:System.Web.UI.UpdatePanel> formantu.  
  
 **Formanty wewnątrz formantu UpdatePanel**  
  
 Poniższy przykład przedstawia sposób umieść formanty <xref:System.Web.UI.UpdatePanel> kontroli do zmniejszenia migotania ekranu podczas publikowania na serwerze. W tym przykładzie <xref:System.Web.UI.WebControls.Calendar> i <xref:System.Web.UI.WebControls.DropDownList> kontroli znajdują się wewnątrz <xref:System.Web.UI.UpdatePanel> formantu. Domyślnie <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwość jest <xref:System.Web.UI.UpdatePanelUpdateMode.Always> i <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> jest właściwość `true`. W związku z tym formantów podrzędnych panelu spowodować asynchronicznego ogłaszania zwrotnego.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Scenariusz wzorzec/szczegół z formantami UpdatePanel**  
  
 W poniższym przykładzie <xref:System.Web.UI.UpdatePanel> formant jest używany w scenariuszu wzorzec/szczegół, który przedstawia zleceń i szczegółów zamówienia z bazy danych Northwind. Jeden <xref:System.Web.UI.UpdatePanel> formant zawiera <xref:System.Web.UI.WebControls.GridView> kontrolkę wyświetlającą listę zleceń. Drugi <xref:System.Web.UI.UpdatePanel> formant zawiera <xref:System.Web.UI.WebControls.DetailsView> formant, który wyświetla szczegóły jednego zamówienia. Po wybraniu zamówienia z pierwszej tabeli z drugiej tabeli wyświetlane są szczegóły dotyczące tej kolejności. Druga tabela jest aktualizowana asynchronicznie oparte na opcjach wybranych w pierwszej tabeli. Operacje sortowania i stronicowania w tabeli podsumowania zamówienia powodować częściowej aktualizacji.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 Jeśli umieścisz <xref:System.Web.UI.WebControls.GridView> kontrolować wewnątrz <xref:System.Web.UI.UpdatePanel> ustawienie sterowania <xref:System.Web.UI.WebControls.GridView> formantu <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> właściwości `true` nie jest obsługiwane. Jednak ponieważ <xref:System.Web.UI.UpdatePanel> sterowanie obsługuje asynchroniczne ogłaszanie zwrotne, wszelkie ogłaszania zwrotnego, które zmieniają <xref:System.Web.UI.WebControls.GridView> kontrolować wewnątrz <xref:System.Web.UI.UpdatePanel> kontroli spowodować takie samo zachowanie sortowania i stronicowania wywołań zwrotnych.  
  
 **Używanie formantu UpdatePanel w szablonie**  
  
 W poniższym przykładzie <xref:System.Web.UI.UpdatePanel> formant jest używany w szablonie elementu z <xref:System.Web.UI.WebControls.GridView> formantu. <xref:System.Web.UI.UpdatePanel> formanty w każdym wierszu danych są generowane automatycznie. Każdy wiersz <xref:System.Web.UI.UpdatePanel> formant zawiera <xref:System.Web.UI.WebControls.Label> kontrolka do wyświetlenia liczba elementów w tym wierszu i <xref:System.Web.UI.WebControls.Button> formantu, aby zmniejszyć i zwiększ ilość.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.UpdatePanel" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tego konstruktora zainicjować nowe wystąpienie klasy <xref:System.Web.UI.UpdatePanel> klasy. Dynamiczne dodawanie <xref:System.Web.UI.UpdatePanel> sterowania do strony, Utwórz nową <xref:System.Web.UI.UpdatePanel> wystąpienia, a następnie dodaj formanty podrzędne do obiektu sterowania udostępnianym przez to wystąpienie <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób dynamicznie utworzyć <xref:System.Web.UI.UpdatePanel> sterować i dodaj go do strony. Po kliknięciu przycisku wewnątrz <xref:System.Web.UI.UpdatePanel> kontroli, wiadomości są odświeżane z datą i godziną. Formanty podrzędne są dodawane przy użyciu <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdatePanel.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję atrybutów kaskadowy arkusz stylów (CSS) <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</summary>
        <value>Nazwy CSS stylów reguły w kolekcji atrybutów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Attributes%2A> Właściwość zawiera kolekcję atrybutów stylu CSS, których można użyć w załączonym `div` elementu <xref:System.Web.UI.UpdatePanel> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ChildrenAsTriggers : bool with get, set" Usage="System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ogłaszania zwrotnego z bezpośrednio podrzędne kontrolki z <see cref="T:System.Web.UI.UpdatePanel" /> kontroli zaktualizować zawartość panelu.</summary>
        <value>
          <see langword="true" /> Jeśli ogłaszania zwrotnego z bezpośrednio podrzędne kontrolki z <see cref="T:System.Web.UI.UpdatePanel" /> aktualizacji kontrolki panelu elementu zawartości, a w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> właściwości `true` Jeśli chcesz ogłaszania zwrotnego z formanty podrzędne natychmiastowego <xref:System.Web.UI.UpdatePanel> formantu, aby spowodować, że aktualizacja panelu zawartości. Formanty podrzędne zagnieżdżone <xref:System.Web.UI.UpdatePanel> formanty nie spowoduje aktualizację nadrzędnej <xref:System.Web.UI.UpdatePanel> formantu elementu zawartości, chyba, że należy wywołać <xref:System.Web.UI.UpdatePanel.Update%2A> — metoda jawnie lub zdefiniuj formantów podrzędnych jako wyzwalacze.  
  
> [!NOTE]
>  Podczas <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.UpdatePanelUpdateMode.Always> i <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> właściwość jest ustawiona na `false`, <xref:System.InvalidOperationException> zgłoszenia wyjątku podczas <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> metody. Ta kombinacja właściwości nie jest dozwolone dla <xref:System.Web.UI.UpdatePanel> formantu.  
  
 Scenariusz, w którym można ustawić <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> do `false` jest w przypadku dwóch <xref:System.Web.UI.UpdatePanel> formantów i mają być odświeżenie strony z pierwszym panelu, aby zaktualizować zawartość drugiego panelu, ale nie została zaktualizowana własną zawartość. Na przykład pierwszy panelu może być listę produktów kupić i drugi panel może być koszyk.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szablon definiujący zawartość <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> Wystąpienie definiujące zawartość <see cref="T:System.Web.UI.UpdatePanel" /> formantu. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> Właściwość zawiera zawartość, która pojawia się wewnątrz <xref:System.Web.UI.UpdatePanel> kontroli, gdy jest on renderowany. Można utworzyć szablonu zawartości, deklaratywnego lub programowo. Szablon zawartości <xref:System.Web.UI.UpdatePanel> formant jest jednego wystąpienia szablonu. W związku z tym właściwości formantów zawiera będą dostępne bezpośrednio na stronie bez użycia <xref:System.Web.UI.Page.FindControl%2A> metody. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.TemplateInstanceAttribute> Przegląd klasy.  
  
 Aby dodać elementy do <xref:System.Web.UI.UpdatePanel> deklaratywnego sterowania, Dodaj `<ContentTemplate>` element pomiędzy otwierającym, a zamykającym tagiem elementu <xref:System.Web.UI.UpdatePanel> formantu. Wewnątrz `<ContentTemplate>` znaczniki elementów zadeklarować inne formanty i elementów HTML.  
  
 Aby dodać elementy do <xref:System.Web.UI.UpdatePanel> kontrolować dynamicznie, użyj <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> właściwość, która umożliwia dodawanie formantów podrzędnych bez konieczności tworzenia szablonu niestandardowego, który implementuje <xref:System.Web.UI.ITemplate> interfejsu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> Właściwość <see cref="T:System.Web.UI.UpdatePanel" /> kontroli jest ustawiona, po utworzeniu wystąpienia szablonu lub po utworzeniu kontenera zawartości szablonu.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplateContainer : System.Web.UI.Control" Usage="System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt formantu, z którym można dodać programistycznie formantów podrzędnych.</summary>
        <value>A <see cref="T:System.Web.UI.Control" /> obiekt, który definiuje zawartość <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> Właściwość umożliwia programowane dodawanie formantów podrzędnych z <xref:System.Web.UI.UpdatePanel> kontroli bez konieczności definiowania szablonu niestandardowego, który dziedziczy <xref:System.Web.UI.ITemplate> interfejsu. W przypadku dodawania zawartości do <xref:System.Web.UI.UpdatePanel> deklaratywnego sterowania lub za pomocą projektanta, należy dodać zawartości do <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> właściwości przy użyciu `<ContentTemplate>` elementu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób programowo określ <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> właściwość <xref:System.Web.UI.UpdatePanel> formantu. <xref:System.Web.UI.WebControls.Label.Text%2A> Właściwość <xref:System.Web.UI.WebControls.Label> formantu jest ustawiana podczas `Button1` zostanie kliknięty.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdatePanel.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.ControlCollection" /> obiekt, który zawiera elementu podrzędnego kontrolki dla <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</summary>
        <value>Kolekcja formantów podrzędnych dla <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Controls%2A> Właściwość nie zostanie zastąpiona od podstawy <xref:System.Web.UI.Control> klasy i zapieczętowany, aby uniknąć dodatkowych pochodnym. Do dodawania formantów do <xref:System.Web.UI.UpdatePanel> deklaratywnego sterowania, Utwórz `<ContentTemplate>` element wewnątrz <xref:System.Web.UI.UpdatePanel> znacznika kontrolki. Aby dodać kontrolki do <xref:System.Web.UI.UpdatePanel> kontrolować programowo, użyj <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />, Lub <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> metody <see cref="T:System.Web.UI.ControlCollection" /> klasy została wywołana. Aby zmienić zawartość <see cref="T:System.Web.UI.UpdatePanel" /> kontrolować, zmodyfikuj formanty podrzędne <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> właściwości.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control&#xA;override this.CreateContentTemplateContainer : unit -&gt; System.Web.UI.Control" Usage="updatePanel.CreateContentTemplateContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy <see cref="T:System.Web.UI.Control" /> obiektu, który działa jako kontener dla formantów podrzędnych, które definiują <see cref="T:System.Web.UI.UpdatePanel" /> zawartości formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.Control" /> kontener <see cref="T:System.Web.UI.UpdatePanel" /> zawartości formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona do użycia przez deweloperów kontroli, którzy chcą rozszerzyć <xref:System.Web.UI.UpdatePanel> formantu. Na przykład w klasach pochodnych, możesz podać różnych głównych formant, który działa jako kontener dla Twojego <xref:System.Web.UI.UpdatePanel> zawartości formantu. Domyślna implementacja zwraca <xref:System.Web.UI.Control> obiektu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób przesłonięcia <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> w niestandardowej metody <xref:System.Web.UI.UpdatePanel> formant zawsze renderowanie `<fieldset>` i `<legend>` elementy panelu zawartości. Niestandardowa <xref:System.Web.UI.UpdatePanel> kontroli definiuje właściwości publicznej o nazwie `GroupingText` czyli wewnątrz literału ciągu `<legend>` elementu.  
  
 Niestandardowy <xref:System.Web.UI.UpdatePanel> formantu o nazwie `CustomUpdatePanel` pochodną <xref:System.Web.UI.UpdatePanel> i zastępuje <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> metody. Umieść `CustomUpdatePanel` klasy kodu źródłowego w folderze App_Code witryny sieci Web.  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 Niestandardowa <xref:System.Web.UI.UpdatePanel> formant jest używany na stronie podobnie jak <xref:System.Web.UI.UpdatePanel> formantu. W poniższym przykładzie przedstawiono strona zawierająca niestandardowego <xref:System.Web.UI.UpdatePanel> formantu.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection&#xA;override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="updatePanel.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kolekcję wszystkich kontrolek, które są zawarte w <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> obiekt, który zawiera wszystkie formanty, które definiują zawartość <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A> Metoda jest używana przez deweloperów formantu.  
  
 Ponieważ ta metoda jest chroniona i zapieczętowany, nie jest widoczna na klasy dziedziczące <xref:System.Web.UI.UpdatePanel> klasy, ale nie można zastąpić. Ta metoda zastępuje implementację podstawową do zwrócenia specjalistycznej <xref:System.Web.UI.ControlCollection> obiekt, który zgłasza <xref:System.InvalidOperationException> podczas <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, lub <xref:System.Web.UI.ControlCollection.RemoveAt%2A> metody <xref:System.Web.UI.ControlCollection> Klasa jest wywoływany. Aby zmienić zawartość <xref:System.Web.UI.UpdatePanel> kontrolować, zmodyfikuj formanty podrzędne <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="updatePanel.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicjuje <see cref="T:System.Web.UI.UpdatePanel" /> kontroli wyzwalacza kolekcji, jeśli włączono częściowego renderowania strony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie włączono częściowego renderowania strony, wyzwalaczy, które są zdefiniowane w <xref:System.Web.UI.UpdatePanel.Triggers%2A> właściwość nie jest zainicjowana, ponieważ nie mają wpływu. <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> Właściwość <xref:System.Web.UI.ScriptManager> formantu pobiera lub ustawia wartość wskazującą, czy włączono częściowego renderowania strony. <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> Właściwość <xref:System.Web.UI.ScriptManager> formantu pobiera lub ustawia wartość wskazującą, czy renderowanie stron częściowych jest obsługiwane.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli zastąpienie <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> metoda, upewnij się, że Wywołaj klasę bazową, dzięki czemu wyzwalacze są zarejestrowane, jeśli włączono częściowego renderowania strony.</para>
        </block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInPartialRendering : bool" Usage="System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy <see cref="T:System.Web.UI.UpdatePanel" /> kontroli jest aktualizowana w wyniku asynchronicznego ogłaszania zwrotnego.</summary>
        <value>
          <see langword="true" /> Jeśli bieżący <see cref="T:System.Web.UI.UpdatePanel" /> formantu ma zostać zaktualizowany w wyniku asynchronicznego ogłaszania zwrotnego; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A> Właściwości jest przeznaczony do użytku przez formant deweloperów, którzy chcieli wiedzieć, kiedy <xref:System.Web.UI.UpdatePanel> kontroli jest aktualizowana w wyniku asynchronicznego ogłaszania zwrotnego. W scenariuszach programowanie strony, należy użyć <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> właściwości w celu określenia, czy strony są przetwarzane w wyniku asynchronicznego ogłaszania zwrotnego.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="updatePanel.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Init" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel> Formantu <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> właściwość zostanie uruchomiony podczas <xref:System.Web.UI.UpdatePanel.OnInit%2A> metody.  
  
 <xref:System.Web.UI.UpdatePanel.OnInit%2A> Przez deweloperów kontroli metodę, aby rozszerzyć funkcjonalność programu <xref:System.Web.UI.UpdatePanel> formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> Właściwość jest zdefiniowana, kiedy <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> właściwość już istnieje.</exception>
        <block subset="none" type="overrides">
          <para>Jeśli zastąpienie <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> metody w klasie pochodnej, upewnij się, że wywołanie <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> metody klasy podstawowej, która zarejestrowana delegatów może odbierać zdarzenia.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoad : EventArgs -&gt; unit&#xA;override this.OnLoad : EventArgs -&gt; unit" Usage="updatePanel.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.Load" /> zdarzenia dla <see cref="T:System.Web.UI.UpdatePanel" /> kontroli i wywołuje <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> metodą podczas renderowania stron częściowych nie jest włączona.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Jeśli można zastąpić <see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" /> metoda, upewnij się, że wywołanie klasy podstawowej, aby <see cref="E:System.Web.UI.Control.Load" /> zdarzeń zostanie wygenerowany.</para>
        </block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="updatePanel.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza <see cref="E:System.Web.UI.Control.PreRender" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> Przez deweloperów kontroli metodę, aby rozszerzyć funkcjonalność programu <xref:System.Web.UI.UpdatePanel> formantu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> Właściwość jest ustawiona na <see langword="false" />i <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> właściwość jest ustawiona na <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnload : EventArgs -&gt; unit&#xA;override this.OnUnload : EventArgs -&gt; unit" Usage="updatePanel.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> Obiekt, który zawiera dane zdarzenia.</param>
        <summary>Zgłasza podstawowym <see cref="E:System.Web.UI.Control.Unload" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.OnUnload%2A> Przez deweloperów kontroli metodę, aby rozszerzyć funkcjonalność programu <xref:System.Web.UI.UpdatePanel> formantu  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który reprezentuje strumienia wyjściowego do renderowania zawartości HTML.</param>
        <summary>Zgłasza <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Render%2A> Przez deweloperów kontroli metodę, aby rozszerzyć funkcjonalność programu <xref:System.Web.UI.UpdatePanel> formantu.  
  
 <xref:System.Web.UI.UpdatePanel.Render%2A> Metoda zapisuje renderowanej zawartości <xref:System.Web.UI.UpdatePanel> formantu do przeglądarki przy użyciu dostarczonego <xref:System.Web.UI.HtmlTextWriter> obiektu. Jeśli zastąpienie <xref:System.Web.UI.UpdatePanel.Render%2A> metody w klasie pochodnej, upewnij się, że wywołanie <xref:System.Web.UI.UpdatePanel.Render%2A> metody podstawowej klasy tak, aby dziecko kontrolki z <xref:System.Web.UI.UpdatePanel> renderowania formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updatePanel.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Obiekt, który reprezentuje strumienia wyjściowego do renderowania zawartości HTML.</param>
        <summary>Zgłasza <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> Przez deweloperów kontroli metodę, aby rozszerzyć funkcjonalność programu <xref:System.Web.UI.UpdatePanel> formantu.  
  
 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> Metoda zapisuje renderowanej zawartości <xref:System.Web.UI.UpdatePanel> formantu do przeglądarki przy użyciu dostarczonego <xref:System.Web.UI.HtmlTextWriter> obiektu. Jeśli zastąpienie <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metody w klasie pochodnej, upewnij się, że wywołanie <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> metody podstawowej klasy tak, aby dziecko kontrolki z <xref:System.Web.UI.UpdatePanel> renderowania formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Web.UI.UpdatePanelRenderMode with get, set" Usage="System.Web.UI.UpdatePanel.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Web.UI.UpdatePanel" /> zawartość formantu jest ujęta w kodzie HTML <see langword="&lt;div&gt;" /> lub <see langword="&lt;span&gt;" /> elementu.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.UpdatePanelRenderMode" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" /> tak, aby zawartość panelu jest ujęta w kodzie HTML <see langword="&lt;div&gt;" /> elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.UpdatePanel.RenderMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.UpdatePanelRenderMode.Inline>, treść <xref:System.Web.UI.UpdatePanel> renderowania formantu w formacie HTML `<span>` elementu. Jeśli <xref:System.Web.UI.UpdatePanel.RenderMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.UpdatePanelRenderMode.Block>, jest on renderowany wewnątrz HTML `<div>` elementu.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób ustawiania <xref:System.Web.UI.UpdatePanel.RenderMode%2A> właściwości deklaratywnie. <xref:System.Web.UI.UpdatePanel> Formantu o nazwie `UpdatePanel1` renderowania w formacie HTML `<span>` elementu. Jeśli <xref:System.Web.UI.UpdatePanel.RenderMode%2A> ustawiono właściwość <xref:System.Web.UI.UpdatePanelRenderMode.Block>, wynikowy akapitu pojawiały się rozłączonych z powodu sposobu, w jaki HTML `<div>` element jest renderowany.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUpdate : bool" Usage="System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy zawartość <see cref="T:System.Web.UI.UpdatePanel" /> formantu zostanie zaktualizowany.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Web.UI.UpdatePanel" /> zawartość formantu zostanie zaktualizowany, a w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A> zwraca `true` Jeśli <xref:System.Web.UI.UpdatePanel.Update%2A> jawnie wywołano metodę lub, jeśli <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.UpdatePanelUpdateMode.Always>.  
  
 Ta właściwość jest przeznaczony do użytku przez formant deweloperów, którzy chcą rozszerzyć <xref:System.Web.UI.UpdatePanel> formantu. Na przykład w klasach pochodnych, można określić dodatkowe logika do określenia, czy <xref:System.Web.UI.UpdatePanel> formant powinien zostać zaktualizowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa atrybutu.</param>
        <summary>Zwraca atrybut formantu sieci Web przy użyciu określonej nazwy.</summary>
        <returns>Wartość atrybutu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.UpdatePanel> wystąpienia jest rzutowane na <xref:System.Web.UI.IAttributeAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nazwa atrybutu, aby ustawić.</param>
        <param name="value">Wartość atrybutu do ustawienia.</param>
        <summary>Ustawia wartość atrybutu określonego formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Można go używać tylko wtedy, gdy <xref:System.Web.UI.UpdatePanel> wystąpienia jest rzutowane na <xref:System.Web.UI.IAttributeAccessor> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Web.UI.UpdatePanelTriggerCollection" Usage="System.Web.UI.UpdatePanel.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> obiekt, który zawiera <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> i <see cref="T:System.Web.UI.PostBackTrigger" /> obiektów, które zostały zarejestrowane deklaratywnie dla <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</summary>
        <value>Kolekcja obiektów typu <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> i <see cref="T:System.Web.UI.PostBackTrigger" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Triggers%2A> Właściwości pobiera zbiór wszystkich wyzwalaczy, które zostały zdefiniowane dla <xref:System.Web.UI.UpdatePanel> formantu. (Zdefiniuj wyzwalacze deklaratywnie przy użyciu **edytora kolekcji UpdatePanelTrigger** okno dialogowe w Projektancie lub za pomocą `<Triggers>` elementu <xref:System.Web.UI.UpdatePanel> kontroli.) Zawiera kolekcję <xref:System.Web.UI.AsyncPostBackTrigger> i <xref:System.Web.UI.PostBackTrigger> obiektów.  
  
 Deklaracyjne wyzwalaczy, które są zdefiniowane w <xref:System.Web.UI.UpdatePanel.Triggers%2A> kolekcji nie są śledzone w widoku stanu.  
  
 Gdy formant jest kontenerem nazewnictwa jest używany jako wyzwalacz, wszystkie jej kontrolkach podrzędnych, które powodują ogłaszania zwrotnego zachowują się jako wyzwalacze.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="updatePanel.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powoduje, że aktualizacja zawartości <see cref="T:System.Web.UI.UpdatePanel" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli strona jest włączony do renderowania stron częściowych po wywołaniu <xref:System.Web.UI.UpdatePanel.Update%2A> metody <xref:System.Web.UI.UpdatePanel> zawartość formantu jest aktualizowana w przeglądarce. Wywołanie <xref:System.Web.UI.UpdatePanel.Update%2A> metodę, jeśli kod serwera, który należy wykonać, aby określić, czy <xref:System.Web.UI.UpdatePanel> formant powinien zostać zaktualizowany. Jeśli planujesz używać <xref:System.Web.UI.UpdatePanel.Update%2A> metody, ustawienie <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwości <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Chcąc decyzja o aktualizacji panelu logiki serwera, upewnij się, że <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> właściwość jest `false` , a wyzwalacze jawne nie są zdefiniowane w panelu.  
  
 W przypadku rozwoju typowej strony Jeśli zdefiniuj Wyzwalacze lub <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> właściwość jest `true` dla <xref:System.Web.UI.UpdatePanel> formantu <xref:System.Web.UI.UpdatePanel.Update%2A> automatycznie wywoływana jest metoda podczas cyklu życia strony.  
  
 Jeśli <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> właściwość nie jest zdefiniowany dla <xref:System.Web.UI.UpdatePanel> kontrolować, nie aktualizacji panelu.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Web.UI.UpdatePanel.Update%2A> metodę, aby zaktualizować zawartość <xref:System.Web.UI.UpdatePanel> kontroli, gdy więcej niż pięciu sekund upłynęły od ostatniej aktualizacji.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> Właściwość jest ustawiona na <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.  \- lub — <see cref="M:System.Web.UI.UpdatePanel.Update" /> metoda jest wywoływana podczas lub po stronie <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> zdarzeń.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMode : System.Web.UI.UpdatePanelUpdateMode with get, set" Usage="System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, kiedy <see cref="T:System.Web.UI.UpdatePanel" /> zawartość formantu jest aktualizowana.</summary>
        <value>Jeden z <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> wartości. Wartość domyślna to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.UpdatePanel> formant nie jest wewnątrz innego <xref:System.Web.UI.UpdatePanel> formantu panelu są aktualizowane zgodnie ze ustawienia <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> i <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> właściwości, oraz kolekcja wyzwalaczy. Gdy <xref:System.Web.UI.UpdatePanel> formant znajduje się wewnątrz innego <xref:System.Web.UI.UpdatePanel> formantu, z panelu podrzędnych jest automatycznie aktualizowany po zaktualizowaniu nadrzędnej panelu.  
  
 Zawartość <xref:System.Web.UI.UpdatePanel> aktualizacji formantu w następujących okolicznościach:  
  
-   Jeśli <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, <xref:System.Web.UI.UpdatePanel> zawartość formantu jest aktualizowany co odświeżania strony, która pochodzi z dowolnego miejsca na stronie. Dotyczy to również asynchronicznego ogłaszania zwrotnego z formantami, które znajdują się wewnątrz innych <xref:System.Web.UI.UpdatePanel> kontrolek i ogłaszania zwrotnego z formantami, które nie są w <xref:System.Web.UI.UpdatePanel> kontrolki.  
  
-   Jeśli <xref:System.Web.UI.UpdatePanel> kontroli jest zagnieżdżony w innym <xref:System.Web.UI.UpdatePanel> kontroli i panelu aktualizacji nadrzędnego jest aktualizowany.  
  
-   Jeśli <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, i wystąpi jedno z następujących warunków:  
  
    -   Należy wywołać <xref:System.Web.UI.UpdatePanel.Update%2A> metody <xref:System.Web.UI.UpdatePanel> jawnie kontroli.  
  
    -   Ogłaszania zwrotnego jest spowodowany przez formant, który jest zdefiniowany jako wyzwalacz za pomocą <xref:System.Web.UI.UpdatePanel.Triggers%2A> właściwość <xref:System.Web.UI.UpdatePanel> formantu. W tym scenariuszu formantu jawnie wyzwala aktualizacji zawartości panelu. Formant może być wewnętrznego lub zewnętrznego <xref:System.Web.UI.UpdatePanel> formant, który definiuje wyzwalacza.  
  
    -   <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Właściwość jest ustawiona na `true` i podrzędne formantu <xref:System.Web.UI.UpdatePanel> formant powoduje odświeżenie strony. Formant podrzędny zagnieżdżoną <xref:System.Web.UI.UpdatePanel> formantu nie powoduje aktualizacji do zewnętrznego <xref:System.Web.UI.UpdatePanel> kontrolować, jeśli nie jest jawnie zdefiniowany jako wyzwalacz.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwości. Przykład deklaruje dwa <xref:System.Web.UI.UpdatePanel> kontrolki. W pierwszym panelu <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. W drugim panelu <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> ma ustawioną wartość <xref:System.Web.UI.UpdatePanelUpdateMode.Always>. Przycisk poza oba panele jest zarejestrowany jako kontrolkę odświeżania strony asynchroniczne przez wywołanie metody <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> metody <xref:System.Web.UI.ScriptManager> formantu. Przycisk `Click` program obsługi zdarzeń, <xref:System.Web.UI.UpdatePanel.Update%2A> wywoływana jest metoda panelu pierwszy, po upływie ponad 5 sekund od jej ostatniej aktualizacji. W tym scenariuszu Trwa aktualizowanie zawartości panelu, tylko jeśli ostatnia próba odświeżenia panelu więcej niż pięciu sekund temu. Zawartość drugiego panelu zawsze jest aktualizowana.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Określony typ nie jest jednym z <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> wartości.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>