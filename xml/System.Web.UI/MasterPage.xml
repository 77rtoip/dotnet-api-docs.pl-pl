<Type Name="MasterPage" FullName="System.Web.UI.MasterPage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55bb13b610fa7bf6f992f48f63e80fdc20570cb5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69387733" /></Metadata><TypeSignature Language="C#" Value="public class MasterPage : System.Web.UI.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MasterPage extends System.Web.UI.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.MasterPage" />
  <TypeSignature Language="VB.NET" Value="Public Class MasterPage&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class MasterPage : System::Web::UI::UserControl" />
  <TypeSignature Language="F#" Value="type MasterPage = class&#xA;    inherit UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Działa jak szablon i kontener scalania dla stron, które składają się tylko z <see cref="T:System.Web.UI.WebControls.Content" /> formantów i ich odpowiednich formantów podrzędnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Strona wzorcowa działa jako kontener szablonu i strona łączenia stron zawartości w aplikacji sieci Web ASP.NET. Strony wzorcowe zapewniają wygodny sposób udostępniania struktury i zawartości w zestawie stron zawartości. Za pomocą symboli zastępczych zawartości można definiować sekcje strony wzorcowej, które mają zostać zamienione na zawartość ze stron zawartości.  
  
 Korzystając ze strony wzorcowej i powiązanych stron zawartości, należy dodać wymagane znaczniki dokumentu XHTML (takie jak `html`, `head`i `body`) tylko do strony wzorcowej i nie tworzyć innych plików. aspx (stron ASP.NET) jako autonomicznej sieci Web Page. Strony zawartości definiują zawartość do wstawienia do symboli zastępczych na stronie wzorcowej.  
  
 Gdy żądanie HTTP jest wykonywane dla strony w czasie wykonywania, Strona wzorcowa i strony zawartości są łączone w jedną klasę o takiej samej nazwie jak strony zawartości. Wynikowa skompilowana, scalona Klasa pochodzi od <xref:System.Web.UI.Page> klasy.  
  
 Strona wzorcowa może zawierać bezpośrednie znaczniki i kontrolki serwera, a także kontrolki kontenerów. Każdy element umieszczony na stronie wzorcowej poza <xref:System.Web.UI.WebControls.ContentPlaceHolder> kontrolką jest renderowany na wszystkich stronach, które wynikają z scalania strony wzorcowej i stron zawartości.  
  
 Każda strona zawartości, która jest powiązana ze stroną wzorcową, musi odwoływać się `MasterPageFile` do strony wzorcowej w atrybucie jej dyrektywy [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) . Strony zawartości mogą zawierać tylko `@ Page` dyrektywę i co najmniej jedną <xref:System.Web.UI.WebControls.Content> kontrolkę. Wszystkie kontrolki tekstu, znaczników i serwerów stron muszą być umieszczone w <xref:System.Web.UI.WebControls.Content> kontrolkach. Użytkownik identyfikuje <xref:System.Web.UI.WebControls.ContentPlaceHolder> kontrolkę strony wzorcowej <xref:System.Web.UI.WebControls.Content> , z którą jest <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> skojarzona kontrolka przez <xref:System.Web.UI.WebControls.Content> ustawienie właściwości kontrolki.  
  
 W czasie wykonywania zawartość dynamiczna z każdej <xref:System.Web.UI.WebControls.Content> kontrolki na wybranej stronie jest scalana ze stroną wzorcową w dokładnej lokalizacji powiązanej <xref:System.Web.UI.WebControls.ContentPlaceHolder> kontroli. Nie ma to oddziaływać na wszystkie inne znaczniki i kontrolki na stronie wzorcowej. Procedury obsługi zdarzeń można definiować zarówno w klasie głównej, jak i na stronie zawartości. Aby uzyskać więcej informacji, zobacz [zdarzenia na stronach głównych ASP.NET i zawartości](https://msdn.microsoft.com/library/b3ab2d01-9e37-4788-82d0-c6065e3ff5bd).  
  
 <xref:System.Web.UI.MasterPage> Klasa jest skojarzona z plikami, które mają rozszerzenie. Master. Te pliki są kompilowane w czasie wykonywania jako <xref:System.Web.UI.MasterPage> obiekty i są buforowane w pamięci serwera.  
  
 Strona główna jest udostępniana stronie zawartości za pomocą <xref:System.Web.UI.Page.Master%2A> właściwości klasy podstawowej. <xref:System.Web.UI.Page> Właściwość zwraca wystąpienie strony wzorcowej, ale jest ona wpisana jako klasa bazowa <xref:System.Web.UI.MasterPage>. <xref:System.Web.UI.Page.Master%2A> Aby uzyskać dostęp do kontrolek, właściwości i funkcji strony wzorcowej, <xref:System.Web.UI.Page.Master%2A> właściwość może być rzutowana <xref:System.Web.UI.MasterPage> na obiekt. Nazwa klasy strony głównej jest definiowana przy użyciu `ClassName` atrybutu dyrektywy [@ Master](https://msdn.microsoft.com/library/3d263ecb-5169-4b28-8ad9-f5c82302ca99) .  
  
> [!NOTE]
>  Pliki z rozszerzeniami Master nie są obsługiwane w przeglądarce.  
  
 Dyrektywy, które są prawidłowe na stronie wzorcowej są takie same jak te, które są dostępne dla <xref:System.Web.UI.UserControl> obiektu. Mogą one zawierać następujące atrybuty:  
  
-   `AutoEventWireup`  
  
-   `ClassName`  
  
-   `CodeFile`  
  
-   `CompilerMode`  
  
-   `CompilerOptions`  
  
-   `Debug`  
  
-   `Description`  
  
-   `EnableTheming`  
  
-   `EnableViewState`  
  
-   `Explicit`  
  
-   `Inherits`  
  
-   `Language`  
  
-   `LinePragmas`  
  
-   `MasterPageFile`  
  
-   `Src`  
  
-   `Strict`  
  
-   `WarningLevel`  
  
 Dyrektywy strony wzorcowej nie przesłaniają dyrektyw na poszczególnych stronach zawartości.  
  
 Strony wzorcowe są najczęściej tworzone w sposób deklaratywny. Jeśli chcesz programowo utworzyć stronę wzorcową, utwórz ją bezpośrednio z <xref:System.Web.UI.MasterPage> klasy. Oprócz rozszerzania <xref:System.Web.UI.MasterPage> klasy należy utworzyć plik. Master, aby wizualnie wyświetlić interfejs użytkownika, który jest skojarzony z klasami, które zostały wywołane w pliku źródłowym.  
  
> [!NOTE]
>  Gdy tworzysz stronę wzorcową, tworząc najpierw własną klasę, musisz uwzględnić wszystkie przestrzenie nazw, które są wymagane dla klas, które są używane przez tę stronę.  
  
 Aby uzyskać więcej informacji na temat stron wzorcowych, zobacz [strony wzorcowe ASP.NET](https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
   
  
## Examples  
 Ta sekcja zawiera cztery przykłady kodu:  
  
-   Pierwszy przykład kodu demonstruje sposób deklaratywnego tworzenia strony wzorcowej.  
  
-   Drugi przykład kodu reprezentuje stronę zawartości skojarzoną ze stroną wzorcową utworzoną w pierwszym przykładzie kodu.  
  
-   Trzeci przykład kodu demonstruje, jak dodać właściwość do strony wzorcowej.  
  
-   W czwartym przykładzie kodu pokazano, jak za pomocą strony zawartości uzyskać dostęp do właściwości publicznej na stronie wzorcowej.  
  
 Poniższy przykład pokazuje, jak utworzyć stronę wzorcową w sposób deklaratywny i dodać do niej zawartość przy użyciu strony zawartości. Pierwsza strona sieci Web to strona wzorcowa o nazwie `MasterPageSample_1.master`.  
  
```csharp  
<%@ Master Language="C#" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server" />  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Poniższy przykład przedstawia stronę zawartości, która jest skojarzona z `MasterPageSample_1.master`. Zawiera <xref:System.Web.UI.WebControls.Content> kontrolkę i <xref:System.Web.UI.WebControls.ContentPlaceHolder> identyfikuje kontrolkę, z którą zawartość jest <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> skojarzona przy użyciu właściwości.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPageSample_1cs.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPageSample_1vb.master" Title="Content Page"%>  
  
<asp:content   
    runat="server"  
    contentplaceholderid="ContentPlaceHolder1" >Hello, Master Pages!</asp:content>  
```  
  
 Poniższy przykład pokazuje, jak dodać właściwość do strony wzorcowej. Ten `ClassName` atrybut służy do nanadaj nazwę stronie wzorcowej.  
  
```csharp  
<%@ Master Language="C#" ClassName="MasterExample" %>  
  
<script runat="server">  
        public string SiteName  
        {  
            get { return "My Site Name"; }  
        }  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" ClassName="MasterExample" %>  
  
<script runat="server">  
  Public ReadOnly Property SiteName() As String  
    Get  
      Return "My Site Name"  
    End Get  
  End Property  
  
</script>  
  
<html >  
<head runat="server">  
    <title>MasterPage Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Poniższy przykład pokazuje, jak używać strony zawartości, aby uzyskać dostęp do właściwości `SiteName` publicznej na stronie wzorcowej w poprzednim przykładzie kodu.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  protected void Page_Load(object sender, EventArgs e)  
  {  
    MasterExample m = (MasterExample)Page.Master;  
    mylabel.Text = m.SiteName;  
  }  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/MasterPage.master" Title="MasterPage Example" %>  
  
<script runat="server">  
  
  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  
    Dim m As MasterExample = CType(Page.Master, MasterPage)  
    mylabel.Text = m.SiteName  
  End Sub  
</script>  
  
<asp:Content ID="Content1" ContentPlaceHolderID="ContentPlaceHolder1" runat="Server">  
    Hello, Master Pages!  
    <asp:Label runat="server" Text="Label" ID="mylabel"></asp:Label>  
</asp:Content>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.MasterPageControlBuilder" />
    <altmember cref="T:System.Web.UI.WebControls.ContentPlaceHolder" />
    <altmember cref="T:System.Web.UI.WebControls.Content" />
    <altmember cref="T:System.Web.UI.UserControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b">ASP.NET strony wzorcowe — Omówienie</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Zagnieżdżone strony wzorcowe</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MasterPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MasterPage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.Web.UI.MasterPage" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.AddContentTemplate : string * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.AddContentTemplate (templateName, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" />
      </Parameters>
      <Docs>
        <param name="templateName">Unikatowa nazwa <see cref="T:System.Web.UI.WebControls.Content" />.</param>
        <param name="template"><see cref="T:System.Web.UI.WebControls.Content" />.</param>
        <summary>Dodaje kontrolkę do <see cref="P:System.Web.UI.MasterPage.ContentTemplates" />słownika. <see cref="T:System.Web.UI.WebControls.Content" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pochodne klasy stron głównych mogą dodawać <xref:System.Web.UI.WebControls.Content> kontrolki <xref:System.Web.UI.MasterPage.ContentTemplates%2A> do słownika przy użyciu <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> metody. Typy pochodne nie przesłaniają <xref:System.Web.UI.MasterPage.AddContentTemplate%2A> zazwyczaj metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Kontrolka o tej samej nazwie już istnieje <see cref="P:System.Web.UI.MasterPage.ContentTemplates" /> w słowniku. <see cref="T:System.Web.UI.WebControls.Content" /></exception>
        <altmember cref="P:System.Web.UI.MasterPage.ContentTemplates" />
      </Docs>
    </Member>
    <Member MemberName="ContentPlaceHolders">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IList ContentPlaceHolders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ContentPlaceHolders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentPlaceHolders As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IList ^ ContentPlaceHolders { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentPlaceHolders : System.Collections.IList" Usage="System.Web.UI.MasterPage.ContentPlaceHolders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> kontrolek używanych przez stronę wzorcową do definiowania różnych obszarów zawartości.</summary>
        <value>Kontrolki, które są używane przez stronę wzorcową jako symbole <see cref="T:System.Web.UI.WebControls.Content" /> zastępcze dla formantów znalezionych na stronach zawartości. <see cref="T:System.Collections.IList" /> <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy pochodnej strony wzorcowej <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> uzyskują dostęp do właściwości <xref:System.Web.UI.WebControls.ContentPlaceHolder> , aby wyświetlić listę bieżących formantów, które są zawarte w wzorcu. Typy pochodne nie przesłaniają <xref:System.Web.UI.MasterPage.ContentPlaceHolders%2A> zazwyczaj właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentTemplates">
      <MemberSignature Language="C#" Value="protected internal System.Collections.IDictionary ContentTemplates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary ContentTemplates" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.ContentTemplates" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ContentTemplates As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Collections::IDictionary ^ ContentTemplates { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentTemplates : System.Collections.IDictionary" Usage="System.Web.UI.MasterPage.ContentTemplates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę kontrolek zawartości skojarzonych ze stroną wzorcową.</summary>
        <value><see cref="T:System.Collections.IList" /> Kontrolki zawartości skojarzone ze stroną wzorcową.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy pochodnej strony wzorcowej <xref:System.Web.UI.MasterPage.ContentTemplates%2A> uzyskują dostęp do właściwości <xref:System.Web.UI.WebControls.Content> , aby pobrać bieżące kontrolki zdefiniowane przez skojarzone strony zawartości. Typy pochodne nie przesłaniają <xref:System.Web.UI.MasterPage.ContentTemplates%2A> zazwyczaj właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantiateInContentPlaceHolder">
      <MemberSignature Language="C#" Value="public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstantiateInContentPlaceHolder(class System.Web.UI.Control contentPlaceHolder, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstantiateInContentPlaceHolder (contentPlaceHolder As Control, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstantiateInContentPlaceHolder(System::Web::UI::Control ^ contentPlaceHolder, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.InstantiateInContentPlaceHolder : System.Web.UI.Control * System.Web.UI.ITemplate -&gt; unit" Usage="masterPage.InstantiateInContentPlaceHolder (contentPlaceHolder, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentPlaceHolder" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="contentPlaceHolder">Kontrolka reprezentująca kontener zawartości.</param>
        <param name="template">Wystąpienie <see cref="T:System.Web.UI.WebControls.Content" /> , które ma być używane.</param>
        <summary>Udostępnia metodę, aby ustawić bieżący formant szablonu na stronę, która jest właścicielem strony wzorcowej.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Master : System.Web.UI.MasterPage" Usage="System.Web.UI.MasterPage.Master" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nadrzędną stronę wzorcową bieżącego wzorca w scenariuszach zagnieżdżonych stron wzorcowych.</summary>
        <value>Strona wzorcowa, która jest elementem nadrzędnym bieżącej strony wzorcowej; w przeciwnym razie, jeśli bieżąca strona wzorcowa nie ma elementu nadrzędnego. <see langword="null" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość <xref:System.Web.UI.MasterPage.Master%2A> jest tylko do odczytu, ponieważ hierarchie stron głównych nie mogą być kompilowane w czasie wykonywania.  
  
   
  
## Examples  
 Ta sekcja zawiera trzy przykłady kodu. Pierwszy przykład kodu demonstruje, jak utworzyć zagnieżdżoną stronę`.` wzorcową drugi przykład kodu demonstruje, jak odwołać się do strony wzorcowej, która została utworzona w pierwszym przykładzie kodu. Trzeci przykład kodu demonstruje, jak używać strony zawartości do odwoływania się do strony wzorcowej, która została utworzona w drugim przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje, jak utworzyć zagnieżdżoną stronę wzorcową i reprezentuje nadrzędną stronę wzorcową `ParentMasterPage_1`o nazwie.  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Poniższy przykład kodu demonstruje, jak używać zagnieżdżonej strony wzorcowej o `ChildMasterPage_1` nazwie, która odwołuje się do strony wzorcowej, która została utworzona w poprzednim przykładzie kodu.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 Poniższy przykład kodu ilustruje sposób używania strony zawartości o nazwie `ContentPage` , która odwołuje się do programu `ChildMasterPage_1` , który został utworzony w poprzednim przykładzie kodu.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Zagnieżdżone strony wzorcowe</related>
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.MasterPage.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.UI.MasterPage.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę strony wzorcowej zawierającej bieżącą zawartość.</summary>
        <value>Nazwa strony wzorcowej, która jest elementem nadrzędnym bieżącej strony wzorcowej; w przeciwnym razie, jeśli bieżąca strona wzorcowa nie ma elementu nadrzędnego. <see langword="null" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ta sekcja zawiera trzy przykłady kodu. Pierwszy przykład kodu demonstruje, jak utworzyć zagnieżdżoną stronę`.` wzorcową drugi przykład kodu demonstruje, jak odwołać się do strony wzorcowej, która została utworzona w pierwszym przykładzie kodu. Trzeci przykład kodu demonstruje, jak używać strony zawartości do odwoływania się do strony wzorcowej, która została utworzona w drugim przykładzie kodu.  
  
 Poniższy przykład kodu pokazuje, jak utworzyć zagnieżdżoną stronę wzorcową i reprezentuje nadrzędną stronę wzorcową `ParentMasterPage_1`o nazwie.  
  
```csharp  
<%@ Master Language="C#" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
```vb  
<%@ Master Language="VB" %>  
  
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">  
  
<html >  
<head runat="server">  
    <title>Nested Master Page Example</title>  
</head>  
<body>  
    <form id="form1" runat="server">  
    <h1>This is content in the parent master page.</h1>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder1" runat="server">  
        </asp:contentplaceholder>  
    </div>  
    </form>  
</body>  
</html>  
```  
  
 Poniższy przykład kodu demonstruje, jak używać zagnieżdżonej strony wzorcowej o `ChildMasterPage_1` nazwie, która odwołuje się do strony wzorcowej, która została utworzona w poprzednim przykładzie kodu.  
  
```csharp  
<%@ Master Language="C#" MasterPageFile="~/ParentMasterPage_1cs.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
```vb  
<%@ Master Language="VB" MasterPageFile="~/ParentMasterPage_1vb.master" %>  
  
<asp:Content Runat="Server" ContentPlaceHolderID="ContentPlaceHolder1">  
    <h2>This is the content of a nested Master Page.</h2>  
    <div>  
        <asp:contentplaceholder id="ContentPlaceHolder2" runat="server">  
        </asp:contentplaceholder>  
    </div>  
</asp:Content>  
```  
  
 Poniższy przykład kodu ilustruje sposób używania strony zawartości o nazwie `ContentPage` , która odwołuje się do programu `ChildMasterPage_1` , który został utworzony w poprzednim przykładzie kodu.  
  
```csharp  
<%@ Page Language="C#" MasterPageFile="~/ChildMasterPage_1cs.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
```vb  
<%@ Page Language="VB" MasterPageFile="~/ChildMasterPage_1vb.master" Title="Untitled Page"%>  
  
<asp:content runat="server" contentplaceholderid="ContentPlaceHolder2">  
This is the content of a Content control.  
</asp:content>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Właściwość można ustawić tylko w zdarzeniu lub przed nim <see cref="E:System.Web.UI.Page.PreInit" />. <see cref="P:System.Web.UI.MasterPage.MasterPageFile" /></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ec29afad-b7f5-4c58-a4db-b538dbfcea1b">Zagnieżdżone strony wzorcowe</related>
      </Docs>
    </Member>
  </Members>
</Type>
