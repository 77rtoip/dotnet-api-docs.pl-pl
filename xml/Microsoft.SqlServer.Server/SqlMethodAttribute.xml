<Type Name="SqlMethodAttribute" FullName="Microsoft.SqlServer.Server.SqlMethodAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="932e3af089d010f4578e488cfc1b3ae44c390913" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52915630" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlMethodAttribute extends Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlMethodAttribute&#xA;Inherits SqlFunctionAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMethodAttribute sealed : Microsoft::SqlServer::Server::SqlFunctionAttribute" />
  <TypeSignature Language="F#" Value="type SqlMethodAttribute = class&#xA;    inherit SqlFunctionAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Server.SqlFunctionAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-2.2">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje determinizm danych dostęp do właściwości i metody lub właściwości w typ zdefiniowany przez użytkownika (UDT). Właściwości w atrybucie odzwierciedlają właściwości fizyczne, które są używane, gdy ten typ jest zarejestrowany w programie SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla właściwości <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> powinien być używany bezpośrednio na metody ustawiającej lub metody pobierającej.  
  
 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> dziedziczy <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, więc <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> dziedziczy `FillRowMethodName` i `TableDefinition` pola z <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>. Należy pamiętać, że nie umożliwiają napisanie metody wartościami przechowywanymi w tabeli, mimo że nazwy tych pól mogą wskazywać, że jest to możliwe.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano metodę UDT, która jest związana, aby wskazać, że metoda nie zostaną wywołane na wystąpieniach o wartości null typu, metoda nie spowoduje zmiany stanu typu i że metody nie zostanie wywołany, gdy `null` parametry są dostarczony do wywołania metody.  
  
 [!code-csharp[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Atrybut na typ zdefiniowany przez użytkownika (UDT) używany do wskazania determinizm danych dostęp do właściwości i metody lub właściwości UDT.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIfReceiverIsNull">
      <MemberSignature Language="C#" Value="public bool InvokeIfReceiverIsNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeIfReceiverIsNull" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberSignature Language="VB.NET" Value="Public Property InvokeIfReceiverIsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeIfReceiverIsNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InvokeIfReceiverIsNull : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy program SQL Server, należy wywołać metodę na wystąpieniach o wartości null.</summary>
        <value>
          <see langword="true" /> Jeśli program SQL Server, należy wywołać metodę na wystąpieniach o wartości null; w przeciwnym razie <see langword="false" />. Jeśli metoda nie może być wywołana (ze względu na atrybut metody) programu SQL Server <see langword="DbNull" /> jest zwracana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartością domyślną dla <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> właściwość `false`.  
  
 Oznacza to, że metoda nie jest wywoływane na wystąpienie o wartości null. Jeśli <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> ma wartość true, wartość zwracana przez metoda zależy od jego typu. Jeśli typ zwracany metody ma wartość null, zwracany jest wyróżniającą wartości null dla typu. Jeśli typ zwracany jest wartość null, jest zwracana wartość domyślna CLR dla typu. Wartość domyślna dla typów odwołań ma wartość null. Wartość domyślna dla typu wartości to wartość, która jest zwracana, gdy wywołujesz Konstruktor domyślny dla danego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutator">
      <MemberSignature Language="C#" Value="public bool IsMutator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMutator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMutator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMutator : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy metody na typ zdefiniowany przez użytkownika (UDT) to metoda ustawiająca.</summary>
        <value>
          <see langword="true" /> Jeśli metoda ustawiająca; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> właściwość jest ustawiona na `true` i typ zwracany metody jest `void`, programu SQL Server oznacza metodę jako metoda ustawiająca. Metoda ustawiająca to taki, który powoduje, że zmiany stanu w wystąpieniu UDT. Metody ustawiającej można wywołać w instrukcji przypisania lub instrukcje modyfikacji danych, ale nie można używać w zapytaniach. Jeśli metoda jest oznaczona jako metoda ustawiająca, ale nie może zwracać typ void, następnie CREATE TYPE nie kończą się niepowodzeniem z powodu błędu. Mimo że zwróconego wartość inną niż `void` ma Zgłoś błąd, zwracana wartość nie jest dostępny i nie można używać.  
  
 Wartość domyślna <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> właściwość `false`.  
  
 Właściwość może być ustawiająca, jeśli <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> jest używana na metody ustawiającej oraz <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> ustawiono `true`. Jednak metoda ustawiająca właściwości niejawnie jest traktowany jako ustawiająca, więc nie można ustawić <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> właściwość <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> do `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNullCall">
      <MemberSignature Language="C#" Value="public bool OnNullCall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OnNullCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberSignature Language="VB.NET" Value="Public Property OnNullCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OnNullCall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OnNullCall : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy metoda na typ zdefiniowany przez użytkownika (UDT) jest wywoływana, gdy <see langword="null" /> argumenty wejściowe są określone w wywołaniu metody.</summary>
        <value>
          <see langword="true" /> Jeśli metoda jest wywoływana, gdy <see langword="null" /> argumenty wejściowe są określone w wywołaniu metody; <see langword="false" /> Jeśli metoda zwraca <see langword="null" /> wartości w przypadku spełnienia dowolnego z jego parametrów wejściowych <see langword="null" />. Jeśli metoda nie może być wywołana (ze względu na atrybut metody) programu SQL Server <see langword="DbNull" /> jest zwracana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> właściwość `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>