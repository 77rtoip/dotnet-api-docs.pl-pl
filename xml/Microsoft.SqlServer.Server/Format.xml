<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ffca0cda31e32a79ce7ab852c13be008741be0df" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303797" /></Metadata><TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Używane przez <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> i <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> do wskazywania formatu serializacji typu zdefiniowanego przez użytkownika (UDT) lub agregacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

To wyliczenie jest używane przez <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> program <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> i do wskazywania formatu serializacji typu zdefiniowanego przez użytkownika (UDT) lub agregacji. `Native` Użycie i `UserDefined` składowe wyliczenia ma specjalne wymagania.   

- `Format.Native`

   Wymagania dotyczące `Format.Native` formatu są następujące:  
  
   - Wartość <xref:System.Runtime.InteropServices.StructLayoutAttribute> właściwości<xref:System.Runtime.InteropServices.StructLayoutAttribute.Value> with musibyćstosowanadoagregacjilubUDT,jeślijestzdefiniowanawklasie,aniewstrukturze.<xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> Steruje fizycznym układem pól danych i służy do wymuszania, aby elementy członkowskie były ułożone sekwencyjnie w kolejności, w jakiej się pojawiają. SQL Server używa tego atrybutu do określenia kolejności pól dla UDTs z wieloma polami.
  
   - Typ musi zawierać co najmniej jeden element członkowski (wartości serializowane nie mogą mieć zerowego rozmiaru).  
  
   - Wszystkie pola zagregowane muszą być *danych kopiowalnych*; oznacza to, że muszą mieć wspólną reprezentację w pamięci zarządzanej i niezarządzanej, a nie wymagać specjalnej obsługi przez organizatora międzyoperacyjności.  
  
   - Wszystkie pola `bool`UDT powinny mieć jeden z następujących typów, które mogą być serializowane:, `ulong` `byte` `sbyte` `short` `uint`, `long` `ushort` `int` `float` ,,,,,, , `double` ,<xref:System.Data.SqlTypes.SqlByte> ,,<xref:System.Data.SqlTypes.SqlSingle>,, ,<xref:System.Data.SqlTypes.SqlMoney>,, lub inne typy wartości zdefiniowane przez użytkownika zawierające pola jednego z tych <xref:System.Data.SqlTypes.SqlDouble> <xref:System.Data.SqlTypes.SqlInt16> <xref:System.Data.SqlTypes.SqlInt32> <xref:System.Data.SqlTypes.SqlInt64> <xref:System.Data.SqlTypes.SqlDateTime> Typ.  

   - Wartość zagregowana nie może określać wartości `MaxByteSize`dla elementu.  
  
   - Wartość zagregowana nie może zawierać żadnych pól [nieserializowanych].  
  
   - Pola nie mogą być oznaczone jako jawny układ (z <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value?displayProperty=nameWithType> <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>).  

- `Format.UserDefined`

   Wymagania dotyczące `Format.UserDefined` formatu są następujące:

   - Agregacja musi określać wartość dla `MaxByteSize`.  
  
   - Określ właściwość <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A?displayProperty=nameWithType> atrybutu. Wartość domyślna to `false`.  
  
   - Jeśli pominięto dowolne pole w <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A?displayProperty=nameWithType> metodach lub <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A?displayProperty=nameWithType> , stan tego pola nie jest serializowany.  

## Examples  

Poniższy przykład pokazuje `UserDefinedType` atrybut typu UDT.  Typ UDT jest uporządkowany według bajtów, nosi nazwę "punkt", ma metodę walidacji o nazwie "ValidatePoint" i używa natywnego formatu serializacji.  
  
[!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
[!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Ten format serializacji korzysta z bardzo prostego algorytmu, który umożliwia SQL Server przechowywanie wydajnej reprezentacji UDT na dysku. Typy oznaczone <see langword="Native" /> jako serializacji mogą mieć tylko typy wartości (struktury w wizualizacji C# firmy Microsoft i struktury w programie Microsoft Visual Basic .NET) jako elementy członkowskie. Elementy członkowskie typów referencyjnych (takich jak klasy w C# wizualizacji i Visual Basic), zdefiniowane przez użytkownika lub ich istniejące w bibliotekach klas .NET ( <see cref="T:System.String" />takich jak), nie są obsługiwane.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Format serializacji jest nieznany.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Ten format serializacji daje deweloperowi pełną kontrolę nad formatem binarnym przy użyciu <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" /> metod i. <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" /></summary>
      </Docs>
    </Member>
  </Members>
</Type>
