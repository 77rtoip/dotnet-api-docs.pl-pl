<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd9c1fc1b5723f61f024c92ca6a14964911295d9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36661568" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Używane przez <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> i <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> wskazująca format serializacji typu zdefiniowanego przez użytkownika (UDT) lub agregacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używane przez <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> i <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> wskazująca format serializacji typu zdefiniowanego przez użytkownika (UDT) lub agregacji.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono `UserDefinedType` atrybutu UDT punktu.  UDT jest uporządkowana bajt, nosi nazwę "Punkt" ma metodę sprawdzania poprawności o nazwie "ValidatePoint" i używa formatu serializacji natywnej.  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see langword="Native" /> Format serializacji stosowany jest algorytm bardzo proste, umożliwiającą programu SQL Server do przechowywania wydajne reprezentację UDT na dysku. Typy oznaczone do <see langword="Native" /> serializacji może mieć tylko typy wartości (struktur w programie Microsoft Visual C#) i struktur w programie Microsoft Visual Basic .NET jako elementy członkowskie. Elementy członkowskie odwołania do typów (takich jak klasy w Visual C# i Visual Basic), jest zdefiniowana przez użytkownika lub obowiązującymi w ramach (takie jak <see cref="T:System.String" />), nie są obsługiwane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wymagania dotyczące tego formatu są:  
  
-   `StructLayout.LayoutKindSequential` Musi zostać zastosowany atrybut do agregacji lub UDT, jeśli jest on zdefiniowany w klasie i nie struktury. Określa fizyczny układ pól danych i jest używany do wymuszania członkowie mają być określone sekwencyjnie w kolejności ich występowania. Program SQL Server używa tego atrybutu, aby określić kolejność pól dla typów z wielu pól.  
  
-   Typ musi zawierać co najmniej jeden element członkowski (serializacji wartości nie mogą być rozmiarze zero bajtów).  
  
-   Wszystkie pola agregacji musi być *kopiowalne*, to, że musi mieć wspólne reprezentacji w pamięci zarządzane i niezarządzane i nie wymagają specjalnej obsługi przez organizatora międzyoperacyjnego.  
  
-   Wszystkie pola typu powinny być jednego z następujących typów, które można serializować: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float` , `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, lub inne typy wartości zdefiniowanych przez użytkownika, które zawiera jeden z tych pól typy.  
  
-   Agregacji nie należy określić wartość dla `MaxByteSize`.  
  
-   Agregacji nie może mieć żadnych pól [NonSerialized].  
  
-   Pola nie może być oznaczona jako układ jawny (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Format serializacji jest nieznany.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see langword="UserDefined" /> Zapewnia format serializacji dewelopera pełną kontrolę nad format binarny za pośrednictwem <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> i <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Agregacji należy określić wartość dla `MaxByteSize`.  
  
 Określ <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> właściwością atrybutu. Wartość domyślna to false.  
  
 W przypadku pominięcia którekolwiek z pól w <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> lub <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> metod, stan tego pola nie jest serializowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>