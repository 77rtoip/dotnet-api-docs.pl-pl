<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d81fff2e49c763810252a9fac6a775c1d5d70824" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30431352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Używany do oznaczania definicja typu w zestawie jako typ zdefiniowany przez użytkownika (UDT) w programie SQL Server. Właściwości w ustawieniach atrybutu odzwierciedlają charakterystyki fizycznej używany, gdy typ jest zarejestrowany na serwerze SQL. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program SQL Server tworzy typu zdefiniowane przez użytkownika, który jest powiązany z definicji typu, który ma <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> atrybutu niestandardowego. Każdy UDT musi być adnotowany przy tego atrybutu. Zobacz [typy CLR User-Defined](http://go.microsoft.com/fwlink/?LinkId=128028) uzyskać więcej informacji na temat typów, w tym przykładzie UDT.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono `UserDefinedType` atrybutu UDT punktu.  UDT jest uporządkowana bajt, nosi nazwę "Punkt" ma metodę sprawdzania poprawności o nazwie "ValidatePoint" i używa formatu serializacji natywnej.  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format">Jeden z <see cref="T:Microsoft.SqlServer.Server.Format" /> reprezentujący format serializacji typu wartości.</param>
        <summary>Wymaganego atrybutu w typie zdefiniowane przez użytkownika (UDT) używane do upewnij się, że podany typ jest UDT i oznaczać format przechowywania typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład określa, że `Format` typ zdefiniowany przez użytkownika jest `SerializedDataWithMetadata` i `MaxByteSize` jest 8000 bajtów.  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Format serializacji jako <see cref="T:Microsoft.SqlServer.Server.Format" />.</summary>
        <value>A <see cref="T:Microsoft.SqlServer.Server.Format" /> wartość reprezentującą format serializacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy typ zdefiniowany przez użytkownika jest uporządkowany bajtów.</summary>
        <value>
          <see langword="true" /> Jeśli typ zdefiniowany przez użytkownika jest bajtów uporządkowane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość `true`, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> właściwości skutkuje gwarantuje, że serializowane dane binarne może służyć do porządkowania semantycznego informacji. W związku z tym każde wystąpienie obiektu UDT uporządkowane bajtów może mieć tylko jeden zserializowana reprezentacja. Po wykonaniu operacji porównania w programie SQL Server na bajty serializacji wyniki powinna być taka sama tak, jakby tej samej operacji porównania miały miejsce w kodzie zarządzanym.  
  
 Następujące funkcje są obsługiwane podczas <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> ma ustawioną wartość `true`:  
  
-   Możliwość tworzenia indeksów w kolumnach tego typu.  
  
-   Możliwość tworzenia klucze podstawowe i obce, a także ograniczenia CHECK i unikatowe kolumny tego typu.  
  
-   Możliwość używania klauzule języka Transact-SQL ORDER BY, GROUP BY i PARTITION BY. W takich przypadkach binarna reprezentacja typu służy do określania kolejności.  
  
-   Możliwość używania operatory porównania w instrukcji języka Transact-SQL.  
  
-   Zdolność do utrwalenia kolumn obliczanych tego typu.  
  
 Należy pamiętać, że zarówno `Native` i `UserDefined` formatów serializacji obsługuje następujące operatory porównania podczas <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> ma ustawioną wartość `true`:  
  
-   Równa się (=)  
  
-   Nie równa się (!=)  
  
-   Większości (>)  
  
-   Mniej niż (\<)  
  
-   Większe lub równe (> =)  
  
-   Mniejsze niż lub równe (< =)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy wszystkie wystąpienia tego typu użytkownika mają taką samą długość.</summary>
        <value>
          <see langword="true" /> Jeśli wszystkie wystąpienia tego typu są taką samą długość; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawiono `true`, wszystkich wystąpień typów odpowiadający to wspólny typ środowiska uruchomieniowego (języka wspólnego CLR) języka musi mieć długość w bajtach dokładnie takie same, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>. Ten atrybut ma zastosowanie tylko dla typów z `UserDefined` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maksymalny rozmiar w bajtach wystąpienia.</summary>
        <value>
          <see cref="T:System.Int32" /> Wartość reprezentującą maksymalny rozmiar wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy określić <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> właściwości o `UserDefined` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.  
  
 Podczas nawiązywania połączenia do programu SQL Server 2005 lub wcześniej, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> musi należeć do zakresu od 1 do 8000.  
  
 Podczas nawiązywania połączenia do programu SQL Server 2008 lub nowszego, należy ustawić <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> od 1 do 8000, dla typu, których wystąpienia są zawsze 8000 bajtów lub mniej. Dla typów, które mogą mieć większe niż 8000 wystąpień Określ wartość -1.  
  
 Dla UDT serializacji zdefiniowanej przez użytkownika jest określony <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> odwołuje się do całkowitego rozmiaru UDT w postaci serializacji zdefiniowanej przez użytkownika. Należy wziąć pod uwagę UDT z właściwością w ciągu 10 znaków (<xref:System.Char>). Gdy UDT jest zserializowanym przy użyciu <xref:System.IO.BinaryWriter>, całkowity rozmiar serializowanego ciągu jest 22 bajtów: 2 bajtów na znak Unicode UTF-16, pomnożona przez maksymalną liczbę znaków, a także 2 kontrolka bajtów koszty związane z serializacji binarnej strumienia. Tak, określając wartość <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, muszą być traktowane jako całkowity rozmiar serializowanego UDT: rozmiar danych zserializowanym w formacie binarnym plus koszty ponoszone przez serializacji.  
  
 Ta właściwość nie powinien być używany z `Native` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nazwa programu SQL Server typu zdefiniowanego przez użytkownika.</summary>
        <value>A <see cref="T:System.String" /> wartość reprezentującą nazwę serwera SQL typu zdefiniowanego przez użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> Właściwość nie jest używany w programie SQL Server, ale jest używany przez program Microsoft Visual Studio .NET Development środowiska IDE (Integrated).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nazwa metody używany w celu zweryfikowania wystąpienia typu zdefiniowanego przez użytkownika.</summary>
        <value>A <see cref="T:System.String" /> reprezentujący nazwę metody używany w celu zweryfikowania wystąpienia typu zdefiniowanego przez użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z metodą określoną przez atrybut weryfikuje wystąpienia typu podczas UDT ma zostały przeprowadzić deserializacji wartości binarnej, który nie jest zaufany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>