<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c8dc0-101">Używany do oznaczania definicja typu w zestawie jako typ zdefiniowany przez użytkownika (UDT) w programie SQL Server.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-101">Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</span></span> <span data-ttu-id="c8dc0-102">Właściwości w ustawieniach atrybutu odzwierciedlają charakterystyki fizycznej używany, gdy typ jest zarejestrowany na serwerze SQL.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-102">The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</span></span> <span data-ttu-id="c8dc0-103">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dc0-104">Program SQL Server tworzy typu zdefiniowane przez użytkownika, który jest powiązany z definicji typu, który ma <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> atrybutu niestandardowego.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-104">SQL Server creates a user-defined type that is bound to the type definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> custom attribute.</span></span> <span data-ttu-id="c8dc0-105">Każdy UDT musi być adnotowany przy tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-105">Every UDT must be annotated with this attribute.</span></span> <span data-ttu-id="c8dc0-106">Zobacz [typy CLR User-Defined](http://go.microsoft.com/fwlink/?LinkId=128028) uzyskać więcej informacji na temat typów, w tym przykładzie UDT.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-106">See [CLR User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8dc0-107">W poniższym przykładzie przedstawiono `UserDefinedType` atrybutu UDT punktu.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-107">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="c8dc0-108">UDT jest uporządkowana bajt, nosi nazwę "Punkt" ma metodę sprawdzania poprawności o nazwie "ValidatePoint" i używa formatu serializacji natywnej.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-108">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="c8dc0-109">Jeden z <see cref="T:Microsoft.SqlServer.Server.Format" /> reprezentujący format serializacji typu wartości.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-109">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</span></span></param>
        <summary><span data-ttu-id="c8dc0-110">Wymaganego atrybutu w typie zdefiniowane przez użytkownika (UDT) używane do upewnij się, że podany typ jest UDT i oznaczać format przechowywania typu.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-110">A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dc0-111">Poniższy przykład określa, że `Format` typ zdefiniowany przez użytkownika jest `SerializedDataWithMetadata` i `MaxByteSize` jest 8000 bajtów.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-111">The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata` and the `MaxByteSize` is 8000 bytes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8dc0-112">Format serializacji jako <see cref="T:Microsoft.SqlServer.Server.Format" />.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-112">The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</span></span></summary>
        <value><span data-ttu-id="c8dc0-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> wartość reprezentującą format serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8dc0-114">Wskazuje, czy typ zdefiniowany przez użytkownika jest uporządkowany bajtów.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-114">Indicates whether the user-defined type is byte ordered.</span></span></summary>
        <value>
          <span data-ttu-id="c8dc0-115"><see langword="true" /> Jeśli typ zdefiniowany przez użytkownika jest bajtów uporządkowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-115"><see langword="true" /> if the user-defined type is byte ordered; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dc0-116">Jeśli wartość `true`, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> właściwości skutkuje gwarantuje, że serializowane dane binarne może służyć do porządkowania semantycznego informacji.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-116">When set to `true`, the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</span></span> <span data-ttu-id="c8dc0-117">W związku z tym każde wystąpienie obiektu UDT uporządkowane bajtów może mieć tylko jeden zserializowana reprezentacja.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-117">Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</span></span> <span data-ttu-id="c8dc0-118">Po wykonaniu operacji porównania w programie SQL Server na bajty serializacji wyniki powinna być taka sama tak, jakby tej samej operacji porównania miały miejsce w kodzie zarządzanym.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-118">When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..</span></span>  
  
 <span data-ttu-id="c8dc0-119">Następujące funkcje są obsługiwane podczas <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> ma ustawioną wartość `true`:</span><span class="sxs-lookup"><span data-stu-id="c8dc0-119">The following features are supported when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="c8dc0-120">Możliwość tworzenia indeksów w kolumnach tego typu.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-120">The ability to create indexes on columns of this type.</span></span>  
  
-   <span data-ttu-id="c8dc0-121">Możliwość tworzenia klucze podstawowe i obce, a także ograniczenia CHECK i unikatowe kolumny tego typu.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-121">The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</span></span>  
  
-   <span data-ttu-id="c8dc0-122">Możliwość używania klauzule języka Transact-SQL ORDER BY, GROUP BY i PARTITION BY.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-122">The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</span></span> <span data-ttu-id="c8dc0-123">W takich przypadkach binarna reprezentacja typu służy do określania kolejności.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-123">In these cases, the binary representation of the type is used to determine the order.</span></span>  
  
-   <span data-ttu-id="c8dc0-124">Możliwość używania operatory porównania w instrukcji języka Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-124">The ability to use comparison operators in Transact-SQL statements.</span></span>  
  
-   <span data-ttu-id="c8dc0-125">Zdolność do utrwalenia kolumn obliczanych tego typu.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-125">The ability to persist computed columns of this type.</span></span>  
  
 <span data-ttu-id="c8dc0-126">Należy pamiętać, że zarówno `Native` i `UserDefined` formatów serializacji obsługuje następujące operatory porównania podczas <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> ma ustawioną wartość `true`:</span><span class="sxs-lookup"><span data-stu-id="c8dc0-126">Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="c8dc0-127">Równa się (=)</span><span class="sxs-lookup"><span data-stu-id="c8dc0-127">Equal to (=)</span></span>  
  
-   <span data-ttu-id="c8dc0-128">Nie równa się (!=)</span><span class="sxs-lookup"><span data-stu-id="c8dc0-128">Not equal to (!=)</span></span>  
  
-   <span data-ttu-id="c8dc0-129">Większości (>)</span><span class="sxs-lookup"><span data-stu-id="c8dc0-129">Greater than (>)</span></span>  
  
-   <span data-ttu-id="c8dc0-130">Mniej niż (\<)</span><span class="sxs-lookup"><span data-stu-id="c8dc0-130">Less than (\<)</span></span>  
  
-   <span data-ttu-id="c8dc0-131">Większe lub równe (> =)</span><span class="sxs-lookup"><span data-stu-id="c8dc0-131">Greater than or equal to (>=)</span></span>  
  
-   <span data-ttu-id="c8dc0-132">Mniejsze niż lub równe (< =)</span><span class="sxs-lookup"><span data-stu-id="c8dc0-132">Less than or equal to (<=)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8dc0-133">Wskazuje, czy wszystkie wystąpienia tego typu użytkownika mają taką samą długość.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-133">Indicates whether all instances of this user-defined type are the same length.</span></span></summary>
        <value>
          <span data-ttu-id="c8dc0-134"><see langword="true" /> Jeśli wszystkie wystąpienia tego typu są taką samą długość; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-134"><see langword="true" /> if all instances of this type are the same length; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dc0-135">Jeśli ustawiono `true`, wszystkich wystąpień typów odpowiadający to wspólny typ środowiska uruchomieniowego (języka wspólnego CLR) języka musi mieć długość w bajtach dokładnie takie same, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-135">If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span></span> <span data-ttu-id="c8dc0-136">Ten atrybut ma zastosowanie tylko dla typów z `UserDefined` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-136">This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8dc0-137">Maksymalny rozmiar w bajtach wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-137">The maximum size of the instance, in bytes.</span></span></summary>
        <value><span data-ttu-id="c8dc0-138"><see cref="T:System.Int32" /> Wartość reprezentującą maksymalny rozmiar wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-138">An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dc0-139">Należy określić <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> właściwości o `UserDefined` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-139">You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 <span data-ttu-id="c8dc0-140">Podczas nawiązywania połączenia do programu SQL Server 2005 lub wcześniej, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> musi należeć do zakresu od 1 do 8000.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-140">When connecting to SQL Server 2005 or earlier, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> must be between 1 and 8000.</span></span>  
  
 <span data-ttu-id="c8dc0-141">Podczas nawiązywania połączenia do programu SQL Server 2008 lub nowszego, należy ustawić <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> od 1 do 8000, dla typu, których wystąpienia są zawsze 8000 bajtów lub mniej.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-141">When connecting to SQL Server 2008 or later, set <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</span></span> <span data-ttu-id="c8dc0-142">Dla typów, które mogą mieć większe niż 8000 wystąpień Określ wartość -1.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-142">For types that can have instances larger than 8000, specify -1.</span></span>  
  
 <span data-ttu-id="c8dc0-143">Dla UDT serializacji zdefiniowanej przez użytkownika jest określony <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> odwołuje się do całkowitego rozmiaru UDT w postaci serializacji zdefiniowanej przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-143">For a UDT with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> refers to the total size of the UDT in its serialized form as defined by the user.</span></span> <span data-ttu-id="c8dc0-144">Należy wziąć pod uwagę UDT z właściwością w ciągu 10 znaków (<xref:System.Char>).</span><span class="sxs-lookup"><span data-stu-id="c8dc0-144">Consider a UDT with a property of a string of 10 characters (<xref:System.Char>).</span></span> <span data-ttu-id="c8dc0-145">Gdy UDT jest zserializowanym przy użyciu <xref:System.IO.BinaryWriter>, całkowity rozmiar serializowanego ciągu jest 22 bajtów: 2 bajtów na znak Unicode UTF-16, pomnożona przez maksymalną liczbę znaków, a także 2 kontrolka bajtów koszty związane z serializacji binarnej strumienia.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-145">When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</span></span> <span data-ttu-id="c8dc0-146">Tak, określając wartość <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, muszą być traktowane jako całkowity rozmiar serializowanego UDT: rozmiar danych zserializowanym w formacie binarnym plus koszty ponoszone przez serializacji.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-146">So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</span></span>  
  
 <span data-ttu-id="c8dc0-147">Ta właściwość nie powinien być używany z `Native` szeregowanie <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-147">This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8dc0-148">Nazwa programu SQL Server typu zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-148">The SQL Server name of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="c8dc0-149">A <see cref="T:System.String" /> wartość reprezentującą nazwę serwera SQL typu zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-149">A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dc0-150"><xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> Właściwość nie jest używany w programie SQL Server, ale jest używany przez program Microsoft Visual Studio .NET Development środowiska IDE (Integrated).</span><span class="sxs-lookup"><span data-stu-id="c8dc0-150">The <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8dc0-151">Nazwa metody używany w celu zweryfikowania wystąpienia typu zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-151">The name of the method used to validate instances of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="c8dc0-152">A <see cref="T:System.String" /> reprezentujący nazwę metody używany w celu zweryfikowania wystąpienia typu zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-152">A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8dc0-153">Z metodą określoną przez atrybut weryfikuje wystąpienia typu podczas UDT ma zostały przeprowadzić deserializacji wartości binarnej, który nie jest zaufany.</span><span class="sxs-lookup"><span data-stu-id="c8dc0-153">The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>