<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b905bc12e7688d2e853f6b20f8c4b15a188c423" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48753931" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SqlUserDefinedTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Używany do oznaczania definicję typu w zestawie jako typ zdefiniowany przez użytkownika (UDT) w programie SQL Server. Właściwości w atrybucie odzwierciedlają właściwości fizyczne używany, gdy ten typ jest zarejestrowany w programie SQL Server. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Serwer SQL tworzy typ zdefiniowany przez użytkownika, który jest powiązany z definicji typu, który ma <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> atrybutu niestandardowego. Każdy UDT musi być oznaczona przy użyciu tego atrybutu. Zobacz [typy CLR User-Defined](http://go.microsoft.com/fwlink/?LinkId=128028) Aby uzyskać więcej informacji na temat typów zdefiniowanych przez użytkownika, w tym przykładzie UDT.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono `UserDefinedType` atrybutu UDT punktu.  UDT jest uporządkowany bajtów, nosi nazwę "Point", ma metodę sprawdzania poprawności, o nazwie "ValidatePoint" i używa formatu serializacji natywnej.  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberSignature Language="F#" Value="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute : Microsoft.SqlServer.Server.Format -&gt; Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" Usage="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute format" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format">Jedną z <see cref="T:Microsoft.SqlServer.Server.Format" /> reprezentujący format serializacji typu wartości.</param>
        <summary>Wymagany atrybut na typ zdefiniowany przez użytkownika (UDT), upewnij się, że podany typ jest UDT i wskazać format przechowywania UDT.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład określa, że `Format` typu zdefiniowanego przez użytkownika jest `SerializedDataWithMetadata` i `MaxByteSize` wynosi 8000 bajtów.  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberSignature Language="F#" Value="member this.Format : Microsoft.SqlServer.Server.Format" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Format serializacji jako <see cref="T:Microsoft.SqlServer.Server.Format" />.</summary>
        <value>A <see cref="T:Microsoft.SqlServer.Server.Format" /> reprezentującą format serializacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsByteOrdered : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy typ zdefiniowany przez użytkownika jest uporządkowany bajtów.</summary>
        <value>
          <see langword="true" /> Jeśli typ zdefiniowany przez użytkownika jest bajt uporządkowane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu `true`, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> właściwość obowiązuje gwarantuje, że serializowane dane binarne mogą być używane do ustalania kolejności semantycznego informacji. W związku z tym każde wystąpienie obiektu UDT uporządkowane bajtów może zawierać tylko jeden zserializowana reprezentacja. Podczas wykonywania operacji porównania w programie SQL Server na bajty Zserializowany wyniki powinna być taka sama tak, jakby tej samej operacji porównania miały miejsce w kodzie zarządzanym...  
  
 Następujące funkcje są obsługiwane podczas <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> ustawiono `true`:  
  
-   Możliwość tworzenia indeksów w kolumnach tego typu.  
  
-   Możliwość tworzenia klucze podstawowe i obce, a także ograniczenia CHECK i unikatowe dla kolumn tego typu.  
  
-   Możliwość używania klauzule języka Transact-SQL klauzuli ORDER BY, GROUP BY i PARTITION BY. W takich przypadkach reprezentacja binarna tego typu jest używany do określania kolejności.  
  
-   Możliwość używania operatorów porównania w instrukcjach języka Transact-SQL.  
  
-   Zdolność do utrwalenia kolumn obliczanych tego typu.  
  
 Należy pamiętać, że zarówno `Native` i `UserDefined` formatów serializacji obsługuje następujące operatory porównania podczas <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> ustawiono `true`:  
  
-   Równa się (=)  
  
-   Nie równa się (!=)  
  
-   Większe niż (>)  
  
-   Mniej niż (\<)  
  
-   Większa niż lub równe (> =)  
  
-   Mniejsze niż lub równe (< =)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, czy wszystkie wystąpienia elementu to typ zdefiniowany przez użytkownika mają taką samą długość.</summary>
        <value>
          <see langword="true" /> w przypadku wszystkich wystąpień tego typu tej samej długości; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawiono `true`, wszystkich wystąpień typów zdefiniowanych przez użytkownika, odpowiadający ten typ środowiska uruchomieniowego (języka wspólnego CLR) języka wspólnego musi mieć długość w bajtach jest dokładnie taka sama jak <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>. Ten atrybut ma zastosowanie tylko dla typów zdefiniowanych przez użytkownika za pomocą `UserDefined` serializacji <xref:Microsoft.SqlServer.Server.Format>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxByteSize : int with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maksymalny rozmiar wystąpienia, w bajtach.</summary>
        <value>
          <see cref="T:System.Int32" /> Reprezentującą maksymalny rozmiar wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy określić <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> właściwość o `UserDefined` serializacji <xref:Microsoft.SqlServer.Server.Format>.  
  
 Podczas nawiązywania połączenia z SQL Server 2005 lub wcześniej, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> musi należeć do zakresu od 1 do 8000.  
  
 Podczas nawiązywania połączenia z SQL Server 2008 lub nowszy, ustaw <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> zakresu od 1 do 8000, typu, w których wystąpienia są zawsze 8000 bajtów lub mniej. W przypadku typów, które mogą mieć większe niż 8000 wystąpień należy określić -1.  
  
 Dla UDT z serializacji zdefiniowanej przez użytkownika określony <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> odnosi się to łączny rozmiar UDT w jego serializowanej formie zdefiniowaną przez użytkownika. Należy wziąć pod uwagę UDT z właściwością w ciągu 10 znaków (<xref:System.Char>). W przypadku UDT jest serializowana, za pomocą <xref:System.IO.BinaryWriter>, całkowity rozmiar ciągu serializacji jest 22 bajtów: 2 bajtów na znak Unicode UTF-16, pomnożona przez maksymalną liczbę znaków, a także 2 kontrolka bajtów koszty ponoszone z serializacji strumień binarny. Dlatego podczas określania wartości <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, całkowity rozmiar UDT serializacji należy rozważyć: rozmiar dane serializowane w formacie binarnym, a także koszty ponoszone przez serializacji.  
  
 Nie można użyć tej właściwości przy użyciu `Native` serializacji <xref:Microsoft.SqlServer.Server.Format>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nazwa programu SQL Server typu zdefiniowanego przez użytkownika.</summary>
        <value>A <see cref="T:System.String" /> reprezentującą nazwę typu zdefiniowanego przez użytkownika dla programu SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> Właściwość nie jest używany w programie SQL Server, ale jest używany przez program Microsoft .NET zintegrowanego rozwoju środowiska (IDE) Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationMethodName : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nazwa metody sprawdzania poprawności wystąpień typu zdefiniowanego przez użytkownika.</summary>
        <value>A <see cref="T:System.String" /> reprezentujący nazwę metody sprawdzania poprawności wystąpień typu zdefiniowanego przez użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sprawdza poprawność wystąpień UDT metodą określoną przez ten atrybut, gdy UDT ma zostać przeprowadzona z wartości binarnej, który nie jest zaufany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>