<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="615df0eaca86a5edeca13d521a3b4f48b3b51400" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30431211" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje abstrakcję kontekst obiektu wywołującego, który zapewnia dostęp do <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, i <see cref="T:System.Security.Principal.WindowsIdentity" /> obiektów. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlContext> Obiekt może zostać użyty do uzyskania kontekstu wyzwalacza (dla kodu wykonywanego w wyzwalaczu) i obiekt potoku (jeśli jest dostępna, takich jak procedur składowanych). Może również służyć do uzyskania <xref:System.Security.Principal.WindowsIdentity> obiekt, który reprezentuje tożsamość Microsoft Windows klienta wywołującego, jeśli klient uwierzytelniony z serwera przy użyciu zintegrowanego uwierzytelniania.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowy <xref:Microsoft.SqlServer.Server.SqlDataRecord> i jego <xref:Microsoft.SqlServer.Server.SqlMetaData>. Przykład następnie oznacza początek zestawu przy użyciu wyników <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody, wysyła rekordy z przykładowych danych z powrotem do klienta przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> — metoda i znaków zakończenia wyniku ustawiony za pomocą <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> — metoda.  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy kod wywołujący jest uruchomiony w programie SQL Server, a jeśli są dostępne połączenia kontekstu.</summary>
        <value>
          <see langword="True" /> Jeśli jest dostępne połączenie kontekstu, a druga <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> elementy członkowskie są dostępne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość zwraca wartość false, wszystkie inne <xref:Microsoft.SqlServer.Server.SqlContext> throw członków <xref:System.InvalidOperationException> użycie.  
  
 Jeśli ta właściwość zwraca wartość false, wszelkie próby otwarcia obiektu połączenia, który ma "połączenia kontekstu = true" w parametrach połączenia nie powiedzie się.  
  
 Ta właściwość jest tylko do odczytu.  
  
 W przypadku używania ADO.NET dla dostępu do danych, jeśli fragment kodu może działać wewnątrz programu SQL Server (przy użyciu integrację środowiska uruchomieniowego) lub na zewnątrz programu SQL Server, tej właściwości można sprawdzić, czy połączenie kontekstu jest dostępna.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt potok, który umożliwia obiekt wywołujący, aby wysyłać zestawów wyników, wiadomości i wyniki wykonania polecenia do klienta.</summary>
        <value>Wystąpienie <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> Jeśli potoku jest dostępny, lub <see langword="null" /> Jeśli wywoływana w kontekście, w którym potoku jest niedostępny (na przykład w funkcji zdefiniowanej przez użytkownika).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywoływane z zewnętrznego programu SQL Server, <xref:System.NotSupportedException> jest generowany.  
  
 Ta właściwość jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontekst wyzwalacz wywołujący zapewnianie informacji na temat przyczyn, aby uruchomić wyzwalacz i mapowanie kolumn, które zostały zaktualizowane.</summary>
        <value>Wystąpienie <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> jeśli kontekst wyzwalacza jest dostępny, lub <see langword="null" /> Jeśli wywołany poza wywołania wyzwalacza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlTriggerContext> Obiektu mogą być pobrane tylko z w wyzwalaczu środowiska uruchomieniowego języka wspólnego.  
  
 Jeśli <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> poza programu SQL Server jest dostępny właściwości <xref:System.NotSupportedException> jest generowany.  
  
 Ta właściwość jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft Windows tożsamość obiektu wywołującego.</summary>
        <value>A <see cref="T:System.Security.Principal.WindowsIdentity" /> wystąpienia reprezentującej element wywołujący tożsamości systemu Windows lub <see langword="null" /> Jeśli klient został uwierzytelniony przy użyciu uwierzytelniania programu SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowe języka wspólnego (CLR) kodu wewnątrz programu SQL Server, zawsze jest wywoływana w kontekście konta procesu. Jeśli jest, aby kod do wykonania akcji przy użyciu tożsamości użytkownika wywołującego, zamiast tożsamości procesu programu SQL Server token personifikacji mają być uzyskiwane przy użyciu tej właściwości. Po uzyskaniu <xref:System.Security.Principal.WindowsIdentity> obiekt wywołań mogą personifikować konta klienta i wykonywać działania w ich imieniu.  
  
 Jeśli wywoływane z zewnętrznego programu SQL Server, <xref:System.NotSupportedException> jest generowany.  
  
 Tylko zestawy oznaczone `EXTERNAL_ACCESS` lub `UNSAFE` uprawnienia mogą uzyskiwać dostęp do tej właściwości.  
  
 Ta właściwość jest tylko do odczytu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można uzyskać tożsamości systemu Windows klienta wywołującego i dokonać personifikacji klienta. Zobacz "Personifikacja — przykład" w programu SQL Server — książki Online przykład personifikacji przy użyciu <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> właściwości.  
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>