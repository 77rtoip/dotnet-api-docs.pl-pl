<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="825d62a5e9710c1402283dbef5bd00b05faec9ce" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303639" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje abstrakcję kontekstu wywołującego, który zapewnia dostęp do <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />obiektów, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />i <see cref="T:System.Security.Principal.WindowsIdentity" /> . Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlContext> Obiekt może służyć do uzyskania kontekstu wyzwalacza (w przypadku kodu wykonywanego w wyzwalaczu) i obiektu potoku (jeśli jest dostępny, na przykład w procedurach składowanych). Można go również użyć do uzyskania <xref:System.Security.Principal.WindowsIdentity> obiektu, który reprezentuje tożsamość systemu Microsoft Windows klienta wywołującego, jeśli klient jest uwierzytelniany na serwerze przy użyciu uwierzytelniania zintegrowanego.  
  
   
  
## Examples  
 Poniższy przykład tworzy nowe <xref:Microsoft.SqlServer.Server.SqlDataRecord> <xref:Microsoft.SqlServer.Server.SqlMetaData>i. Przykład oznacza początek zestawu wyników przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody, wysyła rekordy z przykładowymi danymi z powrotem do klienta <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> przy użyciu metody i oznacza koniec zestawu wyników przy <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> użyciu metody.  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy kod wywołujący jest uruchomiony w SQL Server i czy można uzyskać dostęp do połączenia kontekstu.</summary>
        <value><see langword="True" />Jeśli dostępne jest połączenie kontekstu, a dostęp do <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> innych członków jest możliwy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta właściwość zwróci wartość false, wszystkie inne <xref:Microsoft.SqlServer.Server.SqlContext> elementy członkowskie <xref:System.InvalidOperationException> zgłaszają, jeśli są używane.  
  
 Jeśli ta właściwość zwróci wartość false, wszelkie próby otwarcia obiektu połączenia, który ma wartość "context Connection = true" w parametrach połączenia, kończy się niepowodzeniem.  
  
 Ta właściwość jest tylko do odczytu.  
  
 W przypadku korzystania z ADO.NET na potrzeby dostępu do danych, jeśli fragment kodu może działać zarówno wewnątrz SQL Server (przy użyciu integracji środowiska uruchomieniowego języka wspólnego), jak i na zewnątrz SQL Server, ta właściwość może służyć do sprawdzenia, czy połączenie kontekstu jest dostępne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt potoku, który umożliwia obiektowi wywołującemu wysyłanie zestawów wyników, komunikatów i wyników wykonywania poleceń z powrotem do klienta.</summary>
        <value>Wystąpienie <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> , jeśli potoku jest dostępne lub <see langword="null" /> Jeśli wywoływana w kontekście, w którym potok jest niedostępny (na przykład w funkcji zdefiniowanej przez użytkownika).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku wywołania z zewnątrz SQL Server, <xref:System.NotSupportedException> zostanie zgłoszony.  
  
 Ta właściwość jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kontekst wyzwalacza używany do dostarczania wywołującego informacji o tym, co spowodowało uruchomienie wyzwalacza, oraz mapę kolumn, które zostały zaktualizowane.</summary>
        <value>Wystąpienie <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> , jeśli jest dostępny kontekst wyzwalacza lub <see langword="null" /> jeśli jest wywoływana poza wywołaniem wyzwalacza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlTriggerContext> Obiekt można pobrać tylko z poziomu wyzwalacza środowiska uruchomieniowego języka wspólnego.  
  
 Jeśli dostęp <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> do właściwości jest uzyskiwany spoza SQL Server <xref:System.NotSupportedException> , zostanie zgłoszony.  
  
 Ta właściwość jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tożsamość systemu Microsoft Windows wywołującego.</summary>
        <value>Wystąpienie reprezentujące tożsamość systemu Windows wywołującego lub <see langword="null" /> , jeśli klient został uwierzytelniony przy użyciu uwierzytelniania SQL Server. <see cref="T:System.Security.Principal.WindowsIdentity" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kod środowiska uruchomieniowego języka wspólnego (CLR) wewnątrz SQL Server jest zawsze wywoływany w kontekście konta procesu. Jeśli jest to konieczne, aby kod wykonywał akcję przy użyciu tożsamości użytkownika wywołującego zamiast tożsamości procesu SQL Server, należy uzyskać token personifikacji za pośrednictwem tej właściwości. Po uzyskaniu <xref:System.Security.Principal.WindowsIdentity> obiektu obiekty wywołujące mogą personifikować konto klienta i wykonywać działania w ich imieniu.  
  
 W przypadku wywołania z zewnątrz SQL Server, <xref:System.NotSupportedException> zostanie zgłoszony.  
  
 Tylko zestawy oznaczone atrybutem `UNSAFE` lub z `EXTERNAL_ACCESS` uprawnieniami mogą uzyskać dostęp do tej właściwości.  
  
 Ta właściwość jest tylko do odczytu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak uzyskać tożsamość systemu Windows klienta wywołującego i personifikować klienta.
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
