<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0bf7f-101">Umożliwia zarządzanym procedur składowanych działa w procesie bazy danych SQL Server, aby wrócić do wywołującego wyników.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span></span> <span data-ttu-id="0bf7f-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf7f-103">Wystąpienie tej klasy jest udostępniana zarządzanych procedury składowane za pośrednictwem <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> właściwość <xref:Microsoft.SqlServer.Server.SqlContext> klasy.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf7f-104">W poniższym przykładzie użyto <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlCommand> do wybrania wierszy ze źródła danych w procedurze składowanej.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="0bf7f-105">W przykładzie następnie użyto <xref:Microsoft.SqlServer.Server.SqlPipe> można wykonać polecenia i wysyłać wyniki do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="0bf7f-106"><see cref="T:System.Data.SqlClient.SqlCommand" /> Obiektu do wykonania.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span></span></param>
        <summary><span data-ttu-id="0bf7f-107">Wykonuje polecenie przekazany jako parametr i wysyła wyniki do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-107">Executes the command passed as a parameter and sends the results to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf7f-108">Oprócz wszystkie rzeczywiste wyniki inne komunikaty i błędy również są wysyłane bezpośrednio do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="0bf7f-109">Parametry wyjściowe i zwracanych wartościach nie są wysyłane do klienta; są one dostępne dla obiekt wywołujący, za pomocą obiektu command kolekcji parametrów.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="0bf7f-110">Jeśli polecenie nie jest powiązana z połączenia w trakcie <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="0bf7f-111">Ta metoda nie jest obsługiwana na polecenia powiązane z połączeniami poza procesem.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="0bf7f-112">Jeśli wystąpią błędy w <xref:System.Data.SqlClient.SqlCommand> obiektu, który został przesłany wyjątki są wysyłane do potoku, ale kopia jest również przesyłany do wywołującego kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="0bf7f-113">Jeśli kod wywołujący nie catch wyjątku, spowoduje propagowany aż stosu w kodzie języka Transact-SQL i są wyświetlane dwa razy w danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="0bf7f-114">Jeśli kod wywołujący catch wyjątku, konsumenta potoku nadal zostanie wyświetlony błąd, ale nie będzie błąd duplikatu.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf7f-115">W poniższym przykładzie użyto <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlCommand> do wybrania wierszy ze źródła danych w procedurze składowanej.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="0bf7f-116">W przykładzie następnie użyto <xref:Microsoft.SqlServer.Server.SqlPipe> można wykonać polecenia i wysyłać wyniki do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf7f-117"><paramref name="command" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-117">The <paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0bf7f-118">Ta metoda nie jest obsługiwana na polecenia powiązane z połączeniami poza procesem.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-118">This method is not supported on commands bound to out-of-process connections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0bf7f-119">Pobiera wartość wskazującą, czy <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> jest w trybie wysłaniem zestawów wyników z jednego z powrotem do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span></span> <span data-ttu-id="0bf7f-120">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-120">This property is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="0bf7f-121"><see langword="true" /> Jeśli <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> została wywołana metoda i <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> jest w trybie wysłaniem zestawów wyników z jednego z powrotem do klienta; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-121"><see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0bf7f-122">Wysyła wyniki bezpośrednio do klienta lub bieżącego użytkownika dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-122">Sends results directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf7f-123">**Wysyłania** metoda wysyła dane bezpośrednio do klienta lub obiekt wywołujący.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="0bf7f-124">Zazwyczaj jest to klient, który wykorzystuje dane wyjściowe z **potoku** metody, ale w przypadku zagnieżdżonych CLR konsument wyjście może również procedury składowane można procedury składowanej.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="0bf7f-125">Na przykład wywołuje Procedure1 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> z tekst polecenia "EXEC Procedure2".</span><span class="sxs-lookup"><span data-stu-id="0bf7f-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="0bf7f-126">Procedure2 jest również zarządzanej procedury składowanej.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="0bf7f-127">Jeśli teraz wywołuje Procedure2 <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, wiersza są wysyłane do czytnika w Procedure1, nie do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="0bf7f-128">Zestaw wyników pojedynczy wiersz wysłane do klienta: <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span></span></param>
        <summary><span data-ttu-id="0bf7f-129">Wysyła pojedynczy wiersz zestawu wyników bezpośrednio do klienta lub bieżącego użytkownika dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-129">Sends a single-row result set directly to the client or current output consumer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf7f-130"><paramref name="record" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-130">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="0bf7f-131">Zestaw wyników multirow do wysłania do klienta: <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></param>
        <summary><span data-ttu-id="0bf7f-132">Wysyła multirow zestawu wyników bezpośrednio do klienta lub bieżącego użytkownika dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-132">Sends a multirow result set directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf7f-133">Jeśli <xref:System.Data.SqlClient.SqlDataReader> przekazano obiekt jako parametr ma ukryty kolumn, te kolumny nie są propagowane do zestawu wyników wysłane do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf7f-134"><paramref name="reader" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-134">The <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="0bf7f-135">Ciąg komunikatu do wysłania do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-135">The message string to be sent to the client.</span></span></param>
        <summary><span data-ttu-id="0bf7f-136">Wysyła komunikat ciąg bezpośrednio do klienta lub bieżącego użytkownika dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-136">Sends a string message directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf7f-137">Ciąg komunikat jest wysyłany jako komunikat informacyjny do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="0bf7f-138">Aplikacje klienckie można słuchać wiadomości za pomocą różnych mechanizmów, w zależności od danych dostępu interfejsu programowania aplikacji (API), które używają.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="0bf7f-139">Na przykład, jeśli klient używa ADO.NET, przesyłać komunikaty za pośrednictwem <xref:System.Data.SqlClient.SqlConnection.InfoMessage> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf7f-140">W poniższym przykładzie użyto <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> do wysyłania wiadomości ciąg bezpośrednio do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0bf7f-141"><paramref name="message" /> Jest większa niż 4000 znaków.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-141">The <paramref name="message" /> is greater than 4,000 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf7f-142"><paramref name="message" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-142">The <paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0bf7f-143">Oznacza koniec zestawu wyników, a następnie zwraca <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> wystąpienie do stanu początkowego.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf7f-144">Zarządzane procedury składowane można wysyłać zestawów wyników do klientów, którzy nie wdraża <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="0bf7f-145">Ta metoda wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, Zezwalaj na procedury składowane w celu wysyłania zestawy wyników niestandardowych do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf7f-146">Poniższy przykład tworzy nowy <xref:Microsoft.SqlServer.Server.SqlDataRecord> i jego <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="0bf7f-147">Przykład następnie oznacza początek zestawu przy użyciu wyników <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody, wysyła rekordy z przykładowych danych z powrotem do klienta przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> — metoda i znaków zakończenia wyniku ustawiony za pomocą <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0bf7f-148"><see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> — Metoda nie została wcześniej wywołana.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="0bf7f-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> obiektu z wartości w kolumnach wiersza do wysłania do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span></span> <span data-ttu-id="0bf7f-150">Schematu dla rekordu musi być zgodna ze schematem opisanego przez metadane <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> przekazany do <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></param>
        <summary><span data-ttu-id="0bf7f-151">Wysyła pojedynczy wiersz danych z powrotem do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-151">Sends a single row of data back to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf7f-152">Zarządzane procedury składowane można wysyłać zestawów wyników do klientów, którzy nie wdraża <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="0bf7f-153">Ta metoda wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, umożliwia procedur składowanych do wysyłania zestawy wyników niestandardowych do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="0bf7f-154"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> Metoda wysyła pojedynczy wiersz danych z powrotem do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="0bf7f-155">Wiersze mogą następnie zwracany do obiektu wywołującego przez wywołanie metody <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, jeden raz dla każdego wiersza są wysyłane.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="0bf7f-156">Po wysłaniu wszystkich wierszy wywołanie <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> metody jest wymagany w celu oznaczenia zakończenia zestawu wyników.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf7f-157">Poniższy przykład tworzy nowy <xref:Microsoft.SqlServer.Server.SqlDataRecord> i jego <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="0bf7f-158">Przykład następnie oznacza początek zestawu przy użyciu wyników <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody, wysyła rekordy z przykładowych danych z powrotem do klienta przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> — metoda i znaków zakończenia wyniku ustawiony za pomocą <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf7f-159"><paramref name="record" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-159">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0bf7f-160"><see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> — Metoda nie została wcześniej wywołana.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="0bf7f-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> obiektu, z którego metadanych jest wyodrębniany i używany do opisania zestawu wyników.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span></span></param>
        <summary><span data-ttu-id="0bf7f-162">Oznacza początek zestawu wyników do wysłania do klienta, a parametr rekordu do utworzenia metadanych, który opisuje zestaw wyników.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf7f-163">Zarządzane procedury składowane można wysyłać zestawów wyników do klientów, którzy nie wdraża <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="0bf7f-164">Ta metoda wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, Zezwalaj na procedury składowane w celu wysyłania zestawy wyników niestandardowych do klienta.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="0bf7f-165"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> — Metoda oznacza początek zestawu wyników, a parametr rekordu do utworzenia metadanych, który opisuje zestaw wyników.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="0bf7f-166">Wszystkie kolejne wiersze, wysyłane przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metody, musi odpowiadać tej definicji metadanych.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="0bf7f-167">Należy pamiętać, że po wywołaniu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, tylko <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> może zostać wywołana.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="0bf7f-168">Inne metody w tym samym wystąpieniu <xref:Microsoft.SqlServer.Server.SqlPipe> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="0bf7f-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Ustawia <xref:Microsoft.SqlServer.Server.SqlPipe> do stanu początkowego, gdy inne metody można wywołać.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="0bf7f-170">Po kontroli zwraca do języka Transact-SQL pochodzący z wykonania na CLR, nie należy próbować użyć zmiennej statyczne lub lokalnego został zainicjowany w pamięci środowiska CLR.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="0bf7f-171">Na przykład, czy nie magazynu klasy wystąpienia w toku, na przykład `SQLDataRecord`, który będzie używany po kontroli zwraca z aparatu CLR.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="0bf7f-172">Jedynym wyjątkiem jest `SQLMetaData` w klasie procesu.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bf7f-173">Poniższy przykład tworzy nowy <xref:Microsoft.SqlServer.Server.SqlDataRecord> i jego <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="0bf7f-174">Przykład następnie oznacza początek zestawu przy użyciu wyników <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody, wysyła rekordy z przykładowych danych z powrotem do klienta przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> — metoda i znaków zakończenia wyniku ustawiony za pomocą <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> — metoda.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0bf7f-175"><paramref name="record" /> Jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-175">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0bf7f-176"><paramref name="record" /> Nie ma kolumn lub nie został zainicjowany.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-176">The <paramref name="record" /> has no columns or has not been initialized.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0bf7f-177">Inną metodą niż <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> lub <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> została wywołana po <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="0bf7f-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>