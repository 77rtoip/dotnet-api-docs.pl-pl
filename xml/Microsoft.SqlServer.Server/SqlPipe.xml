<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2eacd1a5ec4707b956c3ddb1c43f6451deba47c3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303564" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e8d02-101">Zezwala na zarządzane procedury składowane działające w procesie w bazie danych SQL Server, aby zwracały wyniki z powrotem do obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="e8d02-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span></span> <span data-ttu-id="e8d02-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="e8d02-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d02-103">Wystąpienie tej klasy jest udostępniane zarządzanym procedurom składowanym za pomocą <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> właściwości <xref:Microsoft.SqlServer.Server.SqlContext> klasy.</span><span class="sxs-lookup"><span data-stu-id="e8d02-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d02-104">Poniższy przykład używa <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlCommand> do wybierania wierszy ze źródła danych w procedurze składowanej.</span><span class="sxs-lookup"><span data-stu-id="e8d02-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="e8d02-105">W przykładzie jest używana <xref:Microsoft.SqlServer.Server.SqlPipe> do wykonywania polecenia i wysyłania wyników z powrotem do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="e8d02-106">Obiekt <see cref="T:System.Data.SqlClient.SqlCommand" /> , który ma zostać wykonany.</span><span class="sxs-lookup"><span data-stu-id="e8d02-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span></span></param>
        <summary><span data-ttu-id="e8d02-107">Wykonuje polecenie przesłane jako parametr i wysyła wyniki do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-107">Executes the command passed as a parameter and sends the results to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d02-108">Oprócz żadnych rzeczywistych wyników inne komunikaty i błędy są również wysyłane bezpośrednio do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="e8d02-109">Parametry wyjściowe i zwracane wartości nie są wysyłane do klienta; są one dostępne dla obiektu wywołującego za pomocą kolekcji Parameters obiektu Command.</span><span class="sxs-lookup"><span data-stu-id="e8d02-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="e8d02-110">Jeśli polecenie nie jest powiązane z połączeniem w procesie, <xref:System.InvalidOperationException> zostanie zgłoszony.</span><span class="sxs-lookup"><span data-stu-id="e8d02-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="e8d02-111">Ta metoda nie jest obsługiwana w przypadku poleceń związanych z połączeniami poza procesem.</span><span class="sxs-lookup"><span data-stu-id="e8d02-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="e8d02-112">W przypadku wystąpienia błędów w <xref:System.Data.SqlClient.SqlCommand> przesłanym obiekcie wyjątki są wysyłane do potoku, ale kopia jest wysyłana również do wywoływania kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="e8d02-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="e8d02-113">Jeśli wywołujący kod nie przechwytuje wyjątku, propaguje stos do kodu Transact-SQL i pojawi się w danych wyjściowych dwa razy.</span><span class="sxs-lookup"><span data-stu-id="e8d02-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="e8d02-114">Jeśli wywoływany kod przechwytuje wyjątek, odbiorca potoku nadal zobaczy błąd, ale nie będzie zduplikowany błąd.</span><span class="sxs-lookup"><span data-stu-id="e8d02-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d02-115">Poniższy przykład używa <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlCommand> do wybierania wierszy ze źródła danych w procedurze składowanej.</span><span class="sxs-lookup"><span data-stu-id="e8d02-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="e8d02-116">W przykładzie jest używana <xref:Microsoft.SqlServer.Server.SqlPipe> do wykonywania polecenia i wysyłania wyników z powrotem do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8d02-117"><paramref name="command" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="e8d02-117">The <paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d02-118">Ta metoda nie jest obsługiwana w przypadku poleceń związanych z połączeniami poza procesem.</span><span class="sxs-lookup"><span data-stu-id="e8d02-118">This method is not supported on commands bound to out-of-process connections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8d02-119">Pobiera wartość wskazującą, czy <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> jest w trybie wysyłania pojedynczych zestawów wyników z powrotem do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span></span> <span data-ttu-id="e8d02-120">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="e8d02-120">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="e8d02-121"><see langword="true" />Jeśli metoda została wywołana <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> i jest w trybie wysyłania pojedynczych zestawów wyników z powrotem do klienta; w przeciwnym razie <see langword="false" />. <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /></span><span class="sxs-lookup"><span data-stu-id="e8d02-121"><see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8d02-122">Wysyła wyniki bezpośrednio do klienta lub bieżącego użytkownika wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="e8d02-122">Sends results directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d02-123">Metoda **send** wysyła dane bezpośrednio do klienta lub obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="e8d02-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="e8d02-124">Zwykle jest to klient korzystający z metody potoku, ale \*\*\*\* w przypadku zagnieżdżonych procedur składowanych CLR, konsument wyjściowy może być również procedurą składowaną.</span><span class="sxs-lookup"><span data-stu-id="e8d02-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="e8d02-125">Na przykład wywołania <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> Procedure1 z tekstem polecenia "EXEC Procedure2".</span><span class="sxs-lookup"><span data-stu-id="e8d02-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="e8d02-126">Procedure2 jest również zarządzaną procedurą składowaną.</span><span class="sxs-lookup"><span data-stu-id="e8d02-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="e8d02-127">Jeśli Procedure2 teraz wywołuje <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, wiersz jest wysyłany do czytnika Procedure1's, a nie do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="e8d02-128">Zestaw wyników z pojedynczym wierszem wysłany do klienta: <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="e8d02-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span></span></param>
        <summary><span data-ttu-id="e8d02-129">Wysyła zestaw wyników z jednym wierszem bezpośrednio do klienta lub bieżącego użytkownika wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="e8d02-129">Sends a single-row result set directly to the client or current output consumer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8d02-130"><paramref name="record" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="e8d02-130">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="e8d02-131">Zestaw wyników multirow do wysłania do klienta: <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="e8d02-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></param>
        <summary><span data-ttu-id="e8d02-132">Wysyła zestaw wyników programu multirow bezpośrednio do klienta lub bieżącego użytkownika wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="e8d02-132">Sends a multirow result set directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d02-133"><xref:System.Data.SqlClient.SqlDataReader> Jeśli obiekt przekazywany jako parametr ma ukryte kolumny, te kolumny nie są propagowane do zestawu wyników wysyłanego do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8d02-134"><paramref name="reader" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="e8d02-134">The <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e8d02-135">Ciąg komunikatu, który ma zostać wysłany do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-135">The message string to be sent to the client.</span></span></param>
        <summary><span data-ttu-id="e8d02-136">Wysyła wiadomość ciągową bezpośrednio do klienta lub bieżącego użytkownika wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="e8d02-136">Sends a string message directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d02-137">Ciąg komunikatu jest wysyłany jako komunikat informacyjny do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="e8d02-138">Aplikacje klienckie mogą słuchać komunikatów przy użyciu różnych mechanizmów, w zależności od interfejsu programowania aplikacji (API) dostępu do danych.</span><span class="sxs-lookup"><span data-stu-id="e8d02-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="e8d02-139">Na przykład jeśli klient korzysta z programu ADO.NET, komunikaty są przesyłane przez <xref:System.Data.SqlClient.SqlConnection.InfoMessage> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="e8d02-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d02-140">Poniższy przykład używa <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> metody do wysyłania ciągu komunikatu bezpośrednio do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8d02-141"><paramref name="message" /> Jest dłuższa niż 4 000 znaków.</span><span class="sxs-lookup"><span data-stu-id="e8d02-141">The <paramref name="message" /> is greater than 4,000 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8d02-142"><paramref name="message" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="e8d02-142">The <paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8d02-143">Oznacza koniec zestawu wyników i zwraca <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> wystąpienie z powrotem do stanu początkowego.</span><span class="sxs-lookup"><span data-stu-id="e8d02-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d02-144">Zarządzane procedury składowane mogą wysyłać zestawy wyników do klientów, którzy nie wdrażają programu <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="e8d02-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e8d02-145">Ta metoda, wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, zezwala na procedury składowane do wysyłania niestandardowych zestawów wyników do klienta programu.</span><span class="sxs-lookup"><span data-stu-id="e8d02-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d02-146">Poniższy przykład tworzy nowe <xref:Microsoft.SqlServer.Server.SqlDataRecord> <xref:Microsoft.SqlServer.Server.SqlMetaData>i.</span><span class="sxs-lookup"><span data-stu-id="e8d02-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="e8d02-147">Przykład oznacza początek zestawu wyników przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody, wysyła rekordy z przykładowymi danymi z powrotem do klienta <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> przy użyciu metody i oznacza koniec zestawu wyników przy <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="e8d02-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d02-148"><see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> Metoda nie została wcześniej wywołana.</span><span class="sxs-lookup"><span data-stu-id="e8d02-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="e8d02-149"><see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> Obiekt z wartościami kolumn dla wiersza, który ma zostać wysłany do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span></span> <span data-ttu-id="e8d02-150">Schemat rekordu musi być zgodny ze schematem opisanym w metadanych <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> przekazaną <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> do metody.</span><span class="sxs-lookup"><span data-stu-id="e8d02-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></param>
        <summary><span data-ttu-id="e8d02-151">Wysyła z powrotem pojedynczy wiersz danych do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-151">Sends a single row of data back to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d02-152">Zarządzane procedury składowane mogą wysyłać zestawy wyników do klientów, którzy nie wdrażają programu <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="e8d02-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e8d02-153">Ta metoda, wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, zezwala na procedury składowane do wysyłania niestandardowych zestawów wyników do klienta programu.</span><span class="sxs-lookup"><span data-stu-id="e8d02-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="e8d02-154"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> Metoda wysyła z powrotem pojedynczy wiersz danych do klienta.</span><span class="sxs-lookup"><span data-stu-id="e8d02-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="e8d02-155">Wiersze można następnie zwrócić do obiektu wywołującego, wywołując <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>jeden raz dla każdego wysyłanego wiersza.</span><span class="sxs-lookup"><span data-stu-id="e8d02-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="e8d02-156">Po wysłaniu wszystkich wierszy wywołanie <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> metody jest wymagane do oznaczenia końca zestawu wyników.</span><span class="sxs-lookup"><span data-stu-id="e8d02-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d02-157">Poniższy przykład tworzy nowe <xref:Microsoft.SqlServer.Server.SqlDataRecord> <xref:Microsoft.SqlServer.Server.SqlMetaData>i.</span><span class="sxs-lookup"><span data-stu-id="e8d02-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="e8d02-158">Przykład oznacza początek zestawu wyników przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody, wysyła rekordy z przykładowymi danymi z powrotem do klienta <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> przy użyciu metody i oznacza koniec zestawu wyników przy <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="e8d02-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8d02-159"><paramref name="record" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="e8d02-159">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d02-160"><see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> Metoda nie została wcześniej wywołana.</span><span class="sxs-lookup"><span data-stu-id="e8d02-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="e8d02-161"><see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> Obiekt, z którego metadane są wyodrębniane i używane do opisywania zestawu wyników.</span><span class="sxs-lookup"><span data-stu-id="e8d02-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span></span></param>
        <summary><span data-ttu-id="e8d02-162">Oznacza początek zestawu wyników do wysłania do klienta i używa parametru rekordu do konstruowania metadanych opisujących zestaw wyników.</span><span class="sxs-lookup"><span data-stu-id="e8d02-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8d02-163">Zarządzane procedury składowane mogą wysyłać zestawy wyników do klientów, którzy nie wdrażają programu <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="e8d02-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="e8d02-164">Ta metoda, wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, zezwala na procedury składowane do wysyłania niestandardowych zestawów wyników do klienta programu.</span><span class="sxs-lookup"><span data-stu-id="e8d02-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="e8d02-165"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> Metoda oznacza początek zestawu wyników i używa parametru rekordu do konstruowania metadanych opisujących zestaw wyników.</span><span class="sxs-lookup"><span data-stu-id="e8d02-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="e8d02-166">Wszystkie kolejne wiersze, wysyłane przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metody, muszą być zgodne z definicją metadanych.</span><span class="sxs-lookup"><span data-stu-id="e8d02-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="e8d02-167">Należy pamiętać, że <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>po wywołaniu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metody <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> tylko i można ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="e8d02-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="e8d02-168">Każda inna metoda w tym samym wystąpieniu <xref:Microsoft.SqlServer.Server.SqlPipe> <xref:System.InvalidOperationException>zgłasza.</span><span class="sxs-lookup"><span data-stu-id="e8d02-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="e8d02-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>przywraca <xref:Microsoft.SqlServer.Server.SqlPipe> początkowy stan, w którym można wywołać inne metody.</span><span class="sxs-lookup"><span data-stu-id="e8d02-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="e8d02-170">Po powrocie kontroli do języka Transact-SQL z wykonywania środowiska CLR nie należy próbować używać zmiennej statycznej ani lokalnej zainicjowanej dla pamięci CLR.</span><span class="sxs-lookup"><span data-stu-id="e8d02-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="e8d02-171">Na przykład nie należy przechowywać wystąpienia klasy w procesie, na przykład `SQLDataRecord`, która będzie używana po powrocie kontroli z CLR.</span><span class="sxs-lookup"><span data-stu-id="e8d02-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="e8d02-172">Jedynym wyjątkiem jest `SQLMetaData` Klasa w procesie.</span><span class="sxs-lookup"><span data-stu-id="e8d02-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8d02-173">Poniższy przykład tworzy nowe <xref:Microsoft.SqlServer.Server.SqlDataRecord> <xref:Microsoft.SqlServer.Server.SqlMetaData>i.</span><span class="sxs-lookup"><span data-stu-id="e8d02-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="e8d02-174">Przykład oznacza początek zestawu wyników przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody, wysyła rekordy z przykładowymi danymi z powrotem do klienta <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> przy użyciu metody i oznacza koniec zestawu wyników przy <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="e8d02-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8d02-175"><paramref name="record" /> Ma<see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="e8d02-175">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8d02-176">Nie <paramref name="record" /> ma kolumn lub nie została zainicjowana.</span><span class="sxs-lookup"><span data-stu-id="e8d02-176">The <paramref name="record" /> has no columns or has not been initialized.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e8d02-177">Metoda inna niż <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> lub <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> została wywołana po <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> metodzie.</span><span class="sxs-lookup"><span data-stu-id="e8d02-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>
