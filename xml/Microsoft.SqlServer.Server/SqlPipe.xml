<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f715fd742165d7d4ffbc7cb2e9be3f2dfa6d157e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37715751" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="22b9c-101">Umożliwia zarządzanym procedur składowanych działa w procesie w bazie danych programu SQL Server w celu zwracania wyników z powrotem do obiektu wywołującego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="22b9c-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span>
      </span>
      <span data-ttu-id="22b9c-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="22b9c-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22b9c-103">Wystąpienie tej klasy jest udostępniany zarządzanej procedury przechowywane za pomocą <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> właściwość <xref:Microsoft.SqlServer.Server.SqlContext> klasy.</span><span class="sxs-lookup"><span data-stu-id="22b9c-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22b9c-104">W poniższym przykładzie użyto <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlCommand> celu wybrania wierszy ze źródła danych w procedurze składowanej.</span><span class="sxs-lookup"><span data-stu-id="22b9c-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="22b9c-105">Następnie w przykładzie <xref:Microsoft.SqlServer.Server.SqlPipe> można wykonać polecenia i wysyłać wyniki do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="22b9c-106">
            <see cref="T:System.Data.SqlClient.SqlCommand" /> Obiektu do wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22b9c-107">Wykonuje polecenie przekazany jako parametr, a następnie wysyła wyniki do klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-107">Executes the command passed as a parameter and sends the results to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22b9c-108">Oprócz wszystkie rzeczywiste wyniki inne wiadomości i błędy są również wysyłane bezpośrednio do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="22b9c-109">Dane wyjściowe parametrów i zwracanych wartości nie są wysyłane do klienta; są one dostępne do obiektu wywołującego, za pomocą kolekcji parametrów obiektu polecenia.</span><span class="sxs-lookup"><span data-stu-id="22b9c-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="22b9c-110">Jeśli polecenie nie jest powiązany z połączenia w trakcie <xref:System.InvalidOperationException> zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="22b9c-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="22b9c-111">Ta metoda nie jest obsługiwana w poleceniach powiązane z połączeniami spoza procesu.</span><span class="sxs-lookup"><span data-stu-id="22b9c-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="22b9c-112">Jeśli występują błędy w <xref:System.Data.SqlClient.SqlCommand> obiektu, który został przesłany wyjątki są wysyłane do potoku, ale kopia był wysyłany również do wywołującego kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="22b9c-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="22b9c-113">Jeśli kod wywołujący nie przechwycić wyjątek, wówczas propagowane w górę stosu w kodzie języka Transact-SQL i są wyświetlane dwa razy w danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="22b9c-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="22b9c-114">Jeśli kod wywołujący przechwycić wyjątek, konsumenta potoku nadal zostanie wyświetlony następujący błąd, ale nie będzie błąd duplikatu.</span><span class="sxs-lookup"><span data-stu-id="22b9c-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22b9c-115">W poniższym przykładzie użyto <xref:System.Data.SqlClient.SqlConnection> i <xref:System.Data.SqlClient.SqlCommand> celu wybrania wierszy ze źródła danych w procedurze składowanej.</span><span class="sxs-lookup"><span data-stu-id="22b9c-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="22b9c-116">Następnie w przykładzie <xref:Microsoft.SqlServer.Server.SqlPipe> można wykonać polecenia i wysyłać wyniki do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="22b9c-117">
            <paramref name="command" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-117">The <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="22b9c-118">Ta metoda nie jest obsługiwana w poleceniach powiązane z połączeniami spoza procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-118">This method is not supported on commands bound to out-of-process connections.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="22b9c-119">Pobiera wartość wskazującą, czy <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> jest w trybie wysyłania zestawy pojedynczy wynik do klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span>
          </span>
          <span data-ttu-id="22b9c-120">Ta właściwość jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-120">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="22b9c-121">
            <see langword="true" /> Jeśli <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> metoda została wywołana i <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> jest w trybie wysyłania zestawy pojedynczy wynik do klienta; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-121">
              <see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="22b9c-122">Wysyła wyniki bezpośrednio do klienta lub bieżącego odbiorcy danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-122">Sends results directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22b9c-123">**Wysyłania** metoda wysyła dane bezpośrednio do klienta lub obiekt wywołujący.</span><span class="sxs-lookup"><span data-stu-id="22b9c-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="22b9c-124">Zazwyczaj jest to klient, który pobiera dane wyjściowe z **potoku** metody, ale w przypadku zagnieżdżonych CLR procedury składowane konsumenta danych wyjściowych może również być procedury składowanej.</span><span class="sxs-lookup"><span data-stu-id="22b9c-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="22b9c-125">Na przykład wywołuje Procedure1 <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> tekstem polecenia "EXEC Procedure2".</span><span class="sxs-lookup"><span data-stu-id="22b9c-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="22b9c-126">Procedure2 jest również zarządzanej procedury składowanej.</span><span class="sxs-lookup"><span data-stu-id="22b9c-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="22b9c-127">Jeśli teraz wywołuje Procedure2 <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, wiersza są wysyłane do firmy Procedure1 czytnika, nie dla klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="22b9c-128">Zestaw wyników pojedynczy wiersz tabeli wysłane do klienta: <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22b9c-129">Wysyła pojedynczy wiersz tabeli zestawu wyników bezpośrednio do klienta lub bieżącego odbiorcy danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-129">Sends a single-row result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="22b9c-130">
            <paramref name="record" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-130">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="22b9c-131">Zestaw wyników multirow do wysłania do klienta: <see cref="T:System.Data.SqlClient.SqlDataReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22b9c-132">Wysyła multirow zestawu wyników bezpośrednio do klienta lub bieżącego odbiorcy danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-132">Sends a multirow result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22b9c-133">Jeśli <xref:System.Data.SqlClient.SqlDataReader> obiekt przekazany jako parametr ma ukrytej kolumn, te kolumny nie są propagowane do zestawu wyników, wysłane do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="22b9c-134">
            <paramref name="reader" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-134">The <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="22b9c-135">Ciąg komunikatu do wysłania do klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-135">The message string to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22b9c-136">Wysyła komunikat w formacie ciągu bezpośrednio do klienta lub bieżącego odbiorcy danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-136">Sends a string message directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22b9c-137">Ciąg komunikatu jest wysyłany jako komunikat informacyjny w do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="22b9c-138">Aplikacje klienckie może nasłuchiwać komunikatów za pomocą różnych mechanizmów, w zależności od danych dostęp do interfejsu programowania aplikacji (API), używają.</span><span class="sxs-lookup"><span data-stu-id="22b9c-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="22b9c-139">Na przykład, jeśli klient korzysta z programu ADO.NET, komunikaty są przesyłane za pośrednictwem <xref:System.Data.SqlClient.SqlConnection.InfoMessage> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="22b9c-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22b9c-140">W poniższym przykładzie użyto <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> metodę, aby wysłać ciąg komunikatu o bezpośrednio do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="22b9c-141">
            <paramref name="message" /> Jest większa niż 4000 znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-141">The <paramref name="message" /> is greater than 4,000 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="22b9c-142">
            <paramref name="message" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-142">The <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="22b9c-143">Oznacza koniec zestawu wyników, a następnie zwraca <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> wystąpienia do stanu początkowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22b9c-144">Zarządzane procedury składowane można wysyłać zestawów wyników dla klientów, którzy nie wdrażają <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="22b9c-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="22b9c-145">Tej metody wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, Zezwalaj na procedur składowanych na potrzeby wysyłania zestawy wyników niestandardowy do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22b9c-146">Poniższy przykład tworzy nowy <xref:Microsoft.SqlServer.Server.SqlDataRecord> i jego <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="22b9c-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="22b9c-147">Przykład następnie oznacza początek rezultat, można ustawić przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody wysyła rekordy z przykładowe dane z powrotem do klienta przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metoda i znaki końca wynik zestawu przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="22b9c-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="22b9c-148">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> Metoda nie została wcześniej wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="22b9c-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> obiekt o wartości kolumn dla wiersza do wysłania do klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span>
          </span>
          <span data-ttu-id="22b9c-150">Schemat dla rekordu musi być zgodna schematu opisany przez metadane <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> przekazany do <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22b9c-151">Wysyła pojedynczy wiersz danych do klienta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-151">Sends a single row of data back to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22b9c-152">Zarządzane procedury składowane można wysyłać zestawów wyników dla klientów, którzy nie wdrażają <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="22b9c-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="22b9c-153">Tej metody wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, umożliwia procedur składowanych na potrzeby wysyłania zestawy wyników niestandardowy do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="22b9c-154"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> Metoda wysyła pojedynczy wiersz danych z powrotem do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="22b9c-155">Wiersze następnie mogą być zwracane do obiektu wywołującego, wywołując <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, jeden raz dla każdego wiersza, które są wysyłane.</span><span class="sxs-lookup"><span data-stu-id="22b9c-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="22b9c-156">Po wysłaniu wszystkich wierszy wywołania <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> metoda jest wymagany, aby zaznaczyć koniec zestawu wyników.</span><span class="sxs-lookup"><span data-stu-id="22b9c-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22b9c-157">Poniższy przykład tworzy nowy <xref:Microsoft.SqlServer.Server.SqlDataRecord> i jego <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="22b9c-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="22b9c-158">Przykład następnie oznacza początek rezultat, można ustawić przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody wysyła rekordy z przykładowe dane z powrotem do klienta przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metoda i znaki końca wynik zestawu przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="22b9c-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="22b9c-159">
            <paramref name="record" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-159">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="22b9c-160">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> Metoda nie została wcześniej wywoływana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="22b9c-161">Element <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> obiektu, z której jest wyodrębniany metadanych i używany do opisania zestawu wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="22b9c-162">Oznacza początek zestaw wyników, aby zostać odesłany do klienta, a parametr rekordu do utworzenia metadanych, które opisują zestaw wyników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22b9c-163">Zarządzane procedury składowane można wysyłać zestawów wyników dla klientów, którzy nie wdrażają <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="22b9c-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="22b9c-164">Tej metody wraz z <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, Zezwalaj na procedur składowanych na potrzeby wysyłania zestawy wyników niestandardowy do klienta.</span><span class="sxs-lookup"><span data-stu-id="22b9c-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="22b9c-165"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> Metoda oznacza początek zestaw wyników i jest używany parametr rekordu do utworzenia metadanych, które opisują zestaw wyników.</span><span class="sxs-lookup"><span data-stu-id="22b9c-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="22b9c-166">Wszystkie kolejne wiersze, wysyłane przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metody musi odpowiadać tej definicji metadanych.</span><span class="sxs-lookup"><span data-stu-id="22b9c-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="22b9c-167">Należy pamiętać, że po wywołanie <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, tylko <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> i <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> może zostać wywołana.</span><span class="sxs-lookup"><span data-stu-id="22b9c-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="22b9c-168">Inne metody, w tym samym wystąpieniu <xref:Microsoft.SqlServer.Server.SqlPipe> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="22b9c-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="22b9c-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Ustawia <xref:Microsoft.SqlServer.Server.SqlPipe> do stanu początkowego, gdzie mogą być wywoływane innych metod.</span><span class="sxs-lookup"><span data-stu-id="22b9c-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="22b9c-170">Po sterowanie powraca do instrukcji języka Transact-SQL z wykonywania CLR, nie należy próbować użyć zmiennej statycznej lub lokalne inicjowany do pamięci CLR.</span><span class="sxs-lookup"><span data-stu-id="22b9c-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="22b9c-171">Na przykład, czy przechowuje klasy wystąpienia w toku, na przykład `SQLDataRecord`, które będą używane po formant powraca z aparatu CLR.</span><span class="sxs-lookup"><span data-stu-id="22b9c-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="22b9c-172">Jedynym wyjątkiem jest `SQLMetaData` w klasie procesu.</span><span class="sxs-lookup"><span data-stu-id="22b9c-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22b9c-173">Poniższy przykład tworzy nowy <xref:Microsoft.SqlServer.Server.SqlDataRecord> i jego <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="22b9c-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="22b9c-174">Przykład następnie oznacza początek rezultat, można ustawić przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> metody wysyła rekordy z przykładowe dane z powrotem do klienta przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> metoda i znaki końca wynik zestawu przy użyciu <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="22b9c-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="22b9c-175">
            <paramref name="record" /> Jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-175">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="22b9c-176">
            <paramref name="record" /> Nie ma kolumn lub nie został zainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-176">The <paramref name="record" /> has no columns or has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="22b9c-177">Inną metodą niż <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> lub <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> została wywołana po <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="22b9c-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>