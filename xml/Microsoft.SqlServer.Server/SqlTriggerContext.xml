<Type Name="SqlTriggerContext" FullName="Microsoft.SqlServer.Server.SqlTriggerContext">
  <TypeSignature Language="C#" Value="public sealed class SqlTriggerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTriggerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlTriggerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTriggerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTriggerContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2baa3-101">Zapewnia informacje kontekstowe dotyczące wyzwalaczy, które zostało zainicjowane.</span><span class="sxs-lookup"><span data-stu-id="2baa3-101">Provides contextual information about the trigger that was fired.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2baa3-102">Podane informacje kontekstowe zawiera typ akcji, który spowodował uruchomienie wyzwalacza, kolumny, które zostały zmodyfikowane w operacji aktualizacji, a w przypadku języka definicji danych (DDL) wyzwalania struktury XML EventData (zobacz "języka Transact-SQL Odwołanie"w podręcznikach Online programu SQL Server), który opisuje operację wyzwalającą.</span><span class="sxs-lookup"><span data-stu-id="2baa3-102">The contextual information provided includes the type of action that caused the trigger to fire, which columns were modified in an UPDATE operation, and, in the case of a data definition language (DDL) trigger, an XML EventData structure (see "Transact-SQL Reference" in SQL Server Books Online) that describes the triggering operation.</span></span>  
  
 <span data-ttu-id="2baa3-103">Wystąpienie <xref:Microsoft.SqlServer.Server.SqlTriggerContext> jest dostępna z <xref:Microsoft.SqlServer.Server.SqlContext> klasy, gdy kod działa w ramach wyzwalacza za pośrednictwem <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2baa3-103">An instance of <xref:Microsoft.SqlServer.Server.SqlTriggerContext> is available from the <xref:Microsoft.SqlServer.Server.SqlContext> class, when the code is running inside a trigger through the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2baa3-104">W poniższym przykładzie przedstawiono <xref:Microsoft.SqlServer.Server.SqlTriggerContext> obiekt używany do określenia, czy <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> nastąpiła Akcja.</span><span class="sxs-lookup"><span data-stu-id="2baa3-104">The following example shows a <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object being used to determine if an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> action occurred.</span></span> <span data-ttu-id="2baa3-105">Jeśli wiersz została umieszczona w `user`tabeli, nazwę użytkownika i nazwisko są pobierane z wstawionego wiersza i dodawane do **UserNameAudit** tabeli.</span><span class="sxs-lookup"><span data-stu-id="2baa3-105">If a row was inserted into the `user`'s table, the user name and real name are retrieved from the inserted row and then added to the **UserNameAudit** table.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2baa3-106">Pobiera liczbę kolumn zawarty w tabeli danych powiązane z wyzwalacza.</span><span class="sxs-lookup"><span data-stu-id="2baa3-106">Gets the number of columns contained by the data table bound to the trigger.</span></span> <span data-ttu-id="2baa3-107">Ta właściwość jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2baa3-107">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="2baa3-108">Liczba kolumn zawarty w tabeli danych powiązane wyzwalacza, jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="2baa3-108">The number of columns contained by the data table bound to the trigger, as an integer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2baa3-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> Właściwość jest przydatna określić maksymalną liczba porządkowa który <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> umożliwia wywołanie danego wyzwalacza.</span><span class="sxs-lookup"><span data-stu-id="2baa3-109"><xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> property is useful to determine the maximum ordinal that <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> allows for a given trigger invocation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventData">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlXml EventData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlTypes.SqlXml EventData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventData As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlXml ^ EventData { System::Data::SqlTypes::SqlXml ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2baa3-110">Pobiera dane zdarzenia specyficzne dla akcji, która wywołała wyzwalacz.</span><span class="sxs-lookup"><span data-stu-id="2baa3-110">Gets the event data specific to the action that fired the trigger.</span></span></summary>
        <value><span data-ttu-id="2baa3-111">Dane zdarzenia specyficzne dla akcji, który uruchamiany jako <see cref="T:System.Data.SqlTypes.SqlXml" /> Jeśli informacje są dostępne; <see langword="null" /> inaczej.</span><span class="sxs-lookup"><span data-stu-id="2baa3-111">The event data specific to the action that fired the trigger as a <see cref="T:System.Data.SqlTypes.SqlXml" /> if more information is available; <see langword="null" /> otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2baa3-112">Te informacje są dostępne dane definition language (DDL) wyzwalaczy.</span><span class="sxs-lookup"><span data-stu-id="2baa3-112">This information is available for data definition language (DDL) triggers.</span></span> <span data-ttu-id="2baa3-113">Informacje są niedostępne za pośrednictwem tej właściwości wyzwalaczy języka manipulacji danych.</span><span class="sxs-lookup"><span data-stu-id="2baa3-113">No information is available through this property for data manipulation language (DML) triggers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatedColumn">
      <MemberSignature Language="C#" Value="public bool IsUpdatedColumn (int columnOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUpdatedColumn(int32 columnOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpdatedColumn (columnOrdinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpdatedColumn(int columnOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnOrdinal"><span data-ttu-id="2baa3-114">Liczony od zera numer kolumny.</span><span class="sxs-lookup"><span data-stu-id="2baa3-114">The zero-based ordinal of the column.</span></span></param>
        <summary><span data-ttu-id="2baa3-115">Zwraca <see langword="true" /> Jeśli wywarła kolumny za pomocą instrukcji INSERT lub UPDATE.</span><span class="sxs-lookup"><span data-stu-id="2baa3-115">Returns <see langword="true" /> if a column was affected by an INSERT or UPDATE statement.</span></span></summary>
        <returns>
          <span data-ttu-id="2baa3-116"><see langword="true" /> Jeśli kolumna została wpływ operacji INSERT lub UPDATE.</span><span class="sxs-lookup"><span data-stu-id="2baa3-116"><see langword="true" /> if the column was affected by an INSERT or UPDATE operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2baa3-117">Wywoływany w kontekście wyzwalacz gdzie wartość <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> właściwość nie jest <see langword="Insert" /> lub <see langword="Update" />.</span><span class="sxs-lookup"><span data-stu-id="2baa3-117">Called in the context of a trigger where the value of the <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> property is not <see langword="Insert" /> or <see langword="Update" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerAction">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.TriggerAction TriggerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.TriggerAction TriggerAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TriggerAction As TriggerAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::TriggerAction TriggerAction { Microsoft::SqlServer::Server::TriggerAction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.TriggerAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2baa3-118">Wskazuje, jaka akcja uruchomiła wyzwalacz.</span><span class="sxs-lookup"><span data-stu-id="2baa3-118">Indicates what action fired the trigger.</span></span></summary>
        <value><span data-ttu-id="2baa3-119">Akcja, która będzie uruchamiany jako <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</span><span class="sxs-lookup"><span data-stu-id="2baa3-119">The action that fired the trigger as a <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2baa3-120">W poniższym przykładzie przedstawiono wyzwalacz inspekcji.</span><span class="sxs-lookup"><span data-stu-id="2baa3-120">The following example shows an auditing trigger.</span></span> <span data-ttu-id="2baa3-121">Jeśli <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> lub <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> nastąpiła akcja dotyczy wierszy są pobierane z tabel INSERTED ani DELETED.</span><span class="sxs-lookup"><span data-stu-id="2baa3-121">If an <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> or <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> action occurred, the affected rows are retrieved from the INSERTED and DELETED tables.</span></span>  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#2)]
 [!code-vb[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>