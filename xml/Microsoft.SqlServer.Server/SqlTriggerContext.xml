<Type Name="SqlTriggerContext" FullName="Microsoft.SqlServer.Server.SqlTriggerContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="143e9584233a39a7dd01915e9d96960c5e11cf62" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30431049" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlTriggerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTriggerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlTriggerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTriggerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTriggerContext sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia informacje kontekstowe dotyczące wyzwalaczy, które zostało zainicjowane.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podane informacje kontekstowe zawiera typ akcji, który spowodował uruchomienie wyzwalacza, kolumny, które zostały zmodyfikowane w operacji aktualizacji, a w przypadku języka definicji danych (DDL) wyzwalania struktury XML EventData (zobacz "języka Transact-SQL Odwołanie"w podręcznikach Online programu SQL Server), który opisuje operację wyzwalającą.  
  
 Wystąpienie <xref:Microsoft.SqlServer.Server.SqlTriggerContext> jest dostępna z <xref:Microsoft.SqlServer.Server.SqlContext> klasy, gdy kod działa w ramach wyzwalacza za pośrednictwem <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:Microsoft.SqlServer.Server.SqlTriggerContext> obiekt używany do określenia, czy <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> nastąpiła Akcja. Jeśli wiersz została umieszczona w `user`tabeli, nazwę użytkownika i nazwisko są pobierane z wstawionego wiersza i dodawane do **UserNameAudit** tabeli.  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę kolumn zawarty w tabeli danych powiązane z wyzwalacza. Ta właściwość jest tylko do odczytu.</summary>
        <value>Liczba kolumn zawarty w tabeli danych powiązane wyzwalacza, jako liczba całkowita.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> Właściwość jest przydatna określić maksymalną liczba porządkowa który <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> umożliwia wywołanie danego wyzwalacza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventData">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlXml EventData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlTypes.SqlXml EventData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventData As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlXml ^ EventData { System::Data::SqlTypes::SqlXml ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera dane zdarzenia specyficzne dla akcji, która wywołała wyzwalacz.</summary>
        <value>Dane zdarzenia specyficzne dla akcji, który uruchamiany jako <see cref="T:System.Data.SqlTypes.SqlXml" /> Jeśli informacje są dostępne; <see langword="null" /> inaczej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te informacje są dostępne dane definition language (DDL) wyzwalaczy. Informacje są niedostępne za pośrednictwem tej właściwości wyzwalaczy języka manipulacji danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatedColumn">
      <MemberSignature Language="C#" Value="public bool IsUpdatedColumn (int columnOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUpdatedColumn(int32 columnOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpdatedColumn (columnOrdinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpdatedColumn(int columnOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnOrdinal">Liczony od zera numer kolumny.</param>
        <summary>Zwraca <see langword="true" /> Jeśli wywarła kolumny za pomocą instrukcji INSERT lub UPDATE.</summary>
        <returns>
          <see langword="true" /> Jeśli kolumna została wpływ operacji INSERT lub UPDATE.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Wywoływany w kontekście wyzwalacz gdzie wartość <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> właściwość nie jest <see langword="Insert" /> lub <see langword="Update" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerAction">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.TriggerAction TriggerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.TriggerAction TriggerAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TriggerAction As TriggerAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::TriggerAction TriggerAction { Microsoft::SqlServer::Server::TriggerAction get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.TriggerAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, jaka akcja uruchomiła wyzwalacz.</summary>
        <value>Akcja, która będzie uruchamiany jako <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono wyzwalacz inspekcji. Jeśli <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> lub <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> nastąpiła akcja dotyczy wierszy są pobierane z tabel INSERTED ani DELETED.  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#2)]
 [!code-vb[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>