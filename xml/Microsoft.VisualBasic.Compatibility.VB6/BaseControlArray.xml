<Type Name="BaseControlArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7dc8eb404a463ac6f350b96c4da1c2f05b2889c9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69094556" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BaseControlArray extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseControlArray&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseControlArray abstract : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type BaseControlArray = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d6bad-101">Implementuje podstawowe funkcje wspólne dla kontroli tablic w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-101">Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-102">Nie są zazwyczaj dziedziczone z `BaseControlArray`.</span><span class="sxs-lookup"><span data-stu-id="d6bad-102">You do not typically inherit from `BaseControlArray`.</span></span> <span data-ttu-id="d6bad-103">Aby utworzyć własną tablicę kontroli, Dziedzicz z jednej z klas tablicy formantów w `Microsoft.VisualBasic.Compatibility.VB6` przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="d6bad-103">To create your own control array, inherit from one of the control array classes in the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-104">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-104">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-105">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-105">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-106">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-106">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d6bad-107">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d6bad-107">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bad-108">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d6bad-108">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-109"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów używanych w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-109">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="d6bad-110">Ponieważ ta klasa nie jest zazwyczaj używana do tworzenia wystąpienia klasy, ten Konstruktor zazwyczaj nie jest wywoływany bezpośrednio, ale jest wywoływany przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="d6bad-110">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-111">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-111">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-112">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-112">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-113">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-113">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container"><span data-ttu-id="d6bad-114"><see cref="T:System.ComponentModel.IContainer" /> Miejsce, w którym będzie hostowana Tablica formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-114">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</span></span></param>
        <summary><span data-ttu-id="d6bad-115">Inicjuje nowe wystąpienie <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> klasy, opcjonalnie określając kontener.</span><span class="sxs-lookup"><span data-stu-id="d6bad-115">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-116"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-116">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="d6bad-117">Ponieważ ta klasa nie jest zazwyczaj używana do tworzenia wystąpienia klasy, ten Konstruktor zazwyczaj nie jest wywoływany bezpośrednio, ale jest wywoływany przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="d6bad-117">Because this class is not typically used to create an instance of the class, this constructor is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-118">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-118">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-119">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-119">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-120">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-120">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCanExtend">
      <MemberSignature Language="C#" Value="protected bool BaseCanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseCanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseCanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseCanExtend(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.BaseCanExtend : obj -&gt; bool" Usage="baseControlArray.BaseCanExtend target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d6bad-121"><see cref="T:System.Windows.Forms.Control" /> Do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="d6bad-121">The <see cref="T:System.Windows.Forms.Control" /> to test.</span></span></param>
        <summary><span data-ttu-id="d6bad-122">Pobiera wartość wskazującą, czy formant jest elementem członkowskim tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-122">Gets a value that indicates whether a control is a member of a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-123"><see langword="true" />Jeśli formant jest elementem członkowskim tablicy formantów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d6bad-123"><see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-124"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-124">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="d6bad-125">Ponieważ ta klasa nie jest zazwyczaj używana do tworzenia wystąpienia klasy, ta `Protected` metoda zazwyczaj nie jest wywoływana bezpośrednio, ale jest wywoływana przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="d6bad-125">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-126">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-126">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-127">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-127">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-128">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-128">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6bad-129">Klasy pochodne powinny mieć pewność, <paramref name="target" /> że jest to poprawnego typu dla tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-129">Derived classes should make sure that <paramref name="target" /> is of the correct type for the control array.</span></span>  
  
<span data-ttu-id="d6bad-130">Podczas przesłonięcia <see langword="BaseCanExtend" /> w klasie pochodnej nie należy <see langword="BaseCanExtend" /> wywoływać metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d6bad-130">When you override <see langword="BaseCanExtend" /> in a derived class, do not call the <see langword="BaseCanExtend" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetIndex">
      <MemberSignature Language="C#" Value="protected short BaseGetIndex (object ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance int16 BaseGetIndex(object ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetIndex (ctl As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; short BaseGetIndex(System::Object ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.BaseGetIndex : obj -&gt; int16" Usage="baseControlArray.BaseGetIndex ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="d6bad-131">, <see cref="T:System.Windows.Forms.Control" /> Dla którego chcesz pobrać indeks.</span><span class="sxs-lookup"><span data-stu-id="d6bad-131">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="d6bad-132">Pobiera indeks kontrolki w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-132">Gets the index of a control in a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-133"><see langword="Short" /> Liczba całkowita reprezentująca indeks kontrolki w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-133">A <see langword="Short" /> integer representing the index of the control in the control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-134"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-134">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="d6bad-135">Ponieważ ta klasa nie jest zazwyczaj używana do tworzenia wystąpienia klasy, ta `Protected` metoda zazwyczaj nie jest wywoływana bezpośrednio, ale jest wywoływana przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="d6bad-135">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-136">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-136">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-137">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-137">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-138">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-138">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6bad-139">Podczas przesłonięcia <see langword="BaseGetIndex" /> w klasie pochodnej nie należy <see langword="BaseGetIndex" /> wywoływać metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d6bad-139">When you override <see langword="BaseGetIndex" /> in a derived class, do not call the <see langword="BaseGetIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetItem">
      <MemberSignature Language="C#" Value="protected object BaseGetItem (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance object BaseGetItem(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetItem (Index As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGetItem(short Index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetItem : int16 -&gt; obj" Usage="baseControlArray.BaseGetItem Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="d6bad-140">Liczba całkowita reprezentująca indeks kontrolki w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-140">An integer that represents the index of the control in the control array.</span></span></param>
        <summary><span data-ttu-id="d6bad-141">Pobiera formant dla określonego indeksu w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-141">Gets the control for a specified index in a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-142"><see cref="T:System.Windows.Forms.Control" /> Określony .<paramref name="Index" /></span><span class="sxs-lookup"><span data-stu-id="d6bad-142">The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-143"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-143">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="d6bad-144">Ponieważ ta klasa nie jest zazwyczaj używana do tworzenia wystąpienia klasy, ta `Protected` metoda zazwyczaj nie jest wywoływana bezpośrednio, ale jest wywoływana przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="d6bad-144">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-145">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-145">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-146">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-146">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-147">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-147">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6bad-148">Podczas przesłonięcia <see langword="BaseGetItem" /> w klasie pochodnej nie należy <see langword="BaseGetItem" /> wywoływać metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d6bad-148">When you override <see langword="BaseGetItem" /> in a derived class, do not call the <see langword="BaseGetItem" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseResetIndex">
      <MemberSignature Language="C#" Value="protected void BaseResetIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseResetIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseResetIndex (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseResetIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseResetIndex : obj -&gt; unit" Usage="baseControlArray.BaseResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="d6bad-149">A <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="d6bad-149">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="d6bad-150">Nieobsługiwane w <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> klasie.</span><span class="sxs-lookup"><span data-stu-id="d6bad-150">Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-151">Ta metoda nie jest obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="d6bad-151">This method is not supported.</span></span>  
  
 <span data-ttu-id="d6bad-152"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-152">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> -  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-153">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-153">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-154">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-154">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-155">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-155">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSetIndex">
      <MemberSignature Language="C#" Value="protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseSetIndex(object ctl, int16 Index, bool fIsDynamic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSetIndex (ctl As Object, Index As Short, Optional fIsDynamic As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.BaseSetIndex : obj * int16 * bool -&gt; unit" Usage="baseControlArray.BaseSetIndex (ctl, Index, fIsDynamic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
        <Parameter Name="Index" Type="System.Int16" />
        <Parameter Name="fIsDynamic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="d6bad-156"><see cref="T:System.Windows.Forms.Control" /> Dla którego ma zostać ustawiony indeks.</span><span class="sxs-lookup"><span data-stu-id="d6bad-156">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</span></span></param>
        <param name="Index"><span data-ttu-id="d6bad-157"><see langword="Short" /> Liczba całkowita, która reprezentuje indeks dla kontrolki.</span><span class="sxs-lookup"><span data-stu-id="d6bad-157">A <see langword="Short" /> integer that represents the index for the control.</span></span></param>
        <param name="fIsDynamic"><span data-ttu-id="d6bad-158">Opcjonalny.</span><span class="sxs-lookup"><span data-stu-id="d6bad-158">Optional.</span></span> <span data-ttu-id="d6bad-159">Określanie, czy formant został utworzony w czasie projektowania (<see langword="false" />) czy w czasie wykonywania (<see langword="true" />). <see langword="Boolean" /></span><span class="sxs-lookup"><span data-stu-id="d6bad-159">A <see langword="Boolean" /> specifying whether the control was created at design time (<see langword="false" />) or at run time (<see langword="true" />).</span></span></param>
        <summary><span data-ttu-id="d6bad-160">Ustawia indeks kontrolki w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-160">Sets the index for a control in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-161"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-161">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="d6bad-162">Ponieważ ta klasa nie jest zazwyczaj używana do tworzenia wystąpienia klasy, ta `Protected` metoda zazwyczaj nie jest wywoływana bezpośrednio, ale jest wywoływana przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="d6bad-162">Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-163">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-163">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-164">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-164">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-165">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-165">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6bad-166">Podczas przesłonięcia <see langword="BaseSetIndex" /> w klasie pochodnej nie należy <see langword="BaseSetIndex" /> wywoływać metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d6bad-166">When you override <see langword="BaseSetIndex" /> in a derived class, do not call the <see langword="BaseSetIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="BaseShouldSerializeIndex">
      <MemberSignature Language="C#" Value="protected bool BaseShouldSerializeIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseShouldSerializeIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseShouldSerializeIndex (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseShouldSerializeIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseShouldSerializeIndex : obj -&gt; bool" Usage="baseControlArray.BaseShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="d6bad-167">A <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="d6bad-167">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="d6bad-168">Zwraca wartość wskazującą, czy formant jest elementem członkowskim tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-168">Returns a value that indicates whether a control is a member of a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-169"><see langword="true" />Jeśli formant jest elementem członkowskim tablicy formantów; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="d6bad-169"><see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-170"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-170">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="d6bad-171">Ponieważ ta klasa nie jest zazwyczaj używana do tworzenia wystąpienia klasy, ta `Protected` metoda zazwyczaj nie jest wywoływana bezpośrednio, ale jest wywoływana przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="d6bad-171">Because this class is not typically used to create an instance of the class, this `Protected` method is usually  not called directly but is instead called by a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-172">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-172">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-173">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-173">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-174">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-174">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6bad-175">Podczas przesłonięcia <see langword="BaseShouldSerializeIndex" /> w klasie pochodnej nie należy <see langword="BaseShouldSerializeIndex" /> wywoływać metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d6bad-175">When you override <see langword="BaseShouldSerializeIndex" /> in a derived class, do not call the <see langword="BaseShouldSerializeIndex" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="components">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.IContainer components;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.ComponentModel.IContainer components" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberSignature Language="VB.NET" Value="Protected components As IContainer " />
      <MemberSignature Language="C++ CLI" Value="protected: System::ComponentModel::IContainer ^ components;" />
      <MemberSignature Language="F#" Value="val mutable components : System.ComponentModel.IContainer" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bad-176">Przechowuje kontener dla tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-176">Stores the container for a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-177"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-177">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-178">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-178">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-179">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-179">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-180">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-180">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controlAddedAtDesignTime">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controlAddedAtDesignTime;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controlAddedAtDesignTime" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberSignature Language="VB.NET" Value="Protected controlAddedAtDesignTime As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controlAddedAtDesignTime;" />
      <MemberSignature Language="F#" Value="val mutable controlAddedAtDesignTime : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bad-181">Przechowuje wartości, aby sprawdzić, czy kontrolka w tablicy formantów została utworzona w czasie projektowania czy w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="d6bad-181">Stores values to track whether a control in a control array was created at design time or at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-182"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-182">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-183">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-183">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-184">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-184">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-185">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-185">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controls">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controls;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controls" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberSignature Language="VB.NET" Value="Protected controls As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controls;" />
      <MemberSignature Language="F#" Value="val mutable controls : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bad-186">Przechowuje wartości reprezentujące kontrolki w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-186">Stores values that represent the controls in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-187"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-187">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-188">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-188">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-189">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-189">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-190">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-190">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public short Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public Function Count () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short Count();" />
      <MemberSignature Language="F#" Value="member this.Count : unit -&gt; int16" Usage="baseControlArray.Count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bad-191">Zwraca liczbę kontrolek w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-191">Returns the number of controls in a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-192">Krótki, który zawiera liczbę kontrolek.</span><span class="sxs-lookup"><span data-stu-id="d6bad-192">A Short that contains the number of controls.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-193">Tej właściwości można użyć w odniesieniu [do... Następna instrukcja](~/docs/visual-basic/language-reference/statements/for-next-statement.md) do wykonania operacji na kontrolkach w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-193">You can use this property in a [For...Next Statement](~/docs/visual-basic/language-reference/statements/for-next-statement.md) to perform an operation on the controls in a control array.</span></span>  
  
 <span data-ttu-id="d6bad-194"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów używanych w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-194">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-195">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-195">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-196">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-196">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-197">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-197">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="baseControlArray.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d6bad-198"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</span><span class="sxs-lookup"><span data-stu-id="d6bad-198"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d6bad-199">Zwalnia niezarządzane zasoby, które są używane przez formant w tablicy formantów i opcjonalnie zwalnia zarządzane zasoby.</span><span class="sxs-lookup"><span data-stu-id="d6bad-199">Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-200">Ta metoda jest wywoływana przez metodę publiczną `Dispose()` <xref:System.Object.Finalize%2A> i metodę.</span><span class="sxs-lookup"><span data-stu-id="d6bad-200">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="d6bad-201">`Dispose()`wywołuje metodę chronioną `Dispose(Boolean)` z parametrem Dispose ustawionym `true`na.</span><span class="sxs-lookup"><span data-stu-id="d6bad-201">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="d6bad-202"><xref:System.Object.Finalize%2A>wywołuje `Dispose` z parametrem Dispose ustawionym `false`na.</span><span class="sxs-lookup"><span data-stu-id="d6bad-202"><xref:System.Object.Finalize%2A> invokes `Dispose` with the disposing parameter set to `false`.</span></span>  
  
 <span data-ttu-id="d6bad-203">Gdy parametr likwidacji ma `true`wartość, ta metoda zwalnia wszystkie zasoby przechowywane przez wszystkie obiekty zarządzane, do których odwołuje się ten formant.</span><span class="sxs-lookup"><span data-stu-id="d6bad-203">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this control references.</span></span> <span data-ttu-id="d6bad-204">Ta metoda wywołuje `Dispose()` metodę każdego przywoływanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="d6bad-204">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6bad-205">
            <see langword="Dispose" />może być wywoływana wiele razy przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="d6bad-205">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d6bad-206">Podczas przesłonięcia <see langword="Dispose(Boolean)" />upewnij się, że nie odwołują się do obiektów, które zostały wcześniej usunięte w ramach <see langword="Dispose" />wcześniejszego wywołania do.</span><span class="sxs-lookup"><span data-stu-id="d6bad-206">When you override <see langword="Dispose(Boolean)" />, make sure not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d6bad-207">Aby uzyskać więcej informacji na temat sposobu <see langword="Dispose(Boolean)" />implementacji, zobacz [implementowanie metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="d6bad-207">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span> <span data-ttu-id="d6bad-208">Aby uzyskać więcej informacji <see langword="Dispose" /> na <see cref="M:System.Object.Finalize" />temat i, zobacz [Oczyszczanie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [Zastępowanie metody Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="d6bad-208">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="fIsEndInitCalled">
      <MemberSignature Language="C#" Value="protected bool fIsEndInitCalled;" />
      <MemberSignature Language="ILAsm" Value=".field family bool fIsEndInitCalled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberSignature Language="VB.NET" Value="Protected fIsEndInitCalled As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected: bool fIsEndInitCalled;" />
      <MemberSignature Language="F#" Value="val mutable fIsEndInitCalled : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bad-209">Przechowuje wartość wskazującą, czy kod inicjalizacji kontenera tablicy kontrolnej zakończył wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="d6bad-209">Stores a value indicating whether the initialization code for a control array's container has finished executing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-210"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów używanych w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-210">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-211">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-211">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-212">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-212">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-213">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-213">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected abstract Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="abstract member GetControlInstanceType : unit -&gt; Type" Usage="baseControlArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bad-214">Zwraca typ kontrolki w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-214">Returns the type of a control in a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-215">Ta metoda musi zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d6bad-215">This method must be overridden.</span></span>  
  
<span data-ttu-id="d6bad-216"><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-216">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span> <span data-ttu-id="d6bad-217">Ponieważ ta klasa nie jest zazwyczaj używana do tworzenia wystąpienia klasy, ta <see langword="Protected" /> metoda zazwyczaj nie jest wywoływana bezpośrednio, ale jest wywoływana przez klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="d6bad-217">Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="d6bad-218">Funkcje i obiekty w <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-218">Functions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-219">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-219">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-220">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-220">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
</para></block></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6bad-221">Podczas przesłonięcia <see langword="GetControlInstanceType" /> w klasie pochodnej nie należy <see langword="GetControlInstanceType" /> wywoływać metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d6bad-221">When you override <see langword="GetControlInstanceType" /> in a derived class, do not call the <see langword="GetControlInstanceType" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="baseControlArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bad-222">Zwraca odwołanie do obiektu modułu wyliczającego, który jest używany do iteracji w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-222">Returns a reference to an enumerator object, which is used to iterate over a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-223">Element <see cref="T:System.Collections.IEnumerator" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d6bad-223">A <see cref="T:System.Collections.IEnumerator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-224"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów używanych w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-224">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-225">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-225">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-226">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-226">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-227">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-227">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected abstract void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member HookUpControlEvents : obj -&gt; unit" Usage="baseControlArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="d6bad-228">A <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="d6bad-228">A <see cref="T:System.Windows.Forms.Control" />.</span></span></param>
        <summary><span data-ttu-id="d6bad-229">Dodaje programy obsługi zdarzeń dla formantu w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-229">Adds event handlers for a control in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-230">Ta metoda musi zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="d6bad-230">This method must be overridden.</span></span>  
  
 <span data-ttu-id="d6bad-231"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-231">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-232">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-232">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-233">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-233">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-234">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-234">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d6bad-235">Podczas przesłonięcia <see langword="HookUpControlEvents" /> w klasie pochodnej nie należy <see langword="HookUpControlEvents" /> wywoływać metody klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="d6bad-235">When you override <see langword="HookUpControlEvents" /> in a derived class, do not call the <see langword="HookUpControlEvents" /> method of the base class.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="indices">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable indices;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable indices" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberSignature Language="VB.NET" Value="Protected indices As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ indices;" />
      <MemberSignature Language="F#" Value="val mutable indices : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d6bad-236">Przechowuje indeksy dla tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-236">Stores the indices for a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-237"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów używanych w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-237">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-238">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-238">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-239">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-239">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-240">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-240">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public short LBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 LBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound" />
      <MemberSignature Language="VB.NET" Value="Public Function LBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short LBound();" />
      <MemberSignature Language="F#" Value="member this.LBound : unit -&gt; int16" Usage="baseControlArray.LBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bad-241">Zwraca obiekt <see langword="Short" /> , który zawiera najmniejszy dostępny indeks w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-241">Returns a <see langword="Short" /> that contains the smallest available subscript for a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-242">A <see langword="Short" /> , który zawiera dolne granice tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-242">A <see langword="Short" /> that contains the lower bounds of a control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-243">Funkcja jest używana z funkcją, <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> aby określić rozmiar tablicy kontrolnej. `LBound`</span><span class="sxs-lookup"><span data-stu-id="d6bad-243">The `LBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="d6bad-244"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów używanych w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-244">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-245">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-245">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-246">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-246">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-247">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-247">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Load(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(short Index);" />
      <MemberSignature Language="F#" Value="member this.Load : int16 -&gt; unit" Usage="baseControlArray.Load Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="d6bad-248"><see langword="Short" /> Reprezentuje indeks nowej kontrolki.</span><span class="sxs-lookup"><span data-stu-id="d6bad-248">A <see langword="Short" /> that represents the index of the new control.</span></span></param>
        <summary><span data-ttu-id="d6bad-249">Tworzy nowy element w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-249">Creates a new element in a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-250">Ta metoda jest odpowiednikiem funkcji Visual Basic 6,0 `Load` do dynamicznego tworzenia nowego elementu tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-250">This method is the equivalent of the Visual Basic 6.0 `Load` function for dynamically creating a new control array element.</span></span>  
  
 <span data-ttu-id="d6bad-251"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów używanych w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-251">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-252">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-252">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-253">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-253">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-254">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-254">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit" ExplicitInterfaceMemberName="BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bad-255">Rozpoczyna inicjalizację formantu.</span><span class="sxs-lookup"><span data-stu-id="d6bad-255">Begins the initialization of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-256">Środowiska projektowe zwykle używają tej metody do uruchamiania inicjowania składnika, który jest używany w formularzu lub używany przez inny składnik.</span><span class="sxs-lookup"><span data-stu-id="d6bad-256">Design environments typically use this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="d6bad-257"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> Metoda przerywa inicjalizację.</span><span class="sxs-lookup"><span data-stu-id="d6bad-257">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> method ends the initialization.</span></span> <span data-ttu-id="d6bad-258">Użycie metod <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> i uniemożliwia użycie kontrolki przed jej pełnym zainicjowaniem. `BeginInit`</span><span class="sxs-lookup"><span data-stu-id="d6bad-258">Using the `BeginInit` and <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="d6bad-259">Inicjalizacja występuje w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="d6bad-259">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-260">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-260">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-261">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-261">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-262">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-262">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit" ExplicitInterfaceMemberName="EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bad-263">Zamyka inicjalizację formantu.</span><span class="sxs-lookup"><span data-stu-id="d6bad-263">Ends the initialization of a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-264">Środowiska projektowe zwykle używają tej metody do kończenia inicjalizacji składnika, który jest używany w formularzu lub używany przez inny składnik.</span><span class="sxs-lookup"><span data-stu-id="d6bad-264">Design environments typically use this method to finish the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="d6bad-265">`EndInit` Metoda przerywa inicjalizację.</span><span class="sxs-lookup"><span data-stu-id="d6bad-265">The `EndInit` method ends the initialization.</span></span> <span data-ttu-id="d6bad-266">Użycie metod `EndInit` i uniemożliwia użycie kontrolki przed jej pełnym zainicjowaniem. <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A></span><span class="sxs-lookup"><span data-stu-id="d6bad-266">Using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A> and `EndInit` methods prevents the control from being used before it is fully initialized.</span></span> <span data-ttu-id="d6bad-267">Inicjalizacja występuje w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="d6bad-267">The initialization occurs at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-268">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-268">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-269">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-269">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-270">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-270">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public short UBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 UBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound" />
      <MemberSignature Language="VB.NET" Value="Public Function UBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short UBound();" />
      <MemberSignature Language="F#" Value="member this.UBound : unit -&gt; int16" Usage="baseControlArray.UBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d6bad-271"><see langword="Short" /> Zwraca wartość zawierającą największy dostępny indeks w tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-271">Returns a <see langword="Short" /> that contains the largest available subscript for a control array.</span></span></summary>
        <returns><span data-ttu-id="d6bad-272">A <see langword="Short" /> , który zawiera górne granice tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-272">A <see langword="Short" /> that contains the upper bounds of a control array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-273">Funkcja jest używana z funkcją, <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> aby określić rozmiar tablicy kontrolnej. `UBound`</span><span class="sxs-lookup"><span data-stu-id="d6bad-273">The `UBound` function is used with the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> function to determine the size of a control array.</span></span>  
  
 <span data-ttu-id="d6bad-274"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów używanych w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-274">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-275">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-275">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-276">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-276">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-277">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-277">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Unload(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(short Index);" />
      <MemberSignature Language="F#" Value="member this.Unload : int16 -&gt; unit" Usage="baseControlArray.Unload Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="d6bad-278"><see langword="Short" /> Reprezentuje indeks kontrolki do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="d6bad-278">A <see langword="Short" /> that represents the index of the control to remove.</span></span></param>
        <summary><span data-ttu-id="d6bad-279">Usuwa formant z tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-279">Removes a control from a control array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6bad-280">Ta metoda jest odpowiednikiem funkcji Visual Basic 6,0 `Unload` do dynamicznego usuwania elementu tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-280">This method is the equivalent of the Visual Basic 6.0 `Unload` function for dynamically removing a control array element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-281">Tylko kontrolki, które zostały dodane dynamicznie przy <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> użyciu metody, można usunąć z tablicy formantów.</span><span class="sxs-lookup"><span data-stu-id="d6bad-281">Only controls that were added dynamically by using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method can be removed from the control array.</span></span>  
  
 <span data-ttu-id="d6bad-282"><xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> Klasa jest klasą bazową dla wszystkich tablic formantów, które są używane w aplikacjach uaktualnionych z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="d6bad-282">The <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6bad-283">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="d6bad-283">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="d6bad-284">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="d6bad-284">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="d6bad-285">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="d6bad-285">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
