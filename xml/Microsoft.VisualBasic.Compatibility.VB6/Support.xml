<Type Name="Support" FullName="Microsoft.VisualBasic.Compatibility.VB6.Support">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e951a9a7f4a15b1e3979fda5ddfe855cb006394e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36728268" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Support" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Support extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.Support" />
  <TypeSignature Language="VB.NET" Value="Public Module Support" />
  <TypeSignature Language="C++ CLI" Value="public ref class Support sealed" />
  <TypeSignature Language="F#" Value="type Support = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="51202-101">Zawiera różne funkcje narzędzie zgodności z poprzednimi wersjami w Visual Basic 6.0.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51202-101">Contains various utility functions for backward compatibility with Visual Basic 6.0.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-102">Funkcje w tej klasie są używane podczas uaktualniania projekty Visual Basic 6.0 do programu Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-102">The functions in this class are used during the upgrade of Visual Basic 6.0 projects to Visual Basic.</span></span> <span data-ttu-id="51202-103">Niektóre funkcje Zastąp funkcje Visual Basic 6.0, które nie są już obsługiwane w języku Visual Basic; inne kompensacji różnice w modelach obiektów.</span><span class="sxs-lookup"><span data-stu-id="51202-103">Some functions replace Visual Basic 6.0 functions that are no longer supported in Visual Basic; others compensate for differences in the object models.</span></span>  
  
 <span data-ttu-id="51202-104">Aby użyć funkcji w tej klasy w projektach Visual Basic, Dodaj odwołanie do `Microsoft.VisualBasic.Compatibility.VB6` przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="51202-104">To use functions in this class in a Visual Basic project, add a reference to the `Microsoft.VisualBasic.Compatibility.VB6` namespace.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyArray">
      <MemberSignature Language="C#" Value="public static Array CopyArray (Array SourceArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Array CopyArray(class System.Array SourceArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyArray (SourceArray As Array) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CopyArray(Array ^ SourceArray);" />
      <MemberSignature Language="F#" Value="static member CopyArray : Array -&gt; Array" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray SourceArray" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceArray" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="SourceArray">
          <span data-ttu-id="51202-105">A <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-105">A <see cref="T:System.Array" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-106">Duplikaty funkcje Visual Basic 6.0 przypisywania <see langword="Array" /> do <see langword="Variant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-106">Duplicates Visual Basic 6.0 functionality of assigning an <see langword="Array" /> to a <see langword="Variant" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-107">Tablica do skopiowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-107">The array to copy.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-108">Visual Basic 6.0 `Variant` — typ danych nie jest już obsługiwana w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-108">The Visual Basic 6.0 `Variant` data type is no longer supported in Visual Basic.</span></span> <span data-ttu-id="51202-109">`CopyArray` Funkcja jest używana przez narzędzia uaktualniania do kopiowania `Array` do lub z `Variant` tablicy.</span><span class="sxs-lookup"><span data-stu-id="51202-109">The `CopyArray` function is used by the upgrade tools to copy an `Array` to or from a `Variant` array.</span></span>  
  
 <span data-ttu-id="51202-110">Aby skopiować tablicy w języku Visual Basic, należy użyć <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> lub <xref:System.Array.CopyTo%2A> metody <xref:System.Array> klasy.</span><span class="sxs-lookup"><span data-stu-id="51202-110">To copy an array in Visual Basic, use the <xref:System.Array.Clone%2A>, <xref:System.Array.Copy%2A> or <xref:System.Array.CopyTo%2A> methods of the <xref:System.Array> class.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorToIPicture">
      <MemberSignature Language="C#" Value="public static object CursorToIPicture (System.Windows.Forms.Cursor curs);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CursorToIPicture(class System.Windows.Forms.Cursor curs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)" />
      <MemberSignature Language="VB.NET" Value="Public Function CursorToIPicture (curs As Cursor) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CursorToIPicture(System::Windows::Forms::Cursor ^ curs);" />
      <MemberSignature Language="F#" Value="static member CursorToIPicture : System.Windows.Forms.Cursor -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture curs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curs" Type="System.Windows.Forms.Cursor" />
      </Parameters>
      <Docs>
        <param name="curs">
          <span data-ttu-id="51202-111">
            <see cref="T:System.Windows.Forms.Cursor" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-111">The <see cref="T:System.Windows.Forms.Cursor" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-112">Zwraca OLE <see langword="IPicture" /> obiekt, który odpowiada określonym <see cref="T:System.Windows.Forms.Cursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-112">Returns an OLE <see langword="IPicture" /> object that corresponds to the specified <see cref="T:System.Windows.Forms.Cursor" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-113">
            <see cref="T:System.Object" /> Reprezentujący OLE <see langword="IPicture" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-113">An <see cref="T:System.Object" /> that represents the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-114">W języku Visual Basic 6.0 `MouseIcon` właściwości formularza lub kontrolki, można załadować niestandardowego `MousePointer` (kursora).</span><span class="sxs-lookup"><span data-stu-id="51202-114">In Visual Basic 6.0, the `MouseIcon` property of a form or control could be used to load a custom `MousePointer` (cursor).</span></span> <span data-ttu-id="51202-115">W niektórych przypadkach obrazu `MouseIcon` są przechowywane jako `stdOle.IPicture`; ta funkcja jest używana przez narzędzie uaktualnienia można przekonwertować <xref:System.Windows.Forms.Cursor> do `stdOle.IPicture`.</span><span class="sxs-lookup"><span data-stu-id="51202-115">In some cases, the image for the `MouseIcon` was stored as a `stdOle.IPicture`; this function is used by the upgrade tool to convert a <xref:System.Windows.Forms.Cursor> to a `stdOle.IPicture`.</span></span>  
  
 <span data-ttu-id="51202-116">Aby przekonwertować <xref:System.Windows.Forms.Cursor> w języku Visual Basic, użyj <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> metody <xref:System.Windows.Forms.AxHost> klasy.</span><span class="sxs-lookup"><span data-stu-id="51202-116">To convert a <xref:System.Windows.Forms.Cursor> in Visual Basic, use the <xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A> method of the <xref:System.Windows.Forms.AxHost> class.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eqv">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51202-117">Dokonuje logicznego równoważność dwóch wyrażeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-117">Performs a logical equivalence on two expressions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static bool Eqv (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Eqv(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Eqv(bool a, bool b);" />
      <MemberSignature Language="F#" Value="static member Eqv : bool * bool -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-118">A <see cref="T:System.Boolean" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-118">A <see cref="T:System.Boolean" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-119">A <see cref="T:System.Boolean" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-119">A <see cref="T:System.Boolean" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-120">Dokonuje logicznego równoważność dwa <see cref="T:System.Boolean" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-120">Performs a logical equivalence on two <see cref="T:System.Boolean" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-121">
            <see langword="true" /> Jeśli dwa wyrażenia są równe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-121">
              <see langword="true" /> if the two expressions are equal; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-122">Jeśli jedno z wyrażeń ma `Null`, wynikiem jest również `Null`.</span><span class="sxs-lookup"><span data-stu-id="51202-122">If either expression is `Null`, result is also `Null`.</span></span> <span data-ttu-id="51202-123">Gdy jest ani wyrażenia `Null`, wynik jest określana zgodnie z poniższą tabelą:</span><span class="sxs-lookup"><span data-stu-id="51202-123">When neither expression is `Null`, result is determined according to the following table:</span></span>  
  
|<span data-ttu-id="51202-124">Jeśli jest wyrażenie1</span><span class="sxs-lookup"><span data-stu-id="51202-124">If expression1 is</span></span>|<span data-ttu-id="51202-125">I jest wyrażenie2</span><span class="sxs-lookup"><span data-stu-id="51202-125">And expression2 is</span></span>|<span data-ttu-id="51202-126">W rezultacie</span><span class="sxs-lookup"><span data-stu-id="51202-126">The result is</span></span>|  
|-----------------------|------------------------|-------------------|  
|`true`|`true`|`true`|  
|`true`|`false`|`false`|  
|`false`|`true`|`false`|  
|`false`|`false`|`true`|  
  
 <span data-ttu-id="51202-127">W języku Visual Basic `Eqv` operator nie jest już częścią języka Visual Basic; użyj operatora porównania równości (=) zamiast `Eqv` dla oceny logiczne.</span><span class="sxs-lookup"><span data-stu-id="51202-127">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; use the equals (=) comparison operator in place of `Eqv` for logical evaluations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static byte Eqv (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Eqv(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Eqv(System::Byte a, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member Eqv : byte * byte -&gt; byte" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-128">A <see cref="T:System.Byte" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-128">A <see cref="T:System.Byte" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-129">A <see cref="T:System.Byte" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-129">A <see cref="T:System.Byte" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-130">Dokonuje logicznego równoważność dwa <see cref="T:System.Byte" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-130">Performs a logical equivalence on two <see cref="T:System.Byte" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-131">A <see cref="T:System.Byte" /> zawierający wynik porównanie bitowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-131">A <see cref="T:System.Byte" /> that contains the result of the bitwise comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-132">`Eqv` Operator przeprowadza porównanie bitowe identycznie pozycjonowane bitów w dwóch wyrażeń liczbowych i ustawia odpowiednie bit zgodnie z poniższą tabelą:</span><span class="sxs-lookup"><span data-stu-id="51202-132">The `Eqv` operator performs a bitwise comparison of identically positioned bits in two numeric expressions and sets the corresponding bit according to the following table:</span></span>  
  
|<span data-ttu-id="51202-133">Jeśli bit wyrażenie1 wynosi</span><span class="sxs-lookup"><span data-stu-id="51202-133">If bit in expression1 is</span></span>|<span data-ttu-id="51202-134">I jest bit wyrażenie2</span><span class="sxs-lookup"><span data-stu-id="51202-134">And bit in expression2 is</span></span>|<span data-ttu-id="51202-135">W rezultacie</span><span class="sxs-lookup"><span data-stu-id="51202-135">The result is</span></span>|  
|------------------------------|-------------------------------|-------------------|  
|<span data-ttu-id="51202-136">0</span><span class="sxs-lookup"><span data-stu-id="51202-136">0</span></span>|<span data-ttu-id="51202-137">0</span><span class="sxs-lookup"><span data-stu-id="51202-137">0</span></span>|<span data-ttu-id="51202-138">1</span><span class="sxs-lookup"><span data-stu-id="51202-138">1</span></span>|  
|<span data-ttu-id="51202-139">0</span><span class="sxs-lookup"><span data-stu-id="51202-139">0</span></span>|<span data-ttu-id="51202-140">1</span><span class="sxs-lookup"><span data-stu-id="51202-140">1</span></span>|<span data-ttu-id="51202-141">0</span><span class="sxs-lookup"><span data-stu-id="51202-141">0</span></span>|  
|<span data-ttu-id="51202-142">1</span><span class="sxs-lookup"><span data-stu-id="51202-142">1</span></span>|<span data-ttu-id="51202-143">0</span><span class="sxs-lookup"><span data-stu-id="51202-143">0</span></span>|<span data-ttu-id="51202-144">0</span><span class="sxs-lookup"><span data-stu-id="51202-144">0</span></span>|  
|<span data-ttu-id="51202-145">1</span><span class="sxs-lookup"><span data-stu-id="51202-145">1</span></span>|<span data-ttu-id="51202-146">1</span><span class="sxs-lookup"><span data-stu-id="51202-146">1</span></span>|<span data-ttu-id="51202-147">1</span><span class="sxs-lookup"><span data-stu-id="51202-147">1</span></span>|  
  
 <span data-ttu-id="51202-148">W języku Visual Basic `Eqv` operator nie jest już częścią języka Visual Basic; do użycia z bitowego ocen `Not` i `XOr` operatorów.</span><span class="sxs-lookup"><span data-stu-id="51202-148">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static short Eqv (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Eqv(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Eqv(short a, short b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int16 * int16 -&gt; int16" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-149">A <see cref="T:System.Int16" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-149">A <see cref="T:System.Int16" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-150">A <see cref="T:System.Int16" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-150">A <see cref="T:System.Int16" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-151">Dokonuje logicznego równoważność dwa <see cref="T:System.Int16" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-151">Performs a logical equivalence on two <see cref="T:System.Int16" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-152">A <see cref="T:System.Int16" /> zawierający wynik porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-152">A <see cref="T:System.Int16" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-153">W języku Visual Basic `Eqv` operator nie jest już częścią języka Visual Basic; do użycia z bitowego ocen `Not` i `XOr` operatorów.</span><span class="sxs-lookup"><span data-stu-id="51202-153">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static int Eqv (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Eqv(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Eqv(int a, int b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-154">A <see cref="T:System.Int32" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-154">A <see cref="T:System.Int32" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-155">A <see cref="T:System.Int32" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-155">A <see cref="T:System.Int32" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-156">Dokonuje logicznego równoważność dwa <see cref="T:System.Int32" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-156">Performs a logical equivalence on two <see cref="T:System.Int32" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-157">A <see cref="T:System.Int32" /> zawierający wynik porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-157">A <see cref="T:System.Int32" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-158">W języku Visual Basic `Eqv` operator nie jest już częścią języka Visual Basic; do użycia z bitowego ocen `Not` i `XOr` operatorów.</span><span class="sxs-lookup"><span data-stu-id="51202-158">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static long Eqv (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Eqv(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Eqv(long a, long b);" />
      <MemberSignature Language="F#" Value="static member Eqv : int64 * int64 -&gt; int64" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-159">A <see cref="T:System.Int64" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-159">A <see cref="T:System.Int64" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-160">A <see cref="T:System.Int64" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-160">A <see cref="T:System.Int64" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-161">Dokonuje logicznego równoważność dwa <see cref="T:System.Int64" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-161">Performs a logical equivalence on two <see cref="T:System.Int64" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-162">A <see cref="T:System.Int64" /> zawierający wynik porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-162">A <see cref="T:System.Int64" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-163">W języku Visual Basic `Eqv` operator nie jest już częścią języka Visual Basic; do użycia z bitowego ocen `Not` i `XOr` operatorów.</span><span class="sxs-lookup"><span data-stu-id="51202-163">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eqv">
      <MemberSignature Language="C#" Value="public static object Eqv (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Eqv(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Eqv (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eqv(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="static member Eqv : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-164">A <see cref="T:System.Object" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-164">A <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-165">A <see cref="T:System.Object" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-165">A <see cref="T:System.Object" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-166">Dokonuje logicznego równoważność dwa <see cref="T:System.Object" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-166">Performs a logical equivalence on two <see cref="T:System.Object" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-167">A <see cref="T:System.Object" /> zawierający wynik porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-167">A <see cref="T:System.Object" /> that contains the result of the comparison.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-168">W języku Visual Basic `Eqv` operator nie jest już częścią języka Visual Basic; do użycia z bitowego ocen `Not` i `XOr` operatorów.</span><span class="sxs-lookup"><span data-stu-id="51202-168">In Visual Basic, the `Eqv` operator is no longer a part of the Visual Basic language; for bitwise evaluations use the `Not` and `XOr` operators.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeBold">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeBold (System.Drawing.Font CurrentFont, bool Bold);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeBold(class System.Drawing.Font CurrentFont, bool Bold) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeBold (CurrentFont As Font, Bold As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeBold(System::Drawing::Font ^ CurrentFont, bool Bold);" />
      <MemberSignature Language="F#" Value="static member FontChangeBold : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold (CurrentFont, Bold)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Bold" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="51202-169">A <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-169">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Bold">
          <span data-ttu-id="51202-170">
            <see langword="true" /> Aby ustawić <see cref="F:System.Drawing.FontStyle.Bold" /> styl bit; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-170">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-171">Zmiany <see cref="F:System.Drawing.FontStyle.Bold" /> bit stylu czcionki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-171">Changes the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-172">A <see cref="T:System.Drawing.Font" /> zastosowano styl nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-172">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-173">W Visual Basic 6.0 style były stosowane przez ustawienie właściwości; w języku Visual Basic czcionce style są stosowane przy użyciu <xref:System.Drawing.FontStyle> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51202-173">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="51202-174">Ta funkcja jest używana przez narzędzia uaktualniania do translacji właściwości języka Visual Basic 6.0 na nowe wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51202-174">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeGdiCharSet">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeGdiCharSet (System.Drawing.Font CurrentFont, byte GdiCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeGdiCharSet(class System.Drawing.Font CurrentFont, unsigned int8 GdiCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeGdiCharSet (CurrentFont As Font, GdiCharSet As Byte) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeGdiCharSet(System::Drawing::Font ^ CurrentFont, System::Byte GdiCharSet);" />
      <MemberSignature Language="F#" Value="static member FontChangeGdiCharSet : System.Drawing.Font * byte -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet (CurrentFont, GdiCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="GdiCharSet" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="51202-175">A <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-175">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="GdiCharSet">
          <span data-ttu-id="51202-176">Bajt, który określa znak GDI ustawić do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-176">A byte value that specifies the GDI character set to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-177">Zwraca czcionki dla określonego zestawu znaków GDI.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-177">Returns a font for a specified GDI character set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-178">A <see cref="T:System.Drawing.Font" /> GDI określonego zestawu znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-178">A <see cref="T:System.Drawing.Font" /> for the specified GDI character set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-179">W języku Visual Basic 6.0 `stdFont` miał obiekt `CharSet` właściwość, która określony interfejs GDI zestaw czcionek znaków.</span><span class="sxs-lookup"><span data-stu-id="51202-179">In Visual Basic 6.0, the `stdFont` object had a `CharSet` property that specified the GDI character set for a font.</span></span> <span data-ttu-id="51202-180">W języku Visual Basic, zestaw znaków jest określony jako opcjonalny z <xref:System.Drawing.Font> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="51202-180">In Visual Basic, the character set is specified as an optional of a <xref:System.Drawing.Font> constructor.</span></span> <span data-ttu-id="51202-181">Ta funkcja jest używana przez narzędzia uaktualnienia można przekonwertować `stdFont` do <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="51202-181">This function is used by the upgrade tools to convert a `stdFont` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.GdiCharSet" />
      </Docs>
    </Member>
    <Member MemberName="FontChangeItalic">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeItalic (System.Drawing.Font CurrentFont, bool Italic);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeItalic(class System.Drawing.Font CurrentFont, bool Italic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeItalic (CurrentFont As Font, Italic As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeItalic(System::Drawing::Font ^ CurrentFont, bool Italic);" />
      <MemberSignature Language="F#" Value="static member FontChangeItalic : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic (CurrentFont, Italic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Italic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="51202-182">A <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-182">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Italic">
          <span data-ttu-id="51202-183">
            <see langword="true" /> Aby ustawić <see cref="F:System.Drawing.FontStyle.Italic" /> styl bit; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-183">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-184">Zmiany <see cref="F:System.Drawing.FontStyle.Italic" /> bit stylu czcionki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-184">Changes the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-185">A <see cref="T:System.Drawing.Font" /> zastosowano styl nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-185">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-186">W Visual Basic 6.0 style były stosowane przez ustawienie właściwości; w języku Visual Basic czcionce style są stosowane przy użyciu <xref:System.Drawing.FontStyle> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51202-186">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="51202-187">Ta funkcja jest używana przez narzędzia uaktualniania do translacji właściwości języka Visual Basic 6.0 na nowe wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51202-187">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeName">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeName (System.Drawing.Font CurrentFont, string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeName(class System.Drawing.Font CurrentFont, string Name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeName (CurrentFont As Font, Name As String) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeName(System::Drawing::Font ^ CurrentFont, System::String ^ Name);" />
      <MemberSignature Language="F#" Value="static member FontChangeName : System.Drawing.Font * string -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName (CurrentFont, Name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="51202-188">A <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-188">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Name">
          <span data-ttu-id="51202-189">A <see langword="String" /> reprezentujący Visual Basic 6.0 <see langword="Font" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-189">A <see langword="String" /> that represents the Visual Basic 6.0 <see langword="Font" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-190">Zwraca nowy <see cref="T:System.Drawing.Font" /> dla danego języka Visual Basic 6.0 <see langword="Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-190">Returns a new <see cref="T:System.Drawing.Font" /> for a given Visual Basic 6.0 <see langword="Font" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-191">A <see cref="T:System.Drawing.Font" /> Visual Basic 6.0, które odpowiadają <see langword="Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-191">A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 <see langword="Font" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-192">W języku Visual Basic 6.0 określono nazwę czcionki przez `Font` właściwość; w języku Visual Basic <xref:System.Drawing.Font.Name%2A> jest właściwością <xref:System.Drawing.Font> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51202-192">In Visual Basic 6.0, the name of a font was specified by the `Font` property; in Visual Basic, <xref:System.Drawing.Font.Name%2A> is a property of the <xref:System.Drawing.Font> object.</span></span> <span data-ttu-id="51202-193">Ta funkcja jest używana przez narzędzia uaktualnienia można przekonwertować Visual Basic 6.0 `Font` do <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="51202-193">This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeSize (System.Drawing.Font CurrentFont, float Size);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeSize(class System.Drawing.Font CurrentFont, float32 Size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeSize (CurrentFont As Font, Size As Single) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeSize(System::Drawing::Font ^ CurrentFont, float Size);" />
      <MemberSignature Language="F#" Value="static member FontChangeSize : System.Drawing.Font * single -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize (CurrentFont, Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Size" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="51202-194">A <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-194">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Size">
          <span data-ttu-id="51202-195">A <see langword="Single" /> reprezentujący Visual Basic 6.0 <see langword="FontSize" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-195">A <see langword="Single" /> that represents the Visual Basic 6.0 <see langword="FontSize" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-196">Zmiany <see cref="P:System.Drawing.Font.Size" /> właściwość czcionki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-196">Changes the <see cref="P:System.Drawing.Font.Size" /> property for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-197">A <see cref="T:System.Drawing.Font" /> Visual Basic 6.0, które odpowiadają <see langword="FontSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-197">A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 <see langword="FontSize" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-198">Rozmiar czcionki w Visual Basic 6.0 określoną przez `FontSize` właściwość; w języku Visual Basic <xref:System.Drawing.Font.Size%2A> jest właściwością <xref:System.Drawing.Font> obiektu.</span><span class="sxs-lookup"><span data-stu-id="51202-198">In Visual Basic 6.0, the size of a font was specified by the `FontSize` property; in Visual Basic, <xref:System.Drawing.Font.Size%2A> is a property of the <xref:System.Drawing.Font> object.</span></span> <span data-ttu-id="51202-199">Ta funkcja jest używana przez narzędzia uaktualnienia można przekonwertować Visual Basic 6.0 `Font` do <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="51202-199">This function is used by the upgrade tools to convert a Visual Basic 6.0 `Font` to a <xref:System.Drawing.Font>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeStrikeout">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeStrikeout (System.Drawing.Font CurrentFont, bool Strikeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeStrikeout(class System.Drawing.Font CurrentFont, bool Strikeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeStrikeout (CurrentFont As Font, Strikeout As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeStrikeout(System::Drawing::Font ^ CurrentFont, bool Strikeout);" />
      <MemberSignature Language="F#" Value="static member FontChangeStrikeout : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout (CurrentFont, Strikeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Strikeout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="51202-200">A <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-200">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Strikeout">
          <span data-ttu-id="51202-201">
            <see langword="true" /> Aby ustawić <see cref="F:System.Drawing.FontStyle.Strikeout" /> styl bit; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-201">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-202">Zmiany <see cref="F:System.Drawing.FontStyle.Strikeout" /> bit stylu czcionki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-202">Changes the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-203">A <see cref="T:System.Drawing.Font" /> zastosowano styl nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-203">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-204">W Visual Basic 6.0 style były stosowane przez ustawienie właściwości; w języku Visual Basic czcionce style są stosowane przy użyciu <xref:System.Drawing.FontStyle> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51202-204">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="51202-205">Ta funkcja jest używana przez narzędzia uaktualniania do translacji właściwości języka Visual Basic 6.0 na nowe wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51202-205">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontChangeUnderline">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font FontChangeUnderline (System.Drawing.Font CurrentFont, bool Underline);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font FontChangeUnderline(class System.Drawing.Font CurrentFont, bool Underline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontChangeUnderline (CurrentFont As Font, Underline As Boolean) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ FontChangeUnderline(System::Drawing::Font ^ CurrentFont, bool Underline);" />
      <MemberSignature Language="F#" Value="static member FontChangeUnderline : System.Drawing.Font * bool -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline (CurrentFont, Underline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="CurrentFont" Type="System.Drawing.Font" />
        <Parameter Name="Underline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="CurrentFont">
          <span data-ttu-id="51202-206">A <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-206">A <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </param>
        <param name="Underline">
          <span data-ttu-id="51202-207">
            <see langword="true" /> Aby ustawić <see cref="F:System.Drawing.FontStyle.Underline" /> styl bit; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-207">
              <see langword="true" /> to set the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-208">Zmiany <see cref="F:System.Drawing.FontStyle.Underline" /> bit stylu czcionki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-208">Changes the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit for a font.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-209">A <see cref="T:System.Drawing.Font" /> zastosowano styl nowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-209">A <see cref="T:System.Drawing.Font" /> with the new style applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-210">W Visual Basic 6.0 style były stosowane przez ustawienie właściwości; w języku Visual Basic czcionce style są stosowane przy użyciu <xref:System.Drawing.FontStyle> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51202-210">In Visual Basic 6.0, font styles were applied by setting properties; in Visual Basic font styles are applied by using a <xref:System.Drawing.FontStyle> enumeration.</span></span> <span data-ttu-id="51202-211">Ta funkcja jest używana przez narzędzia uaktualniania do translacji właściwości języka Visual Basic 6.0 na nowe wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="51202-211">This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontToIFont">
      <MemberSignature Language="C#" Value="public static object FontToIFont (System.Drawing.Font fnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FontToIFont(class System.Drawing.Font fnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)" />
      <MemberSignature Language="VB.NET" Value="Public Function FontToIFont (fnt As Font) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FontToIFont(System::Drawing::Font ^ fnt);" />
      <MemberSignature Language="F#" Value="static member FontToIFont : System.Drawing.Font -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont fnt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fnt" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="fnt">
          <span data-ttu-id="51202-212">
            <see cref="T:System.Drawing.Font" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-212">The <see cref="T:System.Drawing.Font" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-213">Konwertuje <see cref="T:System.Drawing.Font" /> do programu Visual Basic 6.0 <see langword="stdFont" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-213">Converts a <see cref="T:System.Drawing.Font" /> to a Visual Basic 6.0 <see langword="stdFont" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-214">A <see langword="stdFont" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-214">A <see langword="stdFont" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-215">Visual Basic 6.0 `stdFont` obiekt został oparty na modelu COM i nie ma odpowiednika w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-215">The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in Visual Basic.</span></span> <span data-ttu-id="51202-216">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między <xref:System.Drawing.Font> i `stdFont` podczas uaktualniania projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-216">This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (object Expression, string Style = &quot;&quot;, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = 1, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public static string Format(object Expression, string Style, valuetype Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek, valuetype Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)" />
      <MemberSignature Language="VB.NET" Value="Public Function Format (Expression As Object, Optional Style As String = &quot;&quot;, Optional DayOfWeek As FirstDayOfWeek = 1, Optional WeekOfYear As FirstWeekOfYear = 1) As String" />
      <MemberSignature Language="F#" Value="static member Format : obj * string * Microsoft.VisualBasic.FirstDayOfWeek * Microsoft.VisualBasic.FirstWeekOfYear -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Format (Expression, Style, DayOfWeek, WeekOfYear)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Expression" Type="System.Object" />
        <Parameter Name="Style" Type="System.String" />
        <Parameter Name="DayOfWeek" Type="Microsoft.VisualBasic.FirstDayOfWeek" />
        <Parameter Name="WeekOfYear" Type="Microsoft.VisualBasic.FirstWeekOfYear" />
      </Parameters>
      <Docs>
        <param name="Expression">
          <span data-ttu-id="51202-217">
            <see cref="T:System.Object" /> Wyrażenia do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-217">The <see cref="T:System.Object" /> expression to convert.</span>
          </span>
        </param>
        <param name="Style">
          <span data-ttu-id="51202-218">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-218">Optional.</span>
          </span>
          <span data-ttu-id="51202-219">A <see cref="T:System.String" /> reprezentujący format daty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-219">A <see cref="T:System.String" /> that represents a date format.</span>
          </span>
        </param>
        <param name="DayOfWeek">
          <span data-ttu-id="51202-220">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-220">Optional.</span>
          </span>
          <span data-ttu-id="51202-221">A <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-221">A <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration.</span>
          </span>
        </param>
        <param name="WeekOfYear">
          <span data-ttu-id="51202-222">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-222">Optional.</span>
          </span>
          <span data-ttu-id="51202-223">A <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-223">A <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-224">Konwertuje Visual Basic 6.0 <see langword="Format" /> funkcji, aby był zgodny z programem Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-224">Converts the Visual Basic 6.0 <see langword="Format" /> function to be compatible with Visual Basic.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-225">A <see cref="T:System.String" /> zawierający sformatowanych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-225">A <see cref="T:System.String" /> that contains the formatted data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-226">Visual Basic 6.0 `Format` funkcja może działać na `Variant` — typ danych; w języku Visual Basic `Variant` — typ danych już nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="51202-226">The Visual Basic 6.0 `Format` function could operate on a `Variant` data type; in Visual Basic the `Variant` data type no longer exists.</span></span> <span data-ttu-id="51202-227">Ta funkcja jest używana przez narzędzia uaktualnienia można przekonwertować `Variant` sformatowany za pomocą `Format` funkcja na wspólny typ zgodne środowisko uruchomieniowe języka.</span><span class="sxs-lookup"><span data-stu-id="51202-227">This function is used by the upgrade tools to convert a `Variant` formatted by using the `Format` function to a common language runtime-compliant type.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserHeight : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight (Height, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height">
          <span data-ttu-id="51202-228">A <see cref="T:System.Double" /> reprezentujący wysokość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-228">A <see cref="T:System.Double" /> that represents the height.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="51202-229">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleHeight" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-229">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="51202-230">
            <see langword="Integer" /> Reprezentujący wysokość w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-230">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-231">Konwertuje wartość pikseli Visual Basic 6.0 <see langword="ScaleHeight" /> miary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-231">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleHeight" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-232">A <see cref="T:System.Double" /> zawierający przekonwertowanego Visual Basic 6.0 <see langword="ScaleHeight" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-232">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleHeight" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-233">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-233">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-234">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-234">This included a user-defined value.</span></span> <span data-ttu-id="51202-235">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-235">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-236">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-236">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserWidth : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth (Width, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width">
          <span data-ttu-id="51202-237">A <see cref="T:System.Double" /> reprezentujący szerokość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-237">A <see cref="T:System.Double" /> that represents the width.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="51202-238">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleWidth" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-238">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="51202-239">
            <see langword="Integer" /> Reprezentujący szerokość w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-239">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-240">Konwertuje wartość pikseli Visual Basic 6.0 <see langword="ScaleWidth" /> miary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-240">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleWidth" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-241">A <see cref="T:System.Double" /> zawierający przekonwertowanego Visual Basic 6.0 <see langword="ScaleWidth" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-241">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleWidth" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-242">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-242">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-243">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-243">This included a user-defined value.</span></span> <span data-ttu-id="51202-244">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-244">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-245">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-245">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserX">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserX : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX (X, ScaleLeft, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="51202-246">A <see cref="T:System.Double" /> reprezentujący Współrzędna X punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-246">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleLeft">
          <span data-ttu-id="51202-247">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleLeft" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-247">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleLeft" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="51202-248">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleWidth" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-248">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="51202-249">
            <see langword="Integer" /> Reprezentujący szerokość w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-249">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-250">Konwertuje wartość pikseli Visual Basic 6.0 <see langword="ScaleLeft" /> miary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-250">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleLeft" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-251">A <see cref="T:System.Double" /> zawierający przekonwertowanego Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-251">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-252">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-252">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-253">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-253">This included a user-defined value.</span></span> <span data-ttu-id="51202-254">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-254">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-255">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-255">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsUserY">
      <MemberSignature Language="C#" Value="public static double FromPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member FromPixelsUserY : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY (Y, ScaleTop, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="51202-256">A <see cref="T:System.Double" /> reprezentujący Współrzędna X punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-256">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleTop">
          <span data-ttu-id="51202-257">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleTop" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-257">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleTop" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="51202-258">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleHeight" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-258">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="51202-259">
            <see langword="Integer" /> Reprezentujący wysokość w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-259">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-260">Konwertuje wartość pikseli Visual Basic 6.0 <see langword="ScaleTop" /> miary.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-260">Converts a pixel measurement to a Visual Basic 6.0 <see langword="ScaleTop" /> measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-261">A <see cref="T:System.Double" /> zawierający przekonwertowanego Visual Basic 6.0 <see langword="ScaleTop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-261">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleTop" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-262">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-262">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-263">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-263">This included a user-defined value.</span></span> <span data-ttu-id="51202-264">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-264">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-265">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-265">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsX">
      <MemberSignature Language="C#" Value="public static double FromPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsX (X As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberSignature Language="F#" Value="static member FromPixelsX : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX (X, ToScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="51202-266">A <see cref="T:System.Double" /> reprezentujący współrzędną X w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-266">A <see cref="T:System.Double" /> that represents the X coordinate in pixels.</span>
          </span>
        </param>
        <param name="ToScale">
          <span data-ttu-id="51202-267">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> wyliczenia, która reprezentuje Visual Basic 6.0 <see langword="ScaleMode" /> do przekonwertowania na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-267">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-268">Konwertuje wartość Visual Basic 6.0 pomiaru pikseli danego <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-268">Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-269">A <see cref="T:System.Double" /> zawierający wartość Visual Basic 6.0 dla określonego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-269">A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-270">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-270">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-271">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-271">This included a user-defined value.</span></span> <span data-ttu-id="51202-272">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-272">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-273">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-273">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPixelsY">
      <MemberSignature Language="C#" Value="public static double FromPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 FromPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode ToScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromPixelsY (Y As Double, ToScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FromPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode ToScale);" />
      <MemberSignature Language="F#" Value="static member FromPixelsY : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY (Y, ToScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ToScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="51202-274">A <see cref="T:System.Double" /> reprezentujący współrzędną Y w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-274">A <see cref="T:System.Double" /> that represents the Y coordinate in pixels.</span>
          </span>
        </param>
        <param name="ToScale">
          <span data-ttu-id="51202-275">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> wyliczenia, która reprezentuje Visual Basic 6.0 <see langword="ScaleMode" /> do przekonwertowania na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-275">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-276">Konwertuje wartość Visual Basic 6.0 pomiaru pikseli danego <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-276">Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-277">A <see cref="T:System.Double" /> zawierający wartość Visual Basic 6.0 dla określonego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-277">A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-278">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-278">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-279">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-279">This included a user-defined value.</span></span> <span data-ttu-id="51202-280">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-280">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-281">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-281">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveControl">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control GetActiveControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Windows.Forms.Control GetActiveControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActiveControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ GetActiveControl();" />
      <MemberSignature Language="F#" Value="static member GetActiveControl : unit -&gt; System.Windows.Forms.Control" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51202-282">Pobiera formant, który aktualnie ma fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-282">Gets the control that currently has focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-283">Formant, który aktualnie ma fokus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-283">The control that currently has focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-284">Ta funkcja jest używana przez narzędzia uaktualniania zastąpić Visual Basic 6.0 `Screen.ActiveControl` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-284">This function is used by the upgrade tools to replace the Visual Basic 6.0 `Screen.ActiveControl` property.</span></span> <span data-ttu-id="51202-285">Jest to odpowiednik wywołania <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-285">It is the equivalent of calling <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> in Visual Basic.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCancel">
      <MemberSignature Language="C#" Value="public static bool GetCancel (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetCancel(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCancel (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetCancel(System::Windows::Forms::Button ^ btn);" />
      <MemberSignature Language="F#" Value="static member GetCancel : System.Windows.Forms.Button -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel btn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="51202-286">A <see cref="T:System.Windows.Forms.Button" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-286">A <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-287">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.Forms.Button" /> jest przycisk Anuluj w formularzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-287">Gets a value that indicates whether a <see cref="T:System.Windows.Forms.Button" /> is the cancel button on a form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-288">
            <see langword="true" /> Jeśli <paramref name="btn" /> przycisku Anuluj; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-288">
              <see langword="true" /> if <paramref name="btn" /> is the cancel button; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-289">Ta funkcja jest odpowiednikiem sprawdzanie <xref:System.Windows.Forms.Form.CancelButton%2A> właściwość <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="51202-289">This function is the equivalent of checking the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefault">
      <MemberSignature Language="C#" Value="public static bool GetDefault (System.Windows.Forms.Button btn);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GetDefault(class System.Windows.Forms.Button btn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefault (btn As Button) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetDefault(System::Windows::Forms::Button ^ btn);" />
      <MemberSignature Language="F#" Value="static member GetDefault : System.Windows.Forms.Button -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault btn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="51202-290">A <see cref="T:System.Windows.Forms.Button" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-290">A <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-291">Pobiera ustawia wartość określającą, czy <see cref="T:System.Windows.Forms.Button" /> formant jest przycisk domyślny w formularzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-291">Gets sets a value that determines whether a <see cref="T:System.Windows.Forms.Button" /> control is the default button on a form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-292">
            <see langword="true" /> Jeśli <paramref name="btn" /> jest przycisk domyślny; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-292">
              <see langword="true" /> if <paramref name="btn" /> is the default button; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-293">Ta funkcja jest odpowiednikiem sprawdzanie <xref:System.Windows.Forms.Form.AcceptButton%2A> właściwość <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="51202-293">This function is the equivalent of checking the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEXEName">
      <MemberSignature Language="C#" Value="public static string GetEXEName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetEXEName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEXEName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEXEName();" />
      <MemberSignature Language="F#" Value="static member GetEXEName : unit -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51202-294">Pobiera nazwę pliku wykonywalnego (.exe) dla bieżącej aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-294">Gets the name of the executable file (.exe) for the current application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-295">A <see cref="T:System.String" /> zawierający nazwę bez rozszerzenia nazwy pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-295">A <see cref="T:System.String" /> that contains the name without a file name extension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHInstance">
      <MemberSignature Language="C#" Value="public static IntPtr GetHInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static native int GetHInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHInstance () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHInstance();" />
      <MemberSignature Language="F#" Value="static member GetHInstance : unit -&gt; nativeint" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51202-296">Pobiera dojście wystąpienia (wystąpienie HINSTANCE) dla bieżącej aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-296">Gets the instance handle (HINSTANCE) for the current application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-297">
            <see cref="T:System.IntPtr" /> Dla bieżącego wystąpienia aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-297">An <see cref="T:System.IntPtr" /> for the current application instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-298">Ta funkcja jest odpowiednikiem wywołania metody <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>.</span><span class="sxs-lookup"><span data-stu-id="51202-298">This function is the equivalent of calling <xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemData">
      <MemberSignature Language="C#" Value="public static int GetItemData (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GetItemData(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetItemData(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberSignature Language="F#" Value="static member GetItemData : System.Windows.Forms.Control * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData (Control, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="51202-299">A <see cref="T:System.Windows.Forms.ListBox" /> lub <see cref="T:System.Windows.Forms.ComboBox" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-299">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="51202-300">
            <see langword="Integer" /> Reprezentujący indeks <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-300">An <see langword="Integer" /> that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-301">Pobiera <see langword="Integer" /> skojarzone z <see cref="T:System.Windows.Forms.ListBox" /> lub <see cref="T:System.Windows.Forms.ComboBox" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-301">Gets an <see langword="Integer" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-302">
            <see langword="Integer" /> Skojarzonego z określonym <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-302">The <see langword="Integer" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-303">W języku Visual Basic 6.0 `ItemData` właściwość `ListBox` lub `ComboBox` formantu można ustawić w czasie projektowania w **właściwości** okno, aby skojarzyć `Integer` z `ListBox` lub `ComboBox` element.</span><span class="sxs-lookup"><span data-stu-id="51202-303">In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item.</span></span> <span data-ttu-id="51202-304">W języku Visual Basic `ItemData` właściwość już istnieje; `GetItemData` i <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> metody może służyć do emulacji zachowania `ItemData`.</span><span class="sxs-lookup"><span data-stu-id="51202-304">In Visual Basic, the `ItemData` property no longer exists; the `GetItemData` and <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A> methods can be used to emulate the behavior of `ItemData`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemString">
      <MemberSignature Language="C#" Value="public static string GetItemString (System.Windows.Forms.Control Control, int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetItemString(class System.Windows.Forms.Control Control, int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetItemString(System::Windows::Forms::Control ^ Control, int Index);" />
      <MemberSignature Language="F#" Value="static member GetItemString : System.Windows.Forms.Control * int -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString (Control, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="51202-305">A <see cref="T:System.Windows.Forms.ListBox" /> lub <see cref="T:System.Windows.Forms.ComboBox" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-305">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="51202-306">
            <see langword="Integer" /> Reprezentujący indeks <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-306">An <see langword="Integer" /> that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-307">Pobiera <see cref="T:System.String" /> skojarzone z <see cref="T:System.Windows.Forms.ListBox" /> lub <see cref="T:System.Windows.Forms.ComboBox" /> elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-307">Gets a <see cref="T:System.String" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-308">
            <see cref="T:System.String" /> Skojarzonego z określonym <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-308">The <see cref="T:System.String" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-309">Ta funkcja jest używana przez narzędzia uaktualniania emulować Visual Basic 6.0 `List` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-309">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property.</span></span> <span data-ttu-id="51202-310">W języku Visual Basic, użyj <xref:System.Windows.Forms.ComboBox.Items%2A> lub <xref:System.Windows.Forms.ListBox.Items%2A> właściwości zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="51202-310">In Visual Basic, use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPath">
      <MemberSignature Language="C#" Value="public static string GetPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPath();" />
      <MemberSignature Language="F#" Value="static member GetPath : unit -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51202-311">Pobiera bieżącą ścieżkę aplikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-311">Gets the current path for the application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-312">A <see cref="T:System.String" /> zawierający ścieżkę obecnie wykonywany zestaw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-312">A <see cref="T:System.String" /> that contains the path of the currently executing assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconToIPicture">
      <MemberSignature Language="C#" Value="public static object IconToIPicture (System.Drawing.Icon ico);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IconToIPicture(class System.Drawing.Icon ico) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)" />
      <MemberSignature Language="VB.NET" Value="Public Function IconToIPicture (ico As Icon) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IconToIPicture(System::Drawing::Icon ^ ico);" />
      <MemberSignature Language="F#" Value="static member IconToIPicture : System.Drawing.Icon -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture ico" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ico" Type="System.Drawing.Icon" />
      </Parameters>
      <Docs>
        <param name="ico">
          <span data-ttu-id="51202-313">A <see cref="T:System.Drawing.Icon" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-313">A <see cref="T:System.Drawing.Icon" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-314">Pobiera OLE <see langword="IPicture" /> obiekt do danej <see cref="T:System.Drawing.Icon" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-314">Gets an OLE <see langword="IPicture" /> object for a given <see cref="T:System.Drawing.Icon" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-315">
            <see cref="T:System.Object" /> Reprezentujący OLE <see langword="IPicture" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-315">An <see cref="T:System.Object" /> representing the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-316">W języku Visual Basic 6.0 OLE `IPicture` obiekt może służyć do określania ikony; w języku Visual Basic, OLE `IPicture` format nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="51202-316">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an icon; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="51202-317">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między `IPicture` i <xref:System.Drawing.Icon>.</span><span class="sxs-lookup"><span data-stu-id="51202-317">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Icon>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IFontToFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font IFontToFont (object objFnt);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Font IFontToFont(object objFnt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IFontToFont (objFnt As Object) As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Font ^ IFontToFont(System::Object ^ objFnt);" />
      <MemberSignature Language="F#" Value="static member IFontToFont : obj -&gt; System.Drawing.Font" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont objFnt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objFnt" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objFnt">
          <span data-ttu-id="51202-318">
            <see cref="T:System.Object" /> Zawierający Visual Basic 6.0 <see langword="stdFont" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-318">An <see cref="T:System.Object" /> that contains a Visual Basic 6.0 <see langword="stdFont" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-319">Konwertuje Visual Basic 6.0 <see langword="stdFont" /> do obiektu <see cref="T:System.Drawing.Font" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-319">Converts a Visual Basic 6.0 <see langword="stdFont" /> object to a <see cref="T:System.Drawing.Font" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-320">Określony obiekt do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-320">A specified object to convert.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-321">Visual Basic 6.0 `stdFont` obiekt został oparty na modelu COM i nie ma odpowiednika w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-321">The Visual Basic 6.0 `stdFont` object was COM-based and has no equivalent in Visual Basic.</span></span> <span data-ttu-id="51202-322">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między <xref:System.Drawing.Font> i `stdFont` podczas uaktualniania projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-322">This function is used by the upgrade tools to convert between a <xref:System.Drawing.Font> and a `stdFont` during project upgrade.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPicture">
      <MemberSignature Language="C#" Value="public static object ImageToIPicture (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPicture(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPicture (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPicture(System::Drawing::Image ^ img);" />
      <MemberSignature Language="F#" Value="static member ImageToIPicture : System.Drawing.Image -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture img" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img">
          <span data-ttu-id="51202-323">A <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-323">A <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-324">Pobiera OLE <see langword="IPicture" /> obiekt do danej <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-324">Gets an OLE <see langword="IPicture" /> object for a given <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-325">
            <see cref="T:System.Object" /> Reprezentujący OLE <see langword="IPicture" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-325">An <see cref="T:System.Object" /> representing the OLE <see langword="IPicture" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-326">W języku Visual Basic 6.0 OLE `IPicture` obiekt może służyć do określania obrazu, a w języku Visual Basic, OLE `IPicture` format nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="51202-326">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="51202-327">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między `IPicture` i <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="51202-327">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageToIPictureDisp">
      <MemberSignature Language="C#" Value="public static object ImageToIPictureDisp (System.Drawing.Image img);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ImageToIPictureDisp(class System.Drawing.Image img) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImageToIPictureDisp (img As Image) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ImageToIPictureDisp(System::Drawing::Image ^ img);" />
      <MemberSignature Language="F#" Value="static member ImageToIPictureDisp : System.Drawing.Image -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp img" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="img" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="img">
          <span data-ttu-id="51202-328">A <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-328">A <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-329">Pobiera OLE <see langword="IPictureDisp" /> obiekt do danej <see cref="T:System.Drawing.Image" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-329">Gets an OLE <see langword="IPictureDisp" /> object for a given <see cref="T:System.Drawing.Image" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-330">
            <see cref="T:System.Object" /> Reprezentujący OLE <see langword="IPictureDisp" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-330">An <see cref="T:System.Object" /> representing the OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-331">W języku Visual Basic 6.0 OLE `IPictureDisp` obiekt może służyć do określania obrazu, a w języku Visual Basic, OLE `IPicture` format nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="51202-331">In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="51202-332">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między `IPicture` i <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="51202-332">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imp">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51202-333">Dokonuje logicznego możliwa dwóch wyrażeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-333">Performs a logical implication on two expressions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static bool Imp (bool a, bool b);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool Imp(bool a, bool b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Boolean, b As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Imp(bool a, bool b);" />
      <MemberSignature Language="F#" Value="static member Imp : bool * bool -&gt; bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean" />
        <Parameter Name="b" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-334">A <see cref="T:System.Boolean" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-334">A <see cref="T:System.Boolean" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-335">A <see cref="T:System.Boolean" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-335">A <see cref="T:System.Boolean" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-336">Dokonuje logicznego możliwa dwa <see cref="T:System.Boolean" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-336">Performs a logical implication on two <see cref="T:System.Boolean" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-337">A <see cref="T:System.Boolean" /> zawierający wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-337">A <see cref="T:System.Boolean" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-338">Visual Basic 6.0 `Imp` operator nie jest już obsługiwana w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-338">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="51202-339">Ta funkcja jest używana przez narzędzia uaktualniania, aby zastąpić `Imp` operator podczas uaktualniania projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-339">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="51202-340">W języku Visual Basic, użyj `Not` i `XOr` zamiast `Imp`.</span><span class="sxs-lookup"><span data-stu-id="51202-340">In Visual Basic, use `Not` and `XOr` instead of `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static byte Imp (byte a, byte b);" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8 Imp(unsigned int8 a, unsigned int8 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Byte, b As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Imp(System::Byte a, System::Byte b);" />
      <MemberSignature Language="F#" Value="static member Imp : byte * byte -&gt; byte" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte" />
        <Parameter Name="b" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-341">A <see cref="T:System.Byte" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-341">A <see cref="T:System.Byte" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-342">A <see cref="T:System.Byte" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-342">A <see cref="T:System.Byte" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-343">Dokonuje logicznego możliwa dwa <see cref="T:System.Byte" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-343">Performs a logical implication on two <see cref="T:System.Byte" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-344">A <see cref="T:System.Byte" /> zawierający wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-344">A <see cref="T:System.Byte" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-345">Visual Basic 6.0 `Imp` operator nie jest już obsługiwana w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-345">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="51202-346">Ta funkcja jest używana przez narzędzia uaktualniania, aby zastąpić `Imp` operator podczas uaktualniania projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-346">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="51202-347">W języku Visual Basic, użyj `Not` i `XOr` zastąpić `Imp`.</span><span class="sxs-lookup"><span data-stu-id="51202-347">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static short Imp (short a, short b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int16 Imp(int16 a, int16 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Short, b As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Imp(short a, short b);" />
      <MemberSignature Language="F#" Value="static member Imp : int16 * int16 -&gt; int16" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16" />
        <Parameter Name="b" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-348">A <see langword="Short" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-348">A <see langword="Short" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-349">A <see langword="Short" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-349">A <see langword="Short" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-350">Dokonuje logicznego możliwa dwa <see cref="T:System.Int16" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-350">Performs a logical implication on two <see cref="T:System.Int16" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-351">A <see langword="Short" /> zawierający wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-351">A <see langword="Short" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-352">Visual Basic 6.0 `Imp` operator nie jest już obsługiwana w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-352">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="51202-353">Ta funkcja jest używana przez narzędzia uaktualniania, aby zastąpić `Imp` operator podczas uaktualniania projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-353">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="51202-354">W języku Visual Basic, użyj `Not` i `XOr` zastąpić `Imp`.</span><span class="sxs-lookup"><span data-stu-id="51202-354">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static int Imp (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Imp(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Integer, b As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Imp(int a, int b);" />
      <MemberSignature Language="F#" Value="static member Imp : int * int -&gt; int" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-355">
            <see langword="Integer" /> Wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-355">An <see langword="Integer" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-356">
            <see langword="Integer" /> Wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-356">An <see langword="Integer" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-357">Dokonuje logicznego możliwa dwa <see cref="T:System.Int32" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-357">Performs a logical implication on two <see cref="T:System.Int32" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-358">
            <see langword="Integer" /> Zawierający wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-358">An <see langword="Integer" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-359">Visual Basic 6.0 `Imp` operator nie jest już obsługiwana w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-359">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="51202-360">Ta funkcja jest używana przez narzędzia uaktualniania, aby zastąpić `Imp` operator podczas uaktualniania projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-360">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="51202-361">W języku Visual Basic, użyj `Not` i `XOr` zastąpić `Imp`.</span><span class="sxs-lookup"><span data-stu-id="51202-361">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static long Imp (long a, long b);" />
      <MemberSignature Language="ILAsm" Value=".method public static int64 Imp(int64 a, int64 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Long, b As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Imp(long a, long b);" />
      <MemberSignature Language="F#" Value="static member Imp : int64 * int64 -&gt; int64" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" />
        <Parameter Name="b" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-362">A <see langword="Long" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-362">A <see langword="Long" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-363">A <see langword="Long" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-363">A <see langword="Long" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-364">Dokonuje logicznego możliwa dwa <see cref="T:System.Int64" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-364">Performs a logical implication on two <see cref="T:System.Int64" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-365">A <see langword="Long" /> zawierający wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-365">A <see langword="Long" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-366">Visual Basic 6.0 `Imp` operator nie jest już obsługiwana w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-366">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="51202-367">Ta funkcja jest używana przez narzędzia uaktualniania, aby zastąpić `Imp` operator podczas uaktualniania projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-367">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span>  
  
 <span data-ttu-id="51202-368">W języku Visual Basic, użyj `Not` i `XOr` zastąpić `Imp`.</span><span class="sxs-lookup"><span data-stu-id="51202-368">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imp">
      <MemberSignature Language="C#" Value="public static object Imp (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public static object Imp(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Imp (a As Object, b As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Imp(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="static member Imp : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.Imp (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="51202-369">
            <see cref="T:System.Object" /> Wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-369">An <see cref="T:System.Object" /> expression.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="51202-370">
            <see cref="T:System.Object" /> Wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-370">An <see cref="T:System.Object" /> expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-371">Dokonuje logicznego możliwa dwa <see cref="T:System.Object" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-371">Performs a logical implication on two <see cref="T:System.Object" /> expressions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-372">
            <see cref="T:System.Object" /> Zawierający wynik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-372">An <see cref="T:System.Object" /> that contains the result.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-373">Visual Basic 6.0 `Imp` operator nie jest już obsługiwana w języku Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-373">The Visual Basic 6.0 `Imp` operator is no longer supported in Visual Basic.</span></span> <span data-ttu-id="51202-374">Ta funkcja jest używana przez narzędzia uaktualniania, aby zastąpić `Imp` operator podczas uaktualniania projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-374">This function is used by the upgrade tools to replace the `Imp` operator during project upgrade.</span></span> <span data-ttu-id="51202-375">Podczas uaktualniania, typ danych Variant został zaktualizowany do <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="51202-375">During upgrade, the Variant data type is upgraded to <xref:System.Object>.</span></span>  
  
 <span data-ttu-id="51202-376">W języku Visual Basic, użyj `Not` i `XOr` zastąpić `Imp`.</span><span class="sxs-lookup"><span data-stu-id="51202-376">In Visual Basic, use `Not` and `XOr` to replace `Imp`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureDispToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureDispToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureDispToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureDispToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureDispToImage(System::Object ^ pict);" />
      <MemberSignature Language="F#" Value="static member IPictureDispToImage : obj -&gt; System.Drawing.Image" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage pict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict">
          <span data-ttu-id="51202-377">OLE <see langword="IPictureDisp" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-377">An OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-378">Pobiera <see cref="T:System.Drawing.Image" /> dla danego OLE <see langword="IPictureDisp" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-378">Gets an <see cref="T:System.Drawing.Image" /> for a given OLE <see langword="IPictureDisp" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-379">Obiekt obrazu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-379">An image object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-380">W języku Visual Basic 6.0 OLE `IPictureDisp` obiekt może służyć do określania obrazu, a w języku Visual Basic, OLE `IPicture` format nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="51202-380">In Visual Basic 6.0, an OLE `IPictureDisp` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="51202-381">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między `IPictureDisp` i <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="51202-381">This function is used by the upgrade tools to convert between an `IPictureDisp` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IPictureToImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image IPictureToImage (object pict);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Drawing.Image IPictureToImage(object pict) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IPictureToImage (pict As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ IPictureToImage(System::Object ^ pict);" />
      <MemberSignature Language="F#" Value="static member IPictureToImage : obj -&gt; System.Drawing.Image" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage pict" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pict" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pict">
          <span data-ttu-id="51202-382">OLE <see langword="IPicture" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-382">An OLE <see langword="IPicture" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-383">Pobiera <see cref="T:System.Drawing.Image" /> dla danego OLE <see langword="IPicture" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-383">Gets an <see cref="T:System.Drawing.Image" /> for a given OLE <see langword="IPicture" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-384">Przekonwertowany obiekt do obrazu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-384">A converted object to image.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-385">W języku Visual Basic 6.0 OLE `IPicture` obiekt może służyć do określania obrazu, a w języku Visual Basic, OLE `IPicture` format nie jest już obsługiwana.</span><span class="sxs-lookup"><span data-stu-id="51202-385">In Visual Basic 6.0, an OLE `IPicture` object could be used to specify an image; in Visual Basic, the OLE `IPicture` format is no longer supported.</span></span> <span data-ttu-id="51202-386">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między `IPicture` i <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="51202-386">This function is used by the upgrade tools to convert between an `IPicture` and a <xref:System.Drawing.Image>.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51202-387">Ładuje dane kilka możliwych typów z pliku zasobów (.res) i zwraca <see cref="T:System.Byte" /> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-387">Loads data of several possible types from a resource (.res) file and returns a <see cref="T:System.Byte" /> array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype);" />
      <MemberSignature Language="F#" Value="static member LoadResData : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData (ID, restype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="51202-388">
            <see cref="T:System.Object" /> Określający dane w pliku zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-388">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="51202-389">
            <see cref="T:System.Object" /> , Który określa typ zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-389">An <see cref="T:System.Object" /> that specifies the resource type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-390">Ładuje dane kilka możliwych typów z pliku zasobów (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-390">Loads data of several possible types from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-391">
            <see cref="T:System.Object" /> Zawiera zasób.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-391">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-392">W języku Visual Basic 6.0 tworzenie międzynarodowych wersji aplikacji polegało na umieszczeniu wszystkich informacji podlegających lokalizacji, takich jak ciągi tekstowej, w osobnym pliku zasobów (.res) dla każdego języka.</span><span class="sxs-lookup"><span data-stu-id="51202-392">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="51202-393">W czasie wykonywania, zasoby specyficzne dla ustawień regionalnych został załadowany z pliku zasobów przez wywołanie metody `LoadResString`, `LoadResPicture`, i `LoadResData` funkcji.</span><span class="sxs-lookup"><span data-stu-id="51202-393">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="51202-394">W języku Visual Basic międzynarodowe wersje aplikacji są tworzone przez zmianę `Language` właściwości formularza w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="51202-394">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="51202-395">Dla każdego wybranego ustawienia regionalne automatycznie jest tworzony osoby plik zasobów (.resx).</span><span class="sxs-lookup"><span data-stu-id="51202-395">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="51202-396">Nie trzeba już jawnie ładować zasobów z kodu. Są one ładowane automatycznie w oparciu o ustawienia regionalne użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-396">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="51202-397">Aby uzyskać więcej informacji, zobacz [aplikacji globalizacja formularzy systemu Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="51202-397">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResData">
      <MemberSignature Language="C#" Value="public static object LoadResData (object ID, object restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResData(object ID, object restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResData (ID As Object, restype As Object, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResData(System::Object ^ ID, System::Object ^ restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResData : obj * obj * System.Globalization.CultureInfo -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData (ID, restype, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="System.Object" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="51202-398">
            <see cref="T:System.Object" /> Określający dane w pliku zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-398">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="51202-399">
            <see cref="T:System.Object" /> , Który określa typ zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-399">An <see cref="T:System.Object" /> that specifies the resource type.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="51202-400">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który określa ustawienia regionalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-400">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-401">Ładuje dane kilka możliwych typów z pliku zasobów (.res) określenie ustawień regionalnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-401">Loads data of several possible types from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-402">
            <see cref="T:System.Object" /> Zawiera zasób.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-402">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-403">W języku Visual Basic 6.0 tworzenie międzynarodowych wersji aplikacji polegało na umieszczeniu wszystkich informacji podlegających lokalizacji, takich jak ciągi tekstowej, w osobnym pliku zasobów (.res) dla każdego języka.</span><span class="sxs-lookup"><span data-stu-id="51202-403">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="51202-404">W czasie wykonywania, zasoby specyficzne dla ustawień regionalnych został załadowany z pliku zasobów przez wywołanie metody `LoadResString`, `LoadResPicture`, i `LoadResData` funkcji.</span><span class="sxs-lookup"><span data-stu-id="51202-404">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="51202-405">W języku Visual Basic międzynarodowe wersje aplikacji są tworzone przez zmianę `Language` właściwości formularza w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="51202-405">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="51202-406">Dla każdego wybranego ustawienia regionalne automatycznie jest tworzony osoby plik zasobów (.resx).</span><span class="sxs-lookup"><span data-stu-id="51202-406">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="51202-407">Nie trzeba już jawnie ładować zasobów z kodu. Są one ładowane automatycznie w oparciu o ustawienia regionalne użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-407">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="51202-408">Aby uzyskać więcej informacji, zobacz [aplikacji globalizacja formularzy systemu Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="51202-408">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResPicture">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51202-409">Ładuje mapę bitową, ikona lub kursora z pliku zasobów (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-409">Loads a bitmap, icon, or cursor from a resource (.res) file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype);" />
      <MemberSignature Language="F#" Value="static member LoadResPicture : obj * Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture (ID, restype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="51202-410">
            <see cref="T:System.Object" /> Określający dane w pliku zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-410">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="51202-411">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> wyliczenia, która określa typ zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-411">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-412">Ładuje mapę bitową, ikona lub kursora z pliku zasobów (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-412">Loads a bitmap, icon, or cursor from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-413">
            <see cref="T:System.Object" /> Zawiera zasób.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-413">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-414">W języku Visual Basic 6.0 tworzenie międzynarodowych wersji aplikacji polegało na umieszczeniu wszystkich informacji podlegających lokalizacji, takich jak ciągi tekstowej, w osobnym pliku zasobów (.res) dla każdego języka.</span><span class="sxs-lookup"><span data-stu-id="51202-414">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="51202-415">W czasie wykonywania, zasoby specyficzne dla ustawień regionalnych został załadowany z pliku zasobów przez wywołanie metody `LoadResString`, `LoadResPicture`, i `LoadResData` funkcji.</span><span class="sxs-lookup"><span data-stu-id="51202-415">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="51202-416">W języku Visual Basic międzynarodowe wersje aplikacji są tworzone przez zmianę `Language` właściwości formularza w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="51202-416">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="51202-417">Dla każdego wybranego ustawienia regionalne automatycznie jest tworzony osoby plik zasobów (.resx).</span><span class="sxs-lookup"><span data-stu-id="51202-417">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="51202-418">Nie trzeba już jawnie ładować zasobów z kodu. Są one ładowane automatycznie w oparciu o ustawienia regionalne użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-418">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="51202-419">Aby uzyskać więcej informacji, zobacz [aplikacji globalizacja formularzy systemu Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="51202-419">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResPicture">
      <MemberSignature Language="C#" Value="public static object LoadResPicture (object ID, Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LoadResPicture(object ID, valuetype Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants restype, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResPicture (ID As Object, restype As LoadResConstants, Culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LoadResPicture(System::Object ^ ID, Microsoft::VisualBasic::Compatibility::VB6::LoadResConstants restype, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResPicture : obj * Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants * System.Globalization.CultureInfo -&gt; obj" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture (ID, restype, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Object" />
        <Parameter Name="restype" Type="Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="51202-420">
            <see cref="T:System.Object" /> Określający dane w pliku zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-420">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="restype">
          <span data-ttu-id="51202-421">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> wyliczenia, która określa typ zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-421">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="51202-422">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który określa ustawienia regionalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-422">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-423">Ładuje mapę bitową, ikona lub kursora z pliku zasobów (.res), określania ustawień regionalnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-423">Loads a bitmap, icon, or cursor from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-424">
            <see cref="T:System.Object" /> Zawiera zasób.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-424">An <see cref="T:System.Object" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-425">W języku Visual Basic 6.0 tworzenie międzynarodowych wersji aplikacji polegało na umieszczeniu wszystkich informacji podlegających lokalizacji, takich jak ciągi tekstowej, w osobnym pliku zasobów (.res) dla każdego języka.</span><span class="sxs-lookup"><span data-stu-id="51202-425">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="51202-426">W czasie wykonywania, zasoby specyficzne dla ustawień regionalnych został załadowany z pliku zasobów przez wywołanie metody `LoadResString`, `LoadResPicture`, i `LoadResData` funkcji.</span><span class="sxs-lookup"><span data-stu-id="51202-426">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="51202-427">W języku Visual Basic międzynarodowe wersje aplikacji są tworzone przez zmianę `Language` właściwości formularza w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="51202-427">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="51202-428">Dla każdego wybranego ustawienia regionalne automatycznie jest tworzony osoby plik zasobów (.resx).</span><span class="sxs-lookup"><span data-stu-id="51202-428">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="51202-429">Nie trzeba już jawnie ładować zasobów z kodu. Są one ładowane automatycznie w oparciu o ustawienia regionalne użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-429">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="51202-430">Aby uzyskać więcej informacji, zobacz [aplikacji globalizacja formularzy systemu Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="51202-430">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadResString">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51202-431">Ładuje ciąg z pliku zasobów (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-431">Loads a string from a resource (.res) file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID);" />
      <MemberSignature Language="F#" Value="static member LoadResString : int -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString ID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="51202-432">
            <see cref="T:System.Object" /> Określający dane w pliku zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-432">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-433">Ładuje ciąg z pliku zasobów (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-433">Loads a string from a resource (.res) file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-434">A <see cref="T:System.String" /> zawiera zasób.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-434">A <see cref="T:System.String" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-435">W języku Visual Basic 6.0 tworzenie międzynarodowych wersji aplikacji polegało na umieszczeniu wszystkich informacji podlegających lokalizacji, takich jak ciągi tekstowej, w osobnym pliku zasobów (.res) dla każdego języka.</span><span class="sxs-lookup"><span data-stu-id="51202-435">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="51202-436">W czasie wykonywania, zasoby specyficzne dla ustawień regionalnych został załadowany z pliku zasobów przez wywołanie metody `LoadResString`, `LoadResPicture`, i `LoadResData` funkcji.</span><span class="sxs-lookup"><span data-stu-id="51202-436">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="51202-437">W języku Visual Basic międzynarodowe wersje aplikacji są tworzone przez zmianę `Language` właściwości formularza w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="51202-437">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="51202-438">Dla każdego wybranego ustawienia regionalne automatycznie jest tworzony osoby plik zasobów (.resx).</span><span class="sxs-lookup"><span data-stu-id="51202-438">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="51202-439">Nie trzeba już jawnie ładować zasobów z kodu. Są one ładowane automatycznie w oparciu o ustawienia regionalne użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-439">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="51202-440">Aby uzyskać więcej informacji, zobacz [aplikacji globalizacja formularzy systemu Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="51202-440">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadResString">
      <MemberSignature Language="C#" Value="public static string LoadResString (int ID, System.Globalization.CultureInfo Culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static string LoadResString(int32 ID, class System.Globalization.CultureInfo Culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadResString (ID As Integer, Culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ LoadResString(int ID, System::Globalization::CultureInfo ^ Culture);" />
      <MemberSignature Language="F#" Value="static member LoadResString : int * System.Globalization.CultureInfo -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString (ID, Culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ID" Type="System.Int32" />
        <Parameter Name="Culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ID">
          <span data-ttu-id="51202-441">
            <see cref="T:System.Object" /> Określający dane w pliku zasobów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-441">An <see cref="T:System.Object" /> that specifies the data in the resource file.</span>
          </span>
        </param>
        <param name="Culture">
          <span data-ttu-id="51202-442">A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który określa ustawienia regionalne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-442">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-443">Ładuje ciąg z pliku zasobów (.res), określania ustawień regionalnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-443">Loads a string from a resource (.res) file, specifying a locale.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-444">A <see cref="T:System.String" /> zawiera zasób.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-444">A <see cref="T:System.String" /> that contains the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-445">W języku Visual Basic 6.0 tworzenie międzynarodowych wersji aplikacji polegało na umieszczeniu wszystkich informacji podlegających lokalizacji, takich jak ciągi tekstowej, w osobnym pliku zasobów (.res) dla każdego języka.</span><span class="sxs-lookup"><span data-stu-id="51202-445">In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</span></span> <span data-ttu-id="51202-446">W czasie wykonywania, zasoby specyficzne dla ustawień regionalnych został załadowany z pliku zasobów przez wywołanie metody `LoadResString`, `LoadResPicture`, i `LoadResData` funkcji.</span><span class="sxs-lookup"><span data-stu-id="51202-446">At run time, locale-specific resources were loaded from the resource file by calling the `LoadResString`, `LoadResPicture`, and `LoadResData` functions.</span></span>  
  
 <span data-ttu-id="51202-447">W języku Visual Basic międzynarodowe wersje aplikacji są tworzone przez zmianę `Language` właściwości formularza w czasie projektowania.</span><span class="sxs-lookup"><span data-stu-id="51202-447">In Visual Basic, international versions of an application are created by changing the `Language` property of a form at design time.</span></span> <span data-ttu-id="51202-448">Dla każdego wybranego ustawienia regionalne automatycznie jest tworzony osoby plik zasobów (.resx).</span><span class="sxs-lookup"><span data-stu-id="51202-448">A separate resource file (.resx) is automatically created for each locale selected.</span></span> <span data-ttu-id="51202-449">Nie trzeba już jawnie ładować zasobów z kodu. Są one ładowane automatycznie w oparciu o ustawienia regionalne użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-449">You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</span></span> <span data-ttu-id="51202-450">Aby uzyskać więcej informacji, zobacz [aplikacji globalizacja formularzy systemu Windows](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span><span class="sxs-lookup"><span data-stu-id="51202-450">For more information, see [Globalizing Windows Forms applications](~/docs/framework/winforms/advanced/globalizing-windows-forms.md).</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsX">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsX(double X);" />
      <MemberSignature Language="F#" Value="static member PixelsToTwipsX : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX X" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="51202-451">A <see langword="Double" /> zawierający współrzędną X do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-451">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-452">Konwertuje twipach współrzędną X z pikseli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-452">Converts an X coordinate from pixels to twips.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-453">A <see langword="Double" /> zawierający wyrażone w twipach Współrzędna X punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-453">A <see langword="Double" /> that contains the X coordinate expressed in twips.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-454">W języku Visual Basic 6.0 współrzędne zostały wyrażone w twipach; w języku Visual Basic są wyrażona w pikselach.</span><span class="sxs-lookup"><span data-stu-id="51202-454">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="51202-455">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między dwoma układami współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="51202-455">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsToTwipsY">
      <MemberSignature Language="C#" Value="public static double PixelsToTwipsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 PixelsToTwipsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function PixelsToTwipsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double PixelsToTwipsY(double Y);" />
      <MemberSignature Language="F#" Value="static member PixelsToTwipsY : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY Y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="51202-456">A <see langword="Double" /> zawierający współrzędną Y, można przekonwertować.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-456">A <see langword="Double" /> that contains the Y coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-457">Konwertuje twipach współrzędną Y z pikseli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-457">Converts a Y coordinate from pixels to twips.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-458">A <see langword="Double" /> zawierający wyrażone w twipach Współrzędna Y punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-458">A <see langword="Double" /> that contains the Y coordinate expressed in twips.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-459">W języku Visual Basic 6.0 współrzędne zostały wyrażone w twipach; w języku Visual Basic są wyrażona w pikselach.</span><span class="sxs-lookup"><span data-stu-id="51202-459">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="51202-460">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między dwoma układami współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="51202-460">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public static void SendKeys (string Keys, bool Wait = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SendKeys(string Keys, bool Wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (Keys As String, Optional Wait As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SendKeys : string * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys (Keys, Wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Keys" Type="System.String" />
        <Parameter Name="Wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Keys">
          <span data-ttu-id="51202-461">A <see cref="T:System.String" /> zawierający wartości klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-461">A <see cref="T:System.String" /> that contains the key values.</span>
          </span>
        </param>
        <param name="Wait">
          <span data-ttu-id="51202-462">
            <see langword="true" /> do przetworzenia naciśnięcia klawiszy przed zwróceniem sterowania do procedury; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-462">
              <see langword="true" /> to process keystrokes before control is returned to the procedure; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-463">Wysyła naciśnięcia klawiszy co najmniej jeden do aktywnego okna tak, jakby wpisany za pomocą klawiatury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-463">Sends one or more keystrokes to the active window as if typed at the keyboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-464">Ta funkcja jest używana przez narzędzia uaktualniania emulować Visual Basic 6.0 `SendKeys` metody.</span><span class="sxs-lookup"><span data-stu-id="51202-464">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `SendKeys` method.</span></span> <span data-ttu-id="51202-465">W języku Visual Basic, użyj `My.Computer.Keyboard.SendKeys` metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="51202-465">In Visual Basic, use the `My.Computer.Keyboard.SendKeys` method instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancel">
      <MemberSignature Language="C#" Value="public static void SetCancel (System.Windows.Forms.Button btn, bool Cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetCancel(class System.Windows.Forms.Button btn, bool Cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancel (btn As Button, Cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCancel(System::Windows::Forms::Button ^ btn, bool Cancel);" />
      <MemberSignature Language="F#" Value="static member SetCancel : System.Windows.Forms.Button * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel (btn, Cancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="51202-466">A <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-466">A <see cref="T:System.Windows.Forms.Button" />.</span>
          </span>
        </param>
        <param name="Cancel">
          <span data-ttu-id="51202-467">
            <see langword="true" /> Jeśli Visual Basic 6.0 <see langword="CommandButton" /> formantu <see langword="Cancel" /> właściwość jest <see langword="true" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-467">
              <see langword="true" /> if the Visual Basic 6.0 <see langword="CommandButton" /> control's <see langword="Cancel" /> property is <see langword="true" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-468">Ustawia <see cref="P:System.Windows.Forms.Form.CancelButton" /> właściwość <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-468">Sets the <see cref="P:System.Windows.Forms.Form.CancelButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-469">W języku Visual Basic 6.0, typu Boolean `Default` i `Cancel` właściwości `CommandButton` kontroli ustalić, czy formant odpowiada kluczy ENTER lub ESC, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="51202-469">In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively.</span></span> <span data-ttu-id="51202-470">W języku Visual Basic <xref:System.Windows.Forms.Button> formant nie ma już `Default` lub `Cancel` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-470">In Visual Basic, the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties.</span></span> <span data-ttu-id="51202-471"><xref:System.Windows.Forms.Form> Obiekt ma <xref:System.Windows.Forms.Form.AcceptButton%2A> i <xref:System.Windows.Forms.Form.CancelButton%2A> właściwości które zapewniają te same funkcje; te właściwości wykonaj nazwę <xref:System.Windows.Forms.Button> formant jako argument.</span><span class="sxs-lookup"><span data-stu-id="51202-471">The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.</span></span>  
  
 <span data-ttu-id="51202-472">Ta funkcja jest używana przez narzędzia uaktualniania można ustawić <xref:System.Windows.Forms.Form.CancelButton%2A> właściwość <xref:System.Windows.Forms.Form>.based na `Cancel` właściwości uaktualnionego Visual Basic 6.0 `CommandButton` formantu.</span><span class="sxs-lookup"><span data-stu-id="51202-472">This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Cancel` property of an upgraded Visual Basic 6.0 `CommandButton` control.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefault">
      <MemberSignature Language="C#" Value="public static void SetDefault (System.Windows.Forms.Button btn, bool Default);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetDefault(class System.Windows.Forms.Button btn, bool Default) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDefault (btn As Button, Default As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDefault(System::Windows::Forms::Button ^ btn, bool Default);" />
      <MemberSignature Language="F#" Value="static member SetDefault : System.Windows.Forms.Button * bool -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault (btn, Default)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="btn" Type="System.Windows.Forms.Button" />
        <Parameter Name="Default" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="btn">
          <span data-ttu-id="51202-473">A <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-473">A <see cref="T:System.Windows.Forms.Button" />.</span>
          </span>
        </param>
        <param name="Default">
          <span data-ttu-id="51202-474">
            <see langword="true" /> Jeśli Visual Basic 6.0 <see langword="CommandButton" /> formantu <see langword="Default" /> właściwość jest <see langword="true" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-474">
              <see langword="true" /> if the Visual Basic 6.0 <see langword="CommandButton" /> control's <see langword="Default" /> property is <see langword="true" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-475">Ustawia <see cref="P:System.Windows.Forms.Form.AcceptButton" /> właściwość <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-475">Sets the <see cref="P:System.Windows.Forms.Form.AcceptButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-476">W języku Visual Basic 6.0, typu Boolean `Default` i `Cancel` właściwości `CommandButton` kontroli ustalić, czy formant odpowiada kluczy ENTER lub ESC, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="51202-476">In Visual Basic 6.0, the Boolean `Default` and `Cancel` properties of a `CommandButton` control determine whether the control responds to the ENTER or ESC keys, respectively.</span></span> <span data-ttu-id="51202-477">W języku Visual Basic <xref:System.Windows.Forms.Button> formant nie ma już `Default` lub `Cancel` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-477">In Visual Basic, the <xref:System.Windows.Forms.Button> control no longer has `Default` or `Cancel` properties.</span></span> <span data-ttu-id="51202-478"><xref:System.Windows.Forms.Form> Obiekt ma <xref:System.Windows.Forms.Form.AcceptButton%2A> i <xref:System.Windows.Forms.Form.CancelButton%2A> właściwości które zapewniają te same funkcje; te właściwości wykonaj nazwę <xref:System.Windows.Forms.Button> formant jako argument.</span><span class="sxs-lookup"><span data-stu-id="51202-478">The <xref:System.Windows.Forms.Form> object has <xref:System.Windows.Forms.Form.AcceptButton%2A> and <xref:System.Windows.Forms.Form.CancelButton%2A> properties that provide the same functionality; these properties take the name of a <xref:System.Windows.Forms.Button> control as an argument.</span></span>  
  
 <span data-ttu-id="51202-479">Ta funkcja jest używana przez narzędzia uaktualniania można ustawić <xref:System.Windows.Forms.Form.AcceptButton%2A> właściwość <xref:System.Windows.Forms.Form>.based na `Default` właściwości uaktualnionego Visual Basic 6.0 `CommandButton` formantu.</span><span class="sxs-lookup"><span data-stu-id="51202-479">This function is used by the upgrade tools to set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of a <xref:System.Windows.Forms.Form>.based on the `Default` property of an upgraded Visual Basic 6.0 `CommandButton` control.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemData">
      <MemberSignature Language="C#" Value="public static void SetItemData (System.Windows.Forms.Control Control, int Index, int ItemData);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemData(class System.Windows.Forms.Control Control, int32 Index, int32 ItemData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemData(System::Windows::Forms::Control ^ Control, int Index, int ItemData);" />
      <MemberSignature Language="F#" Value="static member SetItemData : System.Windows.Forms.Control * int * int -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData (Control, Index, ItemData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="51202-480">A <see cref="T:System.Windows.Forms.ListBox" /> lub <see cref="T:System.Windows.Forms.ComboBox" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-480">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="51202-481">
            <see langword="Index" /> z <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-481">The <see langword="Index" /> of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <param name="ItemData">
          <span data-ttu-id="51202-482">
            <see langword="Integer" /> Do przypisania do <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-482">An <see langword="Integer" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-483">Ustawia <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> właściwość <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-483">Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-484">W języku Visual Basic 6.0 `ItemData` właściwość `ListBox` lub `ComboBox` formantu można ustawić w czasie projektowania w **właściwości** okno, aby skojarzyć `Integer` z `ListBox` lub `ComboBox` element.</span><span class="sxs-lookup"><span data-stu-id="51202-484">In Visual Basic 6.0, the `ItemData` property for a `ListBox` or `ComboBox` control could be set at design time in the **Properties** window to associate an `Integer` with a `ListBox` or `ComboBox` item.</span></span> <span data-ttu-id="51202-485">W języku Visual Basic `ItemData` właściwość już istnieje; <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> i `SetItemData` metody może służyć do emulacji zachowania `ItemData`.</span><span class="sxs-lookup"><span data-stu-id="51202-485">In Visual Basic, the `ItemData` property no longer exists; the <xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A> and `SetItemData` methods can be used to emulate the behavior of `ItemData`.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemString">
      <MemberSignature Language="C#" Value="public static void SetItemString (System.Windows.Forms.Control Control, int Index, string ItemString);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetItemString(class System.Windows.Forms.Control Control, int32 Index, string ItemString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetItemString(System::Windows::Forms::Control ^ Control, int Index, System::String ^ ItemString);" />
      <MemberSignature Language="F#" Value="static member SetItemString : System.Windows.Forms.Control * int * string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString (Control, Index, ItemString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Index" Type="System.Int32" />
        <Parameter Name="ItemString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="51202-486">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> lub <see cref="T:System.Windows.Forms.ComboBox" /> formantu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-486">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</span>
          </span>
        </param>
        <param name="Index">
          <span data-ttu-id="51202-487">
            <see langword="Index" /> z <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-487">The <see langword="Index" /> of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </param>
        <param name="ItemString">
          <span data-ttu-id="51202-488">A <see cref="T:System.String" /> do przypisania do <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-488">A <see cref="T:System.String" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-489">Ustawia <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> właściwość <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-489">Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-490">Ta funkcja jest używana przez narzędzia uaktualniania emulować Visual Basic 6.0 `List` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-490">This function is used by the upgrade tools to emulate the Visual Basic 6.0 `List` property.</span></span> <span data-ttu-id="51202-491">W języku Visual Basic, użyj <xref:System.Windows.Forms.ComboBox.Items%2A> lub <xref:System.Windows.Forms.ListBox.Items%2A> właściwości zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="51202-491">In Visual Basic, use the <xref:System.Windows.Forms.ComboBox.Items%2A> or <xref:System.Windows.Forms.ListBox.Items%2A> property instead.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetResourceBaseName">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51202-492">Przypisuje nazwę pliku zasobów języka Visual Basic 6.0 do przestrzeni nazw projektu Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-492">Assigns the name of a Visual Basic 6.0 resource file to the Visual Basic project namespace.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ BaseFileName);" />
      <MemberSignature Language="F#" Value="static member SetResourceBaseName : string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName BaseFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="BaseFileName">
          <span data-ttu-id="51202-493">Plik zasobów (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-493">A resource file (.res).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-494">Przypisuje nazwę pliku zasobów języka Visual Basic 6.0 do bieżącej przestrzeni nazw projektu Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-494">Assigns the name of a Visual Basic 6.0 resource file to the current Visual Basic project namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-495">Obsługa zasobów różni się w Visual Basic 6.0 i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-495">Resource handling is different for Visual Basic 6.0 and Visual Basic.</span></span> <span data-ttu-id="51202-496">Ta funkcja jest używany przez narzędzia uaktualniania można dodać pliku zasobów języka Visual Basic 6.0 do projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-496">This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceBaseName">
      <MemberSignature Language="C#" Value="public static void SetResourceBaseName (string ProjectNamespace, string BaseFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static void SetResourceBaseName(string ProjectNamespace, string BaseFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceBaseName (ProjectNamespace As String, BaseFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetResourceBaseName(System::String ^ ProjectNamespace, System::String ^ BaseFileName);" />
      <MemberSignature Language="F#" Value="static member SetResourceBaseName : string * string -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName (ProjectNamespace, BaseFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ProjectNamespace" Type="System.String" />
        <Parameter Name="BaseFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ProjectNamespace">
          <span data-ttu-id="51202-497">A <see cref="T:System.String" /> zawierający <see langword="Namespace" /> pliku zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-497">A <see cref="T:System.String" /> that contains the <see langword="Namespace" /> for the resource file.</span>
          </span>
        </param>
        <param name="BaseFileName">
          <span data-ttu-id="51202-498">Plik zasobów (.res).</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-498">A resource file (.res).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-499">Przypisuje nazwę pliku zasobów języka Visual Basic 6.0 do przestrzeni nazw projektu Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-499">Assigns the name of a Visual Basic 6.0 resource file to a Visual Basic project namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-500">Obsługa zasobów różni się w Visual Basic 6.0 i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51202-500">Resource handling is different for Visual Basic 6.0 and Visual Basic.</span></span> <span data-ttu-id="51202-501">Ta funkcja jest używany przez narzędzia uaktualniania można dodać pliku zasobów języka Visual Basic 6.0 do projektu.</span><span class="sxs-lookup"><span data-stu-id="51202-501">This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowForm">
      <MemberSignature Language="C#" Value="public static void ShowForm (System.Windows.Forms.Form Form, int Modal = 0, System.Windows.Forms.Form OwnerForm = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ShowForm(class System.Windows.Forms.Form Form, int32 Modal, class System.Windows.Forms.Form OwnerForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)" />
      <MemberSignature Language="F#" Value="static member ShowForm : System.Windows.Forms.Form * int * System.Windows.Forms.Form -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm (Form, Modal, OwnerForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
        <Parameter Name="Modal" Type="System.Int32" />
        <Parameter Name="OwnerForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="51202-502">
            <see cref="T:System.Windows.Forms.Form" /> Do wyświetlenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-502">The <see cref="T:System.Windows.Forms.Form" /> to display.</span>
          </span>
        </param>
        <param name="Modal">
          <span data-ttu-id="51202-503">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-503">Optional.</span>
          </span>
          <span data-ttu-id="51202-504">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> wyliczenia, która określa modalność.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-504">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> enumeration that specifies modality.</span>
          </span>
        </param>
        <param name="OwnerForm">
          <span data-ttu-id="51202-505">Opcjonalna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-505">Optional.</span>
          </span>
          <span data-ttu-id="51202-506">
            <c>Właściciela</c> parametr <see cref="M:System.Windows.Forms.Form.ShowDialog" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-506">The <c>owner</c> parameter of the <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-507">Wyświetla formularz, wywołując jedną <see cref="M:System.Windows.Forms.Control.Show" /> lub <see cref="M:System.Windows.Forms.Form.ShowDialog" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-507">Displays a form by calling either the <see cref="M:System.Windows.Forms.Control.Show" /> or <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-508">W języku Visual Basic 6.0 `Show` metoda określona czy formularza może być wyświetlony w trybie modalnym; w języku Visual Basic zostanie zastąpiony przez <xref:System.Windows.Forms.Control.Show%2A> i <xref:System.Windows.Forms.Form.ShowDialog%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51202-508">In Visual Basic 6.0, the `Show` method specified whether a Form would be displayed modally; in Visual Basic it is replaced by the <xref:System.Windows.Forms.Control.Show%2A> and <xref:System.Windows.Forms.Form.ShowDialog%2A> methods.</span></span> <span data-ttu-id="51202-509">Ta funkcja jest używana przez narzędzia uaktualniania do mapowania Visual Basic 6.0 `Show` metodę albo <xref:System.Windows.Forms.Control.Show%2A> lub <xref:System.Windows.Forms.Form.ShowDialog%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51202-509">This function is used by the upgrade tools to map the Visual Basic 6.0 `Show` method to either the <xref:System.Windows.Forms.Control.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabLayout">
      <MemberSignature Language="C#" Value="public static string TabLayout (params object[] Args);" />
      <MemberSignature Language="ILAsm" Value=".method public static string TabLayout(object[] Args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TabLayout (ParamArray Args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TabLayout(... cli::array &lt;System::Object ^&gt; ^ Args);" />
      <MemberSignature Language="F#" Value="static member TabLayout : obj[] -&gt; string" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout Args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="Args">
          <span data-ttu-id="51202-510">Wyrażenie lub lista wyrażeń do drukowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-510">An expression or list of expressions to print.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-511">Formatuje ciągi do symulowania Visual Basic 6.0 <see langword="Debug.Print" /> funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-511">Formats strings to simulate the Visual Basic 6.0 <see langword="Debug.Print" /> functionality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-512">Sformatowany <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-512">A formatted <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-513">W Visual Basic 6.0 `Debug.Print` metoda miała `outputlist` parametr, który jest określony, jak dane wyjściowe został sformatowany w **Immediate** okna.</span><span class="sxs-lookup"><span data-stu-id="51202-513">In Visual Basic 6.0, the `Debug.Print` method had an `outputlist` parameter that specified how output was formatted in the **Immediate** window.</span></span> <span data-ttu-id="51202-514">Ta funkcja jest używana przez narzędzia uaktualniania do tłumaczenia `outputlist` parametru na ciąg w celu wyświetlenia w **Immediate** okna.</span><span class="sxs-lookup"><span data-stu-id="51202-514">This function is used by the upgrade tools to translate the `outputlist` parameter into a string for display in the **Immediate** window.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserHeight">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserHeight (double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserHeight(float64 Height, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserHeight (Height As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserHeight(double Height, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserHeight : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight (Height, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Height" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Height">
          <span data-ttu-id="51202-515">A <see cref="T:System.Double" /> reprezentujący wysokość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-515">A <see cref="T:System.Double" /> that represents the height.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="51202-516">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleHeight" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-516">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="51202-517">
            <see langword="Integer" /> Reprezentujący wysokość w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-517">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-518">Konwertuje Visual Basic 6.0 <see langword="ScaleHeight" /> miary do pomiaru pikseli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-518">Converts a Visual Basic 6.0 <see langword="ScaleHeight" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-519">A <see cref="T:System.Double" /> zawierający przekonwertowanego Visual Basic 6.0 <see langword="ScaleHeight" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-519">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleHeight" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-520">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-520">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-521">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-521">This included a user-defined value.</span></span> <span data-ttu-id="51202-522">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-522">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-523">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-523">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserWidth">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserWidth (double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserWidth(float64 Width, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserWidth (Width As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserWidth(double Width, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserWidth : double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth (Width, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Width" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Width">
          <span data-ttu-id="51202-524">A <see cref="T:System.Double" /> reprezentujący szerokość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-524">A <see cref="T:System.Double" /> that represents the width.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="51202-525">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleWidth" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-525">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="51202-526">
            <see langword="Integer" /> Reprezentujący szerokość w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-526">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-527">Konwertuje Visual Basic 6.0 <see langword="ScaleWidth" /> miary do pomiaru pikseli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-527">Converts a Visual Basic 6.0 <see langword="ScaleWidth" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-528">A <see cref="T:System.Double" /> zawierający przekonwertowanego Visual Basic 6.0 <see langword="ScaleWidth" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-528">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleWidth" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-529">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-529">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-530">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-530">This included a user-defined value.</span></span> <span data-ttu-id="51202-531">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-531">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-532">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-532">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserX">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserX (double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserX(float64 X, float64 ScaleLeft, float64 ScaleWidth, int32 OriginalWidthInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserX (X As Double, ScaleLeft As Double, ScaleWidth As Double, OriginalWidthInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserX(double X, double ScaleLeft, double ScaleWidth, int OriginalWidthInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserX : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX (X, ScaleLeft, ScaleWidth, OriginalWidthInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="ScaleLeft" Type="System.Double" />
        <Parameter Name="ScaleWidth" Type="System.Double" />
        <Parameter Name="OriginalWidthInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="51202-533">A <see cref="T:System.Double" /> reprezentujący Współrzędna X punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-533">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="ScaleLeft">
          <span data-ttu-id="51202-534">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleLeft" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-534">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleLeft" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleWidth">
          <span data-ttu-id="51202-535">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleWidth" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-535">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleWidth" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalWidthInPixels">
          <span data-ttu-id="51202-536">
            <see langword="Integer" /> Reprezentujący szerokość w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-536">An <see langword="Integer" /> that represents the width in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-537">Konwertuje Visual Basic 6.0 <see langword="ScaleLeft" /> miary do pomiaru pikseli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-537">Converts a Visual Basic 6.0 <see langword="ScaleLeft" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-538">A <see cref="T:System.Double" /> zawierający przekonwertowanego Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-538">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-539">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-539">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-540">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-540">This included a user-defined value.</span></span> <span data-ttu-id="51202-541">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-541">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-542">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-542">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsUserY">
      <MemberSignature Language="C#" Value="public static double ToPixelsUserY (double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsUserY(float64 Y, float64 ScaleTop, float64 ScaleHeight, int32 OriginalHeightInPixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsUserY (Y As Double, ScaleTop As Double, ScaleHeight As Double, OriginalHeightInPixels As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsUserY(double Y, double ScaleTop, double ScaleHeight, int OriginalHeightInPixels);" />
      <MemberSignature Language="F#" Value="static member ToPixelsUserY : double * double * double * int -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY (Y, ScaleTop, ScaleHeight, OriginalHeightInPixels)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="ScaleTop" Type="System.Double" />
        <Parameter Name="ScaleHeight" Type="System.Double" />
        <Parameter Name="OriginalHeightInPixels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="51202-543">A <see cref="T:System.Double" /> reprezentujący współrzędną Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-543">A <see cref="T:System.Double" /> that represents the Y coordinate.</span>
          </span>
        </param>
        <param name="ScaleTop">
          <span data-ttu-id="51202-544">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleTop" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-544">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleTop" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="ScaleHeight">
          <span data-ttu-id="51202-545">A <see cref="T:System.Double" /> reprezentujący Visual Basic 6.0 <see langword="ScaleHeight" /> dla bieżącego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-545">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 <see langword="ScaleHeight" /> for the current <see langword="ScaleMode" />.</span>
          </span>
        </param>
        <param name="OriginalHeightInPixels">
          <span data-ttu-id="51202-546">
            <see langword="Integer" /> Reprezentujący wysokość w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-546">An <see langword="Integer" /> that represents the height in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-547">Konwertuje Visual Basic 6.0 <see langword="ScaleTop" /> miary do pomiaru pikseli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-547">Converts a Visual Basic 6.0 <see langword="ScaleTop" /> measurement to a pixel measurement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-548">A <see cref="T:System.Double" /> zawierający przekonwertowanego Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-548">A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 <see langword="ScaleLeft" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-549">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-549">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-550">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-550">This included a user-defined value.</span></span> <span data-ttu-id="51202-551">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-551">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-552">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-552">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsX">
      <MemberSignature Language="C#" Value="public static double ToPixelsX (double X, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsX(float64 X, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsX (X As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsX(double X, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberSignature Language="F#" Value="static member ToPixelsX : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX (X, FromScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="51202-553">A <see cref="T:System.Double" /> reprezentujący Współrzędna X punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-553">A <see cref="T:System.Double" /> that represents the X coordinate.</span>
          </span>
        </param>
        <param name="FromScale">
          <span data-ttu-id="51202-554">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> wyliczenia, która reprezentuje Visual Basic 6.0 <see langword="ScaleMode" /> do przekonwertowania z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-554">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-555">Konwertuje pomiaru Visual Basic 6.0 do pikseli miary dla danego <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-555">Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-556">A <see cref="T:System.Double" /> zawierający pikseli dla określonego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-556">A <see cref="T:System.Double" /> that contains the pixel value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-557">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-557">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-558">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-558">This included a user-defined value.</span></span> <span data-ttu-id="51202-559">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-559">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-560">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-560">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPixelsY">
      <MemberSignature Language="C#" Value="public static double ToPixelsY (double Y, Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 ToPixelsY(float64 Y, valuetype Microsoft.VisualBasic.Compatibility.VB6.ScaleMode FromScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPixelsY (Y As Double, FromScale As ScaleMode) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToPixelsY(double Y, Microsoft::VisualBasic::Compatibility::VB6::ScaleMode FromScale);" />
      <MemberSignature Language="F#" Value="static member ToPixelsY : double * Microsoft.VisualBasic.Compatibility.VB6.ScaleMode -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY (Y, FromScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
        <Parameter Name="FromScale" Type="Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="51202-561">A <see cref="T:System.Double" /> reprezentujący współrzędną Y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-561">A <see cref="T:System.Double" /> that represents the Y coordinate.</span>
          </span>
        </param>
        <param name="FromScale">
          <span data-ttu-id="51202-562">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> wyliczenia, która reprezentuje Visual Basic 6.0 <see langword="ScaleMode" /> do przekonwertowania z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-562">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 <see langword="ScaleMode" /> to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-563">Konwertuje pomiaru Visual Basic 6.0 do pikseli miary dla danego <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-563">Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-564">A <see cref="T:System.Double" /> zawierający pikseli dla określonego <see langword="ScaleMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-564">A <see cref="T:System.Double" /> that contains the pixel value for the specified <see langword="ScaleMode" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-565">Visual Basic 6.0 obsługiwanych wiele systemów współrzędnych zdefiniowane przez `ScaleMode` właściwości.</span><span class="sxs-lookup"><span data-stu-id="51202-565">Visual Basic 6.0 supported multiple coordinate systems defined by a `ScaleMode` property.</span></span> <span data-ttu-id="51202-566">Obejmowało to też wartości definiowane przez użytkowników.</span><span class="sxs-lookup"><span data-stu-id="51202-566">This included a user-defined value.</span></span> <span data-ttu-id="51202-567">Visual Basic obsługuje tylko współrzędnych, który jest oparty na pikseli.</span><span class="sxs-lookup"><span data-stu-id="51202-567">Visual Basic only supports a coordinate system that is based on pixels.</span></span> <span data-ttu-id="51202-568">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między pikselami a wartością skali zdefiniowaną przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="51202-568">This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelX">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelX ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelX() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelX () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelX();" />
      <MemberSignature Language="F#" Value="static member TwipsPerPixelX : unit -&gt; single" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51202-569">Pobiera wartość, która jest używana do konwertowania twipach pikseli na podstawie ustawień ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-569">Gets a value that is used to convert twips to pixels based on screen settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-570">A <see langword="Double" /> zawierający współczynnik konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-570">A <see langword="Double" /> that contains the conversion factor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-571">W języku Visual Basic 6.0 współrzędne zostały wyrażone w twipach; w języku Visual Basic są wyrażona w pikselach.</span><span class="sxs-lookup"><span data-stu-id="51202-571">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="51202-572">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między dwoma układami współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="51202-572">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsPerPixelY">
      <MemberSignature Language="C#" Value="public static float TwipsPerPixelY ();" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 TwipsPerPixelY() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsPerPixelY () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float TwipsPerPixelY();" />
      <MemberSignature Language="F#" Value="static member TwipsPerPixelY : unit -&gt; single" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51202-573">Pobiera wartość, która jest używana do konwertowania twipach pikseli na podstawie ustawień ekranu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-573">Gets a value that is used to convert twips to pixels based on screen settings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-574">A <see langword="Double" /> zawierający współczynnik konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-574">A <see langword="Double" /> that contains the conversion factor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-575">W języku Visual Basic 6.0 współrzędne zostały wyrażone w twipach; w języku Visual Basic są wyrażona w pikselach.</span><span class="sxs-lookup"><span data-stu-id="51202-575">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="51202-576">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między dwoma układami współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="51202-576">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsX">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsX (double X);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsX(float64 X) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsX (X As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsX(double X);" />
      <MemberSignature Language="F#" Value="static member TwipsToPixelsX : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX X" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="X" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="X">
          <span data-ttu-id="51202-577">A <see langword="Double" /> zawierający współrzędną X do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-577">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-578">Konwertuje współrzędną X twipach pikseli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-578">Converts an X coordinate from twips to pixels.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-579">A <see langword="Double" /> zawierający współrzędną X wyrażoną w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-579">A <see langword="Double" /> that contains the X coordinate expressed in pixels.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-580">W języku Visual Basic 6.0 współrzędne zostały wyrażone w twipach; w języku Visual Basic są wyrażona w pikselach.</span><span class="sxs-lookup"><span data-stu-id="51202-580">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="51202-581">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między dwoma układami współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="51202-581">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TwipsToPixelsY">
      <MemberSignature Language="C#" Value="public static double TwipsToPixelsY (double Y);" />
      <MemberSignature Language="ILAsm" Value=".method public static float64 TwipsToPixelsY(float64 Y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function TwipsToPixelsY (Y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double TwipsToPixelsY(double Y);" />
      <MemberSignature Language="F#" Value="static member TwipsToPixelsY : double -&gt; double" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY Y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Y">
          <span data-ttu-id="51202-582">A <see langword="Double" /> zawierający współrzędną X do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-582">A <see langword="Double" /> that contains the X coordinate to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-583">Konwertuje współrzędną Y twipach pikseli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-583">Converts a Y coordinate from twips to pixels.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51202-584">A <see langword="Double" /> zawierający współrzędną Y wyrażoną w pikselach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-584">A <see langword="Double" /> that contains the Y coordinate expressed in pixels.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-585">W języku Visual Basic 6.0 współrzędne zostały wyrażone w twipach; w języku Visual Basic są wyrażona w pikselach.</span><span class="sxs-lookup"><span data-stu-id="51202-585">In Visual Basic 6.0, coordinates were expressed in twips; in Visual Basic they are expressed in pixels.</span></span> <span data-ttu-id="51202-586">Ta funkcja jest używana przez narzędzia uaktualniania do konwersji między dwoma układami współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="51202-586">This function is used by the upgrade tools to convert between the two coordinate systems.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateControls">
      <MemberSignature Language="C#" Value="public static void ValidateControls (System.Windows.Forms.ContainerControl Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ValidateControls(class System.Windows.Forms.ContainerControl Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateControls (Form As ContainerControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateControls(System::Windows::Forms::ContainerControl ^ Form);" />
      <MemberSignature Language="F#" Value="static member ValidateControls : System.Windows.Forms.ContainerControl -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls Form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.ContainerControl" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="51202-587">
            <see cref="T:System.Windows.Forms.ContainerControl" /> Gdy kontrolka jest elementem nadrzędnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-587">The <see cref="T:System.Windows.Forms.ContainerControl" /> where the control is parented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-588">Emuluje zachowanie programu Visual Basic 6.0 <see langword="ValidateControls" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-588">Emulates the behavior of the Visual Basic 6.0 <see langword="ValidateControls" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-589">W języku Visual Basic 6.0 `ValidateControls` użyto metody, aby wymusić `Validate` zdarzenia dla formantu, który ma fokus, po zamknięciu formularza; Jeśli `Validate` zdarzenie nie powiedzie się, wystąpił błąd.</span><span class="sxs-lookup"><span data-stu-id="51202-589">In Visual Basic 6.0, the `ValidateControls` method was used to force the `Validate` event for the control that has focus when a form is closed; if the `Validate` event fails, an error was raised.</span></span> <span data-ttu-id="51202-590">W języku Visual Basic `ValidateControls` zastępuje metodę <xref:System.Windows.Forms.ContainerControl.Validate%2A> metody, która zwraca `true` lub `false`.</span><span class="sxs-lookup"><span data-stu-id="51202-590">In Visual Basic, the `ValidateControls` method is replaced by the <xref:System.Windows.Forms.ContainerControl.Validate%2A> method, which returns `true` or `false`.</span></span>  
  
 <span data-ttu-id="51202-591">Ta funkcja jest używany przez narzędzia uaktualniania emulować zachowanie Visual Basic 6.0.</span><span class="sxs-lookup"><span data-stu-id="51202-591">This function is used by the upgrade tools to emulate the Visual Basic 6.0 behavior.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhatsThisMode">
      <MemberSignature Language="C#" Value="public static void WhatsThisMode (System.Windows.Forms.Form Form);" />
      <MemberSignature Language="ILAsm" Value=".method public static void WhatsThisMode(class System.Windows.Forms.Form Form) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WhatsThisMode(System::Windows::Forms::Form ^ Form);" />
      <MemberSignature Language="F#" Value="static member WhatsThisMode : System.Windows.Forms.Form -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode Form" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Form" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="Form">
          <span data-ttu-id="51202-592">A <see cref="T:System.Windows.Forms.Form" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-592">A <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-593">Wyświetla Pomoc wyskakująca formularza uaktualnione z programu Visual Basic 6.0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-593">Displays pop-up Help for a form upgraded from Visual Basic 6.0.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-594">Pomoc wyskakująca w Visual Basic 6.0 został wdrożony za pomocą `WhatsThisButton` i `WhatsThisHelp` właściwości formularza; w oknie podręcznym pomocy w języku Visual Basic jest implementowane za pomocą <xref:System.Windows.Forms.Form.HelpButton%2A> właściwości formularza.</span><span class="sxs-lookup"><span data-stu-id="51202-594">Pop-up Help in Visual Basic 6.0 was implemented by using the `WhatsThisButton` and `WhatsThisHelp` properties of a form; pop-up Help in Visual Basic is implemented by using the <xref:System.Windows.Forms.Form.HelpButton%2A> property of a form.</span></span> <span data-ttu-id="51202-595">Ta funkcja umożliwia za pomocą narzędzi do uaktualniania zmień metodę wyświetlanie wyskakujących pomocy w aplikacji uaktualniony.</span><span class="sxs-lookup"><span data-stu-id="51202-595">This function is used by the upgrade tools to change the method of displaying pop-up Help in an upgraded application.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZOrder">
      <MemberSignature Language="C#" Value="public static void ZOrder (System.Windows.Forms.Control Control, int Position);" />
      <MemberSignature Language="ILAsm" Value=".method public static void ZOrder(class System.Windows.Forms.Control Control, int32 Position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZOrder(System::Windows::Forms::Control ^ Control, int Position);" />
      <MemberSignature Language="F#" Value="static member ZOrder : System.Windows.Forms.Control * int -&gt; unit" Usage="Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder (Control, Position)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Control" Type="System.Windows.Forms.Control" />
        <Parameter Name="Position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Control">
          <span data-ttu-id="51202-596">A <see cref="T:System.Windows.Forms.Control" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-596">A <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <param name="Position">
          <span data-ttu-id="51202-597">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-597">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51202-598">Konwertuje Visual Basic <see langword="ZOrder" /> metoda do użycia w języku Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51202-598">Converts the Visual Basic <see langword="ZOrder" /> method for use in Visual Basic.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51202-599">W języku Visual Basic 6.0 `ZOrder` metoda została użyta do określenia warstwy formanty; w języku Visual Basic zastępuje .it <xref:System.Windows.Forms.Control.BringToFront%2A> i <xref:System.Windows.Forms.Control.SendToBack%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="51202-599">In Visual Basic 6.0, the `ZOrder` method was used to specify the layering of controls; in Visual Basic .it is replaced by the <xref:System.Windows.Forms.Control.BringToFront%2A> and <xref:System.Windows.Forms.Control.SendToBack%2A> methods.</span></span> <span data-ttu-id="51202-600">Ta funkcja jest używany przez narzędzia uaktualniania do mapowania między metodami.</span><span class="sxs-lookup"><span data-stu-id="51202-600">This function is used by the upgrade tools to map between the methods.</span></span>  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>