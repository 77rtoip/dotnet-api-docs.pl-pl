<Type Name="BaseDataEnvironment" FullName="Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e818eb9dfd045aa0f04d26ece267df8d7f6b4e03" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32087699" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseDataEnvironment : IDisposable, msdatasrc.DataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BaseDataEnvironment extends System.Object implements class msdatasrc.DataSource, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseDataEnvironment&#xA;Implements DataSource, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseDataEnvironment abstract : IDisposable, msdatasrc::DataSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>msdatasrc.DataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Emuluje Visual Basic 6.0 <see langword="Data Environment" /> w aplikacjach, które zostały uaktualnione z programu Visual Basic 6.0.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W języku Visual Basic 6.0 powiązane z danymi formularzy zostały automatycznie utworzone po przeciągnąć elementy bazy danych z `Data Environment` w formularzu. `Data Environment` Obsługi wszystkich mapowań między Visual Basic 6.0 i warstwa danych ADO. Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseDataEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseDataEnvironment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" />
      </Docs>
    </Member>
    <Member MemberName="addDataSourceListener">
      <MemberSignature Language="C#" Value="public virtual void addDataSourceListener (msdatasrc.DataSourceListener ds);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void addDataSourceListener(class msdatasrc.DataSourceListener ds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.addDataSourceListener(msdatasrc.DataSourceListener)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub addDataSourceListener (ds As DataSourceListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void addDataSourceListener(msdatasrc::DataSourceListener ^ ds) = msdatasrc::DataSource::addDataSourceListener;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:msdatasrc.DataSource.addDataSourceListener(msdatasrc.DataSourceListener)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ds" Type="msdatasrc.DataSourceListener" />
      </Parameters>
      <Docs>
        <param name="ds">Brak.</param>
        <summary>Ta metoda nie jest zaimplementowana w <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest zaimplementowana w <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment> klasy.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Commands">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję <see langword="ADODB.Command" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Commands">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Collection Commands { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Collection Commands" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Commands" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Commands As Collection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Collection ^ Commands { Microsoft::VisualBasic::Collection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see langword="ADODB.Command" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
        <value>Kolekcja <see langword="ADODB.Command" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commands">
      <MemberSignature Language="C#" Value="public ADODB.Command Commands[object lpVar] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ADODB.Command Commands(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Commands(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Commands(lpVar As Object) As Command" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::Command ^ Commands[System::Object ^] { ADODB::Command ^ get(System::Object ^ lpVar); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.Command</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpVar" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="lpVar">Visual Basic 6.0 <see langword="Variant" /> zawierający <see langword="ADODB.Command" /> obiektów.</param>
        <summary>Pobiera kolekcję <see langword="ADODB.Command" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
        <value>Kolekcja <see langword="ADODB.Command" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connections">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję <see langword="ADODB.Connection" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Collection Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Collection Connections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As Collection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Collection ^ Connections { Microsoft::VisualBasic::Collection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see langword="ADODB.Connection" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
        <value>Kolekcja <see langword="ADODB.Connection" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public ADODB.Connection Connections[object lpVar] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ADODB.Connection Connections(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Connections(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections(lpVar As Object) As Connection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::Connection ^ Connections[System::Object ^] { ADODB::Connection ^ get(System::Object ^ lpVar); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.Connection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpVar" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="lpVar">Visual Basic 6.0 <see langword="Variant" /> zawierający <see langword="ADODB.Connection" /> obiektów.</param>
        <summary>Pobiera kolekcję <see langword="ADODB.Connection" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
        <value>Kolekcja <see langword="ADODB.Connection" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" />i opcjonalnie zwalnia zasoby zarządzane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" />i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez metodę publiczną `Dispose()` — metoda i <xref:System.Object.Finalize%2A> metody. `Dispose()` wywołuje chronioną metodę `Dispose(Boolean)` metody z parametrem disposing ustawioną `true`. <xref:System.Object.Finalize%2A> wywołuje `Dispose` z parametrem disposing ustawioną `false`.  
  
 Jeśli parametr disposing jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane, które odwołuje się do tego formantu. Ta metoda wywołuje `Dispose()` metody każdego odwołuje się do obiektu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BaseDataEnvironment ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BaseDataEnvironment ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastępuje <see cref="M:System.Object.Finalize" /> metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="getDataMember">
      <MemberSignature Language="C#" Value="public virtual object getDataMember (string strDataMember, ref Guid Id);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance object getDataMember(string strDataMember, valuetype System.Guid&amp; Id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.getDataMember(System.String,System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function getDataMember (strDataMember As String, ByRef Id As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ getDataMember(System::String ^ strDataMember, Guid % Id) = msdatasrc::DataSource::getDataMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:msdatasrc.DataSource.getDataMember(System.String,System.Guid@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strDataMember" Type="System.String" />
        <Parameter Name="Id" Type="System.Guid&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="strDataMember">A <see langword="String" /> zawierający <see langword="ADODB.Command" /> obiektu.</param>
        <param name="Id">Identyfikator GUID reprezentujący <see langword="ADODB.Recordset" /> obiektu.</param>
        <summary>Wywołuje metodę na podstawie <see langword="ADODB.Command" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Object" /> Zawierający <see langword="ADODB.Command" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMemberCount">
      <MemberSignature Language="C#" Value="public virtual int GetDataMemberCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance int32 GetDataMemberCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.GetDataMemberCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMemberCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetDataMemberCount() = msdatasrc::DataSource::getDataMemberCount;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera liczbę <see langword="ADODB.Command" /> obiektów.</summary>
        <returns>
          <see langword="Integer" /> Zawierający wartość licznika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko `ADODB.Command` obiektów, które nie zwracają `ADODB.Recordset` są uwzględniane.  
  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataMemberName">
      <MemberSignature Language="C#" Value="public virtual string GetDataMemberName (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance string GetDataMemberName(int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.GetDataMemberName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataMemberName (Index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDataMemberName(int Index) = msdatasrc::DataSource::getDataMemberName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index">Nie dotyczy.</param>
        <summary>Ta metoda nie jest zaimplementowana w <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> klasy.</summary>
        <returns>
          <see langword="Nothing" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest zaimplementowana w <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment> klasy.  
  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="m_Commands">
      <MemberSignature Language="C#" Value="protected Microsoft.VisualBasic.Collection m_Commands;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.VisualBasic.Collection m_Commands" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.m_Commands" />
      <MemberSignature Language="VB.NET" Value="Protected m_Commands As Collection " />
      <MemberSignature Language="C++ CLI" Value="protected: Microsoft::VisualBasic::Collection ^ m_Commands;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera <see cref="Overload:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Commands" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="m_Connections">
      <MemberSignature Language="C#" Value="protected Microsoft.VisualBasic.Collection m_Connections;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.VisualBasic.Collection m_Connections" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.m_Connections" />
      <MemberSignature Language="VB.NET" Value="Protected m_Connections As Collection " />
      <MemberSignature Language="C++ CLI" Value="protected: Microsoft::VisualBasic::Collection ^ m_Connections;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera <see cref="Overload:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Connections" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="m_NonRSReturningCommands">
      <MemberSignature Language="C#" Value="protected Microsoft.VisualBasic.Collection m_NonRSReturningCommands;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.VisualBasic.Collection m_NonRSReturningCommands" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.m_NonRSReturningCommands" />
      <MemberSignature Language="VB.NET" Value="Protected m_NonRSReturningCommands As Collection " />
      <MemberSignature Language="C++ CLI" Value="protected: Microsoft::VisualBasic::Collection ^ m_NonRSReturningCommands;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera kolekcję.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="m_Recordsets">
      <MemberSignature Language="C#" Value="protected Microsoft.VisualBasic.Collection m_Recordsets;" />
      <MemberSignature Language="ILAsm" Value=".field family class Microsoft.VisualBasic.Collection m_Recordsets" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.m_Recordsets" />
      <MemberSignature Language="VB.NET" Value="Protected m_Recordsets As Collection " />
      <MemberSignature Language="C++ CLI" Value="protected: Microsoft::VisualBasic::Collection ^ m_Recordsets;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera <see cref="Overload:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Recordsets" /> kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public object Object { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Object" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Object" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Object As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Object { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> obiektu.</summary>
        <value>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Recordsets">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera kolekcję <see langword="ADODB.Recordset" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Recordsets">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Collection Recordsets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Collection Recordsets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Recordsets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Recordsets As Collection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Collection ^ Recordsets { Microsoft::VisualBasic::Collection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see langword="ADODB.Recordset" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
        <value>Kolekcja <see langword="ADODB.Recordset" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Recordsets">
      <MemberSignature Language="C#" Value="public ADODB.Recordset Recordsets[object lpVar] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class ADODB.Recordset Recordsets(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Recordsets(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Recordsets(lpVar As Object) As Recordset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ADODB::Recordset ^ Recordsets[System::Object ^] { ADODB::Recordset ^ get(System::Object ^ lpVar); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>ADODB.Recordset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpVar" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="lpVar">Visual Basic 6.0 <see langword="Variant" /> zawierający <see langword="ADODB.Recordset" /> obiektów.</param>
        <summary>Pobiera kolekcję <see langword="ADODB.Recordset" /> obiektów do użycia w aplikacji uaktualnione z programu Visual Basic 6.0.</summary>
        <value>Kolekcja <see langword="ADODB.Recordset" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="removeDataSourceListener">
      <MemberSignature Language="C#" Value="public virtual void removeDataSourceListener (msdatasrc.DataSourceListener ds);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void removeDataSourceListener(class msdatasrc.DataSourceListener ds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.removeDataSourceListener(msdatasrc.DataSourceListener)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub removeDataSourceListener (ds As DataSourceListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void removeDataSourceListener(msdatasrc::DataSourceListener ^ ds) = msdatasrc::DataSource::removeDataSourceListener;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:msdatasrc.DataSource.removeDataSourceListener(msdatasrc.DataSourceListener)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ds" Type="msdatasrc.DataSourceListener" />
      </Parameters>
      <Docs>
        <param name="ds">Nie dotyczy.</param>
        <summary>Ta metoda nie jest zaimplementowana w <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest zaimplementowana w <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment> klasy.  
  
 Gdy aplikacja jest uaktualniany do języka Visual Basic `BaseDataEnvironment` utworzeniu do włączenia powiązane ADO kodu.  
  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>