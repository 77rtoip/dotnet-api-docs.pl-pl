<Type Name="IRowset" FullName="Microsoft.VisualBasic.Compatibility.VB6.IRowset">
  <Metadata><Meta Name="ms.openlocfilehash" Value="82752a18d3eeebdad719c04ee550d27f388f1f5e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69093645" /></Metadata><TypeSignature Language="C#" Value="public interface IRowset" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRowset" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IRowset" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRowset" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRowset" />
  <TypeSignature Language="F#" Value="type IRowset = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0C733A7C-2A1C-11CE-ADE5-00AA0044773D")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia implementację interfejsu OLE DB <see langword="IRowset" /> do użycia przez aplikacje uaktualnione z Visual Basic 6,0.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRefRows">
      <MemberSignature Language="C#" Value="public void AddRefRows (int cRows, int[] hRows, out int[] refCounts, out int[] rowStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void AddRefRows([in]int32 cRows, [in]int32[] hRows, [out] int32[]&amp; refCounts, [out] int32[]&amp; rowStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows(System.Int32,System.Int32[],System.Int32[]@,System.Int32[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRefRows (cRows As Integer, hRows As Integer(), ByRef refCounts As Integer(), ByRef rowStatus As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRefRows(int cRows, cli::array &lt;int&gt; ^ hRows, [Runtime::InteropServices::Out] cli::array &lt;int&gt; ^ % refCounts, [Runtime::InteropServices::Out] cli::array &lt;int&gt; ^ % rowStatus);" />
      <MemberSignature Language="F#" Value="abstract member AddRefRows : int * int[] *  *  -&gt; unit" Usage="iRowset.AddRefRows (cRows, hRows, refCounts, rowStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cRows" Type="System.Int32" />
        <Parameter Name="hRows" Type="System.Int32[]" />
        <Parameter Name="refCounts" Type="System.Int32[]" RefType="out" />
        <Parameter Name="rowStatus" Type="System.Int32[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cRows">Liczba wierszy, dla których ma zostać zwiększona liczba odwołań.</param>
        <param name="hRows">Tablica dojść do wierszy, dla których ma zostać zwiększona liczba odwołań. Liczba odwołań do wierszy jest zwiększana o jeden dla każdego, kiedy pojawiają się w tablicy.</param>
        <param name="refCounts">Tablica z <paramref name="cRows" /> elementami, w których ma zostać zwrócona nowa liczba odwołań dla każdego wiersza. Odbiorca przydziela pamięć dla tej tablicy. Jeśli <paramref name="refCounts" /> jest wskaźnikiem typu null, nie są zwracane żadne liczby odwołań.</param>
        <param name="rowStatus">Tablica z <paramref name="cRows" /> elementami, w których mają być zwracane wartości wskazujące stan każdego wiersza określonego w <paramref name="hRows" />.</param>
        <summary>Dodaje liczbę odwołań do istniejącego dojścia do wiersza.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public void GetData (int hRow, int hAccessor, IntPtr pData);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void GetData([in]int32 hRow, [in]int32 hAccessor, [in]native int pData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData(System.Int32,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetData (hRow As Integer, hAccessor As Integer, pData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetData(int hRow, int hAccessor, IntPtr pData);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int * int * nativeint -&gt; unit" Usage="iRowset.GetData (hRow, hAccessor, pData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hRow" Type="System.Int32" />
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="pData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hRow">Uchwyt wiersza, z którego mają zostać pobrane dane.</param>
        <param name="hAccessor">Dojście metody dostępu do użycia.</param>
        <param name="pData">Wskaźnik do buforu, w którym mają zostać zwrócone dane.</param>
        <summary>Pobiera dane z kopii wiersza zestawu wierszy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextRows">
      <MemberSignature Language="C#" Value="public void GetNextRows (int hChapter, int lRowsOffset, int cRows, out int cRowsObtained, out int[] hRows);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void GetNextRows([in]int32 hChapter, [in]int32 lRowsOffset, [in]int32 cRows, [out] int32&amp; cRowsObtained, [out] int32[]&amp; hRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetNextRows (hChapter As Integer, lRowsOffset As Integer, cRows As Integer, ByRef cRowsObtained As Integer, ByRef hRows As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetNextRows(int hChapter, int lRowsOffset, int cRows, [Runtime::InteropServices::Out] int % cRowsObtained, [Runtime::InteropServices::Out] cli::array &lt;int&gt; ^ % hRows);" />
      <MemberSignature Language="F#" Value="abstract member GetNextRows : int * int * int *  *  -&gt; unit" Usage="iRowset.GetNextRows (hChapter, lRowsOffset, cRows, cRowsObtained, hRows)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hChapter" Type="System.Int32" />
        <Parameter Name="lRowsOffset" Type="System.Int32" />
        <Parameter Name="cRows" Type="System.Int32" />
        <Parameter Name="cRowsObtained" Type="System.Int32" RefType="out" />
        <Parameter Name="hRows" Type="System.Int32[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hChapter">Uchwyt rozdziału wyznaczający wiersze do pobrania.</param>
        <param name="lRowsOffset">Podpisana liczba wierszy do pominięcia przed pobraniem wierszy. Usunięte wiersze, z których usunięto dostawcę z zestawu wierszy, nie są zliczane w pominięciu.</param>
        <param name="cRows">Liczba wierszy do pobrania. Liczba ujemna jest pobierana do tyłu.</param>
        <param name="cRowsObtained">Wskaźnik do pamięci, w której ma zostać zwrócona rzeczywista liczba pobranych wierszy.</param>
        <param name="hRows">Wskaźnik do pamięci, w której ma zostać zwrócona tablica dojść do pobranych wierszy.</param>
        <summary>Pobiera wiersze sekwencyjnie, zapamiętając poprzednią pozycję.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseRows">
      <MemberSignature Language="C#" Value="public int ReleaseRows (int cRows, int[] hRows, IntPtr rowOptions, IntPtr rowRefCounts, IntPtr rgRowStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance int32 ReleaseRows([in]int32 cRows, [in]int32[] hRows, [in]native int rowOptions, [in]native int rowRefCounts, [in]native int rgRowStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows(System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReleaseRows (cRows As Integer, hRows As Integer(), rowOptions As IntPtr, rowRefCounts As IntPtr, rgRowStatus As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReleaseRows(int cRows, cli::array &lt;int&gt; ^ hRows, IntPtr rowOptions, IntPtr rowRefCounts, IntPtr rgRowStatus);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseRows : int * int[] * nativeint * nativeint * nativeint -&gt; int" Usage="iRowset.ReleaseRows (cRows, hRows, rowOptions, rowRefCounts, rgRowStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cRows" Type="System.Int32" />
        <Parameter Name="hRows" Type="System.Int32[]" />
        <Parameter Name="rowOptions" Type="System.IntPtr" />
        <Parameter Name="rowRefCounts" Type="System.IntPtr" />
        <Parameter Name="rgRowStatus" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="cRows">Liczba wierszy do zwolnienia.</param>
        <param name="hRows">Tablica dojść do zwolnienia wierszy. Uchwyty wierszy nie muszą tworzyć klastra logicznego. mogły zostać uzyskane w osobnych godzinach i nie muszą być dla ciągłych wierszy. Uchwyty wierszy są zmniejszane o jedną liczbę odwołań dla każdej chwili, gdy pojawiają się w tablicy.</param>
        <param name="rowOptions">Tablica <paramref name="cRows" /> elementów zawierających masek bitowych wskazujący dodatkowe opcje, które należy określić po zwolnieniu wiersza.</param>
        <param name="rowRefCounts">Tablica z <paramref name="cRows" /> elementami, w których ma zostać zwrócona nowa liczba odwołań dla każdego wiersza.</param>
        <param name="rgRowStatus">Tablica z <paramref name="cRows" /> elementami, w których mają być zwracane wartości wskazujące stan każdego wiersza określonego w <paramref name="hRows" />.</param>
        <summary>Zwalnia wiersze.</summary>
        <returns><see langword="Integer" /> Reprezentujący wynik.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestartPosition">
      <MemberSignature Language="C#" Value="public int RestartPosition (int hChapter);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance int32 RestartPosition([in]int32 hChapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RestartPosition (hChapter As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RestartPosition(int hChapter);" />
      <MemberSignature Language="F#" Value="abstract member RestartPosition : int -&gt; int" Usage="iRowset.RestartPosition hChapter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hChapter" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hChapter">Uchwyt rozdziału wyznaczający wiersze, na których należy zmienić położenie.</param>
        <summary>Zmienia położenie następnego pobrania do jego pozycji początkowej.</summary>
        <returns><see langword="Integer" /> Reprezentujący wynik.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[Note_compatibility](~/includes/note-compatibility-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
