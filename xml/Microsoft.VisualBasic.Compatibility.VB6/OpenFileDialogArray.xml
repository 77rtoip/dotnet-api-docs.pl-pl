<Type Name="OpenFileDialogArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f7799c3918362cc413de9222dfad27fb2f2c6f2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69092928" /></Metadata><TypeSignature Language="C#" Value="public class OpenFileDialogArray : Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi OpenFileDialogArray extends Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />
  <TypeSignature Language="VB.NET" Value="Public Class OpenFileDialogArray&#xA;Inherits BaseControlArray&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialogArray : Microsoft::VisualBasic::Compatibility::VB6::BaseControlArray, System::ComponentModel::IExtenderProvider" />
  <TypeSignature Language="F#" Value="type OpenFileDialogArray = class&#xA;    inherit BaseControlArray&#xA;    interface IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Index", typeof(System.Windows.Forms.OpenFileDialog))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia tablicę <see cref="T:System.Windows.Forms.OpenFileDialog" /> formantów kontrolek.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa zapewnia równoważność dla funkcjonalności w czasie wykonywania macierzy Visual Basic 6,0 `OpenFileDialog`. `OpenFileDialogArray` Nie udostępnia funkcji czasu projektowania tablicy formantów programu Visual Basic 6.0.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialogArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialogArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia wystąpienia <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray>, należy również <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.SetIndex%2A> wywołać metodę, aby utworzyć początkowy element w tablicy.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialogArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialogArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container"><see cref="T:System.ComponentModel.IContainer" /> Miejsce, w którym będzie hostowana Tablica formantów.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> klasy, określając jego kontener.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia wystąpienia <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray>, należy również <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.SetIndex%2A> wywołać metodę, aby utworzyć początkowy element w tablicy.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance bool CanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ target) = System::ComponentModel::IExtenderProvider::CanExtend;" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool&#xA;override this.CanExtend : obj -&gt; bool" Usage="openFileDialogArray.CanExtend target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><see cref="T:System.Windows.Forms.OpenFileDialog" /> Kontrolka.</param>
        <summary>Pobiera wartość określającą, czy formant jest elementem członkowskim <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
        <returns><see langword="true" />Jeśli <paramref name="target" /> jest elementem członkowskim tablicy formantów; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda może służyć do określenia, czy konkretny <xref:System.Windows.Forms.OpenFileDialog> formant jest elementem bazowym tablicy formantów, z której zostały sklonowane inne elementy. `CanExtend`  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileOk">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler FileOk;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler FileOk" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.FileOk" />
      <MemberSignature Language="VB.NET" Value="Public Event FileOk As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ FileOk;" />
      <MemberSignature Language="F#" Value="member this.FileOk : System.ComponentModel.CancelEventHandler " Usage="member this.FileOk : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie <see langword="Open" /> przycisk lub <see langword="Save" /> w <see cref="T:System.Windows.Forms.OpenFileDialog" /> oknie dialogowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected override Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="override this.GetControlInstanceType : unit -&gt; Type" Usage="openFileDialogArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zastąpień <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
        <returns>Typ formantu w tablicy formantów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody nie można wywoływać z kodu aplikacji. Zamiast tego użyj metody. <xref:System.Object.GetType%2A>  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public short GetIndex (System.Windows.Forms.OpenFileDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 GetIndex(class System.Windows.Forms.OpenFileDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.GetIndex(System.Windows.Forms.OpenFileDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndex (o As OpenFileDialog) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetIndex(System::Windows::Forms::OpenFileDialog ^ o);" />
      <MemberSignature Language="F#" Value="member this.GetIndex : System.Windows.Forms.OpenFileDialog -&gt; int16" Usage="openFileDialogArray.GetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.OpenFileDialog" />
      </Parameters>
      <Docs>
        <param name="o"><see cref="T:System.Windows.Forms.OpenFileDialog" /> W tablicy formantów.</param>
        <summary>Pobiera indeks <see cref="T:System.Windows.Forms.OpenFileDialog" /> <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />w.</summary>
        <returns>Reprezentuje indeks określonego <see cref="T:System.Windows.Forms.OpenFileDialog" />. <see langword="Short" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą tej metody można pobrać indeks dla określonego <xref:System.Windows.Forms.OpenFileDialog>elementu.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberSignature Language="F#" Value="member this.HelpRequest : EventHandler " Usage="member this.HelpRequest : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik kliknie <see langword="Help" /> przycisk <see cref="T:System.Windows.Forms.OpenFileDialog" /> w oknie dialogowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o sposobie obsługi zdarzeń, zobacz [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected override void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.HookUpControlEvents : obj -&gt; unit" Usage="openFileDialogArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">A <see cref="T:System.Object" />.</param>
        <summary>Zastąpień <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody nie można wywoływać z kodu aplikacji. Użyj `AddHandler` , aby podłączyć zdarzenia dla wszystkich kontrolek, które są dodawane za <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> pomocą metody.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.OpenFileDialog this[short Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.OpenFileDialog Item(int16)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.Item(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Short) As OpenFileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::OpenFileDialog ^ default[short] { System::Windows::Forms::OpenFileDialog ^ get(short Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int16) : System.Windows.Forms.OpenFileDialog" Usage="Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OpenFileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">A <see langword="Short" /> , która określa położenie elementu tablicy formantów.</param>
        <summary>Pobiera określony element <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> według indeksu. Tylko do odczytu.</summary>
        <value><see cref="T:System.Windows.Forms.OpenFileDialog" /> O określonej<paramref name="Index" /> w tablicy formantów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Item` Właściwość jest właściwością domyślną tablicy formantów. W związku z tym następujące wiersze kodu są równoważne.  
  
```vb  
MsgBox(CStr(OpenFileDialogArray.Item(1).Text))  
MsgBox(CStr(OpenFileDialogArray(1).Text))  
```  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetIndex">
      <MemberSignature Language="C#" Value="public void ResetIndex (System.Windows.Forms.OpenFileDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ResetIndex(class System.Windows.Forms.OpenFileDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.ResetIndex(System.Windows.Forms.OpenFileDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetIndex (o As OpenFileDialog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetIndex(System::Windows::Forms::OpenFileDialog ^ o);" />
      <MemberSignature Language="F#" Value="member this.ResetIndex : System.Windows.Forms.OpenFileDialog -&gt; unit" Usage="openFileDialogArray.ResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.OpenFileDialog" />
      </Parameters>
      <Docs>
        <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Metoda nie jest obsługiwana <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> w klasie. <see langword="ResetIndex" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest obsługiwana i jej wywołanie nie spowoduje zgłoszenia wyjątku.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIndex">
      <MemberSignature Language="C#" Value="public void SetIndex (System.Windows.Forms.OpenFileDialog o, short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetIndex(class System.Windows.Forms.OpenFileDialog o, int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.SetIndex(System.Windows.Forms.OpenFileDialog,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIndex (o As OpenFileDialog, Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIndex(System::Windows::Forms::OpenFileDialog ^ o, short Index);" />
      <MemberSignature Language="F#" Value="member this.SetIndex : System.Windows.Forms.OpenFileDialog * int16 -&gt; unit" Usage="openFileDialogArray.SetIndex (o, Index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.OpenFileDialog" />
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="o"><see cref="T:System.Windows.Forms.OpenFileDialog" /> W tablicy formantów.</param>
        <param name="Index">Reprezentuje indeks określonego <see cref="T:System.Windows.Forms.OpenFileDialog" />. <see langword="Short" /></param>
        <summary>Ustawia indeks inicjału <see cref="T:System.Windows.Forms.OpenFileDialog" /> <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />w.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `SetIndex` Metodę należy wywołać tylko wtedy, gdy tworzysz początkowy element w tablicy formantów. Aby dodać kolejne elementy, wywołaj <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> metodę i `Index`Określ.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeIndex">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeIndex (System.Windows.Forms.OpenFileDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ShouldSerializeIndex(class System.Windows.Forms.OpenFileDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.ShouldSerializeIndex(System.Windows.Forms.OpenFileDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeIndex (o As OpenFileDialog) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeIndex(System::Windows::Forms::OpenFileDialog ^ o);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeIndex : System.Windows.Forms.OpenFileDialog -&gt; bool" Usage="openFileDialogArray.ShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.OpenFileDialog" />
      </Parameters>
      <Docs>
        <param name="o"><see cref="T:System.Windows.Forms.OpenFileDialog" /> W tablicy formantów.</param>
        <summary>Zwraca wartość wskazującą, czy <see cref="T:System.Windows.Forms.OpenFileDialog" /> element jest członkiem tego <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />elementu.</summary>
        <returns><see langword="true" />Jeśli <paramref name="o" /> jest członkiem tej tablicy formantów; w przeciwnym razie <see langword="false" />,.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony <xref:System.Windows.Forms.OpenFileDialog> element jest składową innego <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray>, `ShouldSerializeIndex` zwraca `false`.  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic. W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w. Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
