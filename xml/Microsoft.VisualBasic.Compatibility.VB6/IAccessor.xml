<Type Name="IAccessor" FullName="Microsoft.VisualBasic.Compatibility.VB6.IAccessor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2f649b4ae175bde1bfe57247f32d575b0974a74" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69093765" /></Metadata><TypeSignature Language="C#" Value="public interface IAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAccessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAccessor" />
  <TypeSignature Language="F#" Value="type IAccessor = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0c733a8c-2a1c-11ce-ade5-00aa0044773d")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1a81b-101">Zapewnia implementację interfejsu OLE DB <see langword="IAccessor" /> do użycia przez aplikacje uaktualnione z Visual Basic 6,0.</span><span class="sxs-lookup"><span data-stu-id="1a81b-101">Provides an implementation of the OLE DB <see langword="IAccessor" /> interface for use by applications upgraded from Visual Basic 6.0.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1a81b-102">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1a81b-102">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="1a81b-103">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="1a81b-103">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="1a81b-104">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="1a81b-104">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRefAccessor">
      <MemberSignature Language="C#" Value="public void AddRefAccessor (int hAccessor, out int cRefCount);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void AddRefAccessor([in]int32 hAccessor, [out] int32&amp; cRefCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRefAccessor (hAccessor As Integer, ByRef cRefCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRefAccessor(int hAccessor, [Runtime::InteropServices::Out] int % cRefCount);" />
      <MemberSignature Language="F#" Value="abstract member AddRefAccessor : int *  -&gt; unit" Usage="iAccessor.AddRefAccessor (hAccessor, cRefCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="cRefCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor"><span data-ttu-id="1a81b-105">Uchwyt metody dostępu, dla którego ma zostać zwiększona liczba odwołań.</span><span class="sxs-lookup"><span data-stu-id="1a81b-105">The handle of the accessor for which to increment the reference count.</span></span></param>
        <param name="cRefCount"><span data-ttu-id="1a81b-106">Wskaźnik do pamięci, w której ma zostać zwrócona liczba odwołań dojścia dostępu.</span><span class="sxs-lookup"><span data-stu-id="1a81b-106">A pointer to memory in which to return the reference count of the accessor handle.</span></span> <span data-ttu-id="1a81b-107">Jeśli <paramref name="cRefCount" /> jest wskaźnikiem typu null, nie zostanie zwrócona liczba odwołań.</span><span class="sxs-lookup"><span data-stu-id="1a81b-107">If <paramref name="cRefCount" /> is a null pointer, no reference count is returned.</span></span></param>
        <summary><span data-ttu-id="1a81b-108">Dodaje liczbę odwołań do istniejącej metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="1a81b-108">Adds a reference count to an existing accessor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1a81b-109">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1a81b-109">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="1a81b-110">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="1a81b-110">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="1a81b-111">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="1a81b-111">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessor">
      <MemberSignature Language="C#" Value="public void CreateAccessor (int accessorFlags, int cBindings, Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, int cbRowSize, out int hAccessor, IntPtr pBindStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void CreateAccessor([in]int32 accessorFlags, [in]int32 cBindings, [in]valuetype Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, [in]int32 cbRowSize, [out] int32&amp; hAccessor, [in]native int pBindStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateAccessor (accessorFlags As Integer, cBindings As Integer, bindings As DBBINDING(), cbRowSize As Integer, ByRef hAccessor As Integer, pBindStatus As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateAccessor(int accessorFlags, int cBindings, cli::array &lt;Microsoft::VisualBasic::Compatibility::VB6::DBBINDING&gt; ^ bindings, int cbRowSize, [Runtime::InteropServices::Out] int % hAccessor, IntPtr pBindStatus);" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessor : int * int * Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] * int *  * nativeint -&gt; unit" Usage="iAccessor.CreateAccessor (accessorFlags, cBindings, bindings, cbRowSize, hAccessor, pBindStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessorFlags" Type="System.Int32" />
        <Parameter Name="cBindings" Type="System.Int32" />
        <Parameter Name="bindings" Type="Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]" />
        <Parameter Name="cbRowSize" Type="System.Int32" />
        <Parameter Name="hAccessor" Type="System.Int32" RefType="out" />
        <Parameter Name="pBindStatus" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="accessorFlags"><span data-ttu-id="1a81b-112">Maska bitów opisująca właściwości metody dostępu i sposobu ich użycia.</span><span class="sxs-lookup"><span data-stu-id="1a81b-112">A bitmask that describes the properties of the accessor and how it can be used.</span></span></param>
        <param name="cBindings"><span data-ttu-id="1a81b-113">Liczba powiązań w metodzie dostępu.</span><span class="sxs-lookup"><span data-stu-id="1a81b-113">The number of bindings in the accessor.</span></span></param>
        <param name="bindings"><span data-ttu-id="1a81b-114">Tablica <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> struktur.</span><span class="sxs-lookup"><span data-stu-id="1a81b-114">An array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> structures.</span></span></param>
        <param name="cbRowSize"><span data-ttu-id="1a81b-115">Liczba bajtów przydzielono dla pojedynczego zestawu parametrów lub wartości kryteriów w buforze odbiorcy.</span><span class="sxs-lookup"><span data-stu-id="1a81b-115">The number of bytes allocated for a single set of parameters or criteria values in the consumer's buffer.</span></span></param>
        <param name="hAccessor"><span data-ttu-id="1a81b-116">Wskaźnik do pamięci, w której ma zostać zwrócone dojście utworzonego elementu dostępu.</span><span class="sxs-lookup"><span data-stu-id="1a81b-116">A pointer to memory in which to return the handle of the created accessor.</span></span></param>
        <param name="pBindStatus"><span data-ttu-id="1a81b-117">Wskaźnik do tablicy <see langword="DBBINDSTATUS" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="1a81b-117">A pointer to an array of <see langword="DBBINDSTATUS" /> values.</span></span></param>
        <summary><span data-ttu-id="1a81b-118">Tworzy metodę dostępu z zestawu powiązań.</span><span class="sxs-lookup"><span data-stu-id="1a81b-118">Creates an accessor from a set of bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1a81b-119">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1a81b-119">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="1a81b-120">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="1a81b-120">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="1a81b-121">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="1a81b-121">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindings">
      <MemberSignature Language="C#" Value="public void GetBindings (int hAccessor, out int accessorFlags, out int cBindings, out IntPtr rgBindings);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void GetBindings([in]int32 hAccessor, [out] int32&amp; accessorFlags, [out] int32&amp; cBindings, [out] native int&amp; rgBindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetBindings (hAccessor As Integer, ByRef accessorFlags As Integer, ByRef cBindings As Integer, ByRef rgBindings As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetBindings(int hAccessor, [Runtime::InteropServices::Out] int % accessorFlags, [Runtime::InteropServices::Out] int % cBindings, [Runtime::InteropServices::Out] IntPtr % rgBindings);" />
      <MemberSignature Language="F#" Value="abstract member GetBindings : int *  *  *  -&gt; unit" Usage="iAccessor.GetBindings (hAccessor, accessorFlags, cBindings, rgBindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="accessorFlags" Type="System.Int32" RefType="out" />
        <Parameter Name="cBindings" Type="System.Int32" RefType="out" />
        <Parameter Name="rgBindings" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor"><span data-ttu-id="1a81b-122">Dojście metody dostępu, dla którego mają zostać zwrócone powiązania.</span><span class="sxs-lookup"><span data-stu-id="1a81b-122">The handle of the accessor for which to return the bindings.</span></span></param>
        <param name="accessorFlags"><span data-ttu-id="1a81b-123">Wskaźnik do pamięci, w której ma zostać zwrócona maska bitowa opisująca właściwości metody dostępu i sposób jej użycia.</span><span class="sxs-lookup"><span data-stu-id="1a81b-123">A pointer to memory in which to return a bitmask that describes the properties of the accessor and how it is intended to be used.</span></span></param>
        <param name="cBindings"><span data-ttu-id="1a81b-124">Wskaźnik do pamięci, w której ma zostać zwrócona liczba powiązań w metodzie dostępu.</span><span class="sxs-lookup"><span data-stu-id="1a81b-124">A pointer to memory in which to return the number of bindings in the accessor.</span></span></param>
        <param name="rgBindings"><span data-ttu-id="1a81b-125">Wskaźnik do pamięci, w której ma zostać zwrócona tablica <see langword="DBBINDSTATUS" /> struktur.</span><span class="sxs-lookup"><span data-stu-id="1a81b-125">A pointer to memory in which to return an array of <see langword="DBBINDSTATUS" /> structures.</span></span></param>
        <summary><span data-ttu-id="1a81b-126">Zwraca powiązania w metodzie dostępu.</span><span class="sxs-lookup"><span data-stu-id="1a81b-126">Returns the bindings in an accessor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1a81b-127">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1a81b-127">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="1a81b-128">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="1a81b-128">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="1a81b-129">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="1a81b-129">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAccessor">
      <MemberSignature Language="C#" Value="public void ReleaseAccessor (int hAccessor, out int cRefCount);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void ReleaseAccessor([in]int32 hAccessor, [out] int32&amp; cRefCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAccessor (hAccessor As Integer, ByRef cRefCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAccessor(int hAccessor, [Runtime::InteropServices::Out] int % cRefCount);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAccessor : int *  -&gt; unit" Usage="iAccessor.ReleaseAccessor (hAccessor, cRefCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="cRefCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor"><span data-ttu-id="1a81b-130">Dojście metody dostępu do wydania.</span><span class="sxs-lookup"><span data-stu-id="1a81b-130">The handle of the accessor to release.</span></span></param>
        <param name="cRefCount"><span data-ttu-id="1a81b-131">Wskaźnik do pamięci, w której ma zostać zwrócona pozostała liczba odwołań do dojścia dostępu.</span><span class="sxs-lookup"><span data-stu-id="1a81b-131">A pointer to memory in which to return the remaining reference count of the accessor handle.</span></span></param>
        <summary><span data-ttu-id="1a81b-132">Zwalnia metodę dostępu.</span><span class="sxs-lookup"><span data-stu-id="1a81b-132">Releases an accessor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1a81b-133">Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są udostępniane do użycia przez narzędzia do uaktualniania z Visual Basic 6,0 do Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1a81b-133">Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic.</span></span> <span data-ttu-id="1a81b-134">W większości przypadków te funkcje i obiekty duplikują funkcje, które można znaleźć w innych przestrzeniach nazw [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]w.</span><span class="sxs-lookup"><span data-stu-id="1a81b-134">In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="1a81b-135">Są one niezbędne tylko wtedy, gdy model kodu Visual Basic 6,0 różni się znacznie [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] od implementacji.</span><span class="sxs-lookup"><span data-stu-id="1a81b-135">They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
