<Type Name="IAccessor" FullName="Microsoft.VisualBasic.Compatibility.VB6.IAccessor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6375ed689a48d6fcbc96a8c741db5d4188834968" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52209288" /></Metadata><TypeSignature Language="C#" Value="public interface IAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAccessor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.IAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAccessor" />
  <TypeSignature Language="F#" Value="type IAccessor = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("0c733a8c-2a1c-11ce-ade5-00aa0044773d")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia implementację OLE DB <see langword="IAccessor" /> interfejsu dla uaktualnienie z programu Visual Basic 6.0 aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są dostarczane do użycia przez narzędzia do uaktualniania programu Visual Basic 6.0 do programu Visual Basic. W większości przypadków te funkcje i obiekty powielają funkcjonalność dostępną znajduje się w innych przestrzeniach nazw programu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ich użycie jest konieczne tylko wtedy gdy model kodu Visual Basic 6.0 różni się znacząco od [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementacji.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRefAccessor">
      <MemberSignature Language="C#" Value="public void AddRefAccessor (int hAccessor, out int cRefCount);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void AddRefAccessor([in]int32 hAccessor, [out] int32&amp; cRefCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRefAccessor (hAccessor As Integer, ByRef cRefCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRefAccessor(int hAccessor, [Runtime::InteropServices::Out] int % cRefCount);" />
      <MemberSignature Language="F#" Value="abstract member AddRefAccessor : int *  -&gt; unit" Usage="iAccessor.AddRefAccessor (hAccessor, cRefCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="cRefCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor">Dojście metody dostępu do których chcesz zwiększyć liczbę odwołań.</param>
        <param name="cRefCount">Wskaźnik do pamięci, w której ma zostać zwrócone licznik odwołań dojście metody dostępu. Jeśli <paramref name="cRefCount" /> jest wskaźnikiem typu null, jest zwracana żadna liczba odwołań.</param>
        <summary>Dodaje licznik odwołań do istniejącej metody dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są dostarczane do użycia przez narzędzia do uaktualniania programu Visual Basic 6.0 do programu Visual Basic. W większości przypadków te funkcje i obiekty powielają funkcjonalność dostępną znajduje się w innych przestrzeniach nazw programu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ich użycie jest konieczne tylko wtedy gdy model kodu Visual Basic 6.0 różni się znacząco od [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessor">
      <MemberSignature Language="C#" Value="public void CreateAccessor (int accessorFlags, int cBindings, Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, int cbRowSize, out int hAccessor, IntPtr pBindStatus);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void CreateAccessor([in]int32 accessorFlags, [in]int32 cBindings, [in]valuetype Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] bindings, [in]int32 cbRowSize, [out] int32&amp; hAccessor, [in]native int pBindStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateAccessor (accessorFlags As Integer, cBindings As Integer, bindings As DBBINDING(), cbRowSize As Integer, ByRef hAccessor As Integer, pBindStatus As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateAccessor(int accessorFlags, int cBindings, cli::array &lt;Microsoft::VisualBasic::Compatibility::VB6::DBBINDING&gt; ^ bindings, int cbRowSize, [Runtime::InteropServices::Out] int % hAccessor, IntPtr pBindStatus);" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessor : int * int * Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[] * int *  * nativeint -&gt; unit" Usage="iAccessor.CreateAccessor (accessorFlags, cBindings, bindings, cbRowSize, hAccessor, pBindStatus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessorFlags" Type="System.Int32" />
        <Parameter Name="cBindings" Type="System.Int32" />
        <Parameter Name="bindings" Type="Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[]" />
        <Parameter Name="cbRowSize" Type="System.Int32" />
        <Parameter Name="hAccessor" Type="System.Int32" RefType="out" />
        <Parameter Name="pBindStatus" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="accessorFlags">Maska bitów, który opisuje właściwości metody dostępu i jak mogą być używane.</param>
        <param name="cBindings">Liczba powiązań w metodzie dostępu.</param>
        <param name="bindings">Tablica <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> struktury.</param>
        <param name="cbRowSize">Liczba bajtów przydzielonych do jednego zestawu wartości parametrów lub kryteria w buforze użytkownika.</param>
        <param name="hAccessor">Wskaźnik do pamięci, w której ma zostać zwrócone uchwyt utworzonej metody dostępu.</param>
        <param name="pBindStatus">Wskaźnik do tablicy <see langword="DBBINDSTATUS" /> wartości.</param>
        <summary>Tworzy metodę dostępu na podstawie zestawu powiązania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są dostarczane do użycia przez narzędzia do uaktualniania programu Visual Basic 6.0 do programu Visual Basic. W większości przypadków te funkcje i obiekty powielają funkcjonalność dostępną znajduje się w innych przestrzeniach nazw programu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ich użycie jest konieczne tylko wtedy gdy model kodu Visual Basic 6.0 różni się znacząco od [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindings">
      <MemberSignature Language="C#" Value="public void GetBindings (int hAccessor, out int accessorFlags, out int cBindings, out IntPtr rgBindings);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void GetBindings([in]int32 hAccessor, [out] int32&amp; accessorFlags, [out] int32&amp; cBindings, [out] native int&amp; rgBindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetBindings (hAccessor As Integer, ByRef accessorFlags As Integer, ByRef cBindings As Integer, ByRef rgBindings As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetBindings(int hAccessor, [Runtime::InteropServices::Out] int % accessorFlags, [Runtime::InteropServices::Out] int % cBindings, [Runtime::InteropServices::Out] IntPtr % rgBindings);" />
      <MemberSignature Language="F#" Value="abstract member GetBindings : int *  *  *  -&gt; unit" Usage="iAccessor.GetBindings (hAccessor, accessorFlags, cBindings, rgBindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="accessorFlags" Type="System.Int32" RefType="out" />
        <Parameter Name="cBindings" Type="System.Int32" RefType="out" />
        <Parameter Name="rgBindings" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor">Dojście metody dostępu, dla której ma zostać zwrócone powiązania.</param>
        <param name="accessorFlags">Wskaźnik do pamięci, w której ma zostać zwrócone maską bitów, który opisuje właściwości metody dostępu i jak jest przeznaczony do użycia.</param>
        <param name="cBindings">Wskaźnik do pamięci, w której ma zostać zwrócone liczba powiązań w metodzie dostępu.</param>
        <param name="rgBindings">Wskaźnik do pamięci, w której ma zostać zwrócone tablicę <see langword="DBBINDSTATUS" /> struktury.</param>
        <summary>Zwraca powiązania w metodzie dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są dostarczane do użycia przez narzędzia do uaktualniania programu Visual Basic 6.0 do programu Visual Basic. W większości przypadków te funkcje i obiekty powielają funkcjonalność dostępną znajduje się w innych przestrzeniach nazw programu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ich użycie jest konieczne tylko wtedy gdy model kodu Visual Basic 6.0 różni się znacząco od [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAccessor">
      <MemberSignature Language="C#" Value="public void ReleaseAccessor (int hAccessor, out int cRefCount);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void ReleaseAccessor([in]int32 hAccessor, [out] int32&amp; cRefCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAccessor (hAccessor As Integer, ByRef cRefCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAccessor(int hAccessor, [Runtime::InteropServices::Out] int % cRefCount);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseAccessor : int *  -&gt; unit" Usage="iAccessor.ReleaseAccessor (hAccessor, cRefCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility.Data</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hAccessor" Type="System.Int32" />
        <Parameter Name="cRefCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="hAccessor">Dojście metody dostępu do wydania.</param>
        <param name="cRefCount">Wskaźnik do pamięci, w której ma zostać zwrócone pozostałe licznik odwołań dojście metody dostępu.</param>
        <summary>Udostępnia metody dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Funkcje i obiekty w <xref:Microsoft.VisualBasic.Compatibility.VB6> przestrzeni nazw są dostarczane do użycia przez narzędzia do uaktualniania programu Visual Basic 6.0 do programu Visual Basic. W większości przypadków te funkcje i obiekty powielają funkcjonalność dostępną znajduje się w innych przestrzeniach nazw programu [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ich użycie jest konieczne tylko wtedy gdy model kodu Visual Basic 6.0 różni się znacząco od [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>