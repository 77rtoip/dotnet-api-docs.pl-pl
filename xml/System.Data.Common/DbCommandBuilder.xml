<Type Name="DbCommandBuilder" FullName="System.Data.Common.DbCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5bfb54f7b76a4739f53cb9e965eb71e14aa89733" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30443655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbCommandBuilder : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbCommandBuilder extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbCommandBuilder&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbCommandBuilder abstract : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Automatycznie generuje pojedynczej tabeli poleceń używane do zmian do uzgodnienia <see cref="T:System.Data.DataSet" /> z skojarzonej bazie danych. To jest klasą abstrakcyjną, które mogą być tylko dziedziczone.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbCommandBuilder> Klasy jest udostępniana udogodnienie dostawcy składników zapisywania tworzenie własnych konstruktorów polecenia. Dziedziczenie po tej klasie, deweloperzy zaimplementować określone zachowanie dostawcy w własny kod.  
  
 <xref:System.Data.Common.DbDataAdapter> Nie automatycznie wygenerować instrukcji SQL wymagane do uzgodnienia zmian <xref:System.Data.DataSet> z odpowiedniego źródła danych. Można jednak utworzyć <xref:System.Data.Common.DbCommandBuilder> obiekt, aby automatycznie wygenerować instrukcji SQL aktualizacje pojedynczej tabeli, jeśli ustawisz <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> właściwość <xref:System.Data.Common.DbDataAdapter>. Następnie żadnych dodatkowych instrukcji SQL, które nie zostały ustawione są generowane przez <xref:System.Data.Common.DbCommandBuilder>.  
  
 <xref:System.Data.Common.DbCommandBuilder> Rejestrowane jako odbiornika dla <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> zdarzenia przy każdym ustawieniu <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> właściwości. Można skojarzyć tylko jedną <xref:System.Data.Common.DbDataAdapter> lub <xref:System.Data.Common.DbCommandBuilder> obiektu ze sobą w tym samym czasie.  
  
 Aby wygenerować instrukcje INSERT, UPDATE lub DELETE, <xref:System.Data.Common.DbCommandBuilder> używa <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> właściwość, aby automatycznie pobrać wymagane zestawu metadanych. Jeśli zmienisz <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> po pobrania metadanych (na przykład po pierwszej aktualizacji), należy wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> metody w celu zaktualizowania metadanych.  
  
 `SelectCommand` Musi także zwracać co najmniej jeden klucz podstawowy lub unikatowy kolumny. Jeśli żaden nie istnieją, <xref:System.InvalidOperationException> wygenerowany wyjątek i nie są generowane polecenia.  
  
 <xref:System.Data.Common.DbCommandBuilder> Używa również <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>, i <xref:System.Data.Common.DbCommand.Transaction%2A> właściwości odwołuje się <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>. Użytkownik powinien wywoływać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> czy żadnej z tych właściwości są modyfikowane, czy <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> sam zostanie zastąpiony. W przeciwnym razie <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, i <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> właściwości zachowują swoje poprzedniej wartości.  
  
 Jeśli należy wywołać <xref:System.ComponentModel.Component.Dispose%2A>, <xref:System.Data.Common.DbCommandBuilder> są oddzielone od <xref:System.Data.Common.DbDataAdapter>, i generowane polecenia nie są już używane.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy, która dziedziczy <see cref="T:System.Data.Common.DbCommandBuilder" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow row, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ row, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="row" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">A <see cref="T:System.Data.Common.DbParameter" /> dla których stosowane są dodatkowe zmiany.</param>
        <param name="row">
          <see cref="T:System.Data.DataRow" /> z tabeli schematu udostępnione przez <see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" />.</param>
        <param name="statementType">Typ polecenia generowaną; Wstawianie, AKTUALIZOWANIE lub usuwanie.</param>
        <param name="whereClause">
          <see langword="true" /> Jeśli parametr jest częścią aktualizacji lub usunięcia klauzuli WHERE <see langword="false" /> Jeśli jest on częścią wartości insert lub update.</param>
        <summary>Implementacja dostawcy umożliwia <see cref="T:System.Data.Common.DbCommandBuilder" /> klasy do obsługi parametru dodatkowe właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia implementacja <xref:System.Data.Common.DbCommandBuilder> klasy do obsługi właściwości parametru specyficznego dla dostawcy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogLocation">
      <MemberSignature Language="C#" Value="public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Common.CatalogLocation CatalogLocation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogLocation As CatalogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::Common::CatalogLocation CatalogLocation { System::Data::Common::CatalogLocation get(); void set(System::Data::Common::CatalogLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CatalogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia lub pobiera <see cref="T:System.Data.Common.CatalogLocation" /> dla wystąpienia <see cref="T:System.Data.Common.DbCommandBuilder" /> klasy.</summary>
        <value>A <see cref="T:System.Data.Common.CatalogLocation" /> obiektu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogSeparator">
      <MemberSignature Language="C#" Value="public virtual string CatalogSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.CatalogSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia lub pobiera ciąg używany jako separator katalogu dla wystąpienia <see cref="T:System.Data.Common.DbCommandBuilder" /> klasy.</summary>
        <value>Ciąg wskazujący separatora katalogu do użytku z wystąpieniem <see cref="T:System.Data.Common.DbCommandBuilder" /> klasy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictOption">
      <MemberSignature Language="C#" Value="public virtual System.Data.ConflictOption ConflictOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConflictOption ConflictOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.ConflictOption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConflictOption As ConflictOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConflictOption ConflictOption { System::Data::ConflictOption get(); void set(System::Data::ConflictOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConflictOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, która <see cref="T:System.Data.ConflictOption" /> ma być używany przez <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <value>Zwraca jedną z <see cref="T:System.Data.ConflictOption" /> wartości opisujący zachowanie to <see cref="T:System.Data.Common.DbCommandBuilder" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As DbDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbDataAdapter ^ DataAdapter { System::Data::Common::DbDataAdapter ^ get(); void set(System::Data::Common::DbDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Data.Common.DbDataAdapter" /> obiektu języka Transact-SQL, które instrukcje są generowane automatycznie.</summary>
        <value>A <see cref="T:System.Data.Common.DbDataAdapter" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbCommandBuilder> Rejestrowane jako odbiornika dla <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> zdarzeń generowanych przez <xref:System.Data.Common.DbDataAdapter> określone w tej właściwości.  
  
 Po utworzeniu nowego wystąpienia <xref:System.Data.Common.DbCommandBuilder>, wszelkie istniejące <xref:System.Data.Common.DbCommandBuilder> skojarzony z tym <xref:System.Data.Common.DbDataAdapter> zostanie zwolniony.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Data.Common.DbCommandBuilder" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez metodę publiczną <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> — metoda i `Finalize` metody. <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> wywołuje chronioną metodę <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> metody z parametrem disposing ustawioną `true`. `Finalize` wywołuje `Dispose` z `disposing` ustawioną `false`.  
  
 Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <xref:System.Data.Common.DbCommandBuilder> odwołania. Ta metoda wywołuje <xref:System.Data.Common.DbCommandBuilder.Dispose%2A> metody każdego odwołuje się do obiektu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /> można wywoływać wielokrotnie przez inne obiekty. W przypadku przesłaniania <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" />. Aby uzyskać więcej informacji na temat sposobu wdrażania <see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 Aby uzyskać więcej informacji na temat <see langword="Dispose" /> i <see langword="Finalize" />, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> i zmodyfikować tekst polecenia skojarzony, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Jeśli wersja przeciążone <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> służy do określenia to zachowanie, podając wartość logiczną może spowodować <xref:System.Data.Common.DbCommandBuilder> do wygenerowania na podstawie nazwy kolumn zamiast przez przekazywanie parametrów `True`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia usunięć.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> i zmodyfikować tekst polecenia, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia usunięć w źródle danych, opcjonalnie przy użyciu kolumn dla nazw parametrów.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia usunięć.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> i zmodyfikować tekst polecenia, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.Common.DbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. To się powiedzie, tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca tekst <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> i zmodyfikować tekst polecenia, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Jeśli zastąpionej wersji <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> służy do określenia to zachowanie, może spowodować <xref:System.Data.Common.DbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca tekst <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> i zmodyfikować tekst polecenia, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia w źródle danych, opcjonalnie przy użyciu kolumn dla nazw parametrów.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia operacji wstawienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca tekst <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> i zmodyfikować tekst polecenia, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.Common.DbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. Generowanie na podstawie nazw kolumn parametrów powiedzie się tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParameterName">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca nazwę określonego parametru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">Numeru, który ma być dołączane jako część nazwy parametru.</param>
        <summary>Zwraca nazwę określonego parametru w formacie @p * # *. Używany podczas kompilowania Konstruktor poleceń niestandardowych.</summary>
        <returns>Nazwa parametru z określoną liczbą dołączane jako część nazwy parametru.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">Częściowa nazwa parametru.</param>
        <summary>Zwraca nazwę parametru pełną nazwę parametru częściowej.</summary>
        <returns>Nazwa parametru pełne odpowiadającej żądanej nazwy parametru częściowej.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected abstract string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">Liczba być dołączane jako część nazwy parametru.</param>
        <summary>Zwraca symbol zastępczy dla parametru skojarzona instrukcja SQL.</summary>
        <returns>Nazwa parametru z określoną liczbą dołączane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona do użytku przez autorów dostawcy tworzenia Konstruktor poleceń niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable(class System.Data.Common.DbCommand sourceCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchemaTable (sourceCommand As DbCommand) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ GetSchemaTable(System::Data::Common::DbCommand ^ sourceCommand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceCommand" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="sourceCommand">
          <see cref="T:System.Data.Common.DbCommand" /> Dla których mają zostać pobrane odpowiednie tabeli schematów.</param>
        <summary>Zwraca tabelę schematu dla <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> reprezentujący schematu dla konkretnych <see cref="T:System.Data.Common.DbCommand" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona do użytku przez autorów dostawcy tworzenia Konstruktor poleceń niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> i zmodyfikować tekst polecenia, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Jeśli zastąpionej wersji <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> służy do określenia to zachowanie, może spowodować <xref:System.Data.Common.DbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> i zmodyfikować tekst polecenia, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.DbCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::DbCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">Jeśli <see langword="true" />, wygenerować nazwy parametru pasujące nazwy kolumny, jeśli to możliwe. Jeśli <see langword="false" />, generowanie @p1, @p2i tak dalej.</param>
        <summary>Pobiera automatycznie generowanych <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji w źródle danych, opcjonalnie przy użyciu kolumn dla nazw parametrów.</summary>
        <returns>Automatycznie wygenerowany <see cref="T:System.Data.Common.DbCommand" /> obiektu wymagane do przeprowadzenia aktualizacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja może użyć <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> celów metoda informacyjne lub dotyczące rozwiązywania problemów, ponieważ zwraca ono <xref:System.Data.Common.DbCommand> obiektu do wykonania.  
  
 Można również użyć <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> jako podstawa zmodyfikowane polecenia. Na przykład może wywołać <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> i zmodyfikować tekst polecenia, a następnie jawnie ustaw który na <xref:System.Data.Common.DbDataAdapter>.  
  
 Po instrukcji SQL najpierw jest generowany, aplikacja musi jawnie wywołać <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> zmiana instrukcji w dowolny sposób. W przeciwnym razie <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> będą nadal używać informacji z poprzednich instrukcji, które mogą być nieprawidłowe. Instrukcje SQL są po raz pierwszy albo generowane, gdy aplikacja wywołuje <xref:System.Data.Common.DbDataAdapter.Update%2A> lub <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.  
  
 Domyślnie podczas generowania nazwy parametrów, jest użycie @p1, @p2, i tak dalej dla różnych parametrów. Przekazywanie `true` dla `useColumnsForParameterNames` parametr umożliwia wymuszenie <xref:System.Data.Common.DbCommandBuilder> wygenerować parametrów na podstawie nazwy kolumny. Generowanie na podstawie nazw kolumn parametrów powiedzie się tylko wtedy, gdy są spełnione następujące warunki:  
  
-   <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> Został określony, a jego długość jest równa lub większa niż nazwa parametru wygenerowany.  
  
-   Nazwa parametru wygenerowanego spełnia kryteria określone w <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> wyrażenia regularnego.  
  
-   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> jest określona.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCommand">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbCommand InitializeCommand(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeCommand (command As DbCommand) As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbCommand ^ InitializeCommand(System::Data::Common::DbCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.Common.DbCommand" /> Używanego przez Konstruktor poleceń do odpowiedniego wstawiania, aktualizowania lub usuwania polecenia.</param>
        <summary>Resetuje <see cref="P:System.Data.Common.DbCommand.CommandTimeout" />, <see cref="P:System.Data.Common.DbCommand.Transaction" />, <see cref="P:System.Data.Common.DbCommand.CommandType" />, i <see cref="T:System.Data.UpdateRowSource" /> właściwości <see cref="T:System.Data.Common.DbCommand" />.</summary>
        <returns>A <see cref="T:System.Data.Common.DbCommand" /> wystąpienia dla każdego insert, update lub operację usuwania. Przekazana wartość null umożliwia <see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /> metodę w celu utworzenia <see cref="T:System.Data.Common.DbCommand" /> obiektu oparte na wybierz polecenie skojarzone z <see cref="T:System.Data.Common.DbCommandBuilder" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona do użytku przez autorów dostawcy tworzenia Konstruktor poleceń niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">Oryginalny identyfikator bez cudzysłowów.</param>
        <summary>Podany identyfikator bez cudzysłowów w przypadku katalogu poprawne zwraca wartość poprawny formularza tego identyfikatora, w tym prawidłowo anulowanie wszelkie cudzysłowy osadzony w identyfikatorze w cudzysłowach.</summary>
        <returns>Identyfikator wersja ujętego w cudzysłów. Osadzone cudzysłowy wewnątrz identyfikator prawidłowo będą miały zmienione znaczenie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuotePrefix">
      <MemberSignature Language="C#" Value="public virtual string QuotePrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuotePrefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuotePrefix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuotePrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuotePrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia znak na początku ani znaków do użycia podczas określania obiektów bazy danych (na przykład, tabel lub kolumn) których nazwy zawierają znaki, takie jak spacje lub zastrzeżone tokenów.</summary>
        <value>Pierwszy znak lub znaków do użycia. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre źródła danych mogą mieć obiektów, które mogą zawierać znaki spacji, przecinków i średnikami. Aby uwzględnić tę możliwość, <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> i <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> właściwości, aby określić ograniczniki, takie jak nawias otwierający i zamykający nawias hermetyzacji nazwę obiektu.  
  
> [!NOTE]
>  Mimo że nie można zmienić <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> lub <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> właściwości po instrukcji insert, update lub delete wygenerowaniu polecenia, można zmienić ich ustawienia po wywołaniu `Update` metody <xref:System.Data.Common.DbDataAdapter>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie można zmienić tej właściwości, po wygenerowaniu insert, update lub polecenia delete.</exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteSuffix">
      <MemberSignature Language="C#" Value="public virtual string QuoteSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuoteSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property QuoteSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ QuoteSuffix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia znak końcowy lub znaków do użycia podczas określania obiektów bazy danych (na przykład, tabel lub kolumn) których nazwy zawierają znaki, takie jak spacje lub zastrzeżone tokenów.</summary>
        <value>Końcowy znak lub znaków do użycia. Wartość domyślna to ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre źródła danych mogą mieć obiektów, które mogą zawierać znaki spacji, przecinków i średnikami. Aby uwzględnić tę możliwość, <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> i <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> właściwości, aby określić ograniczniki, takie jak nawias otwierający i zamykający nawias hermetyzacji nazwę obiektu.  
  
> [!NOTE]
>  Mimo że nie można zmienić <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A> lub <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A> właściwości po instrukcji insert, update lub delete wygenerowaniu polecenia, można zmienić ich ustawienia po wywołaniu `Update` metody <xref:System.Data.Common.DbDataAdapter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshSchema">
      <MemberSignature Language="C#" Value="public virtual void RefreshSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RefreshSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshSchema ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści polecenia skojarzony z tym <see cref="T:System.Data.Common.DbCommandBuilder" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> metody usunięcie wszystkich <xref:System.Data.Common.DbCommand> obiekty określone przez <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>,  
  
 <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>,  
  
 <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, a  
  
 <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RowUpdatingHandler(class System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RowUpdatingHandler (rowUpdatingEvent As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RowUpdatingHandler(System::Data::Common::RowUpdatingEventArgs ^ rowUpdatingEvent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowUpdatingEvent" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="rowUpdatingEvent">A <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> wystąpienia zawierający informacje o zdarzeniu.</param>
        <summary>Dodaje program obsługi zdarzeń dla <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> zdarzeń.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaSeparator">
      <MemberSignature Language="C#" Value="public virtual string SchemaSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SchemaSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SchemaSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SchemaSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia znak używany dla tego separatora między identyfikatora schematu i inne identyfikatory.</summary>
        <value>Znak, który ma być używany jako separator schematu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ogólnie rzecz biorąc serwerów baz danych wskazuje schemat identyfikatora oddzielając nazwy schematu z identyfikatora niektórych znakiem. Na przykład program SQL Server używa dwukropek, takich jak tworzenie pełne identyfikatory **osoby: CustomerName**, gdzie nazwa schematu jest "Osoba" i "CustomerName" jest identyfikatorem. Ustawienie tej właściwości umożliwia deweloperom zmienić to zachowanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllValues">
      <MemberSignature Language="C#" Value="public bool SetAllValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SetAllValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbCommandBuilder.SetAllValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SetAllValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SetAllValues { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy wszystkie wartości kolumny w instrukcji update są dołączone lub tylko te zmiany.</summary>
        <value>
          <see langword="true" /> Jeśli instrukcja UPDATE jest generowany przez <see cref="T:System.Data.Common.DbCommandBuilder" /> zawiera wszystkie kolumny; <see langword="false" /> jeśli zawiera on tylko zmienionych kolumn.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Instrukcja UPDATE generowane przez <xref:System.Data.Common.DbCommandBuilder> mogą zawierać aktualizacji informacje o wszystkich kolumn lub może zawierać tylko informacje dotyczące tych kolumn, których wartości zostały zmienione. Ustawienie <xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A> właściwości `true` powoduje, że wygenerowany instrukcji UPDATE uwzględnienie wszystkich kolumn, czy wartości zostały zmienione lub nie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <see cref="T:System.Data.Common.DbDataAdapter" /> Służący do aktualizacji.</param>
        <summary>Rejestruje <see cref="T:System.Data.Common.DbCommandBuilder" /> do obsługi <see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /> zdarzenia dla <see cref="T:System.Data.Common.DbDataAdapter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest przeznaczona do użytku przez autorów dostawcy tworzenia Konstruktor poleceń niestandardowych. Podczas tworzenia nowego <xref:System.Data.Common.DbDataAdapter> jest dodawany do <xref:System.Data.Common.DbCommandBuilder>, jest zarejestrowany dla obiekt DbDataAdapter **RowUpdating** zdarzeń. Jeśli ta metoda jest wywoływana ponownie z tym samym <xref:System.Data.Common.DbDataAdapter>, <xref:System.Data.Common.DbCommandBuilder> jest zarejestrowany dla tego obiekt DbDataAdapter **RowUpdating** zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public virtual string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">Identyfikator, który będzie miał jego osadzone cudzysłowy usunięte.</param>
        <summary>Podany identyfikatora ujętego w cudzysłów zwraca w postaci bez cudzysłowu poprawny identyfikator, w tym poprawnie bez ucieczki wszelkie cudzysłowy osadzony w identyfikatorze.</summary>
        <returns>Identyfikator bez cudzysłowów cudzysłowem osadzonym prawidłowo niezmieniony.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>