<Type Name="DbProviderManifest" FullName="System.Data.Common.DbProviderManifest">
  <TypeSignature Language="C#" Value="public abstract class DbProviderManifest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbProviderManifest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbProviderManifest" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbProviderManifest abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="62b73-101">Interfejs metadanych dla wszystkich typów typy CLR</span><span class="sxs-lookup"><span data-stu-id="62b73-101">Metadata Interface for all CLR types types</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62b73-102">W tym miejscu nic nie będzie aktualizowane; proszę nie dodawać tutaj materiału.</span><span class="sxs-lookup"><span data-stu-id="62b73-102">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbProviderManifest ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbProviderManifest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62b73-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Common.DbProviderManifest" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="62b73-103">Initializes a new instance of the <see cref="T:System.Data.Common.DbProviderManifest" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConceptualSchemaDefinition">
      <MemberSignature Language="C#" Value="public static readonly string ConceptualSchemaDefinition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConceptualSchemaDefinition" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConceptualSchemaDefinition As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConceptualSchemaDefinition;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62b73-104">Wartość do przekazania do GetInformation uzyskać ConceptualSchemaDefinitionVersion.</span><span class="sxs-lookup"><span data-stu-id="62b73-104">Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConceptualSchemaDefinitionVersion3">
      <MemberSignature Language="C#" Value="public static readonly string ConceptualSchemaDefinitionVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ConceptualSchemaDefinitionVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.ConceptualSchemaDefinitionVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConceptualSchemaDefinitionVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ConceptualSchemaDefinitionVersion3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62b73-105">Wartość do przekazania do GetInformation uzyskać ConceptualSchemaDefinitionVersion3.</span><span class="sxs-lookup"><span data-stu-id="62b73-105">Value to pass to GetInformation to get the ConceptualSchemaDefinitionVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapeLikeArgument">
      <MemberSignature Language="C#" Value="public virtual string EscapeLikeArgument (string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EscapeLikeArgument(string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EscapeLikeArgument (argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ EscapeLikeArgument(System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="62b73-106">Argument być zmienione znaczenie.</span><span class="sxs-lookup"><span data-stu-id="62b73-106">The argument to be escaped.</span></span></param>
        <summary><span data-ttu-id="62b73-107">Dostawcy modułów zapisujących powinny przesłaniać tę metodę do zwrócenia argumentu z symboli wieloznacznych i znak ucieczki zmienione znaczenie.</span><span class="sxs-lookup"><span data-stu-id="62b73-107">Provider writers should override this method to return the argument with the wildcards and the escape character escaped.</span></span> <span data-ttu-id="62b73-108">Ta metoda jest używana tylko w przypadku, jeśli SupportsEscapingLikeArgument zwraca wartość true.</span><span class="sxs-lookup"><span data-stu-id="62b73-108">This method is only used if SupportsEscapingLikeArgument returns true.</span></span></summary>
        <returns><span data-ttu-id="62b73-109">Argument o symbole wieloznaczne i znak ucieczki wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="62b73-109">The argument with the wildcards and the escape character escaped.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDbInformation">
      <MemberSignature Language="C#" Value="protected abstract System.Xml.XmlReader GetDbInformation (string informationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader GetDbInformation(string informationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetDbInformation (informationType As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Xml::XmlReader ^ GetDbInformation(System::String ^ informationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="informationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="informationType"><span data-ttu-id="62b73-110">Typ danych do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="62b73-110">The type of the information to return.</span></span></param>
        <summary><span data-ttu-id="62b73-111">W przypadku przesłonięcia w klasie pochodnej, ta metoda zwraca informacje specyficzne dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="62b73-111">When overridden in a derived class, this method returns provider-specific information.</span></span></summary>
        <returns><span data-ttu-id="62b73-112">Obiekt XmlReader, który reprezentuje mapowanie danych źródłowych przechowywania katalogu.</span><span class="sxs-lookup"><span data-stu-id="62b73-112">The XmlReader object that represents the mapping to the underlying data store catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Metadata.Edm.TypeUsage GetEdmType (System.Data.Metadata.Edm.TypeUsage storeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage GetEdmType(class System.Data.Metadata.Edm.TypeUsage storeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEdmType (storeType As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Metadata::Edm::TypeUsage ^ GetEdmType(System::Data::Metadata::Edm::TypeUsage ^ storeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="storeType"><span data-ttu-id="62b73-113">Wystąpienie właściwości TypeUsage opisujące typ magazynu i zestaw aspektów dla tego typu można mapować do typu EDM.</span><span class="sxs-lookup"><span data-stu-id="62b73-113">The TypeUsage instance that describes a storage type and a set of facets for that type to be mapped to the EDM type.</span></span></param>
        <summary><span data-ttu-id="62b73-114">W przypadku przesłonięcia w klasie pochodnej, ta metoda mapuje magazynu określony typ i zestaw aspektów dla tego typu dla typu EDM.</span><span class="sxs-lookup"><span data-stu-id="62b73-114">When overridden in a derived class, this method maps the specified storage type and a set of facets for that type to an EDM type.</span></span></summary>
        <returns><span data-ttu-id="62b73-115"><see cref="T:System.Data.Metadata.Edm.TypeUsage" /> Wystąpienia, który opisuje typu EDM i zestawem aspektów dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="62b73-115">The <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> instance that describes an EDM type and a set of facets for that type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFacetDescriptions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions (System.Data.Metadata.Edm.EdmType edmType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions(class System.Data.Metadata.Edm.EdmType edmType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::FacetDescription ^&gt; ^ GetFacetDescriptions(System::Data::Metadata::Edm::EdmType ^ edmType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmType" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="edmType"><span data-ttu-id="62b73-116">Typ EDM do zwrócenia opis zestawu reguł.</span><span class="sxs-lookup"><span data-stu-id="62b73-116">The EDM type to return the facet description for.</span></span></param>
        <summary><span data-ttu-id="62b73-117">Zwraca obiekty FacetDescription dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="62b73-117">Returns the FacetDescription objects for a particular type.</span></span></summary>
        <returns><span data-ttu-id="62b73-118">Obiekty FacetDescription dla określonego typu EDM.</span><span class="sxs-lookup"><span data-stu-id="62b73-118">The FacetDescription objects for the specified EDM type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInformation">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader GetInformation (string informationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader GetInformation(string informationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInformation (informationType As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ GetInformation(System::String ^ informationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="informationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="informationType"><span data-ttu-id="62b73-119">Typ danych do zwrócenia.</span><span class="sxs-lookup"><span data-stu-id="62b73-119">The type of the information to return.</span></span></param>
        <summary><span data-ttu-id="62b73-120">Pobiera informacje właściwe dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="62b73-120">Gets the provider-specific information.</span></span></summary>
        <returns><span data-ttu-id="62b73-121">Informacje specyficzne dla dostawcy.</span><span class="sxs-lookup"><span data-stu-id="62b73-121">The provider-specific information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreFunctions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreFunctions" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreFunctions () As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetStoreFunctions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62b73-122">W przypadku przesłonięcia w klasie pochodnej zwraca kolekcję EDM funkcje obsługiwane przez manifestu dostawcy.</span><span class="sxs-lookup"><span data-stu-id="62b73-122">When overridden in a derived class, returns a collection of EDM functions supported by the provider manifest.</span></span></summary>
        <returns><span data-ttu-id="62b73-123">Kolekcja funkcji EDM.</span><span class="sxs-lookup"><span data-stu-id="62b73-123">A collection of EDM functions.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Metadata.Edm.TypeUsage GetStoreType (System.Data.Metadata.Edm.TypeUsage edmType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage GetStoreType(class System.Data.Metadata.Edm.TypeUsage edmType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreType (edmType As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Data::Metadata::Edm::TypeUsage ^ GetStoreType(System::Data::Metadata::Edm::TypeUsage ^ edmType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmType" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="edmType"><span data-ttu-id="62b73-124">Wystąpienie właściwości TypeUsage dotyczące typu EDM i zestawem aspektów dla tego typu można mapować na typ magazynu.</span><span class="sxs-lookup"><span data-stu-id="62b73-124">The TypeUsage instance that describes the EDM type and a set of facets for that type to be mapped to a storage type.</span></span></param>
        <summary><span data-ttu-id="62b73-125">W przypadku przesłonięcia w klasie pochodnej, ta metoda mapuje określonego typu EDM i zestawem aspektów dla tego typu na typ magazynu.</span><span class="sxs-lookup"><span data-stu-id="62b73-125">When overridden in a derived class, this method maps the specified EDM type and a set of facets for that type to a storage type.</span></span></summary>
        <returns><span data-ttu-id="62b73-126">Wystąpienie TypeUsage, który opisuje typ magazynu i zestaw aspektów dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="62b73-126">The TypeUsage instance that describes a storage type and a set of facets for that type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.GetStoreTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetStoreTypes () As ReadOnlyCollection(Of PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetStoreTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62b73-127">W przypadku przesłonięcia w klasie pochodnej zwraca zestaw typów pierwotnych obsługiwane przez źródło danych.</span><span class="sxs-lookup"><span data-stu-id="62b73-127">When overridden in a derived class, returns the set of primitive types supported by the data source.</span></span></summary>
        <returns><span data-ttu-id="62b73-128">Zestaw typów obsługiwanych w źródle danych.</span><span class="sxs-lookup"><span data-stu-id="62b73-128">The set of types supported by the data source.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public abstract string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbProviderManifest.NamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62b73-129">Pobiera obszar nazw używanych przez tego manifestu dostawcy.</span><span class="sxs-lookup"><span data-stu-id="62b73-129">Gets the namespace used by this provider manifest.</span></span></summary>
        <value><span data-ttu-id="62b73-130">Przestrzeń nazw używanych przez tego manifestu dostawcy.</span><span class="sxs-lookup"><span data-stu-id="62b73-130">The namespace used by this provider manifest.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaDefinition">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaDefinition;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaDefinition" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaDefinition As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaDefinition;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62b73-131">Wartość do przekazania do GetInformation uzyskać StoreSchemaDefinitionVersion.</span><span class="sxs-lookup"><span data-stu-id="62b73-131">Value to pass to GetInformation to get the StoreSchemaDefinitionVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaDefinitionVersion3">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaDefinitionVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaDefinitionVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaDefinitionVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaDefinitionVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaDefinitionVersion3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62b73-132">Wartość do przekazania do GetInformation uzyskać StoreSchemaDefinitionVersion3.</span><span class="sxs-lookup"><span data-stu-id="62b73-132">Value to pass to GetInformation to get the StoreSchemaDefinitionVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaMapping">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaMapping;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaMapping" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaMapping As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaMapping;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62b73-133">Wartość do przekazania do GetInformation uzyskać StoreSchemaMappingVersion.</span><span class="sxs-lookup"><span data-stu-id="62b73-133">Value to pass to GetInformation to get the StoreSchemaMappingVersion.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreSchemaMappingVersion3">
      <MemberSignature Language="C#" Value="public static readonly string StoreSchemaMappingVersion3;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string StoreSchemaMappingVersion3" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbProviderManifest.StoreSchemaMappingVersion3" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StoreSchemaMappingVersion3 As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ StoreSchemaMappingVersion3;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62b73-134">Wartość do przekazania do GetInformation uzyskać StoreSchemaMappingVersion3.</span><span class="sxs-lookup"><span data-stu-id="62b73-134">Value to pass to GetInformation to get the StoreSchemaMappingVersion3.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEscapingLikeArgument">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEscapingLikeArgument (out char escapeCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsEscapingLikeArgument([out] char&amp; escapeCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbProviderManifest.SupportsEscapingLikeArgument(System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SupportsEscapingLikeArgument (ByRef escapeCharacter As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsEscapingLikeArgument([Runtime::InteropServices::Out] char % escapeCharacter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="escapeCharacter" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="escapeCharacter"><span data-ttu-id="62b73-135">Jeśli dostawca obsługuje anulowanie znak, który będzie służyć jako znak ucieczki.</span><span class="sxs-lookup"><span data-stu-id="62b73-135">If the provider supports escaping, the character that would be used as the escape character.</span></span></param>
        <summary><span data-ttu-id="62b73-136">Wskazuje, czy dostawca obsługuje ucieczki ciągów, które mają być używane jako wzorce w wyrażeniu Like.</span><span class="sxs-lookup"><span data-stu-id="62b73-136">Indicates if the provider supports escaping strings to be used as patterns in a Like expression.</span></span></summary>
        <returns>
          <span data-ttu-id="62b73-137"><see langword="True" /> Jeśli ten dostawca obsługuje ucieczki ciągów, które mają być używane jako wzorce w wyrażeniu podobnego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="62b73-137"><see langword="True" /> if this provider supports escaping strings to be used as patterns in a Like expression; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>