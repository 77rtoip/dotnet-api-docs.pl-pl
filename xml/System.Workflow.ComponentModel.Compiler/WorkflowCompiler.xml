<Type Name="WorkflowCompiler" FullName="System.Workflow.ComponentModel.Compiler.WorkflowCompiler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83ee3979d2fda638f95f162bd3d3d348e237fdbe" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69430595" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowCompiler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowCompiler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowCompiler" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowCompiler sealed" />
  <TypeSignature Language="F#" Value="type WorkflowCompiler = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kompilator dla przepływów pracy, które są C# opracowywane przy użyciu lub Visual Basic kodzie i/lub znacznikiem XAML. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> klasy i <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.Compile%2A> uruchomić metodę. Kod tworzy również nowe wystąpienie <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters> klasy i ustawia niektóre jego wartości. Ten kod zakłada, `results` że jest typu <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults>. Ten przykład kodu jest częścią przykładu zestawu SDK kreatora przepływu pracy programu Outlook z pliku WizardForm.cs. Aby uzyskać więcej informacji, zobacz [Kreator przepływu pracy w programie Outlook](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[WF_Samples#99](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#99)]
 [!code-vb[WF_Samples#99](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#99)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowCompiler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> klasy.  Kod tworzy również nowe wystąpienie <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters> klasy i ustawia niektóre jego wartości. Ten kod zakłada, `results` że jest typu <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults>. Ten przykład kodu jest częścią przykładu zestawu SDK kreatora przepływu pracy programu Outlook z pliku WizardForm.cs. Aby uzyskać więcej informacji, zobacz [Kreator przepływu pracy w programie Outlook](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[WF_Samples#99](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#99)]
 [!code-vb[WF_Samples#99](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults Compile (System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters parameters, params string[] files);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults Compile(class System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters parameters, string[] files) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.Compile(System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile (parameters As WorkflowCompilerParameters, ParamArray files As String()) As WorkflowCompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Compiler::WorkflowCompilerResults ^ Compile(System::Workflow::ComponentModel::Compiler::WorkflowCompilerParameters ^ parameters, ... cli::array &lt;System::String ^&gt; ^ files);" />
      <MemberSignature Language="F#" Value="member this.Compile : System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters * string[] -&gt; System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults" Usage="workflowCompiler.Compile (parameters, files)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />
        <Parameter Name="files" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters"><see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />.</param>
        <param name="files">Tablica ciągów zawierająca ścieżki do plików do skompilowania. Te pliki mogą być plikami kodu (na przykład vb lub CS) lub plikami znaczników przepływu pracy. Pliki znaczników przepływu pracy muszą mieć rozszerzenie xoml, które ma zostać rozpoznane przez kompilator.</param>
        <summary>Kompiluje listę przepływów pracy zawartych w plikach, które są przesyłane jako parametry w oparciu o <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults" /> Reprezentuje wyniki operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.Compile%2A> metody. Kod tworzy również nowe wystąpienia <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> klas i <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters> ustawia niektóre wartości. Ten kod zakłada, `results` że jest typu <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults>. Ten przykład kodu jest częścią przykładu zestawu SDK kreatora przepływu pracy programu Outlook z pliku WizardForm.cs. Aby uzyskać więcej informacji, zobacz [Kreator przepływu pracy w programie Outlook](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameters" />jest odwołaniem o wartości null <see langword="Nothing" />(Visual Basic).

—lub—

<paramref name="files" />jest odwołaniem o wartości null <see langword="Nothing" />(Visual Basic).</exception>
      </Docs>
    </Member>
  </Members>
</Type>
