<Type Name="WorkflowCompiler" FullName="System.Workflow.ComponentModel.Compiler.WorkflowCompiler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7aca0530dcbd7bc7f41e18adaee71cdc21809b6a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30714878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowCompiler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowCompiler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowCompiler" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowCompiler sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kompilatora dla przepływów pracy, które są tworzone przy użyciu kodu C# lub Visual Basic i/lub znaczniki XAML. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć nowe wystąpienie klasy <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> klasy i uruchom <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.Compile%2A> metody. Kod również tworzy nowe wystąpienie klasy <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters> klasy i ustawia niektóre z jego wartości. Ten kod, przy założeniu, że `results` jest typu <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults>. Ten przykładowy kod jest częścią zestawu SDK programu Outlook przepływ pracy Kreatora próbki z pliku WizardForm.cs. Aby uzyskać więcej informacji, zobacz [Outlook przepływ pracy kreatora](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[WF_Samples#99](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#99)]
 [!code-vb[WF_Samples#99](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#99)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowCompiler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowCompiler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompiler" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano, jak utworzyć nowe wystąpienie klasy <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> klasy.  Kod również tworzy nowe wystąpienie klasy <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters> klasy i ustawia niektóre z jego wartości. Ten kod, przy założeniu, że `results` jest typu <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults>. Ten przykładowy kod jest częścią zestawu SDK programu Outlook przepływ pracy Kreatora próbki z pliku WizardForm.cs. Aby uzyskać więcej informacji, zobacz [Outlook przepływ pracy kreatora](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[WF_Samples#99](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#99)]
 [!code-vb[WF_Samples#99](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults Compile (System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters parameters, params string[] files);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults Compile(class System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters parameters, string[] files) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.Compile(System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile (parameters As WorkflowCompilerParameters, ParamArray files As String()) As WorkflowCompilerResults" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Compiler::WorkflowCompilerResults ^ Compile(System::Workflow::ComponentModel::Compiler::WorkflowCompilerParameters ^ parameters, ... cli::array &lt;System::String ^&gt; ^ files);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />
        <Parameter Name="files" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="parameters">
          <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />.</param>
        <param name="files">Tablica ciągów, która zawiera ścieżki do plików, aby skompilować. Te pliki mogą być pliki kodu (na przykład .vb lub .cs) lub pliki znaczników przepływu pracy. Pliki znaczników przepływu pracy musi mieć rozszerzenie xoml rozpoznawanego przez kompilator.</param>
        <summary>Kompiluje listę przepływów pracy zawarte w plikach, które są przekazywane jako parametry na podstawie <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters" />.</summary>
        <returns>
          <see cref="T:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults" /> Reprezentujący wyniki operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler.Compile%2A> metody. Kod tworzy również nowe wystąpienia klasy <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompiler> i <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerParameters> klas i ustawia niektórych wartości. Ten kod, przy założeniu, że `results` jest typu <xref:System.Workflow.ComponentModel.Compiler.WorkflowCompilerResults>. Ten przykładowy kod jest częścią zestawu SDK programu Outlook przepływ pracy Kreatora próbki z pliku WizardForm.cs. Aby uzyskać więcej informacji, zobacz [Outlook przepływ pracy kreatora](http://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="files" /> to odwołanie o wartości null (Visual Basic <see langword="Nothing" />).</exception>
      </Docs>
    </Member>
  </Members>
</Type>