<Type Name="Dictionary&lt;TKey,TValue&gt;+KeyCollection+Enumerator" FullName="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+KeyCollection+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="373155a5b50b076a3da2390dd1e7d8ebb12d275e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Dictionary&lt;TKey,TValue&gt;.KeyCollection.Enumerator : System.Collections.Generic.IEnumerator&lt;TKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit Dictionary`2/KeyCollection/Enumerator&lt;TKey, TValue&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!TKey&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Dictionary(Of TKey, TValue).KeyCollection.Enumerator&#xA;Implements IEnumerator(Of TKey)" />
  <TypeSignature Language="C++ CLI" Value="public: value class Dictionary&lt;TKey, TValue&gt;::KeyCollection::Enumerator : System::Collections::Generic::IEnumerator&lt;TKey&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;TKey&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5e833-101">Wylicza elementy <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5e833-101">Enumerates the elements of a <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e833-102">`foreach` Instrukcji języka C# (`for each` w języku C++ `For Each` w języku Visual Basic) ukrywa złożoność wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="5e833-102">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="5e833-103">W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="5e833-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="5e833-104">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="5e833-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="5e833-105">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="5e833-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="5e833-106">W tym miejscu <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="5e833-106">At this position, <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="5e833-107">W związku z tym należy wywołać <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e833-107">Therefore, you must call <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="5e833-108"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="5e833-108"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="5e833-109"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> Ustawia <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e833-109"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="5e833-110">Jeśli <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="5e833-110">If <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="5e833-111">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="5e833-111">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="5e833-112">Jeśli przez ostatnie wywołanie <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="5e833-112">If the last call to <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="5e833-113">Nie można ustawić <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> do pierwszego elementu w kolekcji; należy utworzyć nowe wystąpienie modułu wyliczającego zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="5e833-113">You cannot set <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="5e833-114">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="5e833-114">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5e833-115">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="5e833-115">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="5e833-116">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="5e833-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="5e833-117">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="5e833-117">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="5e833-118">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="5e833-118">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="5e833-119">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="5e833-119">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public TKey Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As TKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TKey Current { TKey get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e833-120">Pobiera element w bieżącym położeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-120">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e833-121">Element w <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> w bieżącym położeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-121">The element in the <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" /> at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e833-122"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> jest niezdefiniowana we wszystkich następujących warunków:</span><span class="sxs-lookup"><span data-stu-id="5e833-122"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="5e833-123">Moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji, natychmiast po utworzeniu modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="5e833-123">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created.</span></span>   <span data-ttu-id="5e833-124"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> musi zostać wywołana można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e833-124"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="5e833-125">Ostatnie wywołanie <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> zwrócił `false`, co oznacza koniec kolekcji.</span><span class="sxs-lookup"><span data-stu-id="5e833-125">The last call to <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="5e833-126"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="5e833-126"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="5e833-127"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> Ustawia <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e833-127"><xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.Current%2A> to the next element.</span></span> <span data-ttu-id="5e833-128">Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</span><span class="sxs-lookup"><span data-stu-id="5e833-128">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e833-129">Aby uzyskać lepszą wydajność ta właściwość nie zgłoszenia wyjątku, jeśli moduł wyliczający jest umieszczony przed pierwszym elementem lub za ostatnim elementem; wartość właściwości jest niezdefiniowany.</span><span class="sxs-lookup"><span data-stu-id="5e833-129">For better performance, this property does not throw an exception if the enumerator is positioned before the first element or after the last element; the value of the property is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e833-130">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-130">Releases all resources used by the <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e833-131">Ta metoda jest wywoływana przez <xref:System.Object.Finalize%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="5e833-131">This method is called by the <xref:System.Object.Finalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IDisposable.Dispose" />
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e833-132">Przechodzi do następnego elementu modułu wyliczającego <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-132">Advances the enumerator to the next element of the <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5e833-133">
            <see langword="true" /> Jeśli moduł wyliczający został pomyślnie poprawionym do następnego elementu; <see langword="false" /> po zakończeniu zbierania moduł wyliczający.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-133">
              <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e833-134">Po utworzeniu modułu wyliczającego moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji i w pierwszym wywołaniu <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> zmienia modułu wyliczającego pierwszym elementem kolekcji.</span><span class="sxs-lookup"><span data-stu-id="5e833-134">After an enumerator is created, the enumerator is positioned before the first element in the collection, and the first call to <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> advances the enumerator to the first element of the collection.</span></span>  
  
 <span data-ttu-id="5e833-135">Jeśli <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="5e833-135">If <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="5e833-136">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> zwracają również `false`.</span><span class="sxs-lookup"><span data-stu-id="5e833-136">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Dictionary%602.KeyCollection.Enumerator.MoveNext%2A> also return `false`.</span></span>  
  
 <span data-ttu-id="5e833-137">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="5e833-137">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5e833-138">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona.</span><span class="sxs-lookup"><span data-stu-id="5e833-138">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5e833-139">Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-139">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5e833-140">Pobiera element w bieżącym położeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-140">Gets the element at the current position of the enumerator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5e833-141">Element w kolekcji w bieżącym położeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-141">The element in the collection at the current position of the enumerator.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e833-142"><xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana we wszystkich następujących warunków:</span><span class="sxs-lookup"><span data-stu-id="5e833-142"><xref:System.Collections.IEnumerator.Current%2A> is undefined under any of the following conditions:</span></span>  
  
-   <span data-ttu-id="5e833-143">Moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji, natychmiast po utworzeniu modułu wyliczającego, lub od razu po <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="5e833-143">The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or immediately after <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span>   <span data-ttu-id="5e833-144"><xref:System.Collections.IEnumerator.MoveNext%2A> musi zostać wywołana można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e833-144"><xref:System.Collections.IEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
-   <span data-ttu-id="5e833-145">Ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, co oznacza koniec kolekcji.</span><span class="sxs-lookup"><span data-stu-id="5e833-145">The last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="5e833-146"><xref:System.Collections.IEnumerator.Current%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="5e833-146"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="5e833-147"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e833-147"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span> <span data-ttu-id="5e833-148">Jeśli kolekcja jest zmodyfikowany między <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> zwraca element, który ma ustawioną, nawet wtedy, gdy moduł wyliczający jest już unieważnione.</span><span class="sxs-lookup"><span data-stu-id="5e833-148">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5e833-149">Moduł wyliczający jest umieszczony przed pierwszym elementem kolekcji lub po ostatnim elemencie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-149">The enumerator is positioned before the first element of the collection or after the last element.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5e833-150">Ustawia modułu wyliczającego pozycji początkowej, czyli przed pierwszym elementem w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-150">Sets the enumerator to its initial position, which is before the first element in the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e833-151">Po wywołaniu <xref:System.Collections.IEnumerator.Reset%2A>, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e833-151">After calling <xref:System.Collections.IEnumerator.Reset%2A>, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="5e833-152">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="5e833-152">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="5e833-153">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona.</span><span class="sxs-lookup"><span data-stu-id="5e833-153">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5e833-154">Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5e833-154">The collection was modified after the enumerator was created.</span>
          </span>
        </exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>