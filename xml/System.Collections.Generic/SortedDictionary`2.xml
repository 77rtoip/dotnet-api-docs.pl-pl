<Type Name="SortedDictionary&lt;TKey,TValue&gt;" FullName="System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9bbcc607f78f2f5f8aa8b78ed5755bbf2441033" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69340074" /></Metadata><TypeSignature Language="C#" Value="public class SortedDictionary&lt;TKey,TValue&gt; : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;, System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedDictionary`2&lt;TKey, TValue&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt;, class System.Collections.Generic.IReadOnlyDictionary`2&lt;!TKey, !TValue&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SortedDictionary`2" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedDictionary(Of TKey, TValue)&#xA;Implements ICollection(Of KeyValuePair(Of TKey, TValue)), IDictionary, IDictionary(Of TKey, TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), IReadOnlyDictionary(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA;public ref class SortedDictionary : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IDictionary&lt;TKey, TValue&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;, System::Collections::Generic::IReadOnlyDictionary&lt;TKey, TValue&gt;, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type SortedDictionary&lt;'Key, 'Value&gt; = class&#xA;    interface IDictionary&lt;'Key, 'Value&gt;&#xA;    interface IDictionary&#xA;    interface IReadOnlyDictionary&lt;'Key, 'Value&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;KeyValuePair&lt;'Key, 'Value&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_DictionaryDebugView`2))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey"><span data-ttu-id="f9c79-101">Typ kluczy w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-101">The type of the keys in the dictionary.</span></span></typeparam>
    <typeparam name="TValue"><span data-ttu-id="f9c79-102">Typ wartości w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-102">The type of the values in the dictionary.</span></span></typeparam>
    <summary><span data-ttu-id="f9c79-103">Reprezentuje kolekcję par klucz/wartość, które są sortowane według klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-103">Represents a collection of key/value pairs that are sorted on the key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-104">Klasa <xref:System.Collections.Generic.SortedDictionary%602> generyczna to binarne drzewo wyszukiwania o wartości o (log n), gdzie n to liczba elementów w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-104">The <xref:System.Collections.Generic.SortedDictionary%602> generic class is a binary search tree with O(log n) retrieval, where n is the number of elements in the dictionary.</span></span> <span data-ttu-id="f9c79-105">W tym aspekcie jest podobna do <xref:System.Collections.Generic.SortedList%602> klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="f9c79-105">In this respect, it is similar to the <xref:System.Collections.Generic.SortedList%602> generic class.</span></span> <span data-ttu-id="f9c79-106">Dwie klasy mają podobne modele obiektów i oba te elementy mają pobieranie (log n).</span><span class="sxs-lookup"><span data-stu-id="f9c79-106">The two classes have similar object models, and both have O(log n) retrieval.</span></span> <span data-ttu-id="f9c79-107">W przypadku, gdy obie klasy różnią się w zakresie wykorzystania pamięci i szybkości wstawiania i usuwania:</span><span class="sxs-lookup"><span data-stu-id="f9c79-107">Where the two classes differ is in memory use and speed of insertion and removal:</span></span>  
  
-   <span data-ttu-id="f9c79-108"><xref:System.Collections.Generic.SortedList%602>używa mniejszej ilości <xref:System.Collections.Generic.SortedDictionary%602>pamięci niż.</span><span class="sxs-lookup"><span data-stu-id="f9c79-108"><xref:System.Collections.Generic.SortedList%602> uses less memory than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
-   <span data-ttu-id="f9c79-109"><xref:System.Collections.Generic.SortedDictionary%602>ma szybsze operacje wstawiania i usuwania dla niesortowanych danych: O (log n) w przeciwieństwie do O (n) dla <xref:System.Collections.Generic.SortedList%602>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-109"><xref:System.Collections.Generic.SortedDictionary%602> has faster insertion and removal operations for unsorted data: O(log n) as opposed to O(n) for <xref:System.Collections.Generic.SortedList%602>.</span></span>  
  
-   <span data-ttu-id="f9c79-110">Jeśli lista jest wypełniana jednocześnie na podstawie posortowanych danych <xref:System.Collections.Generic.SortedList%602> , jest szybsza <xref:System.Collections.Generic.SortedDictionary%602>niż.</span><span class="sxs-lookup"><span data-stu-id="f9c79-110">If the list is populated all at once from sorted data, <xref:System.Collections.Generic.SortedList%602> is faster than <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="f9c79-111">Każdą parę klucz/wartość można pobrać jako <xref:System.Collections.Generic.KeyValuePair%602> strukturę lub <xref:System.Collections.DictionaryEntry> za pomocą nieogólnego <xref:System.Collections.IDictionary> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-111">Each key/value pair can be retrieved as a <xref:System.Collections.Generic.KeyValuePair%602> structure, or as a <xref:System.Collections.DictionaryEntry> through the nongeneric <xref:System.Collections.IDictionary> interface.</span></span>  
  
 <span data-ttu-id="f9c79-112">Klucze muszą być niezmienne, o ile są używane jako klucze w <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-112">Keys must be immutable as long as they are used as keys in the <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="f9c79-113">Każdy klucz w a <xref:System.Collections.Generic.SortedDictionary%602> musi być unikatowy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-113">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique.</span></span> <span data-ttu-id="f9c79-114">Klucz nie może być `null`, ale wartość może być, jeśli typem `TValue` wartości jest typ referencyjny.</span><span class="sxs-lookup"><span data-stu-id="f9c79-114">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="f9c79-115"><xref:System.Collections.Generic.SortedDictionary%602>wymaga implementacji porównującej do przeprowadzenia porównania kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-115"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="f9c79-116">Można określić implementację <xref:System.Collections.Generic.IComparer%601> interfejsu generycznego za pomocą konstruktora, który `comparer` akceptuje parametr; Jeśli nie określisz implementacji, zostanie użyta domyślna GenericComparer — <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="f9c79-116">You can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter; if you do not specify an implementation, the default genericcomparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> is used.</span></span> <span data-ttu-id="f9c79-117">Jeśli typ `TKey` <xref:System.IComparable%601?displayProperty=nameWithType> implementuje interfejs ogólny, domyślna funkcja porównująca używa tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-117">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="f9c79-118">`foreach` Instrukcja C# języka(`for each` C++w ,`For Each` w Visual Basic) zwraca obiekt typu elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-118">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="f9c79-119">Ponieważ każdy element <xref:System.Collections.Generic.SortedDictionary%602> jest parą klucz/wartość, typ elementu nie jest typem klucza ani typem wartości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-119">Since each element of the <xref:System.Collections.Generic.SortedDictionary%602> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="f9c79-120">Zamiast tego typ elementu to <xref:System.Collections.Generic.KeyValuePair%602>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-120">Instead, the element type is <xref:System.Collections.Generic.KeyValuePair%602>.</span></span> <span data-ttu-id="f9c79-121">Poniższy kod ilustruje C# C++składnię i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="f9c79-121">The following code shows C#, C++, and Visual Basic syntax.</span></span>  
  
 [!code-cpp[Generic.Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Generic.Dictionary/cpp/source2.cpp#11)]
 [!code-csharp[Generic.Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Dictionary/CS/source2.cs#11)]
 [!code-vb[Generic.Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Dictionary/VB/source2.vb#11)]  
  
 <span data-ttu-id="f9c79-122">`foreach` Instrukcja to otoka wokół modułu wyliczającego, która umożliwia odczytywanie danych z kolekcji, a nie zapisywanie w niej.</span><span class="sxs-lookup"><span data-stu-id="f9c79-122">The `foreach` statement is a wrapper around the enumerator, which allows only reading from the collection, not writing to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-123">Poniższy przykład kodu tworzy puste <xref:System.Collections.Generic.SortedDictionary%602> ciągi z kluczami ciągu i <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> używa metody do dodawania niektórych elementów.</span><span class="sxs-lookup"><span data-stu-id="f9c79-123">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="f9c79-124">W przykładzie pokazano, że <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Metoda <xref:System.ArgumentException> zgłasza podczas próby dodania zduplikowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-124">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="f9c79-125">W przykładzie zastosowano <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> Właściwość (indeksator w C#) do pobierania wartości, <xref:System.Collections.Generic.KeyNotFoundException> pokazując, że jest zgłaszany, gdy żądany klucz nie jest obecny i wskazuje, że wartość skojarzona z kluczem może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="f9c79-125">The example uses the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="f9c79-126">Przykład pokazuje, jak użyć metody <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> jako bardziej efektywnego sposobu pobierania wartości, jeśli program często musi wypróbowywać kluczowe wartości, które nie znajdują się w słowniku, i pokazuje, jak użyć metody <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A>, aby sprawdzić, czy klucz istnieje przed wywołaniem <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> metoda.</span><span class="sxs-lookup"><span data-stu-id="f9c79-126">The example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary, and it shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method to test whether a key exists before calling the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method.</span></span>  
  
 <span data-ttu-id="f9c79-127">W przykładzie pokazano, jak wyliczyć klucze i wartości w słowniku oraz jak wyliczyć klucze i wartości przy użyciu <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> właściwości <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> i właściwości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-127">The example shows how to enumerate the keys and values in the dictionary and how to enumerate the keys and values alone using the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property and the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="f9c79-128">Na koniec przykład ilustruje <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="f9c79-128">Finally, the example demonstrates the <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f9c79-129">Publiczne statyczne (<see langword="Shared" /> w Visual Basic) członkowie tego typu są bezpieczne wątkowo.</span><span class="sxs-lookup"><span data-stu-id="f9c79-129">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="f9c79-130">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="f9c79-130">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="f9c79-131"><see cref="T:System.Collections.Generic.SortedDictionary`2" /> Może obsługiwać wielu czytników współbieżnie, o ile kolekcja nie jest modyfikowana.</span><span class="sxs-lookup"><span data-stu-id="f9c79-131">A <see cref="T:System.Collections.Generic.SortedDictionary`2" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="f9c79-132">Nawet w ten sposób Wyliczanie za pomocą kolekcji nie jest w sposób wewnętrzny bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="f9c79-132">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f9c79-133">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-133">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9c79-134">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-134">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
    <altmember cref="T:System.Collections.SortedList" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9c79-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.SortedDictionary`2" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-135">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9c79-136">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.SortedDictionary`2" /> klasy, która jest pusta i używa domyślnej <see cref="T:System.Collections.Generic.IComparer`1" /> implementacji dla typu klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-136">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-137">Każdy klucz w a <xref:System.Collections.Generic.SortedDictionary%602> musi być unikatowy zgodnie z domyślną wartością porównującą.</span><span class="sxs-lookup"><span data-stu-id="f9c79-137">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="f9c79-138"><xref:System.Collections.Generic.SortedDictionary%602>wymaga implementacji porównującej do przeprowadzenia porównania kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-138"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="f9c79-139">Ten konstruktor używa domyślnej ogólnej porównującej <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>równości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-139">This constructor uses the default generic equality comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f9c79-140">Jeśli typ `TKey` <xref:System.IComparable%601?displayProperty=nameWithType> implementuje interfejs ogólny, domyślna funkcja porównująca używa tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-140">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span> <span data-ttu-id="f9c79-141">Alternatywnie można określić implementację <xref:System.Collections.Generic.IComparer%601> interfejsu generycznego przy użyciu konstruktora, który `comparer` akceptuje parametr.</span><span class="sxs-lookup"><span data-stu-id="f9c79-141">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="f9c79-142">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-142">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-143">Poniższy przykład kodu tworzy puste <xref:System.Collections.Generic.SortedDictionary%602> ciągi z kluczami ciągu i <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> używa metody do dodawania niektórych elementów.</span><span class="sxs-lookup"><span data-stu-id="f9c79-143">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="f9c79-144">W przykładzie pokazano, że <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Metoda <xref:System.ArgumentException> zgłasza podczas próby dodania zduplikowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-144">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="f9c79-145">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.SortedDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-145">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#2)]
 [!code-vb[Generic.SortedDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="f9c79-146">Implementacja do użycia podczas porównywania kluczy lub <see langword="null" /> użycia wartości domyślnej <see cref="T:System.Collections.Generic.Comparer`1" /> dla typu klucza. <see cref="T:System.Collections.Generic.IComparer`1" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-146">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="f9c79-147">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.SortedDictionary`2" /> klasy, która jest pusta i używa określonej <see cref="T:System.Collections.Generic.IComparer`1" /> implementacji do porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-147">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that is empty and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-148">Każdy klucz w a <xref:System.Collections.Generic.SortedDictionary%602> musi być unikatowy zgodnie z określoną regułą porównującą.</span><span class="sxs-lookup"><span data-stu-id="f9c79-148">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="f9c79-149"><xref:System.Collections.Generic.SortedDictionary%602>wymaga implementacji porównującej do przeprowadzenia porównania kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-149"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="f9c79-150">Jeśli `comparer` <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>jest `null`, ten konstruktor używa domyślnej ogólnej porównującej równości,.</span><span class="sxs-lookup"><span data-stu-id="f9c79-150">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f9c79-151">Jeśli typ `TKey` <xref:System.IComparable%601?displayProperty=nameWithType> implementuje interfejs ogólny, domyślna funkcja porównująca używa tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-151">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="f9c79-152">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-152">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-153">Poniższy przykład kodu tworzy element <xref:System.Collections.Generic.SortedDictionary%602> porównujący bez uwzględniania wielkości liter dla bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="f9c79-153">The following code example creates a <xref:System.Collections.Generic.SortedDictionary%602> with a case-insensitive comparer for the current culture.</span></span> <span data-ttu-id="f9c79-154">Przykład dodaje cztery elementy, niektóre z kluczami małych liter i niektóre z kluczami wielkich liter.</span><span class="sxs-lookup"><span data-stu-id="f9c79-154">The example adds four elements, some with lower-case keys and some with upper-case keys.</span></span> <span data-ttu-id="f9c79-155">Przykład próbuje dodać element z kluczem, który różni się od istniejącego klucza tylko w przypadku, przechwytuje wyjątek, a następnie wyświetla komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="f9c79-155">The example then attempts to add an element with a key that differs from an existing key only by case, catches the resulting exception, and displays an error message.</span></span> <span data-ttu-id="f9c79-156">Na koniec przykład wyświetla elementy w kolejności sortowania bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="f9c79-156">Finally, the example displays the elements in case-insensitive sort order.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="f9c79-157">Elementów <see cref="T:System.Collections.Generic.IDictionary`2" /> , których elementy są kopiowane do nowego <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-157">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="f9c79-158">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.SortedDictionary`2" /> klasy zawierającej elementy skopiowane z określonego <see cref="T:System.Collections.Generic.IDictionary`2" /> i używa domyślnej <see cref="T:System.Collections.Generic.IComparer`1" /> implementacji dla typu klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-158">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation for the key type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-159">Każdy klucz w a <xref:System.Collections.Generic.SortedDictionary%602> musi być unikatowy zgodnie z domyślną wartością porównującą; w związku z tym każdy klucz w `dictionary` źródle musi być również unikatowy zgodnie z domyślną wartością porównującą.</span><span class="sxs-lookup"><span data-stu-id="f9c79-159">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the default comparer; therefore, every key in the source `dictionary` must also be unique according to the default comparer.</span></span>  
  
 <span data-ttu-id="f9c79-160"><xref:System.Collections.Generic.SortedDictionary%602>wymaga implementacji porównującej do przeprowadzenia porównania kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-160"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="f9c79-161">Ten konstruktor używa domyślnej ogólnej porównującej równości, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-161">This constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f9c79-162">Jeśli typ `TKey` <xref:System.IComparable%601?displayProperty=nameWithType> implementuje interfejs ogólny, domyślna funkcja porównująca używa tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-162">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span> <span data-ttu-id="f9c79-163">Alternatywnie można określić implementację <xref:System.Collections.Generic.IComparer%601> interfejsu generycznego przy użyciu konstruktora, który `comparer` akceptuje parametr.</span><span class="sxs-lookup"><span data-stu-id="f9c79-163">Alternatively, you can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span>  
  
 <span data-ttu-id="f9c79-164">Ten konstruktor jest operacją o`n` ( `n`log), gdzie `n` jest liczbą elementów w `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="f9c79-164">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-165">Poniższy przykład kodu pokazuje, jak <xref:System.Collections.Generic.SortedDictionary%602> używać do tworzenia posortowanej kopii informacji w a <xref:System.Collections.Generic.Dictionary%602>, przekazując <xref:System.Collections.Generic.Dictionary%602> do <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="f9c79-165">The following code example shows how to use <xref:System.Collections.Generic.SortedDictionary%602> to create a sorted copy of the information in a <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IDic#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDic/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IDic#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDic/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-166"><paramref name="dictionary" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-166"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9c79-167"><paramref name="dictionary" />zawiera co najmniej jeden zduplikowany klucz.</span><span class="sxs-lookup"><span data-stu-id="f9c79-167"><paramref name="dictionary" /> contains one or more duplicate keys.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedDictionary (System.Collections.Generic.IDictionary&lt;TKey,TValue&gt; dictionary, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;!TKey, !TValue&gt; dictionary, class System.Collections.Generic.IComparer`1&lt;!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dictionary As IDictionary(Of TKey, TValue), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedDictionary(System::Collections::Generic::IDictionary&lt;TKey, TValue&gt; ^ dictionary, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; : System.Collections.Generic.IDictionary&lt;'Key, 'Value&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;" Usage="new System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt; (dictionary, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="f9c79-168">Elementów <see cref="T:System.Collections.Generic.IDictionary`2" /> , których elementy są kopiowane do nowego <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-168">The <see cref="T:System.Collections.Generic.IDictionary`2" /> whose elements are copied to the new <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="f9c79-169">Implementacja do użycia podczas porównywania kluczy lub <see langword="null" /> użycia wartości domyślnej <see cref="T:System.Collections.Generic.Comparer`1" /> dla typu klucza. <see cref="T:System.Collections.Generic.IComparer`1" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-169">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing keys, or <see langword="null" /> to use the default <see cref="T:System.Collections.Generic.Comparer`1" /> for the type of the key.</span></span></param>
        <summary><span data-ttu-id="f9c79-170">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.SortedDictionary`2" /> klasy, która zawiera elementy skopiowane z określonego <see cref="T:System.Collections.Generic.IDictionary`2" /> i używa określonej <see cref="T:System.Collections.Generic.IComparer`1" /> implementacji do porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-170">Initializes a new instance of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2" /> and uses the specified <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to compare keys.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-171">Każdy klucz w a <xref:System.Collections.Generic.SortedDictionary%602> musi być unikatowy zgodnie z określoną regułą porównującą; w związku z tym każdy klucz `dictionary` w źródle musi być również unikatowy zgodnie z określoną regułą porównującą.</span><span class="sxs-lookup"><span data-stu-id="f9c79-171">Every key in a <xref:System.Collections.Generic.SortedDictionary%602> must be unique according to the specified comparer; therefore, every key in the source `dictionary` must also be unique according to the specified comparer.</span></span>  
  
 <span data-ttu-id="f9c79-172"><xref:System.Collections.Generic.SortedDictionary%602>wymaga implementacji porównującej do przeprowadzenia porównania kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-172"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="f9c79-173">Jeśli `comparer` <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>jest `null`, ten konstruktor używa domyślnej ogólnej porównującej równości,.</span><span class="sxs-lookup"><span data-stu-id="f9c79-173">If `comparer` is `null`, this constructor uses the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f9c79-174">Jeśli typ `TKey` <xref:System.IComparable%601?displayProperty=nameWithType> implementuje interfejs ogólny, domyślna funkcja porównująca używa tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-174">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="f9c79-175">Ten konstruktor jest operacją o`n` ( `n`log), gdzie `n` jest liczbą elementów w `dictionary`.</span><span class="sxs-lookup"><span data-stu-id="f9c79-175">This constructor is an O(`n` log `n`) operation, where `n` is the number of elements in `dictionary`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-176"><xref:System.Collections.Generic.SortedDictionary%602> Poniższy przykład kodu pokazuje <xref:System.Collections.Generic.Dictionary%602>, jak używać do tworzenia posortowanej bez uwzględniania wielkości liter podczas sortowania informacji w przypadku, przekazując <xref:System.Collections.Generic.Dictionary%602> do <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="f9c79-176">The following code example shows how to use <xref:System.Collections.Generic.SortedDictionary%602> to create a case-insensitive sorted copy of the information in a case-insensitive <xref:System.Collections.Generic.Dictionary%602>, by passing the <xref:System.Collections.Generic.Dictionary%602> to the <xref:System.Collections.Generic.SortedDictionary%602.%23ctor%28System.Collections.Generic.IDictionary%7B%600%2C%601%7D%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> constructor.</span></span> <span data-ttu-id="f9c79-177">W tym przykładzie, porównujące bez uwzględniania wielkości liter są dla bieżącej kultury.</span><span class="sxs-lookup"><span data-stu-id="f9c79-177">In this example, the case-insensitive comparers are for the current culture.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.ctor_IDicIComp#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDicIComp/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.ctor_IDicIComp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.ctor_IDicIComp/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-178"><paramref name="dictionary" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-178"><paramref name="dictionary" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9c79-179"><paramref name="dictionary" />zawiera co najmniej jeden zduplikowany klucz.</span><span class="sxs-lookup"><span data-stu-id="f9c79-179"><paramref name="dictionary" /> contains one or more duplicate keys.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="P:System.Collections.Generic.Comparer`1.Default" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'Key * 'Value -&gt; unit&#xA;override this.Add : 'Key * 'Value -&gt; unit" Usage="sortedDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-180">Klucz elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-180">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="f9c79-181">Wartość elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-181">The value of the element to add.</span></span> <span data-ttu-id="f9c79-182">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="f9c79-182">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="f9c79-183">Dodaje element z określonym kluczem i wartością do <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-183">Adds an element with the specified key and value into the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-184">Można również użyć <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> właściwości, aby dodać nowe elementy przez ustawienie wartości klucza, który nie istnieje <xref:System.Collections.Generic.SortedDictionary%602>w, na przykład `myCollection["myNonexistentKey"] = myValue` (w Visual Basic, `myCollection("myNonexistantKey") = myValue`).</span><span class="sxs-lookup"><span data-stu-id="f9c79-184">You can also use the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedDictionary%602>; for example, `myCollection["myNonexistentKey"] = myValue` (in Visual Basic, `myCollection("myNonexistantKey") = myValue`).</span></span> <span data-ttu-id="f9c79-185">Jeśli jednak określony klucz już istnieje w <xref:System.Collections.Generic.SortedDictionary%602>, <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> ustawienie właściwości zastępuje starą wartość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-185">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedDictionary%602>, setting the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="f9c79-186">Z kolei <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Metoda zgłasza wyjątek, jeśli element z określonym kluczem już istnieje.</span><span class="sxs-lookup"><span data-stu-id="f9c79-186">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an exception if an element with the specified key already exists.</span></span>  
  
 <span data-ttu-id="f9c79-187">Klucz nie może być `null`, ale wartość może być, jeśli typem `TValue` wartości jest typ referencyjny.</span><span class="sxs-lookup"><span data-stu-id="f9c79-187">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="f9c79-188">Ta metoda jest operacją o ( `n`log), gdzie `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-188">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-189">Poniższy przykład kodu tworzy puste <xref:System.Collections.Generic.SortedDictionary%602> ciągi z kluczami ciągu i <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> używa metody do dodawania niektórych elementów.</span><span class="sxs-lookup"><span data-stu-id="f9c79-189">The following code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method to add some elements.</span></span> <span data-ttu-id="f9c79-190">W przykładzie pokazano, że <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Metoda <xref:System.ArgumentException> zgłasza podczas próby dodania zduplikowanego klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-190">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key.</span></span>  
  
 <span data-ttu-id="f9c79-191">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.SortedDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-191">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#2](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#2)]
 [!code-vb[Generic.SortedDictionary#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-192"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-192"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9c79-193">Element z tym samym kluczem już istnieje w <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-193">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sortedDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9c79-194">Usuwa wszystkie elementy z <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-194">Removes all elements from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-195"><xref:System.Collections.Generic.SortedDictionary%602.Count%2A> Właściwość jest ustawiona na 0, a odwołania do innych obiektów z elementów kolekcji również są wydane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-195">The <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> property is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="f9c79-196">Ta metoda jest operacją O (1), ponieważ katalog główny wewnętrznych struktur danych jest po prostu uwalniany do wyrzucania elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="f9c79-196">This method is an O(1) operation, since the root of the internal data structures is simply released for garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;TKey&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;!TKey&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of TKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IComparer&lt;TKey&gt; ^ Comparer { System::Collections::Generic::IComparer&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IComparer&lt;'Key&gt;" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-197">Pobiera elementy do uporządkowania <see cref="T:System.Collections.Generic.SortedDictionary`2" />. <see cref="T:System.Collections.Generic.IComparer`1" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-197">Gets the <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-198"><see cref="T:System.Collections.Generic.IComparer`1" /> Służy do porządkowania elementów<see cref="T:System.Collections.Generic.SortedDictionary`2" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-198">The <see cref="T:System.Collections.Generic.IComparer`1" /> used to order the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-199"><xref:System.Collections.Generic.SortedDictionary%602>wymaga implementacji porównującej do przeprowadzenia porównania kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-199"><xref:System.Collections.Generic.SortedDictionary%602> requires a comparer implementation to perform key comparisons.</span></span> <span data-ttu-id="f9c79-200">Można określić implementację <xref:System.Collections.Generic.IComparer%601> interfejsu ogólnego przy użyciu konstruktora, który `comparer` akceptuje parametr.</span><span class="sxs-lookup"><span data-stu-id="f9c79-200">You can specify an implementation of the <xref:System.Collections.Generic.IComparer%601> generic interface by using a constructor that accepts a `comparer` parameter.</span></span> <span data-ttu-id="f9c79-201">Jeśli nie, zostanie użyta domyślna ogólna funkcja porównująca <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>równość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-201">If you do not, the default generic equality comparer, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>, is used.</span></span> <span data-ttu-id="f9c79-202">Jeśli typ `TKey` <xref:System.IComparable%601?displayProperty=nameWithType> implementuje interfejs ogólny, domyślna funkcja porównująca używa tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-202">If type `TKey` implements the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the default comparer uses that implementation.</span></span>  
  
 <span data-ttu-id="f9c79-203">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-203">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Collections.Generic.SortedDictionary`2.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : 'Key -&gt; bool&#xA;override this.ContainsKey : 'Key -&gt; bool" Usage="sortedDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-204">Klucz, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-204">The key to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></param>
        <summary><span data-ttu-id="f9c79-205">Określa, <see cref="T:System.Collections.Generic.SortedDictionary`2" /> czy zawiera element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="f9c79-205">Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="f9c79-206"><see langword="true" />Jeśli zawiera element z określonym kluczem; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Collections.Generic.SortedDictionary`2" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-206"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-207">Ta metoda jest operacją o ( `n`log).</span><span class="sxs-lookup"><span data-stu-id="f9c79-207">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-208">Poniższy przykład kodu pokazuje, <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> jak używać metody do testowania, czy klucz istnieje przed <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> wywołaniem metody.</span><span class="sxs-lookup"><span data-stu-id="f9c79-208">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method to test whether a key exists prior to calling the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method.</span></span> <span data-ttu-id="f9c79-209">Pokazano również, jak używać <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> metody do pobierania wartości, co jest wydajnym sposobem pobierania wartości, gdy program często próbuje klucze, które nie znajdują się w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-209">It also shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method to retrieve values, which is an efficient way to retrieve values when a program frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="f9c79-210">Na koniec pokazuje najmniej wydajny sposób sprawdzenia, czy klucze istnieją, przy użyciu <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> właściwości (indeksator w programie C#).</span><span class="sxs-lookup"><span data-stu-id="f9c79-210">Finally, it shows the least efficient way to test whether keys exist, by using the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#).</span></span>  
  
 <span data-ttu-id="f9c79-211">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.SortedDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-211">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#6)]
 [!code-vb[Generic.SortedDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
[!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-212"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-212"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public bool ContainsValue (TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsValue(!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.ContainsValue(`1)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsValue (value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsValue(TValue value);" />
      <MemberSignature Language="F#" Value="member this.ContainsValue : 'Value -&gt; bool" Usage="sortedDictionary.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f9c79-213">Wartość, która ma zostać zlokalizowana w <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-213">The value to locate in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span> <span data-ttu-id="f9c79-214">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="f9c79-214">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="f9c79-215">Określa, <see cref="T:System.Collections.Generic.SortedDictionary`2" /> czy zawiera element z określoną wartością.</span><span class="sxs-lookup"><span data-stu-id="f9c79-215">Determines whether the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value.</span></span></summary>
        <returns><span data-ttu-id="f9c79-216"><see langword="true" />Jeśli zawiera element z określoną wartością; <see langword="false" />w przeciwnym razie. <see cref="T:System.Collections.Generic.SortedDictionary`2" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-216"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-217">Ta metoda określa równość przy użyciu domyślnej funkcji porównującej <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> równość dla typu `TValue`wartości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-217">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for the value type `TValue`.</span></span>  
  
 <span data-ttu-id="f9c79-218">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym średni czas wykonywania jest proporcjonalny <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-218">This method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Collections.Generic.SortedDictionary%602.Count%2A> property.</span></span> <span data-ttu-id="f9c79-219">Oznacza to, że ta metoda jest operacją`n`o (), `n` gdzie <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>is.</span><span class="sxs-lookup"><span data-stu-id="f9c79-219">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.EqualityComparer`1.Default" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of TKey, TValue)(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;[] * int -&gt; unit" Usage="sortedDictionary.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f9c79-220">Tablica <see cref="T:System.Collections.Generic.KeyValuePair`2" /> Jednowymiarowa struktur, które są lokalizacją docelową elementów skopiowanych z bieżącej <see cref="T:System.Collections.Generic.SortedDictionary`2" /> tablicy, musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="f9c79-220">The one-dimensional array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures that is the destination of the elements copied from the current <see cref="T:System.Collections.Generic.SortedDictionary`2" /> The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="f9c79-221">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="f9c79-221">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="f9c79-222">Kopiuje elementy <see cref="T:System.Collections.Generic.SortedDictionary`2" /> do określonej <see cref="T:System.Collections.Generic.KeyValuePair`2" /> tablicy struktur, rozpoczynając od określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-222">Copies the elements of the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> to the specified array of <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structures, starting at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f9c79-223">Jeśli nie można automatycznie rzutować <xref:System.Collections.Generic.SortedDictionary%602> typu źródła na typ docelowy `array`, nieogólne implementacje <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, podczas gdy są zgłaszane implementacje <xref:System.ArgumentException>ogólne.</span><span class="sxs-lookup"><span data-stu-id="f9c79-223">If the type of the source <xref:System.Collections.Generic.SortedDictionary%602> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="f9c79-224">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-224">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-225"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-225"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9c79-226"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="f9c79-226"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9c79-227">Liczba elementów w źródle <see cref="T:System.Collections.Generic.SortedDictionary`2" /> jest większa niż dostępne miejsce od <paramref name="index" /> do końca miejsca docelowego <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-227">The number of elements in the source <see cref="T:System.Collections.Generic.SortedDictionary`2" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-228">Pobiera liczbę par klucz/wartość zawartych w <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-228">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-229">Liczba par klucz/wartość zawartych w <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-229">The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-230">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-230">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.SortedDictionary`2/Enumerator&lt;!TKey, !TValue&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As SortedDictionary(Of TKey, TValue).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Enumerator" Usage="sortedDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9c79-231">Zwraca moduł wyliczający, który wykonuje iterację przez <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-231">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="f9c79-232"><see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> A<see cref="T:System.Collections.Generic.SortedDictionary`2" />dla.</span><span class="sxs-lookup"><span data-stu-id="f9c79-232">A <see cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" /> for the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-233">Na potrzeby wyliczenia każdy element jest <xref:System.Collections.Generic.KeyValuePair%602> strukturą reprezentującą wartość i jej klucz.</span><span class="sxs-lookup"><span data-stu-id="f9c79-233">For purposes of enumeration, each item is a <xref:System.Collections.Generic.KeyValuePair%602> structure representing a value and its key.</span></span>  
  
 <span data-ttu-id="f9c79-234">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="f9c79-234">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="f9c79-235">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="f9c79-235">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f9c79-236">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="f9c79-236">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f9c79-237">Słownik jest przechowywany w kolejności posortowanej przy użyciu wewnętrznego drzewa.</span><span class="sxs-lookup"><span data-stu-id="f9c79-237">The dictionary is maintained in a sorted order using an internal tree.</span></span> <span data-ttu-id="f9c79-238">Każdy nowy element jest pozycjonowany w poprawnej pozycji sortowania, a drzewo jest dostosowywane do zachowywania kolejności sortowania przy każdym usunięciu elementu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-238">Every new element is positioned at the correct sort position, and the tree is adjusted to maintain the sort order whenever an element is removed.</span></span> <span data-ttu-id="f9c79-239">Podczas wyliczania jest zachowywany porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-239">While enumerating, the sort order is maintained.</span></span>  
  
 <span data-ttu-id="f9c79-240">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-240">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f9c79-241">W tym miejscu <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> właściwość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="f9c79-241">At this position, the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="f9c79-242">W związku z tym, należy <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> wywołać metodę, aby wykonać przechodzenie modułu wyliczającego do pierwszego elementu kolekcji przed odczytem <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>wartości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-242">Therefore, you must call the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f9c79-243">Właściwość zwraca ten sam element <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> do momentu wywołania metody. <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A></span><span class="sxs-lookup"><span data-stu-id="f9c79-243">The <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> property returns the same element until the <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="f9c79-244"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A>ustawia <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-244"><xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f9c79-245">Jeśli <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="f9c79-245">If <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f9c79-246">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="f9c79-246">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f9c79-247">Jeśli ostatnie wywołanie <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-247">If the last call to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f9c79-248">Nie można ponownie <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> ustawić na pierwszy element kolekcji; zamiast tego należy utworzyć nowe wystąpienie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="f9c79-248">You cannot set <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="f9c79-249">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="f9c79-249">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f9c79-250">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-250">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.SortedDictionary%602.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9c79-251">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-251">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f9c79-252">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-252">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9c79-253">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-253">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9c79-254">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-254">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9c79-255">Ta metoda jest operacją O (log n), gdzie n jest liczbą.</span><span class="sxs-lookup"><span data-stu-id="f9c79-255">This method is an O(log n) operation, where n is count.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TValue this[TKey key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Item(!TKey)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue default[TKey] { TValue get(TKey key); void set(TKey key, TValue value); };" />
      <MemberSignature Language="F#" Value="member this.Item('Key) : 'Value with get, set" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-256">Klucz wartości do pobrania lub ustawienia.</span><span class="sxs-lookup"><span data-stu-id="f9c79-256">The key of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="f9c79-257">Pobiera lub ustawia wartość skojarzoną z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="f9c79-257">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="f9c79-258">Wartość skojarzona z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="f9c79-258">The value associated with the specified key.</span></span> <span data-ttu-id="f9c79-259">Jeśli określony klucz nie zostanie znaleziony, operacja get zgłasza <see cref="T:System.Collections.Generic.KeyNotFoundException" />, a operacja Set tworzy nowy element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="f9c79-259">If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException" />, and a set operation creates a new element with the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-260">Ta właściwość zapewnia możliwość dostępu do określonego elementu w kolekcji przy użyciu następującej C# składni: `myCollection[key]` (`myCollection(key)` w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="f9c79-260">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="f9c79-261">Można również użyć <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> właściwości, aby dodać nowe elementy przez ustawienie wartości klucza, który nie istnieje <xref:System.Collections.Generic.SortedDictionary%602>w, na przykład `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="f9c79-261">You can also use the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Generic.SortedDictionary%602>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="f9c79-262">Jeśli jednak określony klucz już istnieje w <xref:System.Collections.Generic.SortedDictionary%602>, <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> ustawienie właściwości zastępuje starą wartość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-262">However, if the specified key already exists in the <xref:System.Collections.Generic.SortedDictionary%602>, setting the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="f9c79-263">Z kolei <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> Metoda nie modyfikuje istniejących elementów.</span><span class="sxs-lookup"><span data-stu-id="f9c79-263">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="f9c79-264">Klucz nie może być `null`, ale wartość może być, jeśli typem `TValue` wartości jest typ referencyjny.</span><span class="sxs-lookup"><span data-stu-id="f9c79-264">A key cannot be `null`, but a value can be, if the value type `TValue` is a reference type.</span></span>  
  
 <span data-ttu-id="f9c79-265">Język używa [tego](~/docs/csharp/language-reference/keywords/this.md) słowa kluczowego, aby zdefiniować indeksatory zamiast implementowania <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> właściwości. C#</span><span class="sxs-lookup"><span data-stu-id="f9c79-265">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property.</span></span> <span data-ttu-id="f9c79-266">Visual Basic implementuje <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> jako właściwość domyślną, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-266">Visual Basic implements <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="f9c79-267">Pobieranie wartości tej właściwości jest operacją o (log `n`); ustawienie właściwości jest również operacją o (log `n`).</span><span class="sxs-lookup"><span data-stu-id="f9c79-267">Getting the value of this property is an O(log `n`) operation; setting the property is also an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-268">Poniższy przykład kodu używa <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> właściwości (indeksator w C#) do pobierania wartości, <xref:System.Collections.Generic.KeyNotFoundException> pokazując, że jest zgłaszane, gdy żądany klucz nie jest obecny i pokazuje, że wartość skojarzona z kluczem może zostać zamieniona.</span><span class="sxs-lookup"><span data-stu-id="f9c79-268">The following code example uses the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) to retrieve values, demonstrating that a <xref:System.Collections.Generic.KeyNotFoundException> is thrown when a requested key is not present, and showing that the value associated with a key can be replaced.</span></span>  
  
 <span data-ttu-id="f9c79-269">W przykładzie pokazano również, jak używać <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> metody jako wydajniejszego sposobu pobierania wartości, jeśli program często musi wypróbować wartości klucza, które nie znajdują się w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-269">The example also shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values if a program often must try key values that are not in the dictionary.</span></span>  
  
 <span data-ttu-id="f9c79-270">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.SortedDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-270">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#3)]
 [!code-vb[Generic.SortedDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
[!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-271"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-271"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="f9c79-272">Właściwość jest pobierana i <paramref name="key" /> nie istnieje w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-272">The property is retrieved and <paramref name="key" /> does not exist in the collection.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.KeyCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2/KeyCollection&lt;!TKey, !TValue&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As SortedDictionary(Of TKey, TValue).KeyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection ^ Keys { System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::KeyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.KeyCollection" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+KeyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-273">Pobiera kolekcję zawierającą klucze z <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-273">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-274"><see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> Zawierający klucze <see cref="T:System.Collections.Generic.SortedDictionary`2" />w.</span><span class="sxs-lookup"><span data-stu-id="f9c79-274">A <see cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" /> containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-275">Klucze w programie <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> są sortowane według <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> właściwości i są w takiej samej kolejności jak skojarzone wartości <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> w <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> zwracanym przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-275">The keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property and are in the same order as the associated values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property.</span></span>  
  
 <span data-ttu-id="f9c79-276">Zwracana <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> wartość nie jest kopią statyczną; zamiast tego <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> odwołuje się do kluczy w oryginalnym <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-276">The returned <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> refers back to the keys in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="f9c79-277">W związku z tym zmiany <xref:System.Collections.Generic.SortedDictionary%602> w dalszym ciągu zostaną odzwierciedlone w. <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection></span><span class="sxs-lookup"><span data-stu-id="f9c79-277">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection>.</span></span>  
  
 <span data-ttu-id="f9c79-278">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-278">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-279">Poniższy przykład kodu pokazuje, jak wyliczyć klucze w słowniku przy użyciu <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> właściwości oraz jak wyliczyć klucze i wartości w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-279">The following code example shows how to enumerate the keys in the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="f9c79-280">Ten kod jest częścią większego przykładu, który można skompilować i wykonać.</span><span class="sxs-lookup"><span data-stu-id="f9c79-280">This code is part of a larger example that can be compiled and executed.</span></span> <span data-ttu-id="f9c79-281">Zobacz <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-281">See <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#9)]
 [!code-vb[Generic.SortedDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.KeyCollection" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Values" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'Key -&gt; bool&#xA;override this.Remove : 'Key -&gt; bool" Usage="sortedDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-282">Klucz elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="f9c79-282">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="f9c79-283">Usuwa element z określonym kluczem z <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-283">Removes the element with the specified key from the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="f9c79-284"><see langword="true" />Jeśli element został pomyślnie usunięty; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-284"><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="f9c79-285">Ta metoda zwraca również <see langword="false" /> wartość <paramref name="key" /> , <see cref="T:System.Collections.Generic.SortedDictionary`2" />Jeśli nie została znaleziona w.</span><span class="sxs-lookup"><span data-stu-id="f9c79-285">This method also returns <see langword="false" /> if <paramref name="key" /> is not found in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-286">Jeśli nie zawiera elementu z określonym kluczem <xref:System.Collections.Generic.SortedDictionary%602> , pozostaje niezmieniona. <xref:System.Collections.Generic.SortedDictionary%602></span><span class="sxs-lookup"><span data-stu-id="f9c79-286">If the <xref:System.Collections.Generic.SortedDictionary%602> does not contain an element with the specified key, the <xref:System.Collections.Generic.SortedDictionary%602> remains unchanged.</span></span> <span data-ttu-id="f9c79-287">Nie zgłoszono żadnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-287">No exception is thrown.</span></span>  
  
 <span data-ttu-id="f9c79-288">Ta metoda jest operacją o ( `n`log).</span><span class="sxs-lookup"><span data-stu-id="f9c79-288">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-289">Poniższy przykład kodu pokazuje, jak usunąć parę klucz/wartość ze słownika przy użyciu <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f9c79-289">The following code example shows how to remove a key/value pair from the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Remove%2A> method.</span></span>  
  
 <span data-ttu-id="f9c79-290">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.SortedDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-290">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#10)]
 [!code-vb[Generic.SortedDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-291"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-291"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)" />
        <altmember cref="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (keyValuePair As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="f9c79-292">Struktura, która ma zostać dodana <see cref="T:System.Collections.Generic.ICollection`1" />do programu. <see cref="T:System.Collections.Generic.KeyValuePair`2" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-292">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="f9c79-293">Dodaje element do <see cref="T:System.Collections.Generic.ICollection`1" />elementu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-293">Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-294"><paramref name="keyValuePair" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-294"><paramref name="keyValuePair" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9c79-295">Element z tym samym kluczem już istnieje w <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-295">An element with the same key already exists in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="f9c79-296">Struktura, która ma zostać zlokalizowana <see cref="T:System.Collections.Generic.ICollection`1" />w. <see cref="T:System.Collections.Generic.KeyValuePair`2" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-296">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="f9c79-297">Określa, <see cref="T:System.Collections.Generic.ICollection`1" /> czy zawiera określony klucz i wartość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-297">Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific key and value.</span></span></summary>
        <returns><span data-ttu-id="f9c79-298"><see langword="true" />Jeśli <paramref name="keyValuePair" /> znajduje się <see cref="T:System.Collections.Generic.ICollection`1" />w; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="f9c79-298"><see langword="true" /> if <paramref name="keyValuePair" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="f9c79-299">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="f9c79-299">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey,TValue&gt;&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-300">Pobiera wartość wskazującą, czy jest <see cref="T:System.Collections.Generic.ICollection`1" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-300">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="f9c79-301"><see langword="true" />Jeśli jest <see cref="T:System.Collections.Generic.ICollection`1" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="f9c79-301"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f9c79-302">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.SortedDictionary`2" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-302">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt; keyValuePair);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt; keyValuePair) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (keyValuePair As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt; keyValuePair) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePair" Type="System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;" />
      </Parameters>
      <Docs>
        <param name="keyValuePair"><span data-ttu-id="f9c79-303">Struktura do usunięcia z programu <see cref="T:System.Collections.Generic.ICollection`1" />. <see cref="T:System.Collections.Generic.KeyValuePair`2" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-303">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> structure to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></param>
        <summary><span data-ttu-id="f9c79-304">Usuwa pierwsze wystąpienie określonego elementu z <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-304">Removes the first occurrence of the specified element from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="f9c79-305"><see langword="true" />Jeśli <paramref name="keyValuePair" /> <see cref="T:System.Collections.Generic.ICollection`1" />program został<see langword="false" />pomyślnie usunięty z programu; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="f9c79-305"><see langword="true" /> if <paramref name="keyValuePair" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f9c79-306">Ta metoda zwraca również <see langword="false" /> wartość <paramref name="keyValuePair" /> , <see cref="T:System.Collections.Generic.ICollection`1" />Jeśli nie została znaleziona w.</span><span class="sxs-lookup"><span data-stu-id="f9c79-306">This method also returns <see langword="false" /> if <paramref name="keyValuePair" /> was not found in the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TKey&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TKey&gt; ^ System::Collections::Generic::IDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::ICollection&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-307">Pobiera zawierający klucze <see cref="T:System.Collections.Generic.IDictionary`2" />. <see cref="T:System.Collections.Generic.ICollection`1" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-307">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-308"><see cref="T:System.Collections.Generic.ICollection`1" /> Zawierający klucze<see cref="T:System.Collections.Generic.IDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-308">An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.ICollection&lt;TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;!TValue&gt; System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::ICollection&lt;TValue&gt; ^ System::Collections::Generic::IDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::ICollection&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-309">Pobiera zawierający wartości z <see cref="T:System.Collections.Generic.IDictionary`2" />. <see cref="T:System.Collections.Generic.ICollection`1" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-309">Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-310"><see cref="T:System.Collections.Generic.ICollection`1" /> Zawierający wartości <see cref="T:System.Collections.Generic.IDictionary`2" />z.</span><span class="sxs-lookup"><span data-stu-id="f9c79-310">An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9c79-311">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-311">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="f9c79-312">Moduł wyliczający, który może być używany do iteracji kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-312">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TKey&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As IEnumerable(Of TKey) Implements IReadOnlyDictionary(Of TKey, TValue).Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Keys { System::Collections::Generic::IEnumerable&lt;TKey&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-313">Pobiera kolekcję zawierającą klucze z <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-313">Gets a collection containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-314">Kolekcja zawierająca klucze w <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-314">A collection containing the keys in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;!TValue&gt; System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IReadOnlyDictionary&lt;TKey,TValue&gt;#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As IEnumerable(Of TValue) Implements IReadOnlyDictionary(Of TKey, TValue).Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ System::Collections::Generic::IReadOnlyDictionary&lt;TKey,TValue&gt;::Values { System::Collections::Generic::IEnumerable&lt;TValue&gt; ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IReadOnlyDictionary&lt;TKey,TValue&gt;.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-315">Pobiera kolekcję zawierającą wartości <see cref="T:System.Collections.Generic.SortedDictionary`2" />z.</span><span class="sxs-lookup"><span data-stu-id="f9c79-315">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-316">Kolekcja zawierająca wartości w <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-316">A collection containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f9c79-317">Jednowymiarowa tablica, która jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-317">The one-dimensional array that is the destination of the elements copied from the <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span> <span data-ttu-id="f9c79-318">Tablica musi mieć indeksowane zaczynające od zera.</span><span class="sxs-lookup"><span data-stu-id="f9c79-318">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="f9c79-319">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="f9c79-319">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="f9c79-320">Kopiuje elementy <see cref="T:System.Collections.Generic.ICollection`1" /> do tablicy, rozpoczynając od określonego indeksu tablicy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-320">Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an array, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f9c79-321">Jeśli nie można automatycznie rzutować <xref:System.Collections.ICollection> typu źródła na typ docelowy `array`, <xref:System.InvalidCastException>nieogólne implementacje <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw a, podczas gdy implementacje ogólne generują <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-321">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw an <xref:System.InvalidCastException>, whereas the generic implementations throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="f9c79-322">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-322">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-323"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-323"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f9c79-324"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="f9c79-324"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9c79-325"><paramref name="array" />jest wielowymiarowych.</span><span class="sxs-lookup"><span data-stu-id="f9c79-325"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="f9c79-326">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9c79-326">-or-</span></span> 
 <span data-ttu-id="f9c79-327"><paramref name="array" />nie ma indeksowania opartego na zero.</span><span class="sxs-lookup"><span data-stu-id="f9c79-327"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="f9c79-328">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9c79-328">-or-</span></span> 
<span data-ttu-id="f9c79-329">Liczba elementów w źródle <see cref="T:System.Collections.Generic.ICollection`1" /> jest większa niż dostępne miejsce od <paramref name="index" /> do końca miejsca docelowego <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-329">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="f9c79-330">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9c79-330">-or-</span></span> 
<span data-ttu-id="f9c79-331">Nie można automatycznie rzutować <see cref="T:System.Collections.Generic.ICollection`1" /> typu źródła na typ docelowy. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-331">The type of the source <see cref="T:System.Collections.Generic.ICollection`1" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-332">Pobiera wartość wskazującą, <see cref="T:System.Collections.ICollection" /> czy dostęp do elementu jest synchronizowany (bezpieczny wątkowo).</span><span class="sxs-lookup"><span data-stu-id="f9c79-332">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="f9c79-333"><see langword="true" />Jeśli dostęp do programu <see cref="T:System.Collections.ICollection" /> jest synchronizowany (wątek bezpieczny); <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="f9c79-333"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="f9c79-334">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.SortedDictionary`2" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-334">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-335">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-335">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9c79-336">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-336">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f9c79-337">Nawet w przypadku synchronizacji kolekcji inne wątki mogą nadal modyfikować kolekcję, co może spowodować zgłoszenie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="f9c79-337">Even when a collection is synchronized, other threads can still modify the collection, which can cause the enumerator to throw an exception.</span></span> <span data-ttu-id="f9c79-338">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="f9c79-338">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f9c79-339">Właściwość zwraca obiekt, którego można użyć do synchronizowania dostępu <xref:System.Collections.ICollection>do. <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A></span><span class="sxs-lookup"><span data-stu-id="f9c79-339">The <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="f9c79-340">Synchronizacja jest skuteczna tylko wtedy, gdy wszystkie wątki blokują obiekt przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-340">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span>  
  
 <span data-ttu-id="f9c79-341">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-341">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-342">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-342">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-343">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-343">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-344">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-344">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9c79-345">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-345">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f9c79-346">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-346">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9c79-347">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-347">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9c79-348">Właściwość zwraca obiekt, którego można użyć do synchronizowania dostępu <xref:System.Collections.ICollection>do. <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A></span><span class="sxs-lookup"><span data-stu-id="f9c79-348">The <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="f9c79-349">Synchronizacja jest skuteczna tylko wtedy, gdy wszystkie wątki blokują obiekt przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-349">Synchronization is effective only if all threads lock the object before accessing the collection.</span></span> <span data-ttu-id="f9c79-350">Poniższy kod przedstawia użycie <xref:System.Collections.ICollection.SyncRoot%2A> właściwości dla C#, C++i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="f9c79-350">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="f9c79-351">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-351">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-352">Obiekt, który ma być używany jako klucz elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-352">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="f9c79-353">Obiekt, który ma być używany jako wartość elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-353">The object to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="f9c79-354">Dodaje element z podanym kluczem i wartością do <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-354">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-355">Można również użyć <xref:System.Collections.IDictionary.Item%2A> właściwości, aby dodać nowe elementy przez ustawienie wartości klucza, który nie istnieje w słowniku, na `myCollection["myNonexistentKey"] = myValue`przykład.</span><span class="sxs-lookup"><span data-stu-id="f9c79-355">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="f9c79-356">Jeśli jednak określony klucz już istnieje w słowniku, ustawienie <xref:System.Collections.IDictionary.Item%2A> właściwości zastępuje starą wartość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-356">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="f9c79-357">Z kolei <xref:System.Collections.IDictionary.Add%2A> Metoda nie modyfikuje istniejących elementów.</span><span class="sxs-lookup"><span data-stu-id="f9c79-357">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="f9c79-358">Ta metoda jest operacją o ( `n`log), gdzie `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-358">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-359">Poniższy przykład kodu pokazuje, <xref:System.Collections.Generic.SortedDictionary%602> jak uzyskać dostęp do klasy <xref:System.Collections.IDictionary?displayProperty=nameWithType> za pomocą interfejsu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-359">The following code example shows how to access the <xref:System.Collections.Generic.SortedDictionary%602> class through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="f9c79-360">Przykładowy kod tworzy puste <xref:System.Collections.Generic.SortedDictionary%602> ciągi z kluczami ciągu i <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> używa metody do dodawania niektórych elementów.</span><span class="sxs-lookup"><span data-stu-id="f9c79-360">The code example creates an empty <xref:System.Collections.Generic.SortedDictionary%602> of strings with string keys and uses the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method to add some elements.</span></span> <span data-ttu-id="f9c79-361">W przykładzie pokazano, że <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Metoda <xref:System.ArgumentException> zgłasza podczas próby dodania zduplikowanego klucza lub gdy podano klucz lub wartość błędnego typu danych.</span><span class="sxs-lookup"><span data-stu-id="f9c79-361">The example demonstrates that the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method throws an <xref:System.ArgumentException> when attempting to add a duplicate key, or when a key or value of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="f9c79-362">Przykład kodu demonstruje użycie kilku innych elementów członkowskich <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-362">The code example demonstrates the use of several other members of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#1)]
 [!code-vb[Generic.SortedDictionary.IDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-363"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-363"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9c79-364"><paramref name="key" />jest typu, którego nie można przypisać do typu <paramref name="TKey" /> <see cref="T:System.Collections.IDictionary" />klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-364"><paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.IDictionary" />.</span></span>  
  
<span data-ttu-id="f9c79-365">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9c79-365">-or-</span></span> 
 <span data-ttu-id="f9c79-366"><paramref name="value" />jest typu, którego nie można przypisać do typu <paramref name="TValue" /> <see cref="T:System.Collections.IDictionary" />wartości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-366"><paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.IDictionary" />.</span></span>  
  
<span data-ttu-id="f9c79-367">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9c79-367">-or-</span></span> 
<span data-ttu-id="f9c79-368">Element z tym samym kluczem już istnieje w <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-368">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" />.</span></span></exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-369">Klucz, który ma zostać zlokalizowany w <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-369">The key to locate in the <see cref="T:System.Collections.IDictionary" />.</span></span></param>
        <summary><span data-ttu-id="f9c79-370">Określa, <see cref="T:System.Collections.IDictionary" /> czy zawiera element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="f9c79-370">Determines whether the <see cref="T:System.Collections.IDictionary" /> contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="f9c79-371"><see langword="true" />Jeśli zawiera element z kluczem; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Collections.IDictionary" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-371"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-372">Ta metoda zwraca `false` wartość `key` , jeśli jest typu, którego nie można przypisać do typu `TKey` <xref:System.Collections.Generic.SortedDictionary%602>klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-372">This method returns `false` if `key` is of a type that is not assignable to the key type `TKey` of the <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="f9c79-373">Ta metoda jest operacją o ( `n`log), gdzie `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-373">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.Generic.SortedDictionary%602.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-374">Poniższy przykład kodu pokazuje, <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A> jak używać metody <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfejsu z <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-374">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Contains%2A> method of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="f9c79-375">Przykład pokazuje, że metoda zwraca `false` , jeśli podano klucz nieprawidłowego typu danych.</span><span class="sxs-lookup"><span data-stu-id="f9c79-375">The example demonstrates that the method returns `false` if a key of the wrong data type is supplied.</span></span>  
  
 <span data-ttu-id="f9c79-376">Przykład kodu jest częścią większego przykładu, łącznie z danymi wyjściowymi dostarczonymi <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> dla metody.</span><span class="sxs-lookup"><span data-stu-id="f9c79-376">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#6)]
[!code-vb[Generic.SortedDictionary.IDictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#6)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-377"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-377"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9c79-378"><see cref="T:System.Collections.IDictionaryEnumerator" /> Zwraca wartość<see cref="T:System.Collections.IDictionary" />dla.</span><span class="sxs-lookup"><span data-stu-id="f9c79-378">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="f9c79-379"><see cref="T:System.Collections.IDictionaryEnumerator" /> Dla .<see cref="T:System.Collections.IDictionary" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-379">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-380">Na potrzeby wyliczenia każdy element jest <xref:System.Collections.DictionaryEntry> strukturą.</span><span class="sxs-lookup"><span data-stu-id="f9c79-380">For purposes of enumeration, each item is a <xref:System.Collections.DictionaryEntry> structure.</span></span>  
  
 <span data-ttu-id="f9c79-381">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="f9c79-381">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="f9c79-382">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="f9c79-382">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f9c79-383">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="f9c79-383">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f9c79-384">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-384">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f9c79-385"><xref:System.Collections.IEnumerator.Reset%2A> Metoda również przywraca moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="f9c79-385">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="f9c79-386">W tym miejscu <xref:System.Collections.IDictionaryEnumerator.Entry%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-386">At this position, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="f9c79-387">W związku z tym, należy <xref:System.Collections.IEnumerator.MoveNext%2A> wywołać metodę, aby wykonać przechodzenie modułu wyliczającego do pierwszego elementu kolekcji przed odczytem <xref:System.Collections.IDictionaryEnumerator.Entry%2A>wartości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-387">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IDictionaryEnumerator.Entry%2A>.</span></span>  
  
 <span data-ttu-id="f9c79-388">Właściwość zwraca ten sam obiekt <xref:System.Collections.IEnumerator.MoveNext%2A> do momentu wywołania <xref:System.Collections.IEnumerator.Reset%2A>lub. <xref:System.Collections.IDictionaryEnumerator.Entry%2A></span><span class="sxs-lookup"><span data-stu-id="f9c79-388">The <xref:System.Collections.IDictionaryEnumerator.Entry%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f9c79-389"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IDictionaryEnumerator.Entry%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-389"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f9c79-390">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="f9c79-390">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f9c79-391">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="f9c79-391">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f9c79-392">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-392">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IDictionaryEnumerator.Entry%2A> is undefined.</span></span> <span data-ttu-id="f9c79-393">Aby ponownie <xref:System.Collections.IDictionaryEnumerator.Entry%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-393">To set <xref:System.Collections.IDictionaryEnumerator.Entry%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f9c79-394">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="f9c79-394">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f9c79-395">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-395">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9c79-396">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-396">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f9c79-397">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-397">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9c79-398">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-398">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9c79-399">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-399">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9c79-400">Ta metoda jest operacją O (log n), gdzie n jest liczbą elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-400">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="f9c79-401">Poniższy przykład kodu pokazuje, `foreach` jak wyliczyć pary klucz/wartość w słowniku przy użyciu instrukcji (`For Each` w Visual Basic, `for each` in C++), która ukrywa użycie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="f9c79-401">The following code example shows how to enumerate the key/value pairs in the dictionary by using the `foreach` statement (`For Each` in Visual Basic, `for each` in C++), which hides the use of the enumerator.</span></span> <span data-ttu-id="f9c79-402">W szczególności należy zauważyć, że moduł wyliczający <xref:System.Collections.IDictionary?displayProperty=nameWithType> dla interfejsu <xref:System.Collections.DictionaryEntry> zwraca obiekty, <xref:System.Collections.Generic.KeyValuePair%602> a nie obiekty.</span><span class="sxs-lookup"><span data-stu-id="f9c79-402">In particular, note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="f9c79-403">Przykład kodu jest częścią większego przykładu, łącznie z danymi wyjściowymi dostarczonymi <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> dla metody.</span><span class="sxs-lookup"><span data-stu-id="f9c79-403">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-404">Pobiera wartość wskazującą, <see cref="T:System.Collections.IDictionary" /> czy ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="f9c79-404">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="f9c79-405"><see langword="true" />Jeśli ma stały rozmiar; <see langword="false" />w przeciwnym razie. <see cref="T:System.Collections.IDictionary" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-405"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> has a fixed size; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="f9c79-406">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.SortedDictionary`2" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-406">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-407">W kolekcji o stałym rozmiarze po jej utworzeniu nie można dodawać ani usuwać elementów, jednak można modyfikować istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-407">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="f9c79-408">Kolekcja o stałym rozmiarze jest po prostu kolekcją z otoką, która zapobiega dodawaniu i usuwaniu elementów; w związku z tym, jeśli wprowadzono zmiany do źródłowej kolekcji, w tym dodawanie lub usuwanie elementów, kolekcja o stałym rozmiarze odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="f9c79-408">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f9c79-409">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-409">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-410">Pobiera wartość wskazującą, czy jest <see cref="T:System.Collections.IDictionary" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-410">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="f9c79-411"><see langword="true" />Jeśli jest <see cref="T:System.Collections.IDictionary" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="f9c79-411"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="f9c79-412">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.SortedDictionary`2" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-412">In the default implementation of <see cref="T:System.Collections.Generic.SortedDictionary`2" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-413">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="f9c79-413">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="f9c79-414">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="f9c79-414">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f9c79-415">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-415">Getting the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-416">Klucz elementu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-416">The key of the element to get.</span></span></param>
        <summary><span data-ttu-id="f9c79-417">Pobiera lub ustawia element z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="f9c79-417">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="f9c79-418">Element z określonym kluczem lub <see langword="null" /> Jeśli <paramref name="key" /> nie znajduje się w słowniku lub <paramref name="key" /> jest typu, którego nie można <see cref="T:System.Collections.Generic.SortedDictionary`2" />przypisać do typu <paramref name="TKey" /> klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-418">The element with the specified key, or <see langword="null" /> if <paramref name="key" /> is not in the dictionary or <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-419">Ta właściwość zapewnia możliwość dostępu do określonego elementu w kolekcji przy użyciu następującej C# składni: `myCollection[key]` (`myCollection(key)` w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="f9c79-419">This property provides the ability to access a specific element in the collection by using the following C# syntax: `myCollection[key]` (`myCollection(key)` in Visual Basic).</span></span>  
  
 <span data-ttu-id="f9c79-420">Można również użyć <xref:System.Collections.IDictionary.Item%2A> właściwości, aby dodać nowe elementy przez ustawienie wartości klucza, który nie istnieje w słowniku, na `myCollection["myNonexistentKey"] = myValue`przykład.</span><span class="sxs-lookup"><span data-stu-id="f9c79-420">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="f9c79-421">Jeśli jednak określony klucz już istnieje w słowniku, ustawienie <xref:System.Collections.IDictionary.Item%2A> właściwości zastępuje starą wartość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-421">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="f9c79-422">Z kolei <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> Metoda nie modyfikuje istniejących elementów.</span><span class="sxs-lookup"><span data-stu-id="f9c79-422">In contrast, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="f9c79-423">Język używa [tego](~/docs/csharp/language-reference/keywords/this.md) słowa kluczowego, aby zdefiniować indeksatory zamiast implementowania <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> właściwości. C#</span><span class="sxs-lookup"><span data-stu-id="f9c79-423">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> property.</span></span> <span data-ttu-id="f9c79-424">Visual Basic implementuje <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> jako właściwość domyślną, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-424">Visual Basic implements <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="f9c79-425">Pobieranie wartości tej właściwości jest operacją o (log `n`); ustawienie właściwości jest również operacją o (log `n`).</span><span class="sxs-lookup"><span data-stu-id="f9c79-425">Getting the value of this property is an O(log `n`) operation; setting the property is also an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-426">Poniższy przykład kodu <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> pokazuje <xref:System.Collections.Generic.SortedDictionary%602>, jak używać właściwości (indeksator w C#języku) <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfejsu z, i sposoby, aby właściwość była inna od <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-426">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A> property (the indexer in C#) of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, and ways the property differs from the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="f9c79-427">W przykładzie pokazano, <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> że właściwość może zmienić wartość skojarzoną z istniejącym kluczem i może być użyta do dodania nowej pary klucz/wartość, jeśli określony klucz nie znajduje się w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-427">The example shows that, like the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property can change the value associated with an existing key and can be used to add a new key/value pair if the specified key is not in the dictionary.</span></span> <span data-ttu-id="f9c79-428">Przykład pokazuje również, że w przeciwieństwie <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> do właściwości <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> właściwość nie zgłasza wyjątku, jeśli `key` nie znajduje się w słowniku, zwracając odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="f9c79-428">The example also shows that unlike the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A?displayProperty=nameWithType> property, the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property does not throw an exception if `key` is not in the dictionary, returning a null reference instead.</span></span> <span data-ttu-id="f9c79-429">Na koniec przykład pokazuje, że pobranie <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> właściwości zwraca odwołanie o wartości null, jeśli `key` nie jest poprawnym typem danych i że ustawienie właściwości zgłasza wyjątek, jeśli `key` nie jest poprawnym typem danych.</span><span class="sxs-lookup"><span data-stu-id="f9c79-429">Finally, the example demonstrates that getting the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Item%2A?displayProperty=nameWithType> property returns a null reference if `key` is not the correct data type, and that setting the property throws an exception if `key` is not the correct data type.</span></span>  
  
 <span data-ttu-id="f9c79-430">Przykład kodu jest częścią większego przykładu, łącznie z danymi wyjściowymi dostarczonymi <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> dla metody.</span><span class="sxs-lookup"><span data-stu-id="f9c79-430">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#3](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#3)]
[!code-vb[Generic.SortedDictionary.IDictionary#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#3)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary.IDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#4)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-431"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-431"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9c79-432">Przypisuje się wartość i <paramref name="key" /> jest typu, którego nie można przypisać do typu <paramref name="TKey" /> <see cref="T:System.Collections.Generic.SortedDictionary`2" />klucza.</span><span class="sxs-lookup"><span data-stu-id="f9c79-432">A value is being assigned, and <paramref name="key" /> is of a type that is not assignable to the key type <paramref name="TKey" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span>  
  
<span data-ttu-id="f9c79-433">—lub—</span><span class="sxs-lookup"><span data-stu-id="f9c79-433">-or-</span></span> 
<span data-ttu-id="f9c79-434">Przypisuje się wartość i <paramref name="value" /> jest typu, którego nie można przypisać do typu <paramref name="TValue" /> <see cref="T:System.Collections.Generic.SortedDictionary`2" />wartości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-434">A value is being assigned, and <paramref name="value" /> is of a type that is not assignable to the value type <paramref name="TValue" /> of the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-435">Pobiera zawierający klucze <see cref="T:System.Collections.IDictionary" />. <see cref="T:System.Collections.ICollection" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-435">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-436"><see cref="T:System.Collections.ICollection" /> Zawierający klucze<see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-436">An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-437">Klucze w zwracanych <xref:System.Collections.ICollection> wartości są sortowane zgodnie <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> z właściwością i są gwarantowane w takiej samej kolejności, jak odpowiadające im wartooci <xref:System.Collections.IDictionary.Values%2A> w <xref:System.Collections.ICollection> zwracanym przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-437">The keys in the returned <xref:System.Collections.ICollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property and are guaranteed to be in the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="f9c79-438">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-438">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-439">Poniższy przykład kodu pokazuje <xref:System.Collections.IDictionary.Keys%2A> <xref:System.Collections.Generic.SortedDictionary%602>, jak używać właściwości <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfejsu z, aby wyświetlić listę kluczy w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-439">The following code example shows how to use the <xref:System.Collections.IDictionary.Keys%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the keys in the dictionary.</span></span> <span data-ttu-id="f9c79-440">W przykładzie pokazano również, jak wyliczyć pary klucz/wartość w słowniku; Należy zauważyć, że moduł wyliczający <xref:System.Collections.IDictionary?displayProperty=nameWithType> dla <xref:System.Collections.DictionaryEntry> interfejsu zwraca obiekty <xref:System.Collections.Generic.KeyValuePair%602> , a nie obiekty.</span><span class="sxs-lookup"><span data-stu-id="f9c79-440">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="f9c79-441">Przykład kodu jest częścią większego przykładu, łącznie z danymi wyjściowymi dostarczonymi <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> dla metody.</span><span class="sxs-lookup"><span data-stu-id="f9c79-441">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#9)]
[!code-vb[Generic.SortedDictionary.IDictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#9)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-442">Klucz elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="f9c79-442">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="f9c79-443">Usuwa element z określonym kluczem z <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-443">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-444">Ta metoda jest operacją o ( `n`log).</span><span class="sxs-lookup"><span data-stu-id="f9c79-444">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-445">Poniższy przykład kodu pokazuje, <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A> <xref:System.Collections.IDictionary?displayProperty=nameWithType> jak używać interfejsu z <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-445">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Remove%2A> of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>.</span></span>  
  
 <span data-ttu-id="f9c79-446">Przykład kodu jest częścią większego przykładu, łącznie z danymi wyjściowymi dostarczonymi <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> dla metody.</span><span class="sxs-lookup"><span data-stu-id="f9c79-446">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#10)]
[!code-vb[Generic.SortedDictionary.IDictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#10)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-447"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-447"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-448">Pobiera zawierający wartości z <see cref="T:System.Collections.IDictionary" />. <see cref="T:System.Collections.ICollection" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-448">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-449"><see cref="T:System.Collections.ICollection" /> Zawierający wartości <see cref="T:System.Collections.IDictionary" />z.</span><span class="sxs-lookup"><span data-stu-id="f9c79-449">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.IDictionary" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-450">Wartości zwracane <xref:System.Collections.ICollection> są sortowane zgodnie <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> z właściwością i są gwarantowane w takiej samej kolejności jak odpowiednie klucze <xref:System.Collections.IDictionary.Keys%2A> w <xref:System.Collections.ICollection> zwracanym przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-450">The values in the returned <xref:System.Collections.ICollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property, and are guaranteed to be in the same order as the corresponding keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="f9c79-451">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-451">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-452">Poniższy przykład kodu pokazuje <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A> <xref:System.Collections.Generic.SortedDictionary%602>, jak używać właściwości <xref:System.Collections.IDictionary?displayProperty=nameWithType> interfejsu z, aby wyświetlić listę wartości w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-452">The following code example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Values%2A> property of the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface with a <xref:System.Collections.Generic.SortedDictionary%602>, to list the values in the dictionary.</span></span> <span data-ttu-id="f9c79-453">W przykładzie pokazano również, jak wyliczyć pary klucz/wartość w słowniku; Należy zauważyć, że moduł wyliczający <xref:System.Collections.IDictionary?displayProperty=nameWithType> dla <xref:System.Collections.DictionaryEntry> interfejsu zwraca obiekty <xref:System.Collections.Generic.KeyValuePair%602> , a nie obiekty.</span><span class="sxs-lookup"><span data-stu-id="f9c79-453">The example also shows how to enumerate the key/value pairs in the dictionary; note that the enumerator for the <xref:System.Collections.IDictionary?displayProperty=nameWithType> interface returns <xref:System.Collections.DictionaryEntry> objects rather than <xref:System.Collections.Generic.KeyValuePair%602> objects.</span></span>  
  
 <span data-ttu-id="f9c79-454">Przykład kodu jest częścią większego przykładu, łącznie z danymi wyjściowymi dostarczonymi <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> dla metody.</span><span class="sxs-lookup"><span data-stu-id="f9c79-454">The code example is part of a larger example, including output, provided for the <xref:System.Collections.Generic.SortedDictionary%602.System%23Collections%23IDictionary%23Add%2A> method.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#31)]
 [!code-vb[Generic.SortedDictionary.IDictionary#31](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#31)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#8)]
[!code-vb[Generic.SortedDictionary.IDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary.IDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#7)]  
[!code-csharp[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/CS/source.cs#32)]
[!code-vb[Generic.SortedDictionary.IDictionary#32](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary.IDictionary/VB/source.vb#32)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9c79-455">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-455">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="f9c79-456"><see cref="T:System.Collections.IEnumerator" /> , Który może być używany do iteracji kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-456">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="f9c79-457">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="f9c79-457">The `foreach` statement of the C# language (`for each` in C++, `For Each` Visual Basic) hides the complexity of enumerators.</span></span> <span data-ttu-id="f9c79-458">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="f9c79-458">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f9c79-459">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="f9c79-459">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f9c79-460">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-460">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f9c79-461">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> właściwość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="f9c79-461">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="f9c79-462">W związku z tym, należy <xref:System.Collections.IEnumerator.MoveNext%2A> wywołać metodę, aby wykonać przechodzenie modułu wyliczającego do pierwszego elementu kolekcji przed odczytem <xref:System.Collections.IEnumerator.Current%2A>wartości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-462">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f9c79-463">Właściwość zwraca ten sam element <xref:System.Collections.IEnumerator.MoveNext%2A> do momentu wywołania metody. <xref:System.Collections.IEnumerator.Current%2A></span><span class="sxs-lookup"><span data-stu-id="f9c79-463">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same element until the <xref:System.Collections.IEnumerator.MoveNext%2A> method is called.</span></span> <span data-ttu-id="f9c79-464"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="f9c79-464"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f9c79-465">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="f9c79-465">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f9c79-466">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="f9c79-466">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f9c79-467">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-467">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f9c79-468">Nie można ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji; zamiast tego należy utworzyć nowe wystąpienie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="f9c79-468">You cannot set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="f9c79-469">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="f9c79-469">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f9c79-470">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-470">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f9c79-471">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-471">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f9c79-472">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-472">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f9c79-473">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-473">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f9c79-474">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f9c79-474">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="f9c79-475">Ta metoda jest operacją O (log n), gdzie n jest liczbą elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f9c79-475">This method is an O(log n) operation where n is a number of elements in a collection.</span></span>
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.GetEnumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : 'Key *  -&gt; bool&#xA;override this.TryGetValue : 'Key *  -&gt; bool" Usage="sortedDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f9c79-476">Klucz wartości do pobrania.</span><span class="sxs-lookup"><span data-stu-id="f9c79-476">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="f9c79-477">Gdy ta metoda zwraca, wartość skojarzona z określonym kluczem, jeśli klucz zostanie znaleziony; w przeciwnym razie wartość domyślna dla typu <paramref name="value" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="f9c79-477">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter.</span></span></param>
        <summary><span data-ttu-id="f9c79-478">Pobiera wartość skojarzoną z określonym kluczem.</span><span class="sxs-lookup"><span data-stu-id="f9c79-478">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="f9c79-479"><see langword="true" />Jeśli zawiera element z określonym kluczem; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Collections.Generic.SortedDictionary`2" /></span><span class="sxs-lookup"><span data-stu-id="f9c79-479"><see langword="true" /> if the <see cref="T:System.Collections.Generic.SortedDictionary`2" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-480">Ta metoda łączy funkcjonalność <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> metody <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> i właściwości.</span><span class="sxs-lookup"><span data-stu-id="f9c79-480">This method combines the functionality of the <xref:System.Collections.Generic.SortedDictionary%602.ContainsKey%2A> method and the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property.</span></span>  
  
 <span data-ttu-id="f9c79-481">Jeśli klucz nie zostanie znaleziony `value` , parametr pobiera odpowiednią wartość domyślną dla typu `TValue`wartości, na przykład 0 (zero) dla typów całkowitych, `false` dla typów logicznych i `null` dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="f9c79-481">If the key is not found, then the `value` parameter gets the appropriate default value for the value type `TValue`; for example, 0 (zero) for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="f9c79-482">Ta metoda jest operacją o ( `n`log).</span><span class="sxs-lookup"><span data-stu-id="f9c79-482">This method is an O(log `n`) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-483">W przykładzie pokazano, jak używać <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> metody jako wydajniejszego sposobu pobierania wartości w programie, który często próbuje klucze, które nie znajdują się w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-483">The example shows how to use the <xref:System.Collections.Generic.SortedDictionary%602.TryGetValue%2A> method as a more efficient way to retrieve values in a program that frequently tries keys that are not in the dictionary.</span></span> <span data-ttu-id="f9c79-484">Z kolei przykład pokazuje również, jak <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> Właściwość (indeksator w C#) zgłasza wyjątki podczas próby pobrania nieistniejących kluczy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-484">For contrast, the example also shows how the <xref:System.Collections.Generic.SortedDictionary%602.Item%2A> property (the indexer in C#) throws exceptions when attempting to retrieve nonexistent keys.</span></span>  
  
 <span data-ttu-id="f9c79-485">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.SortedDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-485">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#5)]
 [!code-vb[Generic.SortedDictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#5)]  
[!code-csharp[Generic.SortedDictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#4)]
[!code-vb[Generic.SortedDictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c79-486"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9c79-486"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Item(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;.ValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SortedDictionary`2/ValueCollection&lt;!TKey, !TValue&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SortedDictionary`2.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As SortedDictionary(Of TKey, TValue).ValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::ValueCollection ^ Values { System::Collections::Generic::SortedDictionary&lt;TKey, TValue&gt;::ValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.ValueCollection" Usage="System.Collections.Generic.SortedDictionary&lt;'Key, 'Value&gt;.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SortedDictionary&lt;TKey,TValue&gt;+ValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c79-487">Pobiera kolekcję zawierającą wartości <see cref="T:System.Collections.Generic.SortedDictionary`2" />z.</span><span class="sxs-lookup"><span data-stu-id="f9c79-487">Gets a collection containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></summary>
        <value><span data-ttu-id="f9c79-488">A <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> zawierający wartości <see cref="T:System.Collections.Generic.SortedDictionary`2" />z.</span><span class="sxs-lookup"><span data-stu-id="f9c79-488">A <see cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" /> containing the values in the <see cref="T:System.Collections.Generic.SortedDictionary`2" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c79-489">Wartości w <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> są sortowane według <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> właściwości i są w takiej samej kolejności jak skojarzone klucze <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> w <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> zwracanym przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="f9c79-489">The values in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> are sorted according to the <xref:System.Collections.Generic.SortedDictionary%602.Comparer%2A> property, and are in the same order as the associated keys in the <xref:System.Collections.Generic.SortedDictionary%602.KeyCollection> returned by the <xref:System.Collections.Generic.SortedDictionary%602.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="f9c79-490">Zwracana <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> wartość nie jest kopią statyczną; zamiast tego <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> odwołuje się do wartości w oryginale <xref:System.Collections.Generic.SortedDictionary%602>.</span><span class="sxs-lookup"><span data-stu-id="f9c79-490">The returned <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> is not a static copy; instead, the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection> refers back to the values in the original <xref:System.Collections.Generic.SortedDictionary%602>.</span></span> <span data-ttu-id="f9c79-491">W związku z tym zmiany <xref:System.Collections.Generic.SortedDictionary%602> w dalszym ciągu zostaną odzwierciedlone w. <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection></span><span class="sxs-lookup"><span data-stu-id="f9c79-491">Therefore, changes to the <xref:System.Collections.Generic.SortedDictionary%602> continue to be reflected in the <xref:System.Collections.Generic.SortedDictionary%602.ValueCollection>.</span></span>  
  
 <span data-ttu-id="f9c79-492">Pobieranie wartości tej właściwości jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="f9c79-492">Getting the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c79-493">Ten przykład kodu pokazuje, jak wyliczyć wartości ze słownika przy użyciu <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> właściwości oraz jak wyliczyć klucze i wartości w słowniku.</span><span class="sxs-lookup"><span data-stu-id="f9c79-493">This code example shows how to enumerate the values in the dictionary using the <xref:System.Collections.Generic.SortedDictionary%602.Values%2A> property, and how to enumerate the keys and values in the dictionary.</span></span>  
  
 <span data-ttu-id="f9c79-494">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.SortedDictionary%602> klasy.</span><span class="sxs-lookup"><span data-stu-id="f9c79-494">This code example is part of a larger example provided for the <xref:System.Collections.Generic.SortedDictionary%602> class.</span></span>  
  
 [!code-csharp[Generic.SortedDictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#8)]
 [!code-vb[Generic.SortedDictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#8)]  
[!code-csharp[Generic.SortedDictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.SortedDictionary/CS/source.cs#7)]
[!code-vb[Generic.SortedDictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.SortedDictionary/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.SortedDictionary`2.ValueCollection" />
        <altmember cref="P:System.Collections.Generic.SortedDictionary`2.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>
