<Type Name="EqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.EqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3bcd4473b2ae36291a78d662cee189af19da6dc8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EqualityComparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;!T&gt;, class System.Collections.IEqualityComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.EqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EqualityComparer(Of T)&#xA;Implements IEqualityComparer, IEqualityComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class EqualityComparer abstract : System::Collections::Generic::IEqualityComparer&lt;T&gt;, System::Collections::IEqualityComparer" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEqualityComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="4d5ff-101">Typ obiektów do porównania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d5ff-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4d5ff-102">Udostępnia klasę podstawową dla implementacji <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> interfejs generyczny.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4d5ff-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d5ff-103">Dziedziczyć po tej klasie do implementacji niestandardowych z <xref:System.Collections.Generic.IEqualityComparer%601> ogólny interfejs do użytku z kolekcją klas takich jak <xref:System.Collections.Generic.Dictionary%602> klasy ogólnej lub za pomocą metod, takich jak <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IEqualityComparer%601> generic interface for use with collection classes such as the <xref:System.Collections.Generic.Dictionary%602> generic class, or with methods such as <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4d5ff-104"><xref:System.Collections.Generic.EqualityComparer%601.Default%2A> Określa, czy typ sprawdzenia właściwości `T` implementuje <xref:System.IEquatable%601?displayProperty=nameWithType> ogólny interfejs i jeśli tak, zwraca <xref:System.Collections.Generic.EqualityComparer%601> który wywołuje wykonania <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> — metoda.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-104">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> generic interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that invokes the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d5ff-105">W przeciwnym razie zwraca <xref:System.Collections.Generic.EqualityComparer%601>, zgodnie z `T`.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-105">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601>, as provided by `T`.</span></span>  
  
 <span data-ttu-id="4d5ff-106">Zaleca się, że pochodzi od <xref:System.Collections.Generic.EqualityComparer%601> klasy zamiast wykonania <xref:System.Collections.Generic.IEqualityComparer%601> interfejsu, ponieważ <xref:System.Collections.Generic.EqualityComparer%601> testów dla równości przy użyciu klasy <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> zamiast metody <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-106">We recommend that you derive from the <xref:System.Collections.Generic.EqualityComparer%601> class instead of implementing the <xref:System.Collections.Generic.IEqualityComparer%601> interface, because the <xref:System.Collections.Generic.EqualityComparer%601> class tests for equality using the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method instead of the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4d5ff-107">Jest to zgodne z `Contains`, `IndexOf`, `LastIndexOf`, i `Remove` metody <xref:System.Collections.Generic.Dictionary%602> klasy i innych kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-107">This is consistent with the `Contains`, `IndexOf`, `LastIndexOf`, and `Remove` methods of the <xref:System.Collections.Generic.Dictionary%602> class and other generic collections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d5ff-108">Poniższy przykład tworzy kolekcję słownika obiektów typu `Box` z porównania równości.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-108">The following example creates a dictionary collection of objects of type `Box` with an equality comparer.</span></span> <span data-ttu-id="4d5ff-109">Dwa pola są traktowane jako równe, jeśli ich wymiary są takie same.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-109">Two boxes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="4d5ff-110">Następnie dodaje pola do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-110">It then adds the boxes to the collection.</span></span>  
  
 <span data-ttu-id="4d5ff-111">Słownik zostaje odtworzone w porównania równości, który definiuje równości w inny sposób: dwa pola są traktowane jako równe, jeśli ich woluminy są takie same.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-111">The dictionary is recreated with an equality comparer that defines equality in a different way: Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-csharp[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EqualityComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EqualityComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4d5ff-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.EqualityComparer`1" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-112">Initializes a new instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.EqualityComparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.EqualityComparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As EqualityComparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::EqualityComparer&lt;T&gt; ^ Default { System::Collections::Generic::EqualityComparer&lt;T&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.EqualityComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4d5ff-113">Zwraca domyślny porównania równości dla typu określone przez argument rodzajowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-113">Returns a default equality comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4d5ff-114">Domyślne wystąpienie elementu <see cref="T:System.Collections.Generic.EqualityComparer`1" /> klasy dla typu <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-114">The default instance of the <see cref="T:System.Collections.Generic.EqualityComparer`1" /> class for type <typeparamref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d5ff-115"><xref:System.Collections.Generic.EqualityComparer%601.Default%2A> Określa, czy typ sprawdzenia właściwości `T` implementuje <xref:System.IEquatable%601?displayProperty=nameWithType> interfejs, a jeśli tak, zwraca <xref:System.Collections.Generic.EqualityComparer%601> używającą tę implementację.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-115">The <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> property checks whether type `T` implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface and, if so, returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses that implementation.</span></span> <span data-ttu-id="4d5ff-116">W przeciwnym razie zwraca <xref:System.Collections.Generic.EqualityComparer%601> używającą zastąpień z <xref:System.Object.Equals%2A?displayProperty=nameWithType> i <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> dostarczonych przez `T`.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-116">Otherwise, it returns an <xref:System.Collections.Generic.EqualityComparer%601> that uses the overrides of <xref:System.Object.Equals%2A?displayProperty=nameWithType> and <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> provided by `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4d5ff-117">Poniższy przykład tworzy dwie kolekcje słownika typu `Box`.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-117">The following example creates two dictionary collections of type `Box`.</span></span> <span data-ttu-id="4d5ff-118">Zarówno słowniki są tworzone za pomocą konstruktora, który przyjmuje <xref:System.Collections.Generic.EqualityComparer%601> jako parametr.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-118">Both dictionaries are created with the constructor that takes an <xref:System.Collections.Generic.EqualityComparer%601> as a parameter.</span></span>  
  
 <span data-ttu-id="4d5ff-119">Ustalenie równości klucze słownikowe `boxesByDim` słownika używa porównania równości (`BoxEqDimensions`) używającej wdrożenia <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> metoda `Box` klasy.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-119">To determine the equality of dictionary keys, the `boxesByDim` dictionary uses an equality comparer (`BoxEqDimensions`) that uses the implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method in the `Box` class.</span></span> <span data-ttu-id="4d5ff-120">Dwa pola są traktowane jako równe, jeśli ich wymiary są takie same.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-120">Two boxes are considered equal if their dimensions are the same.</span></span>  
  
 <span data-ttu-id="4d5ff-121">`boxesByVol` Słownika używa porównania równości (`BoxEqVolume`) definiujący równości wg woluminu.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-121">The `boxesByVol` dictionary uses an equality comparer (`BoxEqVolume`) that defines equality by volume.</span></span> <span data-ttu-id="4d5ff-122">Dwa pola są traktowane jako równe, jeśli ich woluminy są takie same.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-122">Two boxes are considered equal if their volumes are the same.</span></span>  
  
 [!code-cpp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cpp/program.cpp#1)]
 [!code-csharp[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.EqualityComparer.Default#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.equalitycomparer.default/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEqualityComparer`1" />
        <altmember cref="T:System.IEquatable`1" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public abstract bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4d5ff-123">Pierwszy obiekt, który ma zostać porównany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-123">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4d5ff-124">Drugi obiekt, który będzie porównywany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-124">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d5ff-125">W przypadku przesłonięcia w klasie pochodnej, określa, czy dwa obiekty typu <typeparamref name="T" /> są takie same.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-125">When overridden in a derived class, determines whether two objects of type <typeparamref name="T" /> are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4d5ff-126">
            <see langword="true" /> Podane obiekty są równe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-126">
              <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d5ff-127"><xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> Metoda jest zwrotnej, symetrycznego i przechodnie.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-127">The <xref:System.Collections.Generic.EqualityComparer%601.Equals%2A> method is reflexive, symmetric, and transitive.</span></span> <span data-ttu-id="4d5ff-128">Oznacza to, zwraca `true` Jeśli użyty do porównania obiektu z samym sobą; `true` dla dwóch obiektów `x` i `y` przypadku `true` dla `y` i `x`; i `true` dla dwóch obiektów `x` i `z` przypadku `true` dla `x` i `y` , a także `true` dla `y` i `z`.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-128">That is, it returns `true` if used to compare an object with itself; `true` for two objects `x` and `y` if it is `true` for `y` and `x`; and `true` for two objects `x` and `z` if it is `true` for `x` and `y` and also `true` for `y` and `z`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4d5ff-129">Implementacje są wymagane do zapewnienia, że jeśli <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> metoda zwraca <see langword="true" /> dla dwóch obiektów <c>x</c> i <c>y</c>, następnie wartość zwrócona przez <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> metoda <c>x</c> musi być równa wartości zwracane dla <c>y</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d5ff-129">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public abstract int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4d5ff-130">Obiekt, dla którego można pobrać wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-130">The object for which to get a hash code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d5ff-131">W przypadku przesłonięcia w klasie pochodnej służy jako funkcji wyznaczania wartości skrótu dla określonego obiektu do tworzenia skrótów algorytmów i struktury danych, takich jak tablicy skrótów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-131">When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4d5ff-132">Wartość skrótu dla określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-132">A hash code for the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4d5ff-133">Typ <paramref name="obj" /> jest typem referencyjnym i <paramref name="obj" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-133">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4d5ff-134">Implementacje są wymagane do zapewnienia, że jeśli <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> metoda zwraca <see langword="true" /> dla dwóch obiektów <c>x</c> i <c>y</c>, następnie wartość zwrócona przez <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> metoda <c>x</c> musi być równa wartości zwracane dla <c>y</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="4d5ff-134">Implementations are required to ensure that if the <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> method returns <see langword="true" /> for two objects <c>x</c> and <c>y</c>, then the value returned by the <see cref="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)" /> method for <c>x</c> must equal the value returned for <c>y</c>.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.Equals">
      <MemberSignature Language="C#" Value="bool IEqualityComparer.Equals (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IEqualityComparer.Equals(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (x As Object, y As Object) As Boolean Implements IEqualityComparer.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IEqualityComparer.Equals(System::Object ^ x, System::Object ^ y) = System::Collections::IEqualityComparer::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="4d5ff-135">Pierwszy obiekt, który ma zostać porównany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-135">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="4d5ff-136">Drugi obiekt, który będzie porównywany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-136">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d5ff-137">Określa, czy podane obiekty są takie same.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-137">Determines whether the specified objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4d5ff-138">
            <see langword="true" /> Podane obiekty są równe; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-138">
              <see langword="true" /> if the specified objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d5ff-139">Ta metoda jest otoki dla <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> metody, więc `obj` musi być rzutowane na typ określony przez argument rodzajowy `T` bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-139">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="4d5ff-140">Jeśli nie można rzutować na `T`, <xref:System.ArgumentException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-140">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="4d5ff-141">Porównywanie `null` jest dozwolone, a nie generuje wyjątku.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-141">Comparing `null` is allowed and does not generate an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4d5ff-142">
            <paramref name="x" /> lub <paramref name="y" /> jest typu, który nie może być rzutowana na typ <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-142">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEqualityComparer.GetHashCode">
      <MemberSignature Language="C#" Value="int IEqualityComparer.GetHashCode (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IEqualityComparer.GetHashCode(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (obj As Object) As Integer Implements IEqualityComparer.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IEqualityComparer.GetHashCode(System::Object ^ obj) = System::Collections::IEqualityComparer::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEqualityComparer.GetHashCode(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="4d5ff-143">
            <see cref="T:System.Object" /> Dla której ma zostać zwrócone skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-143">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4d5ff-144">Zwraca wartość skrótu dla określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-144">Returns a hash code for the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4d5ff-145">Wartość skrótu dla określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-145">A hash code for the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d5ff-146">Ta metoda jest otoki dla <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> metody, więc `obj` musi być typu, która może być rzutowana na typ określony przez argument typu ogólnego `T` bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="4d5ff-146">This method is a wrapper for the <xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29> method, so `obj` must be a type that can be cast to the type specified by the generic type argument `T` of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4d5ff-147">Typ <paramref name="obj" /> jest typem referencyjnym i <paramref name="obj" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-147">The type of <paramref name="obj" /> is a reference type and <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="4d5ff-148">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-148">-or-</span>
          </span>
          <span data-ttu-id="4d5ff-149">
            <paramref name="obj" /> jest typu, który nie może być rzutowana na typ <typeparamref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4d5ff-149">
              <paramref name="obj" /> is of a type that cannot be cast to type <typeparamref name="T" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>