<Type Name="List&lt;T&gt;" FullName="System.Collections.Generic.List&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7f0f273a278f342094cd7219e6187d9518950fb" /><Meta Name="ms.sourcegitcommit" Value="08fc3691deb7adaf0dfd751b9d9d0b23a3d3a7b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/09/2019" /><Meta Name="ms.locfileid" Value="68901946" /></Metadata><TypeSignature Language="C#" Value="public class List&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.Generic.IReadOnlyList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit List`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.List`1" />
  <TypeSignature Language="VB.NET" Value="Public Class List(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), IReadOnlyCollection(Of T), IReadOnlyList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class List : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::Generic::IReadOnlyList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type List&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface IList&#xA;    interface IReadOnlyList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="2194e-101">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-101">The type of elements in the list.</span></span></typeparam>
    <summary><span data-ttu-id="2194e-102">Reprezentuje silnie wpisaną listę obiektów, do których można uzyskać dostęp za pomocą indeksu.</span><span class="sxs-lookup"><span data-stu-id="2194e-102">Represents a strongly typed list of objects that can be accessed by index.</span></span> <span data-ttu-id="2194e-103">Dostarcza metody do wyszukiwania, sortowania i manipulowania listami.</span><span class="sxs-lookup"><span data-stu-id="2194e-103">Provides methods to search, sort, and manipulate lists.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-104">Klasa jest ogólnym odpowiednikiem <xref:System.Collections.ArrayList>klasy. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-104">The <xref:System.Collections.Generic.List%601> class is the generic equivalent of the <xref:System.Collections.ArrayList> class.</span></span> <span data-ttu-id="2194e-105">Implementuje <xref:System.Collections.Generic.IList%601> interfejs ogólny przy użyciu tablicy, której rozmiar jest dynamicznie zwiększany w miarę potrzeb.</span><span class="sxs-lookup"><span data-stu-id="2194e-105">It implements the <xref:System.Collections.Generic.IList%601> generic interface by using an array whose size is dynamically increased as required.</span></span>  
  
 <span data-ttu-id="2194e-106">Możesz dodać elementy do a <xref:System.Collections.Generic.List%601> za <xref:System.Collections.Generic.List%601.Add%2A> pomocą metod lub <xref:System.Collections.Generic.List%601.AddRange%2A> .</span><span class="sxs-lookup"><span data-stu-id="2194e-106">You can add items to a <xref:System.Collections.Generic.List%601> by using the <xref:System.Collections.Generic.List%601.Add%2A> or <xref:System.Collections.Generic.List%601.AddRange%2A> methods.</span></span>  
  
 <span data-ttu-id="2194e-107"><xref:System.Collections.Generic.List%601> Klasa używa metody porównującej równość i porównującej kolejności.</span><span class="sxs-lookup"><span data-stu-id="2194e-107">The <xref:System.Collections.Generic.List%601> class uses both an equality comparer and an ordering comparer.</span></span>  
  
-   <span data-ttu-id="2194e-108">Metody takie jak <xref:System.Collections.Generic.List%601.Contains%2A> <xref:System.Collections.Generic.List%601.IndexOf%2A> ,<xref:System.Collections.Generic.List%601.LastIndexOf%2A>, i<xref:System.Collections.Generic.Dictionary%602.Remove%2A> wykorzystują funkcję porównującą równość dla elementów listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-108">Methods such as <xref:System.Collections.Generic.List%601.Contains%2A>, <xref:System.Collections.Generic.List%601.IndexOf%2A>, <xref:System.Collections.Generic.List%601.LastIndexOf%2A>, and <xref:System.Collections.Generic.Dictionary%602.Remove%2A> use an equality comparer for the list elements.</span></span> <span data-ttu-id="2194e-109">Domyślna funkcja porównująca równość dla `T` typu jest określana w następujący sposób.</span><span class="sxs-lookup"><span data-stu-id="2194e-109">The default equality comparer for type `T` is determined as follows.</span></span> <span data-ttu-id="2194e-110">Jeśli typ `T` <xref:System.IEquatable%601.Equals%28%600%29> implementuje interfejs <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>generyczny, wówczas funkcja porównująca równość jest metodą tego interfejsu; w przeciwnym razie domyślna funkcja porównująca równość to. <xref:System.IEquatable%601></span><span class="sxs-lookup"><span data-stu-id="2194e-110">If type `T` implements the <xref:System.IEquatable%601> generic interface, then the equality comparer is the <xref:System.IEquatable%601.Equals%28%600%29> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="2194e-111">Metody takie jak <xref:System.Collections.Generic.List%601.BinarySearch%2A> i <xref:System.Collections.Generic.List%601.Sort%2A> wykorzystują funkcję porównującą porządkowanie dla elementów listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-111">Methods such as <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> use an ordering comparer for the list elements.</span></span> <span data-ttu-id="2194e-112">Domyślna funkcja porównująca dla `T` typu jest określana w następujący sposób.</span><span class="sxs-lookup"><span data-stu-id="2194e-112">The default comparer for type `T` is determined as follows.</span></span>  <span data-ttu-id="2194e-113">Jeśli typ `T` <xref:System.IComparable%601.CompareTo%28%600%29> `T` implementuje interfejs <xref:System.IComparable> generyczny, domyślną metodą porównującą jest metoda tego interfejsu; w przeciwnym razie, jeśli typ implementuje interfejs nieogólny, wówczas domyślnym <xref:System.IComparable%601> funkcja porównująca <xref:System.IComparable.CompareTo%28System.Object%29> jest metodą tego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="2194e-113">If type `T` implements the <xref:System.IComparable%601> generic interface, then the default comparer is the <xref:System.IComparable%601.CompareTo%28%600%29> method of that interface; otherwise, if type `T` implements the nongeneric <xref:System.IComparable> interface, then the default comparer is the <xref:System.IComparable.CompareTo%28System.Object%29> method of that interface.</span></span> <span data-ttu-id="2194e-114">Jeśli typ `T` nie implementuje interfejsu, wówczas nie ma domyślnego modułu porównującego, a obiekt porównujący lub porównywania musi być jawnie podany.</span><span class="sxs-lookup"><span data-stu-id="2194e-114">If type `T` implements neither interface, then there is no default comparer, and a comparer or comparison delegate must be provided explicitly.</span></span>  
  
 <span data-ttu-id="2194e-115">Sortowanie <xref:System.Collections.Generic.List%601> nie jest gwarantowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-115">The <xref:System.Collections.Generic.List%601> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="2194e-116">Należy posortować <xref:System.Collections.Generic.List%601> przed wykonaniem operacji (takich jak <xref:System.Collections.Generic.List%601.BinarySearch%2A>), które wymagają <xref:System.Collections.Generic.List%601> posortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-116">You must sort the <xref:System.Collections.Generic.List%601> before performing operations (such as <xref:System.Collections.Generic.List%601.BinarySearch%2A>) that require the <xref:System.Collections.Generic.List%601> to be sorted.</span></span>  
  
 <span data-ttu-id="2194e-117">Dostęp do elementów w tej kolekcji można uzyskać przy użyciu indeksu liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="2194e-117">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="2194e-118">Indeksy w tej kolekcji są oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="2194e-118">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="2194e-119">**Tylko .NET Framework:** W przypadku bardzo <xref:System.Collections.Generic.List%601> dużych obiektów można zwiększyć maksymalną pojemność do 2 000 000 000 elementów w systemie 64-bitowym, `enabled` ustawiając atrybut [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) elementu konfiguracji na `true` w środowisku wykonawczym.</span><span class="sxs-lookup"><span data-stu-id="2194e-119">**.NET Framework only:** For very large <xref:System.Collections.Generic.List%601> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="2194e-120"><xref:System.Collections.Generic.List%601>akceptuje `null` jako prawidłową wartość dla typów odwołań i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-120"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2194e-121">W przypadku niezmiennej wersji <xref:System.Collections.Generic.List%601> klasy, zobacz <xref:System.Collections.Immutable.ImmutableList%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-121">For an immutable version of the <xref:System.Collections.Generic.List%601> class, see <xref:System.Collections.Immutable.ImmutableList%601>.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="2194e-122">Zagadnienia dotyczące wydajności</span><span class="sxs-lookup"><span data-stu-id="2194e-122">Performance Considerations</span></span>  
 <span data-ttu-id="2194e-123">Przy podejmowaniu decyzji o tym, <xref:System.Collections.Generic.List%601> czy <xref:System.Collections.ArrayList> użyć klasy lub, obie <xref:System.Collections.Generic.List%601> funkcje mają podobną funkcjonalność, pamiętaj, że Klasa jest w większości przypadków lepsza i jest bezpieczna.</span><span class="sxs-lookup"><span data-stu-id="2194e-123">In deciding whether to use the <xref:System.Collections.Generic.List%601> or <xref:System.Collections.ArrayList> class, both of which have similar functionality, remember that the <xref:System.Collections.Generic.List%601> class performs better in most cases and is type safe.</span></span> <span data-ttu-id="2194e-124">Jeśli typ odwołania jest używany dla typu `T` <xref:System.Collections.Generic.List%601> klasy, zachowanie obu klas jest identyczne.</span><span class="sxs-lookup"><span data-stu-id="2194e-124">If a reference type is used for type `T` of the <xref:System.Collections.Generic.List%601> class, the behavior of the two classes is identical.</span></span> <span data-ttu-id="2194e-125">Jeśli jednak typ wartości jest używany dla typu `T`, należy wziąć pod uwagę problemy z implementacją i opakowaniem.</span><span class="sxs-lookup"><span data-stu-id="2194e-125">However, if a value type is used for type `T`, you need to consider implementation and boxing issues.</span></span>  
  
 <span data-ttu-id="2194e-126">Jeśli typ wartości jest używany dla typu `T`, kompilator generuje implementację <xref:System.Collections.Generic.List%601> klasy przeznaczonej dla tego typu wartości.</span><span class="sxs-lookup"><span data-stu-id="2194e-126">If a value type is used for type `T`, the compiler generates an implementation of the <xref:System.Collections.Generic.List%601> class specifically for that value type.</span></span> <span data-ttu-id="2194e-127">Oznacza to, że element <xref:System.Collections.Generic.List%601> listy obiektu nie musi być opakowany, zanim będzie można użyć elementu i po około 500 elementach listy zostaną utworzone zapisane elementy listy bez opakowania, są większe niż pamięć użyta do wygenerowania implementacji klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-127">That means a list element of a <xref:System.Collections.Generic.List%601> object does not have to be boxed before the element can be used, and after about 500 list elements are created the memory saved not boxing list elements is greater than the memory used to generate the class implementation.</span></span>  
  
 <span data-ttu-id="2194e-128">Upewnij się, że określony typ wartości używany `T` dla typu <xref:System.IEquatable%601> implementuje interfejs generyczny.</span><span class="sxs-lookup"><span data-stu-id="2194e-128">Make certain the value type used for type `T` implements the <xref:System.IEquatable%601> generic interface.</span></span> <span data-ttu-id="2194e-129">Jeśli nie, metody takie jak <xref:System.Collections.Generic.List%601.Contains%2A> muszą <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> wywoływać metodę, która powoduje, że element listy, którego to dotyczy.</span><span class="sxs-lookup"><span data-stu-id="2194e-129">If not, methods such as <xref:System.Collections.Generic.List%601.Contains%2A> must call the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, which boxes the affected list element.</span></span> <span data-ttu-id="2194e-130">Jeśli <xref:System.IComparable> typ wartości implementuje interfejs i posiadasz kod źródłowy, należy również <xref:System.IComparable%601> zaimplementować <xref:System.Collections.Generic.List%601.BinarySearch%2A> ogólny interfejs, aby zapobiec metodom i <xref:System.Collections.Generic.List%601.Sort%2A> z listy zapakowywanie.</span><span class="sxs-lookup"><span data-stu-id="2194e-130">If the value type implements the <xref:System.IComparable> interface and you own the source code, also implement the <xref:System.IComparable%601> generic interface to prevent the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods from boxing list elements.</span></span> <span data-ttu-id="2194e-131">Jeśli nie jesteś własnym kodem źródłowym, Przekaż <xref:System.Collections.Generic.IComparer%601> obiekt <xref:System.Collections.Generic.List%601.BinarySearch%2A> do metody i <xref:System.Collections.Generic.List%601.Sort%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-131">If you do not own the source code, pass an <xref:System.Collections.Generic.IComparer%601> object to the <xref:System.Collections.Generic.List%601.BinarySearch%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> methods</span></span>  
  
 <span data-ttu-id="2194e-132">Zaletą jest użycie implementacji <xref:System.Collections.Generic.List%601> klasy specyficznej dla typu zamiast <xref:System.Collections.ArrayList> używania klasy lub pisania silnie jednoznacznie określonej kolekcji otoki.</span><span class="sxs-lookup"><span data-stu-id="2194e-132">It is to your advantage to use the type-specific implementation of the <xref:System.Collections.Generic.List%601> class instead of using the <xref:System.Collections.ArrayList> class or writing a strongly typed wrapper collection yourself.</span></span> <span data-ttu-id="2194e-133">Przyczyną jest to, że Twoja implementacja musi wykonać już działania .NET Framework, a środowisko uruchomieniowe języka wspólnego może współdzielić kod i metadane języka pośredniego firmy Microsoft, których implementacja nie może.</span><span class="sxs-lookup"><span data-stu-id="2194e-133">The reason is your implementation must do what the .NET Framework does for you already, and the common language runtime can share Microsoft intermediate language code and metadata, which your implementation cannot.</span></span>  
  
## <a name="f-considerations"></a><span data-ttu-id="2194e-134">F#Zagadnienia dotyczące</span><span class="sxs-lookup"><span data-stu-id="2194e-134">F# Considerations</span></span>  
 <span data-ttu-id="2194e-135">Klasa jest często używana w F# kodzie. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-135">The <xref:System.Collections.Generic.List%601> class is used infrequently in F# code.</span></span> <span data-ttu-id="2194e-136">Zamiast tego [listy](https://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), które są niezmienne, pojedynczo połączone listy, są zwykle preferowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-136">Instead, [Lists](https://msdn.microsoft.com/library/83102799-f251-42e1-93ef-64232e8c5b1d), which are immutable, singly-linked lists, are typically preferred.</span></span> <span data-ttu-id="2194e-137">F# Lista zawiera uporządkowaną, niemodyfikowalną serię wartości i jest obsługiwana do programowania w stylu funkcjonalnym.</span><span class="sxs-lookup"><span data-stu-id="2194e-137">An F# List provides an ordered, immutable series of values, and is supported for use in functional-style development.</span></span> <span data-ttu-id="2194e-138">Gdy jest używany F#z, <xref:System.Collections.Generic.List%601> Klasa jest zwykle określana przez [> ResizeArray —\<](https://msdn.microsoft.com/library/ee353447.aspx) typu skrótu, aby uniknąć konfliktów nazw z F# listami</span><span class="sxs-lookup"><span data-stu-id="2194e-138">When used from F#, the <xref:System.Collections.Generic.List%601> class is typically referred to by the [ResizeArray\<'T>](https://msdn.microsoft.com/library/ee353447.aspx) type abbreviation to avoid naming conflicts with F# Lists</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="2194e-139">Poniższy przykład pokazuje, jak dodawać, usuwać i wstawiać prosty obiekt biznesowy w programie <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-139">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="2194e-140">Poniższy przykład ilustruje kilka właściwości i metod <xref:System.Collections.Generic.List%601> klasy generycznej typu String.</span><span class="sxs-lookup"><span data-stu-id="2194e-140">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class of type string.</span></span> <span data-ttu-id="2194e-141">(Na przykład <xref:System.Collections.Generic.List%601> typu złożonego, <xref:System.Collections.Generic.List%601.Contains%2A> Zobacz metodę).</span><span class="sxs-lookup"><span data-stu-id="2194e-141">(For an example of a <xref:System.Collections.Generic.List%601> of complex types, see the <xref:System.Collections.Generic.List%601.Contains%2A> method.)</span></span>  
  
 <span data-ttu-id="2194e-142">Konstruktor bez parametrów służy do tworzenia listy ciągów z pojemnością domyślną.</span><span class="sxs-lookup"><span data-stu-id="2194e-142">The parameterless constructor is used to create a list of strings with the default capacity.</span></span> <span data-ttu-id="2194e-143">Właściwość jest wyświetlana, a <xref:System.Collections.Generic.List%601.Add%2A> następnie metoda jest używana do dodawania kilku elementów. <xref:System.Collections.Generic.List%601.Capacity%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-143">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="2194e-144">Elementy są wyświetlane, a <xref:System.Collections.Generic.List%601.Capacity%2A> właściwość jest wyświetlana ponownie wraz <xref:System.Collections.Generic.List%601.Count%2A> z właściwością, aby pokazać, że pojemność została zwiększona w miarę potrzeby.</span><span class="sxs-lookup"><span data-stu-id="2194e-144">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="2194e-145">Metoda jest używana do testowania obecności elementu na liście <xref:System.Collections.Generic.List%601.Insert%2A> , metoda jest używana do wstawienia nowego elementu w środku listy, a zawartość listy zostanie ponownie wyświetlona. <xref:System.Collections.Generic.List%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-145">The <xref:System.Collections.Generic.List%601.Contains%2A> method is used to test for the presence of an item in the list, the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert a new item in the middle of the list, and the contents of the list are displayed again.</span></span>  
  
 <span data-ttu-id="2194e-146">Właściwość Default <xref:System.Collections.Generic.List%601.Item%2A> (indeksator in C#) służy do pobierania elementu, <xref:System.Collections.Generic.List%601.Remove%2A> Metoda jest używana do usuwania pierwszego wystąpienia zduplikowanego elementu, który został dodany wcześniej, a zawartość jest ponownie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="2194e-146">The default <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) is used to retrieve an item, the <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item added earlier, and the contents are displayed again.</span></span> <span data-ttu-id="2194e-147"><xref:System.Collections.Generic.List%601.Remove%2A> Metoda zawsze usuwa pierwsze wystąpienie, które napotka.</span><span class="sxs-lookup"><span data-stu-id="2194e-147">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 <span data-ttu-id="2194e-148">Metoda jest używana w celu zredukowania pojemności do liczby, <xref:System.Collections.Generic.List%601.Capacity%2A> a są wyświetlane właściwości i <xref:System.Collections.Generic.List%601.Count%2A>. <xref:System.Collections.Generic.List%601.TrimExcess%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-148">The <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="2194e-149">Jeśli niewykorzystana pojemność była mniejsza niż 10 procent całkowitej pojemności, nie można zmienić rozmiaru listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-149">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span>  
  
 <span data-ttu-id="2194e-150">Na koniec <xref:System.Collections.Generic.List%601.Capacity%2A> <xref:System.Collections.Generic.List%601.Count%2A> Metoda służy do usuwania wszystkich elementów z listy, a są wyświetlane właściwości i. <xref:System.Collections.Generic.List%601.Clear%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-150">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="2194e-151">Publiczne statyczne (<see langword="Shared" /> w Visual Basic) członkowie tego typu są bezpieczne wątkowo.</span><span class="sxs-lookup"><span data-stu-id="2194e-151">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="2194e-152">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="2194e-152">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="2194e-153">Istnieje możliwość bezpiecznego wykonywania wielu operacji odczytu na <see cref="T:System.Collections.Generic.List`1" />, ale mogą wystąpić problemy, jeśli kolekcja jest modyfikowana podczas odczytywania.</span><span class="sxs-lookup"><span data-stu-id="2194e-153">It is safe to perform multiple read operations on a <see cref="T:System.Collections.Generic.List`1" />, but issues can occur if the collection is modified while it's being read.</span></span> <span data-ttu-id="2194e-154">Aby zapewnić bezpieczeństwo wątku, Zablokuj kolekcję podczas operacji odczytu lub zapisu.</span><span class="sxs-lookup"><span data-stu-id="2194e-154">To ensure thread safety, lock the collection during a read or write operation.</span></span> <span data-ttu-id="2194e-155">Aby umożliwić dostęp do kolekcji wielu wątkom do odczytu i zapisu, musisz zaimplementować własną synchronizację.</span><span class="sxs-lookup"><span data-stu-id="2194e-155">To enable a collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span> <span data-ttu-id="2194e-156">W przypadku kolekcji z wbudowaną synchronizacją Zobacz klasy w <see cref="N:System.Collections.Concurrent" /> przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="2194e-156">For collections with built-in synchronization, see the classes in the <see cref="N:System.Collections.Concurrent" /> namespace.</span></span> <span data-ttu-id="2194e-157">Aby zapoznać się z wewnętrzną wielowątkową alternatywą, <see cref="T:System.Collections.Immutable.ImmutableList`1" /> zapoznaj się z klasą.</span><span class="sxs-lookup"><span data-stu-id="2194e-157">For an inherently thread-safe alternative, see the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Immutable.ImmutableList`1" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-158">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-158">Performing Culture-Insensitive String Operations in Collections</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="2194e-159">Iteratory (C# i Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2194e-159">Iterators (C# and Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-160">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.List`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-160">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-161">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.List`1" /> klasy, która jest pusta i ma domyślną pojemność początkową.</span><span class="sxs-lookup"><span data-stu-id="2194e-161">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-162">Pojemność programu to liczba <xref:System.Collections.Generic.List%601> elementów <xref:System.Collections.Generic.List%601> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="2194e-162">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="2194e-163">Gdy elementy są dodawane do <xref:System.Collections.Generic.List%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="2194e-163">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="2194e-164">Jeśli rozmiar kolekcji można oszacować przy użyciu <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> konstruktora i określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów <xref:System.Collections.Generic.List%601>do.</span><span class="sxs-lookup"><span data-stu-id="2194e-164">If the size of the collection can be estimated, using the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor and specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-165">Wydajność można zmniejszyć przez wywołanie <xref:System.Collections.Generic.List%601.TrimExcess%2A> metody lub przez <xref:System.Collections.Generic.List%601.Capacity%2A> ustawienie właściwości jawnie.</span><span class="sxs-lookup"><span data-stu-id="2194e-165">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="2194e-166">Zmniejszenie pojemności powoduje ponowną alokację pamięci i skopiowanie wszystkich elementów w <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-166">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-167">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="2194e-167">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="2194e-168">Poniższy przykład demonstruje Konstruktor <xref:System.Collections.Generic.List%601> bez parametrów klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="2194e-168">The following example demonstrates the parameterless constructor of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="2194e-169">Konstruktor bez parametrów tworzy listę z pojemnością domyślną, jak pokazano przez wyświetlanie <xref:System.Collections.Generic.List%601.Capacity%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2194e-169">The parameterless constructor creates a list with the default capacity, as demonstrated by displaying the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
 <span data-ttu-id="2194e-170">Przykład dodaje, wstawia i usuwa elementy, pokazując, jak zmiany pojemności są używane w ramach tych metod.</span><span class="sxs-lookup"><span data-stu-id="2194e-170">The example adds, inserts, and removes items, showing how the capacity changes as these methods are used.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="2194e-171">Kolekcja, której elementy są kopiowane do nowej listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-171">The collection whose elements are copied to the new list.</span></span></param>
        <summary><span data-ttu-id="2194e-172">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.List`1" /> klasy zawierające elementy skopiowane z określonej kolekcji i ma wystarczającą pojemność, aby pomieścić liczbę skopiowanych elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-172">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-173">Elementy są kopiowane <xref:System.Collections.Generic.List%601> do tabeli w tej samej kolejności, w jakiej są odczytywane przez moduł wyliczający kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-173">The elements are copied onto the <xref:System.Collections.Generic.List%601> in the same order they are read by the enumerator of the collection.</span></span>  
  
 <span data-ttu-id="2194e-174">Ten konstruktor jest operacją O (*n*), gdzie *n* jest liczbą elementów w `collection`.</span><span class="sxs-lookup"><span data-stu-id="2194e-174">This constructor is an O(*n*) operation, where *n* is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-175">Poniższy przykład demonstruje <xref:System.Collections.Generic.List%601.%23ctor%2A> konstruktora i różne metody <xref:System.Collections.Generic.List%601> klasy, które działają na zakresach.</span><span class="sxs-lookup"><span data-stu-id="2194e-175">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%2A> constructor and various methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="2194e-176">Tablica ciągów jest tworzona i przenoszona do konstruktora, wypełniając listę elementami tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-176">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="2194e-177">Zostanie <xref:System.Collections.Generic.List%601.Capacity%2A> wyświetlona właściwość, aby pokazać, że początkowa pojemność jest dokładnie to, co jest wymagane do przechowywania elementów wejściowych.</span><span class="sxs-lookup"><span data-stu-id="2194e-177">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is then displayed, to show that the initial capacity is exactly what is required to hold the input elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-178"><paramref name="collection" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-178"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; List(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.List&lt;'T&gt; : int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="new System.Collections.Generic.List&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="2194e-179">Liczba elementów, które mogą być początkowo przechowywane przez nową listę.</span><span class="sxs-lookup"><span data-stu-id="2194e-179">The number of elements that the new list can initially store.</span></span></param>
        <summary><span data-ttu-id="2194e-180">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.List`1" /> klasy, która jest pusta i ma określoną pojemność początkową.</span><span class="sxs-lookup"><span data-stu-id="2194e-180">Initializes a new instance of the <see cref="T:System.Collections.Generic.List`1" /> class that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-181">Pojemność programu to liczba <xref:System.Collections.Generic.List%601> elementów <xref:System.Collections.Generic.List%601> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="2194e-181">The capacity of a <xref:System.Collections.Generic.List%601> is the number of elements that the <xref:System.Collections.Generic.List%601> can hold.</span></span> <span data-ttu-id="2194e-182">Gdy elementy są dodawane do <xref:System.Collections.Generic.List%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="2194e-182">As elements are added to a <xref:System.Collections.Generic.List%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="2194e-183">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-183">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-184">Wydajność można zmniejszyć przez wywołanie <xref:System.Collections.Generic.List%601.TrimExcess%2A> metody lub przez <xref:System.Collections.Generic.List%601.Capacity%2A> ustawienie właściwości jawnie.</span><span class="sxs-lookup"><span data-stu-id="2194e-184">The capacity can be decreased by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="2194e-185">Zmniejszenie pojemności powoduje ponowną alokację pamięci i skopiowanie wszystkich elementów w <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-185">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-186">Ten konstruktor jest operacją O (*n*), gdzie *n* jest `capacity`.</span><span class="sxs-lookup"><span data-stu-id="2194e-186">This constructor is an O(*n*) operation, where *n* is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-187">Poniższy przykład demonstruje <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2194e-187">The following example demonstrates the <xref:System.Collections.Generic.List%601.%23ctor%28System.Int32%29> constructor.</span></span> <span data-ttu-id="2194e-188"><xref:System.Collections.Generic.List%601> Tworzony jest ciąg o pojemności 4, ponieważ końcowy rozmiar listy jest znany jako dokładnie 4.</span><span class="sxs-lookup"><span data-stu-id="2194e-188">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="2194e-189">Lista jest wypełniana czterema ciągami, a kopia tylko do odczytu jest tworzona przy użyciu <xref:System.Collections.Generic.List%601.AsReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-189">The list is populated with four strings, and a read-only copy is created by using the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-190"><paramref name="capacity" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-190"><paramref name="capacity" /> is less than 0.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T item);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="list.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-191">Obiekt, który ma zostać dodany na końcu <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-191">The object to be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-192">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-192">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="2194e-193">Dodaje obiekt na końcu <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-193">Adds an object to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-194"><xref:System.Collections.Generic.List%601>akceptuje `null` jako prawidłową wartość dla typów odwołań i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-194"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2194e-195">Jeśli <xref:System.Collections.Generic.List%601.Count%2A> już jest <xref:System.Collections.Generic.List%601.Capacity%2A>równa <xref:System.Collections.Generic.List%601> , Pojemność programu jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-195">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="2194e-196">Jeśli <xref:System.Collections.Generic.List%601.Count%2A> jest mniejsza niż <xref:System.Collections.Generic.List%601.Capacity%2A>, ta metoda jest operacją o (1).</span><span class="sxs-lookup"><span data-stu-id="2194e-196">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="2194e-197">Jeśli pojemność musi zostać zwiększona w celu uwzględnienia nowego elementu, ta metoda będzie operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-197">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="2194e-198">Poniższy przykład pokazuje, jak dodawać, usuwać i wstawiać prosty obiekt biznesowy w programie <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-198">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="2194e-199">Poniższy przykład ilustruje kilka właściwości i metod <xref:System.Collections.Generic.List%601> klasy generycznej, w <xref:System.Collections.Generic.List%601.Add%2A> tym metodę.</span><span class="sxs-lookup"><span data-stu-id="2194e-199">The following example demonstrates several properties and methods of the <xref:System.Collections.Generic.List%601> generic class, including the <xref:System.Collections.Generic.List%601.Add%2A> method.</span></span> <span data-ttu-id="2194e-200">Konstruktor bez parametrów służy do tworzenia listy ciągów z pojemnością 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-200">The parameterless constructor is used to create a list of strings with a capacity of 0.</span></span> <span data-ttu-id="2194e-201">Właściwość jest wyświetlana, a <xref:System.Collections.Generic.List%601.Add%2A> następnie metoda jest używana do dodawania kilku elementów. <xref:System.Collections.Generic.List%601.Capacity%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-201">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed, and then the <xref:System.Collections.Generic.List%601.Add%2A> method is used to add several items.</span></span> <span data-ttu-id="2194e-202">Elementy są wyświetlane, a <xref:System.Collections.Generic.List%601.Capacity%2A> właściwość jest wyświetlana ponownie wraz <xref:System.Collections.Generic.List%601.Count%2A> z właściwością, aby pokazać, że pojemność została zwiększona w miarę potrzeby.</span><span class="sxs-lookup"><span data-stu-id="2194e-202">The items are listed, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="2194e-203">Inne właściwości i metody są używane do wyszukiwania, wstawiania i usuwania elementów z listy, a wreszcie Wyczyść listę.</span><span class="sxs-lookup"><span data-stu-id="2194e-203">Other properties and methods are used to search for, insert, and remove elements from the list, and finally to clear the list.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.AddRange : seq&lt;'T&gt; -&gt; unit" Usage="list.AddRange collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="2194e-204">Kolekcja, której elementy należy dodać na końcu <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-204">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-205">Sama kolekcja nie może być <see langword="null" />, ale może zawierać elementy, które są <see langword="null" />, jeśli typ <paramref name="T" /> jest typem referencyjnym.</span><span class="sxs-lookup"><span data-stu-id="2194e-205">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <paramref name="T" /> is a reference type.</span></span></param>
        <summary><span data-ttu-id="2194e-206">Dodaje elementy określonej kolekcji na końcu <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-206">Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-207">Kolejność elementów w kolekcji jest zachowywana w <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-207">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-208">Jeśli nowy <xref:System.Collections.Generic.List%601.Count%2A> (bieżący <xref:System.Collections.Generic.List%601.Count%2A> i rozmiar kolekcji) będzie większy niż <xref:System.Collections.Generic.List%601.Capacity%2A>, pojemność <xref:System.Collections.Generic.List%601> jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej w celu uwzględnienia nowych elementów, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-208">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="2194e-209">Jeśli może obsłużyć nowe <xref:System.Collections.Generic.List%601.Capacity%2A>elementy bez zwiększania, ta metoda jest operacją o (*n*), gdzie *n* to liczba elementów do dodania. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-209">If the <xref:System.Collections.Generic.List%601> can accommodate the new elements without increasing the <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(*n*) operation, where *n* is the number of elements to be added.</span></span> <span data-ttu-id="2194e-210">Jeśli pojemność musi zostać zwiększona w celu uwzględnienia nowych elementów, ta metoda jest operacją o (*n* + *m*), gdzie *n* jest liczbą elementów do dodania, a *m* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-210">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(*n* + *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-211">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.AddRange%2A> metodę i różne inne metody <xref:System.Collections.Generic.List%601> klasy, które działają na zakresach.</span><span class="sxs-lookup"><span data-stu-id="2194e-211">The following example demonstrates the <xref:System.Collections.Generic.List%601.AddRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="2194e-212">Tablica ciągów jest tworzona i przenoszona do konstruktora, wypełniając listę elementami tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-212">An array of strings is created and passed to the constructor, populating the list with the elements of the array.</span></span> <span data-ttu-id="2194e-213"><xref:System.Collections.Generic.List%601.AddRange%2A> Metoda jest wywoływana, z listą jako argumentem.</span><span class="sxs-lookup"><span data-stu-id="2194e-213">The <xref:System.Collections.Generic.List%601.AddRange%2A> method is called, with the list as its argument.</span></span> <span data-ttu-id="2194e-214">Wynika to z tego, że bieżące elementy listy są dodawane na końcu listy, duplikując wszystkie elementy.</span><span class="sxs-lookup"><span data-stu-id="2194e-214">The result is that the current elements of the list are added to the end of the list, duplicating all the elements.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-215"><paramref name="collection" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-215"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AsReadOnly">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!T&gt; AsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.AsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function AsReadOnly () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly();" />
      <MemberSignature Language="F#" Value="member this.AsReadOnly : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="list.AsReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-216">Zwraca otokę tylko <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> do odczytu dla bieżącej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-216">Returns a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the current collection.</span></span></summary>
        <returns><span data-ttu-id="2194e-217">Obiekt, który działa jako otoka tylko do odczytu dla bieżącego <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-217">An object that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-218">Aby zapobiec wszelkim modyfikacjom <xref:System.Collections.Generic.List%601> obiektu, Uwidocznij go tylko za pomocą tej otoki.</span><span class="sxs-lookup"><span data-stu-id="2194e-218">To prevent any modifications to the <xref:System.Collections.Generic.List%601> object, expose it only through this wrapper.</span></span> <span data-ttu-id="2194e-219"><xref:System.Collections.ObjectModel.ReadOnlyCollection%601> Obiekt nie ujawnia metod, które modyfikują kolekcję.</span><span class="sxs-lookup"><span data-stu-id="2194e-219">A  <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object does not expose methods that modify the collection.</span></span> <span data-ttu-id="2194e-220">Jeśli jednak zmiany są wprowadzane do obiektu bazowego <xref:System.Collections.Generic.List%601> , Kolekcja tylko do odczytu odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="2194e-220">However, if changes are made to the underlying <xref:System.Collections.Generic.List%601> object, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2194e-221">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-221">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-222">Poniższy przykład demonstruje <xref:System.Collections.Generic.List%601.AsReadOnly%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="2194e-222">The following example demonstrates the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method.</span></span> <span data-ttu-id="2194e-223"><xref:System.Collections.Generic.List%601> Tworzony jest ciąg o pojemności 4, ponieważ końcowy rozmiar listy jest znany jako dokładnie 4.</span><span class="sxs-lookup"><span data-stu-id="2194e-223">A <xref:System.Collections.Generic.List%601> of strings with a capacity of 4 is created, because the ultimate size of the list is known to be exactly 4.</span></span> <span data-ttu-id="2194e-224">Lista jest wypełniana czterema ciągami, a <xref:System.Collections.Generic.List%601.AsReadOnly%2A> Metoda jest używana do uzyskiwania ogólnej implementacji interfejsu w <xref:System.Collections.Generic.IList%601> trybie tylko do odczytu, która otacza oryginalną listę.</span><span class="sxs-lookup"><span data-stu-id="2194e-224">The list is populated with four strings, and the <xref:System.Collections.Generic.List%601.AsReadOnly%2A> method is used to get a read-only <xref:System.Collections.Generic.IList%601> generic interface implementation that wraps the original list.</span></span>  
  
 <span data-ttu-id="2194e-225">Element oryginalnej listy jest ustawiony na wartość "Coelophysis" przy użyciu <xref:System.Collections.Generic.List%601.Item%2A> właściwości (indeksator w programie C#), a zawartość listy tylko do odczytu jest ponownie wyświetlana, aby pokazać, że jest tylko otoką dla oryginalnej listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-225">An element of the original list is set to "Coelophysis" using the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#), and the contents of the read-only list are displayed again to demonstrate that it is just a wrapper for the original list.</span></span>  
  
 [!code-cpp[List\`1_AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_AsReadOnly/cpp/source.cpp#1)]
 [!code-csharp[List\`1_AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_AsReadOnly/cs/source.cs#1)]
 [!code-vb[List\`1_AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_AsReadOnly/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-226">Używa algorytmu wyszukiwania binarnego do lokalizowania określonego elementu w posortowanym <see cref="T:System.Collections.Generic.List`1" /> lub części.</span><span class="sxs-lookup"><span data-stu-id="2194e-226">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T -&gt; int" Usage="list.BinarySearch item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-227">Obiekt, który ma zostać zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="2194e-227">The object to locate.</span></span> <span data-ttu-id="2194e-228">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-228">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="2194e-229">Przeszukuje całe posortowane <see cref="T:System.Collections.Generic.List`1" /> dla elementu przy użyciu domyślnej funkcji porównującej i zwraca indeks (liczony od zera) elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-229">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the default comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="2194e-230">Indeks <paramref name="item" /> (liczony od zera) w sortowaniu <see cref="T:System.Collections.Generic.List`1" />, jeśli <paramref name="item" /> został znaleziony; w przeciwnym razie liczba ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="item" /> lub, jeśli nie ma większego elementu, to uzupełnienie <see cref="P:System.Collections.Generic.List`1.Count" />bitowe.</span><span class="sxs-lookup"><span data-stu-id="2194e-230">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-231">Ta metoda używa domyślnej wartości porównującej <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> dla typu `T` w celu określenia kolejności elementów listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-231">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="2194e-232">Właściwość sprawdza, czy typ `T` implementuje <xref:System.IComparable%601> interfejs generyczny i używa tej implementacji, jeśli jest dostępny. <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2194e-232">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="2194e-233">Jeśli nie, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> Sprawdź, czy `T` typ implementuje <xref:System.IComparable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="2194e-233">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="2194e-234">Jeśli typ `T` nie implementuje żadnego interfejsu, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-234">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-235">Obiekt <xref:System.Collections.Generic.List%601> musi być już posortowany zgodnie z implementacją programu porównującego; w przeciwnym razie wynik jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="2194e-235">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="2194e-236">Porównywanie `null` z dowolnym typem referencyjnym jest dozwolone i nie generuje wyjątku podczas korzystania z <xref:System.IComparable%601> interfejsu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="2194e-236">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="2194e-237">Podczas sortowania `null` jest uznawana za mniej niż każdy inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="2194e-237">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="2194e-238"><xref:System.Collections.Generic.List%601> Jeśli zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jeden z wystąpień i może zwrócić dowolne wystąpienie, niekoniecznie pierwsze.</span><span class="sxs-lookup"><span data-stu-id="2194e-238">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="2194e-239"><xref:System.Collections.Generic.List%601> Jeśli nie zawiera określonej wartości, metoda zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="2194e-239">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="2194e-240">Można zastosować operację dopełnienia bitowego (~) do tej ujemnej liczby całkowitej, aby uzyskać indeks pierwszego elementu, który jest większy niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-240">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="2194e-241">Podczas wstawiania wartości do <xref:System.Collections.Generic.List%601>, ten indeks powinien być używany jako punkt wstawiania, aby zachować porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-241">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="2194e-242">Ta metoda jest operacją O (log *n*), gdzie *n* jest liczbą elementów w zakresie.</span><span class="sxs-lookup"><span data-stu-id="2194e-242">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-243">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Sort> Przeciążenie metody <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> i Przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-243">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="2194e-244"><xref:System.Collections.Generic.List%601> Ciąg jest tworzony i wypełniany czterema ciągami, w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="2194e-244">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="2194e-245">Lista zostanie wyświetlona, posortowana i wyświetlona ponownie.</span><span class="sxs-lookup"><span data-stu-id="2194e-245">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="2194e-246">Przeciążenie metody jest następnie używane do wyszukiwania dwóch ciągów, które nie znajdują się na liście, <xref:System.Collections.Generic.List%601.Insert%2A> a metoda jest używana do ich wstawiania. <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29></span><span class="sxs-lookup"><span data-stu-id="2194e-246">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="2194e-247">Wartość <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> zwracana metody jest ujemna w każdym przypadku, ponieważ ciągi nie znajdują się na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-247">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="2194e-248">Przejęcie bitowego uzupełniania (operator ~ w C# i C++Wizualizacja `Xor` ,-1 w Visual Basic) tej liczby ujemnej daje indeks pierwszego elementu na liście, który jest większy niż ciąg wyszukiwania i wstawiania w tej lokalizacji zachowuje porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-248">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="2194e-249">Drugi ciąg wyszukiwania jest większy niż dowolny element na liście, więc pozycja wstawiania znajduje się na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-249">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2194e-250">Domyślna funkcja porównująca <see cref="P:System.Collections.Generic.Comparer`1.Default" /> nie może znaleźć implementacji <see cref="T:System.IComparable`1" /> interfejsu generycznego lub <see cref="T:System.IComparable" /> interfejsu dla typu <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-250">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-251">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-251">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(!T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-252">Obiekt, który ma zostać zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="2194e-252">The object to locate.</span></span> <span data-ttu-id="2194e-253">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-253">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="comparer"><span data-ttu-id="2194e-254"><see cref="T:System.Collections.Generic.IComparer`1" /> Implementacja do użycia podczas porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-254">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span></span>  
  
<span data-ttu-id="2194e-255">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-255">-or-</span></span> 
 <span data-ttu-id="2194e-256"><see langword="null" />Aby użyć domyślnej programu porównującego <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-256"><see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="2194e-257">Przeszukuje całe posortowane <see cref="T:System.Collections.Generic.List`1" /> dla elementu przy użyciu określonej funkcji porównującej i zwraca indeks (liczony od zera) elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-257">Searches the entire sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="2194e-258">Indeks <paramref name="item" /> (liczony od zera) w sortowaniu <see cref="T:System.Collections.Generic.List`1" />, jeśli <paramref name="item" /> został znaleziony; w przeciwnym razie liczba ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="item" /> lub, jeśli nie ma większego elementu, to uzupełnienie <see cref="P:System.Collections.Generic.List`1.Count" />bitowe.</span><span class="sxs-lookup"><span data-stu-id="2194e-258">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-259">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-259">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="2194e-260">Można na przykład użyć <xref:System.Collections.CaseInsensitiveComparer> wystąpienia jako modułu porównującego do wykonywania wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="2194e-260">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="2194e-261">Jeśli `comparer` jest podany, elementy <xref:System.Collections.Generic.List%601> są porównywane z określoną wartością przy użyciu określonej <xref:System.Collections.Generic.IComparer%601> implementacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-261">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="2194e-262">Jeśli `comparer` jest `null`, domyślna funkcja porównująca <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> sprawdza, `T` czy typ <xref:System.IComparable%601> implementuje interfejs generyczny i używa tej implementacji, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="2194e-262">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="2194e-263">Jeśli nie, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> Sprawdź, czy `T` typ implementuje <xref:System.IComparable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="2194e-263">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="2194e-264">Jeśli typ `T` nie implementuje żadnego interfejsu, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-264">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-265">Obiekt <xref:System.Collections.Generic.List%601> musi być już posortowany zgodnie z implementacją programu porównującego; w przeciwnym razie wynik jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="2194e-265">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="2194e-266">Porównywanie `null` z dowolnym typem referencyjnym jest dozwolone i nie generuje wyjątku podczas korzystania z <xref:System.IComparable%601> interfejsu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="2194e-266">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="2194e-267">Podczas sortowania `null` jest uznawana za mniej niż każdy inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="2194e-267">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="2194e-268"><xref:System.Collections.Generic.List%601> Jeśli zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jeden z wystąpień i może zwrócić dowolne wystąpienie, niekoniecznie pierwsze.</span><span class="sxs-lookup"><span data-stu-id="2194e-268">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="2194e-269"><xref:System.Collections.Generic.List%601> Jeśli nie zawiera określonej wartości, metoda zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="2194e-269">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="2194e-270">Można zastosować operację dopełnienia bitowego (~) do tej ujemnej liczby całkowitej, aby uzyskać indeks pierwszego elementu, który jest większy niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-270">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="2194e-271">Podczas wstawiania wartości do <xref:System.Collections.Generic.List%601>, ten indeks powinien być używany jako punkt wstawiania, aby zachować porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-271">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="2194e-272">Ta metoda jest operacją O (log *n*), gdzie *n* jest liczbą elementów w zakresie.</span><span class="sxs-lookup"><span data-stu-id="2194e-272">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-273">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> Przeciążenie metody <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> i Przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-273">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="2194e-274">W przykładzie zdefiniowano alternatywną funkcję porównującą dla ciągów o nazwie DinoCompare `IComparer<string>` ,`IComparer(Of String)` która implementuje interfejs `IComparer<String^>` ogólny ( C++w Visual Basic w języku Visual).</span><span class="sxs-lookup"><span data-stu-id="2194e-274">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="2194e-275">Moduł porównujący działa w następujący sposób: Najpierw comparands są testowane dla `null`, a odwołanie o wartości null jest traktowane jako mniejsze niż wartość null.</span><span class="sxs-lookup"><span data-stu-id="2194e-275">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="2194e-276">W drugim, długości ciągu są porównywane, a dłuższy ciąg jest uznawany za większy.</span><span class="sxs-lookup"><span data-stu-id="2194e-276">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="2194e-277">Trzecia, jeśli długości są równe, używane jest zwykłe Porównywanie ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-277">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="2194e-278"><xref:System.Collections.Generic.List%601> Ciąg jest tworzony i wypełniany czterema ciągami, w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="2194e-278">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="2194e-279">Zostanie wyświetlona lista, posortowana przy użyciu alternatywnej funkcji porównującej i ponownie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="2194e-279">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="2194e-280">Przeciążenie <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> metody jest następnie używane do wyszukiwania kilku ciągów, które nie znajdują się na liście, przy użyciu alternatywnego porównania.</span><span class="sxs-lookup"><span data-stu-id="2194e-280">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="2194e-281"><xref:System.Collections.Generic.List%601.Insert%2A> Metoda jest używana do wstawiania ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-281">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="2194e-282">Te dwie metody znajdują się w funkcji o `SearchAndInsert`nazwie, wraz z kodem, aby przyjmować użycie bitowe (operator ~ w C# i C++Wizualizacja `Xor` ,-1 w Visual Basic) liczb ujemnych zwracanych <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> przez i używać go jako indeks służący do wstawiania nowego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-282">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2194e-283"><paramref name="comparer" />jest <see langword="null" />, a domyślna funkcja porównująca <see cref="P:System.Collections.Generic.Comparer`1.Default" /> nie może <see cref="T:System.IComparable`1" /> znaleźć implementacji interfejsu generycznego lub <see cref="T:System.IComparable" /> interfejsu dla typu <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-283"><paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-284">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-284">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public int BinarySearch (int index, int count, T item, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BinarySearch(int32 index, int32 count, !T item, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function BinarySearch (index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int BinarySearch(int index, int count, T item, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.BinarySearch : int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="list.BinarySearch (index, count, item, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-285">Początkowy indeks (liczony od zera) zakresu do przeszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-285">The zero-based starting index of the range to search.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-286">Długość zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-286">The length of the range to search.</span></span></param>
        <param name="item"><span data-ttu-id="2194e-287">Obiekt, który ma zostać zlokalizowany.</span><span class="sxs-lookup"><span data-stu-id="2194e-287">The object to locate.</span></span> <span data-ttu-id="2194e-288">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-288">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="comparer"><span data-ttu-id="2194e-289">Implementacja do użycia podczas porównywania elementów lub <see langword="null" /> używania domyślnego programu porównującego <see cref="P:System.Collections.Generic.Comparer`1.Default" />. <see cref="T:System.Collections.Generic.IComparer`1" /></span><span class="sxs-lookup"><span data-stu-id="2194e-289">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="2194e-290">Przeszukuje zakres elementów w posortowaniu <see cref="T:System.Collections.Generic.List`1" /> dla elementu przy użyciu określonej funkcji porównującej i zwraca indeks (liczony od zera) elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-290">Searches a range of elements in the sorted <see cref="T:System.Collections.Generic.List`1" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="2194e-291">Indeks <paramref name="item" /> (liczony od zera) w sortowaniu <see cref="T:System.Collections.Generic.List`1" />, jeśli <paramref name="item" /> został znaleziony; w przeciwnym razie liczba ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="item" /> lub, jeśli nie ma większego elementu, to uzupełnienie <see cref="P:System.Collections.Generic.List`1.Count" />bitowe.</span><span class="sxs-lookup"><span data-stu-id="2194e-291">The zero-based index of <paramref name="item" /> in the sorted <see cref="T:System.Collections.Generic.List`1" />, if <paramref name="item" /> is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="item" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-292">Moduł porównujący dostosowuje sposób porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-292">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="2194e-293">Można na przykład użyć <xref:System.Collections.CaseInsensitiveComparer> wystąpienia jako modułu porównującego do wykonywania wyszukiwania ciągów bez uwzględniania wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="2194e-293">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="2194e-294">Jeśli `comparer` jest podany, elementy <xref:System.Collections.Generic.List%601> są porównywane z określoną wartością przy użyciu określonej <xref:System.Collections.Generic.IComparer%601> implementacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-294">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="2194e-295">Jeśli `comparer` jest `null`, domyślna funkcja porównująca <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> sprawdza, `T` czy typ <xref:System.IComparable%601> implementuje interfejs generyczny i używa tej implementacji, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="2194e-295">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="2194e-296">Jeśli nie, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> Sprawdź, czy `T` typ implementuje <xref:System.IComparable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="2194e-296">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="2194e-297">Jeśli typ `T` nie implementuje żadnego interfejsu, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-297">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-298">Obiekt <xref:System.Collections.Generic.List%601> musi być już posortowany zgodnie z implementacją programu porównującego; w przeciwnym razie wynik jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="2194e-298">The <xref:System.Collections.Generic.List%601> must already be sorted according to the comparer implementation; otherwise, the result is incorrect.</span></span>  
  
 <span data-ttu-id="2194e-299">Porównywanie `null` z dowolnym typem referencyjnym jest dozwolone i nie generuje wyjątku podczas korzystania z <xref:System.IComparable%601> interfejsu ogólnego.</span><span class="sxs-lookup"><span data-stu-id="2194e-299">Comparing `null` with any reference type is allowed and does not generate an exception when using the <xref:System.IComparable%601> generic interface.</span></span> <span data-ttu-id="2194e-300">Podczas sortowania `null` jest uznawana za mniej niż każdy inny obiekt.</span><span class="sxs-lookup"><span data-stu-id="2194e-300">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="2194e-301"><xref:System.Collections.Generic.List%601> Jeśli zawiera więcej niż jeden element o tej samej wartości, metoda zwraca tylko jeden z wystąpień i może zwrócić dowolne wystąpienie, niekoniecznie pierwsze.</span><span class="sxs-lookup"><span data-stu-id="2194e-301">If the <xref:System.Collections.Generic.List%601> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="2194e-302"><xref:System.Collections.Generic.List%601> Jeśli nie zawiera określonej wartości, metoda zwraca ujemną liczbę całkowitą.</span><span class="sxs-lookup"><span data-stu-id="2194e-302">If the <xref:System.Collections.Generic.List%601> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="2194e-303">Można zastosować operację dopełnienia bitowego (~) do tej ujemnej liczby całkowitej, aby uzyskać indeks pierwszego elementu, który jest większy niż wartość wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-303">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="2194e-304">Podczas wstawiania wartości do <xref:System.Collections.Generic.List%601>, ten indeks powinien być używany jako punkt wstawiania, aby zachować porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-304">When inserting the value into the <xref:System.Collections.Generic.List%601>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="2194e-305">Ta metoda jest operacją O (log *n*), gdzie *n* jest liczbą elementów w zakresie.</span><span class="sxs-lookup"><span data-stu-id="2194e-305">This method is an O(log *n*) operation, where *n* is the number of elements in the range.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-306">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> Przeciążenie metody <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> i Przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-306">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="2194e-307">W przykładzie zdefiniowano alternatywną funkcję porównującą dla ciągów o nazwie DinoCompare `IComparer<string>` ,`IComparer(Of String)` która implementuje interfejs `IComparer<String^>` ogólny ( C++w Visual Basic w języku Visual).</span><span class="sxs-lookup"><span data-stu-id="2194e-307">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="2194e-308">Moduł porównujący działa w następujący sposób: Najpierw comparands są testowane dla `null`, a odwołanie o wartości null jest traktowane jako mniejsze niż wartość null.</span><span class="sxs-lookup"><span data-stu-id="2194e-308">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="2194e-309">W drugim, długości ciągu są porównywane, a dłuższy ciąg jest uznawany za większy.</span><span class="sxs-lookup"><span data-stu-id="2194e-309">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="2194e-310">Trzecia, jeśli długości są równe, używane jest zwykłe Porównywanie ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-310">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="2194e-311"><xref:System.Collections.Generic.List%601> Jest tworzony i wypełniany przy użyciu nazw pięciu herbivorous dinozaurów i trzech dinozaurów carnivorous.</span><span class="sxs-lookup"><span data-stu-id="2194e-311">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="2194e-312">W ramach każdej z tych dwóch grup nazwy nie są w żadnym konkretnym porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-312">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="2194e-313">Zostanie wyświetlona lista, zakres herbivores jest sortowany przy użyciu alternatywnej funkcji porównującej, a lista zostanie ponownie wyświetlona.</span><span class="sxs-lookup"><span data-stu-id="2194e-313">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="2194e-314">Przeciążenie <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> metody jest następnie używane do przeszukiwania tylko zakresu herbivores dla "Brachiosaurus".</span><span class="sxs-lookup"><span data-stu-id="2194e-314">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="2194e-315">Nie odnaleziono C# ciągu, a dopełnienie bitowe (operator ~ w i wizualizacja C++, `Xor` -1 w Visual Basic) liczby ujemnej zwracanej przez <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> metodę jest używany jako indeks do wstawiania nowego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-315">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-316"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-316"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-317">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-317">-or-</span></span> 
 <span data-ttu-id="2194e-318"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-318"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-319"><paramref name="index" />i <paramref name="count" /> nie należy zauważyć prawidłowego zakresu <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-319"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2194e-320"><paramref name="comparer" />jest <see langword="null" />, a domyślna funkcja porównująca <see cref="P:System.Collections.Generic.Comparer`1.Default" /> nie może <see cref="T:System.IComparable`1" /> znaleźć implementacji interfejsu generycznego lub <see cref="T:System.IComparable" /> interfejsu dla typu <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-320"><paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-321">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-321">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2194e-322">Pobiera lub ustawia łączną liczbę elementów, które może zawierać wewnętrzna struktura danych bez zmiany rozmiarów.</span><span class="sxs-lookup"><span data-stu-id="2194e-322">Gets or sets the total number of elements the internal data structure can hold without resizing.</span></span></summary>
        <value><span data-ttu-id="2194e-323">Jest wymagana liczba elementów, które <see cref="T:System.Collections.Generic.List`1" /> mogą znajdować się przed zmianą rozmiarów.</span><span class="sxs-lookup"><span data-stu-id="2194e-323">The number of elements that the <see cref="T:System.Collections.Generic.List`1" /> can contain before resizing is required.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-324"><xref:System.Collections.Generic.List%601.Capacity%2A>to liczba elementów, które <xref:System.Collections.Generic.List%601> mogą być przechowywane przed zmianą rozmiarów, a <xref:System.Collections.Generic.List%601.Count%2A> to liczba elementów <xref:System.Collections.Generic.List%601>, które faktycznie znajdują się w.</span><span class="sxs-lookup"><span data-stu-id="2194e-324"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required, whereas <xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-325"><xref:System.Collections.Generic.List%601.Capacity%2A>jest zawsze większa lub równa <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-325"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="2194e-326">Jeśli <xref:System.Collections.Generic.List%601.Count%2A> program <xref:System.Collections.Generic.List%601.Capacity%2A> przekracza podczas dodawania elementów, wydajność jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodaniem nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-326">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="2194e-327">Jeśli pojemność jest znacznie większa niż liczba i chcesz zmniejszyć ilość pamięci używanej przez <xref:System.Collections.Generic.List%601>program, można zmniejszyć pojemność przez <xref:System.Collections.Generic.List%601.TrimExcess%2A> wywołanie <xref:System.Collections.Generic.List%601.Capacity%2A> metody lub przez ustawienie właściwości jawnie na niższą wartość.</span><span class="sxs-lookup"><span data-stu-id="2194e-327">If the capacity is significantly larger than the count and you want to reduce the memory used by the <xref:System.Collections.Generic.List%601>,  you can  decrease capacity by calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or by setting the <xref:System.Collections.Generic.List%601.Capacity%2A> property explicitly to a lower value.</span></span> <span data-ttu-id="2194e-328">Gdy wartość <xref:System.Collections.Generic.List%601.Capacity%2A> jest ustawiona jawnie, tablica wewnętrzna również jest przyalokowana ponownie w celu uwzględnienia określonej pojemności, a wszystkie elementy są kopiowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-328">When the value of <xref:System.Collections.Generic.List%601.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity, and all the elements are copied.</span></span>  
  
 <span data-ttu-id="2194e-329">Pobieranie wartości tej właściwości jest operacją O (1); ustawienie właściwości jest operacją O (*n*), gdzie *n* to nowa pojemność.</span><span class="sxs-lookup"><span data-stu-id="2194e-329">Retrieving the value of this property is an O(1) operation; setting the property is an O(*n*) operation, where *n* is the new capacity.</span></span>  
  
   
   
## Examples  
 
 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="2194e-330">Poniższy przykład ilustruje sposób sprawdzania pojemności i liczby <xref:System.Collections.Generic.List%601> , która zawiera prosty obiekt biznesowy, i ilustruje <xref:System.Collections.Generic.List%601.TrimExcess%2A> użycie metody w celu usunięcia dodatkowej pojemności.</span><span class="sxs-lookup"><span data-stu-id="2194e-330">The following example demonstrates how to check the capacity and count of a <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="2194e-331">Poniższy przykład przedstawia <xref:System.Collections.Generic.List%601.Capacity%2A> właściwość w kilku punktach w okresie istnienia listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-331">The following example shows the <xref:System.Collections.Generic.List%601.Capacity%2A> property at several points in the life of a list.</span></span> <span data-ttu-id="2194e-332">Konstruktor bez parametrów jest używany do tworzenia listy ciągów o pojemności 0, a <xref:System.Collections.Generic.List%601.Capacity%2A> właściwość jest wyświetlana, aby to zademonstrować.</span><span class="sxs-lookup"><span data-stu-id="2194e-332">The parameterless constructor is used to create a list of strings with a capacity of 0, and the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed to demonstrate this.</span></span> <span data-ttu-id="2194e-333">Po zastosowaniu <xref:System.Collections.Generic.List%601.Capacity%2A>metodydo dodania kilku elementów elementy są wyświetlane, a następnie właściwość jest wyświetlana <xref:System.Collections.Generic.List%601.Count%2A> ponownie wraz z właściwością, aby pokazać, że pojemność została zwiększona w miarę potrzeby. <xref:System.Collections.Generic.List%601.Add%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-333">After the <xref:System.Collections.Generic.List%601.Add%2A> method has been used to add several items, the items are listed, and then the <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again, along with the <xref:System.Collections.Generic.List%601.Count%2A> property, to show that the capacity has been increased as needed.</span></span>  
  
 <span data-ttu-id="2194e-334">Właściwość zostanie wyświetlona ponownie <xref:System.Collections.Generic.List%601.TrimExcess%2A> po użyciu metody w celu zmniejszenia wydajności w celu dopasowania jej do liczby. <xref:System.Collections.Generic.List%601.Capacity%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-334">The <xref:System.Collections.Generic.List%601.Capacity%2A> property is displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count.</span></span> <span data-ttu-id="2194e-335">Na koniec <xref:System.Collections.Generic.List%601.Capacity%2A> <xref:System.Collections.Generic.List%601.Count%2A> Metoda służy do usuwania wszystkich elementów z listy, a właściwości i są wyświetlane ponownie. <xref:System.Collections.Generic.List%601.Clear%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-335">Finally, the <xref:System.Collections.Generic.List%601.Clear%2A> method is used to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed again.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-336"><see cref="P:System.Collections.Generic.List`1.Capacity" />jest ustawiona na wartość, która jest mniejsza niż <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-336"><see cref="P:System.Collections.Generic.List`1.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="2194e-337">Za mało dostępnej pamięci w systemie.</span><span class="sxs-lookup"><span data-stu-id="2194e-337">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="list.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-338">Usuwa wszystkie elementy z <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-338">Removes all elements from the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-339"><xref:System.Collections.Generic.List%601.Count%2A>jest ustawiona na 0, a odwołania do innych obiektów z elementów kolekcji również są wydane.</span><span class="sxs-lookup"><span data-stu-id="2194e-339"><xref:System.Collections.Generic.List%601.Count%2A> is set to 0, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="2194e-340"><xref:System.Collections.Generic.List%601.Capacity%2A>pozostaje niezmieniony.</span><span class="sxs-lookup"><span data-stu-id="2194e-340"><xref:System.Collections.Generic.List%601.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="2194e-341">Aby zresetować pojemność <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.List%601.TrimExcess%2A> Wywołaj metodę lub ustaw <xref:System.Collections.Generic.List%601.Capacity%2A> właściwość bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="2194e-341">To reset the capacity of the <xref:System.Collections.Generic.List%601>, call the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method or set the <xref:System.Collections.Generic.List%601.Capacity%2A> property directly.</span></span> <span data-ttu-id="2194e-342">Zmniejszenie pojemności powoduje ponowną alokację pamięci i skopiowanie wszystkich elementów w <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-342">Decreasing the capacity reallocates memory and copies all the elements in the <xref:System.Collections.Generic.List%601>.</span></span> <span data-ttu-id="2194e-343">Przycinanie pustego <xref:System.Collections.Generic.List%601> zestawu ustawia pojemność <xref:System.Collections.Generic.List%601> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="2194e-343">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="2194e-344">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-344">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note.md)]

 <span data-ttu-id="2194e-345">Poniższy przykład demonstruje <xref:System.Collections.Generic.List%601.Clear%2A> metodę i różne inne właściwości i metody <xref:System.Collections.Generic.List%601> klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="2194e-345">The following example demonstrates the <xref:System.Collections.Generic.List%601.Clear%2A> method and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="2194e-346">Metoda jest używana na końcu programu, aby usunąć wszystkie elementy z listy, <xref:System.Collections.Generic.List%601.Capacity%2A> a następnie wyświetlić właściwości i <xref:System.Collections.Generic.List%601.Count%2A>. <xref:System.Collections.Generic.List%601.Clear%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-346">The <xref:System.Collections.Generic.List%601.Clear%2A> method is used at the end of the program, to remove all items from the list, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are then displayed.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.TrimExcess" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="list.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-347">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-347">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-348">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-348">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="2194e-349">Określa, <see cref="T:System.Collections.Generic.List`1" />czy element znajduje się w.</span><span class="sxs-lookup"><span data-stu-id="2194e-349">Determines whether an element is in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-350"><see langword="true" />Jeśli <paramref name="item" /> znajduje się <see cref="T:System.Collections.Generic.List`1" />w; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="2194e-350"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.List`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-351">Ta metoda określa równość przy użyciu domyślnej funkcji porównującej równość, jak zdefiniowano w implementacji <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> obiektu metody dla `T` (typ wartości na liście).</span><span class="sxs-lookup"><span data-stu-id="2194e-351">This method determines equality by using the default equality comparer, as defined by the object's implementation of the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method for `T` (the type of values in the list).</span></span>  
  
 <span data-ttu-id="2194e-352">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-352">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-353">W poniższym <xref:System.Collections.Generic.List%601.Contains%2A> przykładzie pokazano metody <xref:System.Collections.Generic.List%601> i <xref:System.Collections.Generic.List%601.Exists%2A> , które zawierają prosty obiekt biznesowy, który implementuje <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-353">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="2194e-354">Poniższy przykład zawiera listę obiektów złożonych typu `Cube`.</span><span class="sxs-lookup"><span data-stu-id="2194e-354">The following example contains a list of complex objects of type `Cube`.</span></span> <span data-ttu-id="2194e-355">`Cube` Klasa<xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> implementuje metodę, aby dwa moduły były uważane za równe, jeśli ich wymiary są takie same.</span><span class="sxs-lookup"><span data-stu-id="2194e-355">The `Cube` class implements the <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> method so that two cubes are considered equal if their dimensions are the same.</span></span> <span data-ttu-id="2194e-356">W tym przykładzie <xref:System.Collections.Generic.List%601.Contains%2A> Metoda zwraca `true`, ponieważ moduł, który ma określone wymiary, znajduje się już w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-356">In this example, the <xref:System.Collections.Generic.List%601.Contains%2A> method returns `true`, because a cube that has the specified dimensions is already in the collection.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.contains/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.contains/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-357">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-357">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TOutput&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;TOutput&gt; ConvertAll&lt;TOutput&gt; (Converter&lt;T,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!!TOutput&gt; ConvertAll&lt;TOutput&gt;(class System.Converter`2&lt;!T, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertAll(Of TOutput) (converter As Converter(Of T, TOutput)) As List(Of TOutput)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOutput&gt;&#xA; System::Collections::Generic::List&lt;TOutput&gt; ^ ConvertAll(Converter&lt;T, TOutput&gt; ^ converter);" />
      <MemberSignature Language="F#" Value="member this.ConvertAll : Converter&lt;'T, 'Output&gt; -&gt; System.Collections.Generic.List&lt;'Output&gt;" Usage="list.ConvertAll converter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TOutput&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="converter" Type="System.Converter&lt;T,TOutput&gt;" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="TOutput"><span data-ttu-id="2194e-358">Typ elementów tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="2194e-358">The type of the elements of the target array.</span></span></typeparam>
        <param name="converter"><span data-ttu-id="2194e-359"><see cref="T:System.Converter`2" /> Delegat, który konwertuje każdy element z jednego typu na inny typ.</span><span class="sxs-lookup"><span data-stu-id="2194e-359">A <see cref="T:System.Converter`2" /> delegate that converts each element from one type to another type.</span></span></param>
        <summary><span data-ttu-id="2194e-360">Konwertuje elementy w bieżącym <see cref="T:System.Collections.Generic.List`1" /> na inny typ i zwraca listę zawierającą przekonwertowane elementy.</span><span class="sxs-lookup"><span data-stu-id="2194e-360">Converts the elements in the current <see cref="T:System.Collections.Generic.List`1" /> to another type, and returns a list containing the converted elements.</span></span></summary>
        <returns><span data-ttu-id="2194e-361">A <see cref="T:System.Collections.Generic.List`1" /> typu docelowego zawierającego przekonwertowane elementy z bieżącego <see cref="T:System.Collections.Generic.List`1" />elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-361">A <see cref="T:System.Collections.Generic.List`1" /> of the target type containing the converted elements from the current <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-362"><xref:System.Converter%602> Jest delegatem do metody, która konwertuje obiekt na typ docelowy.</span><span class="sxs-lookup"><span data-stu-id="2194e-362">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="2194e-363">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Converter%602> do delegata, a konwertowane elementy są zapisywane w nowym <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-363">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Converter%602> delegate, and the converted elements are saved in the new <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-364">Bieżąca <xref:System.Collections.Generic.List%601> wartość pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="2194e-364">The current <xref:System.Collections.Generic.List%601> remains unchanged.</span></span>  
  
 <span data-ttu-id="2194e-365">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-365">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-366">W poniższym przykładzie zdefiniowano metodę o `PointFToPoint` nazwie, która <xref:System.Drawing.PointF> konwertuje strukturę na <xref:System.Drawing.Point> strukturę.</span><span class="sxs-lookup"><span data-stu-id="2194e-366">The following example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="2194e-367"><xref:System.Collections.Generic.List%601> Następnie przykład tworzy <xref:System.Drawing.PointF> struktury, tworzy `Converter\<PointF, Point>` delegata`Converter(Of PointF, Point)` (w Visual Basic) <xref:System.Collections.Generic.List%601.ConvertAll%2A> do reprezentowania metodyiprzekazujedelegatadometody.`PointFToPoint`</span><span class="sxs-lookup"><span data-stu-id="2194e-367">The example then creates a <xref:System.Collections.Generic.List%601> of <xref:System.Drawing.PointF> structures, creates a `Converter\<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Collections.Generic.List%601.ConvertAll%2A> method.</span></span> <span data-ttu-id="2194e-368">Metoda przekazuje każdy element listy wejściowej `PointFToPoint` do metody i umieszcza przekonwertowane elementy <xref:System.Drawing.Point> do nowej listy struktur. <xref:System.Collections.Generic.List%601.ConvertAll%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-368">The <xref:System.Collections.Generic.List%601.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="2194e-369">Wyświetlane są obie listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-369">Both lists are displayed.</span></span>  
  
 [!code-cpp[List\`1_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[List\`1_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_ConvertAll/cs/source.cs#1)]
 [!code-vb[List\`1_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-370"><paramref name="converter" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-370"><paramref name="converter" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-371"><see cref="T:System.Collections.Generic.List`1" /> Kopiuje lub część tego elementu do tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-371">Copies the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it to an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] -&gt; unit" Usage="list.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2194e-372">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-372">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-373"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="2194e-373">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <summary><span data-ttu-id="2194e-374">Kopiuje cały <see cref="T:System.Collections.Generic.List`1" /> do zgodnej jednowymiarowej tablicy, rozpoczynając od początku tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="2194e-374">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the beginning of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-375">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> do kopiowania elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-375">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="2194e-376">Elementy są kopiowane do <xref:System.Array> tabeli w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.Generic.List%601>przez.</span><span class="sxs-lookup"><span data-stu-id="2194e-376">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-377">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-377">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-378">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.CopyTo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-378">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="2194e-379"><xref:System.Collections.Generic.List%601> Jest tworzony i wypełniany przy użyciu 5 ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-379">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="2194e-380">Zostanie utworzona pusta tablica ciągów o wartości 15 elementów, a <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> Przeciążenie metody jest używany do kopiowania wszystkich elementów listy do tablicy rozpoczynającej się od pierwszego elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-380">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="2194e-381">Przeciążenie <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> metody służy do kopiowania wszystkich elementów listy do tablicy, zaczynając od indeksu tablicy 6 (pustego indeksu 5).</span><span class="sxs-lookup"><span data-stu-id="2194e-381">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="2194e-382">Na koniec Przeciążenie metody jest używane do kopiowania 3 elementów z listy, zaczynając od indeksu 2, do tablicy rozpoczynającej się od indeksu tablicy 12 (pustego indeksu 11). <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="2194e-382">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="2194e-383">Zostanie wyświetlona zawartość tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-383">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-384"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-384"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-385">Liczba elementów w źródle <see cref="T:System.Collections.Generic.List`1" /> jest większa niż liczba elementów, które może zawierać lokalizacja docelowa. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="2194e-385">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="list.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2194e-386">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-386">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-387"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="2194e-387">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="2194e-388">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="2194e-388">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="2194e-389">Kopiuje cały <see cref="T:System.Collections.Generic.List`1" /> do zgodnej jednowymiarowej tablicy, rozpoczynając od określonego indeksu tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="2194e-389">Copies the entire <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-390">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> do kopiowania elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-390">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="2194e-391">Elementy są kopiowane do <xref:System.Array> tabeli w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.Generic.List%601>przez.</span><span class="sxs-lookup"><span data-stu-id="2194e-391">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-392">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-392">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-393">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.CopyTo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-393">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="2194e-394"><xref:System.Collections.Generic.List%601> Jest tworzony i wypełniany przy użyciu 5 ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-394">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="2194e-395">Zostanie utworzona pusta tablica ciągów o wartości 15 elementów, a <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> Przeciążenie metody jest używany do kopiowania wszystkich elementów listy do tablicy rozpoczynającej się od pierwszego elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-395">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="2194e-396">Przeciążenie <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> metody służy do kopiowania wszystkich elementów listy do tablicy, zaczynając od indeksu tablicy 6 (pustego indeksu 5).</span><span class="sxs-lookup"><span data-stu-id="2194e-396">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="2194e-397">Na koniec Przeciążenie metody jest używane do kopiowania 3 elementów z listy, zaczynając od indeksu 2, do tablicy rozpoczynającej się od indeksu tablicy 12 (pustego indeksu 11). <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="2194e-397">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="2194e-398">Zostanie wyświetlona zawartość tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-398">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-399"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-399"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-400"><paramref name="arrayIndex" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-400"><paramref name="arrayIndex" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-401">Liczba elementów w źródle <see cref="T:System.Collections.Generic.List`1" /> jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca miejsca docelowego <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-401">The number of elements in the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int index, T[] array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 index, !T[] array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (index As Integer, array As T(), arrayIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int index, cli::array &lt;T&gt; ^ array, int arrayIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * 'T[] * int * int -&gt; unit" Usage="list.CopyTo (index, array, arrayIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-402">Indeks (liczony od zera) w źródle <see cref="T:System.Collections.Generic.List`1" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="2194e-402">The zero-based index in the source <see cref="T:System.Collections.Generic.List`1" /> at which copying begins.</span></span></param>
        <param name="array"><span data-ttu-id="2194e-403">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-403">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-404"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="2194e-404">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="2194e-405">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="2194e-405">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-406">Liczba elementów do skopiowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-406">The number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="2194e-407">Kopiuje zakres elementów z <see cref="T:System.Collections.Generic.List`1" /> do zgodnej jednowymiarowej tablicy, rozpoczynając od określonego indeksu tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="2194e-407">Copies a range of elements from the <see cref="T:System.Collections.Generic.List`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-408">Ta metoda używa <xref:System.Array.Copy%2A?displayProperty=nameWithType> do kopiowania elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-408">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="2194e-409">Elementy są kopiowane do <xref:System.Array> tabeli w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.Generic.List%601>przez.</span><span class="sxs-lookup"><span data-stu-id="2194e-409">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-410">Ta metoda jest operacją O (*n*), gdzie *n* jest `count`.</span><span class="sxs-lookup"><span data-stu-id="2194e-410">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-411">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.CopyTo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-411">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.CopyTo%2A> method.</span></span> <span data-ttu-id="2194e-412"><xref:System.Collections.Generic.List%601> Jest tworzony i wypełniany przy użyciu 5 ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-412">A <xref:System.Collections.Generic.List%601> of strings is created and populated with 5 strings.</span></span> <span data-ttu-id="2194e-413">Zostanie utworzona pusta tablica ciągów o wartości 15 elementów, a <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> Przeciążenie metody jest używany do kopiowania wszystkich elementów listy do tablicy rozpoczynającej się od pierwszego elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-413">An empty string array of 15 elements is created, and the <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%29> method overload is used to copy all the elements of the list to the array beginning at the first element of the array.</span></span> <span data-ttu-id="2194e-414">Przeciążenie <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> metody służy do kopiowania wszystkich elementów listy do tablicy, zaczynając od indeksu tablicy 6 (pustego indeksu 5).</span><span class="sxs-lookup"><span data-stu-id="2194e-414">The <xref:System.Collections.Generic.List%601.CopyTo%28%600%5B%5D%2CSystem.Int32%29> method overload is used to copy all the elements of the list to the array beginning at array index 6 (leaving index 5 empty).</span></span> <span data-ttu-id="2194e-415">Na koniec Przeciążenie metody jest używane do kopiowania 3 elementów z listy, zaczynając od indeksu 2, do tablicy rozpoczynającej się od indeksu tablicy 12 (pustego indeksu 11). <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="2194e-415">Finally, the <xref:System.Collections.Generic.List%601.CopyTo%28System.Int32%2C%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method overload is used to copy 3 elements from the list, beginning with index 2, to the array beginning at array index 12 (leaving index 11 empty).</span></span> <span data-ttu-id="2194e-416">Zostanie wyświetlona zawartość tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-416">The contents of the array are then displayed.</span></span>  
  
 [!code-cpp[List\`1_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_CopyTo/cpp/source.cpp#1)]
 [!code-csharp[List\`1_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_CopyTo/cs/source.cs#1)]
 [!code-vb[List\`1_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_CopyTo/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-417"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-417"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-418"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-418"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-419">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-419">-or-</span></span> 
 <span data-ttu-id="2194e-420"><paramref name="arrayIndex" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-420"><paramref name="arrayIndex" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-421">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-421">-or-</span></span> 
 <span data-ttu-id="2194e-422"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-422"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-423"><paramref name="index" />jest równa lub większa <see cref="P:System.Collections.Generic.List`1.Count" /> od wartości źródłowej. <see cref="T:System.Collections.Generic.List`1" /></span><span class="sxs-lookup"><span data-stu-id="2194e-423"><paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.Generic.List`1.Count" /> of the source <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="2194e-424">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-424">-or-</span></span> 
<span data-ttu-id="2194e-425">Liczba elementów od <paramref name="index" /> do końca źródła <see cref="T:System.Collections.Generic.List`1" /> jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca lokalizacji docelowej <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-425">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.Generic.List`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.List&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2194e-426">Pobiera liczbę elementów zawartych w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-426">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <value><span data-ttu-id="2194e-427">Liczba elementów zawartych w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-427">The number of elements contained in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-428"><xref:System.Collections.Generic.List%601.Capacity%2A>to liczba elementów, które <xref:System.Collections.Generic.List%601> mogą być przechowywane przed zmianą rozmiarów.</span><span class="sxs-lookup"><span data-stu-id="2194e-428"><xref:System.Collections.Generic.List%601.Capacity%2A> is the number of elements that the <xref:System.Collections.Generic.List%601> can store before resizing is required.</span></span> <span data-ttu-id="2194e-429"><xref:System.Collections.Generic.List%601.Count%2A>to liczba elementów, które faktycznie znajdują się w <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-429"><xref:System.Collections.Generic.List%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-430"><xref:System.Collections.Generic.List%601.Capacity%2A>jest zawsze większa lub równa <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-430"><xref:System.Collections.Generic.List%601.Capacity%2A> is always greater than or equal to <xref:System.Collections.Generic.List%601.Count%2A>.</span></span> <span data-ttu-id="2194e-431">Jeśli <xref:System.Collections.Generic.List%601.Count%2A> program <xref:System.Collections.Generic.List%601.Capacity%2A> przekracza podczas dodawania elementów, wydajność jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodaniem nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-431">If <xref:System.Collections.Generic.List%601.Count%2A> exceeds <xref:System.Collections.Generic.List%601.Capacity%2A> while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="2194e-432">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-432">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="2194e-433">Poniższy przykład ilustruje sposób sprawdzania pojemności i liczby <xref:System.Collections.Generic.List%601> , która zawiera prosty obiekt biznesowy, i ilustruje <xref:System.Collections.Generic.List%601.TrimExcess%2A> użycie metody w celu usunięcia dodatkowej pojemności.</span><span class="sxs-lookup"><span data-stu-id="2194e-433">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="2194e-434">Poniższy przykład pokazuje wartość <xref:System.Collections.Generic.List%601.Count%2A> właściwości w różnych punktach w okresie istnienia listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-434">The following example shows the value of the <xref:System.Collections.Generic.List%601.Count%2A> property at various points in the life of a list.</span></span> <span data-ttu-id="2194e-435">Po utworzeniu i wypełnieniu listy i wyświetleniu <xref:System.Collections.Generic.List%601.Capacity%2A> jej elementów są wyświetlane właściwości i. <xref:System.Collections.Generic.List%601.Count%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-435">After the list has been created and populated and its elements displayed, the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="2194e-436">Te właściwości są wyświetlane ponownie po <xref:System.Collections.Generic.List%601.TrimExcess%2A> wywołaniu metody i ponownie po wyczyszczeniu zawartości listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-436">These properties are displayed again after the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method has been called, and again after the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Exists(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Exists (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Exists(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Exists : Predicate&lt;'T&gt; -&gt; bool" Usage="list.Exists match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="2194e-437"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementów do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-437">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-438">Określa, czy <see cref="T:System.Collections.Generic.List`1" /> zawiera elementy, które pasują do warunków zdefiniowanych przez określony predykat.</span><span class="sxs-lookup"><span data-stu-id="2194e-438">Determines whether the <see cref="T:System.Collections.Generic.List`1" /> contains elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="2194e-439"><see langword="true" />Jeśli zawiera jeden lub więcej elementów, które pasują do warunków zdefiniowanych przez określony predykat; <see langword="false" />w przeciwnym razie. <see cref="T:System.Collections.Generic.List`1" /></span><span class="sxs-lookup"><span data-stu-id="2194e-439"><see langword="true" /> if the <see cref="T:System.Collections.Generic.List`1" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-440">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-440">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-441">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata, a przetwarzanie jest przerywane po znalezieniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-441">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="2194e-442">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-442">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-443">W poniższym <xref:System.Collections.Generic.List%601.Contains%2A> przykładzie pokazano metody <xref:System.Collections.Generic.List%601> i <xref:System.Collections.Generic.List%601.Exists%2A> , które zawierają prosty obiekt biznesowy, który implementuje <xref:System.IEquatable%601.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-443">The following example demonstrates the <xref:System.Collections.Generic.List%601.Contains%2A> and <xref:System.Collections.Generic.List%601.Exists%2A> methods on a <xref:System.Collections.Generic.List%601> that contains a simple business object that implements <xref:System.IEquatable%601.Equals%2A>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="2194e-444">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Exists%2A> metodę i kilka innych metod, które <xref:System.Predicate%601> używają delegata ogólnego.</span><span class="sxs-lookup"><span data-stu-id="2194e-444">The following example demonstrates the <xref:System.Collections.Generic.List%601.Exists%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="2194e-445">Tworzony jest ciąg z 8. nazwami, z których dwa są (w pozycjach 1 i 5) kończą się znakiem "saurus". <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-445">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="2194e-446">W przykładzie zdefiniowano także metodę predykatu wyszukiwania `EndsWithSaurus`o nazwie, która akceptuje parametr String i zwraca wartość logiczną wskazującą, czy ciąg wejściowy jest kończący się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="2194e-446">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="2194e-447">Metody <xref:System.Collections.Generic.List%601.Find%2A> <xref:System.Collections.Generic.List%601.RemoveAll%2A> , <xref:System.Collections.Generic.List%601.FindLast%2A>, i <xref:System.Collections.Generic.List%601.FindAll%2A> są używane do przeszukiwania listy za pomocą metody predykatu wyszukiwania, a następnie metoda jest używana do usuwania wszystkich wpisów kończących się ciągiem "saurus".</span><span class="sxs-lookup"><span data-stu-id="2194e-447">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method, and then the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span>  
  
 <span data-ttu-id="2194e-448">Na <xref:System.Collections.Generic.List%601.Exists%2A> koniec Metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="2194e-448">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method is called.</span></span> <span data-ttu-id="2194e-449">Przechodzi na listę od początku, przekazując każdy element z kolei do `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-449">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="2194e-450">Wyszukiwanie zostaje zatrzymane i metoda zwraca `true` , `EndsWithSaurus` Jeśli metoda zwraca `true` dla dowolnego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-450">The search stops and the method returns `true` if the `EndsWithSaurus` method returns `true` for any element.</span></span> <span data-ttu-id="2194e-451">Metoda <xref:System.Collections.Generic.List%601.Exists%2A> zwraca`false` , ponieważ wszystkie takie elementy zostały usunięte.</span><span class="sxs-lookup"><span data-stu-id="2194e-451">The <xref:System.Collections.Generic.List%601.Exists%2A> method returns `false` because all such elements have been removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2194e-452">W C# i Visual Basic nie jest konieczne jawne utworzenie `Predicate<string>` delegata (`Predicate(Of String)` w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2194e-452">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="2194e-453">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="2194e-453">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-454"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-454"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public T Find (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Find(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Find(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.Find : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.Find match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="2194e-455"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-455">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-456">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca pierwsze wystąpienie w całości <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-456">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-457">Pierwszy element, który odpowiada warunkom zdefiniowanym przez określony predykat, jeśli znaleziono; w przeciwnym razie wartość domyślna dla typu <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-457">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-458">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-458">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-459">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przekazywane <xref:System.Predicate%601> do delegata <xref:System.Collections.Generic.List%601>, przenoszone do przodu w, rozpoczynając od pierwszego elementu i kończąc na ostatnim elemencie.</span><span class="sxs-lookup"><span data-stu-id="2194e-459">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving forward in the <xref:System.Collections.Generic.List%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="2194e-460">Przetwarzanie jest zatrzymane po znalezieniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-460">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2194e-461">Podczas wyszukiwania listy zawierającej typy wartości upewnij się, że wartość domyślna dla tego typu nie spełnia predykatu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-461">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="2194e-462">W przeciwnym razie nie istnieje sposób rozróżniania między wartością domyślną wskazującą, że nie znaleziono dopasowania i element listy, który ma mieć wartość domyślną dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="2194e-462">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="2194e-463">Jeśli wartość domyślna spełnia predykat wyszukiwania, zamiast tego użyj <xref:System.Collections.Generic.List%601.FindIndex%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-463">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="2194e-464">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-464">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-465">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Find%2A> metodę <xref:System.Collections.Generic.List%601> , która zawiera prosty obiekt złożony.</span><span class="sxs-lookup"><span data-stu-id="2194e-465">The following example demonstrates the <xref:System.Collections.Generic.List%601.Find%2A> method on a <xref:System.Collections.Generic.List%601> that contains a simple complex object.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.ContainsExists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.containsexists/vb/module1.vb#1)]  
  
 <span data-ttu-id="2194e-466">Poniższy przykład ilustruje metody znajdowania dla <xref:System.Collections.Generic.List%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-466">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="2194e-467">Przykład dla <xref:System.Collections.Generic.List%601> klasy zawiera `book` obiekty klasy `Book`, przy użyciu danych z [przykładowego pliku XML: Książki (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="2194e-467">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="2194e-468">Metoda w przykładzie używa [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) , aby przeanalizować wartości z XML do wartości `book` właściwości obiektów. `FillList`</span><span class="sxs-lookup"><span data-stu-id="2194e-468">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="2194e-469">W poniższej tabeli opisano przykłady dotyczące metod znajdowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-469">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="2194e-470">Metoda</span><span class="sxs-lookup"><span data-stu-id="2194e-470">Method</span></span>|<span data-ttu-id="2194e-471">Przykład</span><span class="sxs-lookup"><span data-stu-id="2194e-471">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-472">Znajduje książkę według identyfikatora przy użyciu `IDToFind` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-472">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-473">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-473">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-474">Znajdź wszystkie książki, `Genre` których właściwość jest "Computer" `FindComputer` przy użyciu delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-474">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-475">Znajduje ostatnią książkę w kolekcji, która ma datę opublikowania przed 2001, przy użyciu `PubBefore2001` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-475">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-476">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-476">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-477">Znajduje indeks pierwszej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-477">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-478">Znajduje indeks ostatniej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-478">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-479">Znajduje indeks pierwszej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-479">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-480">Znajduje indeks ostatniej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-480">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-481"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-481"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; FindAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; FindAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll (match As Predicate(Of T)) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ FindAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindAll : Predicate&lt;'T&gt; -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="2194e-482"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementów do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-482">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-483">Pobiera wszystkie elementy, które pasują do warunków zdefiniowanych przez określony predykat.</span><span class="sxs-lookup"><span data-stu-id="2194e-483">Retrieves all the elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="2194e-484">Zawiera wszystkie elementy, które pasują do warunków określonych przez określony predykat, jeśli zostały znalezione; w przeciwnym razie jest <see cref="T:System.Collections.Generic.List`1" />puste. <see cref="T:System.Collections.Generic.List`1" /></span><span class="sxs-lookup"><span data-stu-id="2194e-484">A <see cref="T:System.Collections.Generic.List`1" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-485">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-485">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-486">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przenoszone <xref:System.Predicate%601> do delegata, a elementy zgodne z warunkami są zapisywane w zwracanym <xref:System.Collections.Generic.List%601>elemencie.</span><span class="sxs-lookup"><span data-stu-id="2194e-486">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are saved in the returned <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-487">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-487">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-488">Poniższy przykład ilustruje metody znajdowania dla <xref:System.Collections.Generic.List%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-488">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="2194e-489">Przykład dla <xref:System.Collections.Generic.List%601> klasy zawiera `book` obiekty klasy `Book`, przy użyciu danych z [przykładowego pliku XML: Książki (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="2194e-489">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="2194e-490">Metoda w przykładzie używa [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) , aby przeanalizować wartości z XML do wartości `book` właściwości obiektów. `FillList`</span><span class="sxs-lookup"><span data-stu-id="2194e-490">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="2194e-491">W poniższej tabeli opisano przykłady dotyczące metod znajdowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-491">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="2194e-492">Metoda</span><span class="sxs-lookup"><span data-stu-id="2194e-492">Method</span></span>|<span data-ttu-id="2194e-493">Przykład</span><span class="sxs-lookup"><span data-stu-id="2194e-493">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-494">Znajduje książkę według identyfikatora przy użyciu `IDToFind` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-494">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-495">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-495">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-496">Znajdź wszystkie książki, `Genre` których właściwość jest "Computer" `FindComputer` przy użyciu delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-496">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-497">Znajduje ostatnią książkę w kolekcji, która ma datę opublikowania przed 2001, przy użyciu `PubBefore2001` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-497">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-498">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-498">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-499">Znajduje indeks pierwszej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-499">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-500">Znajduje indeks ostatniej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-500">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-501">Znajduje indeks pierwszej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-501">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-502">Znajduje indeks ostatniej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-502">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-503"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-503"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-504">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca indeks (liczony od zera) pierwszego wystąpienia w <see cref="T:System.Collections.Generic.List`1" /> lub jego części.</span><span class="sxs-lookup"><span data-stu-id="2194e-504">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span></span> <span data-ttu-id="2194e-505">Ta metoda zwraca wartość-1, jeśli nie znaleziono elementu pasującego do warunków.</span><span class="sxs-lookup"><span data-stu-id="2194e-505">This method returns -1 if an item that matches the conditions is not found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="2194e-506"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-506">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-507">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca indeks (liczony od zera) pierwszego wystąpienia w całości <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-507">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-508">Indeks (liczony od zera) pierwszego wystąpienia elementu, który jest zgodny z warunkami zdefiniowanymi przez <paramref name="match" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-508">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-509"><xref:System.Collections.Generic.List%601> Jest przeszukiwany do przodu, zaczynając od pierwszego elementu i kończąc na ostatnim elemencie.</span><span class="sxs-lookup"><span data-stu-id="2194e-509">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="2194e-510">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-510">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-511">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-511">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="2194e-512">Delegat ma sygnaturę:</span><span class="sxs-lookup"><span data-stu-id="2194e-512">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="2194e-513">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-513">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-514">W poniższym przykładzie zdefiniowano `Employee` klasę z dwoma `Name` polami i `Id`.</span><span class="sxs-lookup"><span data-stu-id="2194e-514">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="2194e-515">Definiuje `EmployeeSearch` również klasę z pojedynczą metodą, `StartsWith`która wskazuje, czy `Employee.Name` pole rozpoczyna się od `EmployeeSearch` określonego podciągu, który jest dostarczany do konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-515">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="2194e-516">Zwróć uwagę na podpis tej metody</span><span class="sxs-lookup"><span data-stu-id="2194e-516">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="2194e-517">odnosi się do podpisu delegata, który może zostać przesłany do <xref:System.Collections.Generic.List%601.FindIndex%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-517">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="2194e-518">Przykład tworzy `List<Employee>` wystąpienie obiektu, dodaje do niego <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> `Employee` wiele obiektów, a następnie wywołuje metodę dwa razy, aby przeszukać całą kolekcję, po raz pierwszy dla pierwszego `Employee` obiektu, którego `Name` rozpoczyna się pole w przypadku elementu "J" i drugiego czasu dla pierwszego `Employee` obiektu, którego `Name` pole zaczyna się od "ju".</span><span class="sxs-lookup"><span data-stu-id="2194e-518">The example instantiates a `List<Employee>` object, adds a number of `Employee` objects to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice to search the entire collection, the first time for the first `Employee` object whose `Name` field begins with "J", and the second time for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex2.cs#2)]
 [!code-vb[System.Collections.Generic.List.FindIndex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-519"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-519"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="2194e-520">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-520">The zero-based starting index of the search.</span></span></param>
        <param name="match"><span data-ttu-id="2194e-521"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-521">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-522">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca indeks (liczony od zera) pierwszego wystąpienia w zakresie elementów w programie <see cref="T:System.Collections.Generic.List`1" /> , który rozciąga się od określonego indeksu do ostatniego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-522">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="2194e-523">Indeks (liczony od zera) pierwszego wystąpienia elementu, który jest zgodny z warunkami zdefiniowanymi przez <paramref name="match" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-523">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-524">Jest przeszukiwany do przodu `startIndex` i kończący się na ostatnim elemencie. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-524">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="2194e-525">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-525">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-526">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-526">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="2194e-527">Delegat ma sygnaturę:</span><span class="sxs-lookup"><span data-stu-id="2194e-527">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="2194e-528">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (*n*), gdzie *n* jest liczbą elementów od `startIndex` do końca <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-528">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `startIndex` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-529">W poniższym przykładzie zdefiniowano `Employee` klasę z dwoma `Name` polami i `Id`.</span><span class="sxs-lookup"><span data-stu-id="2194e-529">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="2194e-530">Definiuje `EmployeeSearch` również klasę z pojedynczą metodą, `StartsWith`która wskazuje, czy `Employee.Name` pole rozpoczyna się od `EmployeeSearch` określonego podciągu, który jest dostarczany do konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-530">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="2194e-531">Zwróć uwagę na podpis tej metody</span><span class="sxs-lookup"><span data-stu-id="2194e-531">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="2194e-532">odnosi się do podpisu delegata, który może zostać przesłany do <xref:System.Collections.Generic.List%601.FindIndex%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-532">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="2194e-533">Przykład tworzy wystąpienie `List<Employee>` obiektu, dodaje do niego `Employee` wiele obiektów <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> , a następnie wywołuje metodę dwa razy, aby przeszukać kolekcję, rozpoczynając od jej piątego elementu członkowskiego (czyli elementu członkowskiego w indeksie 4).</span><span class="sxs-lookup"><span data-stu-id="2194e-533">The example instantiates a `List<Employee>` object, adds a number of `Employee` objects to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice to search the collection starting with its fifth member (that is, the member at index 4).</span></span> <span data-ttu-id="2194e-534">`Employee` Po raz pierwszy wyszukuje pierwszy obiekt, którego `Name` pole zaczyna się od "J"; drugi raz wyszukuje pierwszy `Employee` obiekt, którego `Name` pole zaczyna się od "ju".</span><span class="sxs-lookup"><span data-stu-id="2194e-534">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex3.cs#3)]
 [!code-vb[System.Collections.Generic.List.FindIndex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-535"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-535"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-536"><paramref name="startIndex" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-536"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public int FindIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="2194e-537">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-537">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-538">Liczba elementów w sekcji do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-538">The number of elements in the section to search.</span></span></param>
        <param name="match"><span data-ttu-id="2194e-539"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-539">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-540">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca indeks (liczony od zera) pierwszego wystąpienia w zakresie elementów <see cref="T:System.Collections.Generic.List`1" /> , który zaczyna się od określonego indeksu i zawiera określoną liczbę elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-540">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="2194e-541">Indeks (liczony od zera) pierwszego wystąpienia elementu, który jest zgodny z warunkami zdefiniowanymi przez <paramref name="match" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-541">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-542">`count` `count` `startIndex` `startIndex` Program jest przeszukiwany do przodu, rozpoczynając od i kończąc o minus 1, jeśli jest większy niż 0. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-542">The <xref:System.Collections.Generic.List%601> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="2194e-543">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-543">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-544">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-544">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="2194e-545">Delegat ma sygnaturę:</span><span class="sxs-lookup"><span data-stu-id="2194e-545">The delegate has the signature:</span></span>  
  
```csharp  
public bool methodName(T obj)  
```  
  
```vb  
Public Function methodName(obj As T) As Boolean  
```  
  
 <span data-ttu-id="2194e-546">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie `count`n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-546">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-547">W poniższym przykładzie zdefiniowano `Employee` klasę z dwoma `Name` polami i `Id`.</span><span class="sxs-lookup"><span data-stu-id="2194e-547">The following example defines an `Employee` class with two fields, `Name` and `Id`.</span></span> <span data-ttu-id="2194e-548">Definiuje `EmployeeSearch` również klasę z pojedynczą metodą, `StartsWith`która wskazuje, czy `Employee.Name` pole rozpoczyna się od `EmployeeSearch` określonego podciągu, który jest dostarczany do konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-548">It also defines an `EmployeeSearch` class with a single method, `StartsWith`, that indicates whether the `Employee.Name` field starts with a specified substring that is supplied to the `EmployeeSearch` class constructor.</span></span> <span data-ttu-id="2194e-549">Zwróć uwagę na podpis tej metody</span><span class="sxs-lookup"><span data-stu-id="2194e-549">Note  the signature of this method</span></span>  
  
```csharp  
public bool StartsWith(Employee e)  
```  
  
```vb  
Public Function StartsWith(e As Employee) As Boolean  
```  
  
 <span data-ttu-id="2194e-550">odnosi się do podpisu delegata, który może zostać przesłany do <xref:System.Collections.Generic.List%601.FindIndex%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-550">corresponds to the signature of the delegate that can be passed to the <xref:System.Collections.Generic.List%601.FindIndex%2A> method.</span></span> <span data-ttu-id="2194e-551">Przykład tworzy wystąpienie `List<Employee>` obiektu, dodaje do niego `Employee` wiele obiektów <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> , a następnie wywołuje metodę dwa razy, aby wyszukać całą kolekcję (czyli elementy członkowskie z indeksu 0 do indeksu <xref:System.Collections.Generic.List%601.Count%2A> -1).</span><span class="sxs-lookup"><span data-stu-id="2194e-551">The example instantiates a `List<Employee>` object, adds a number of `Employee` objects to it, and then calls the <xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29> method twice to search the entire collection (that is, the members from index 0 to index <xref:System.Collections.Generic.List%601.Count%2A> - 1).</span></span> <span data-ttu-id="2194e-552">`Employee` Po raz pierwszy wyszukuje pierwszy obiekt, którego `Name` pole zaczyna się od "J"; drugi raz wyszukuje pierwszy `Employee` obiekt, którego `Name` pole zaczyna się od "ju".</span><span class="sxs-lookup"><span data-stu-id="2194e-552">The first time, it searches for the first `Employee` object whose `Name` field begins with "J"; the second time, it searches for the first `Employee` object whose `Name` field begins with "Ju".</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/cs/FindIndex1.cs#1)]
 [!code-vb[System.Collections.Generic.List.FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Collections.Generic.List.FindIndex/vb/FindIndex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-553"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-553"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-554"><paramref name="startIndex" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-554"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="2194e-555">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-555">-or-</span></span> 
 <span data-ttu-id="2194e-556"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-556"><paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-557">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-557">-or-</span></span> 
 <span data-ttu-id="2194e-558"><paramref name="startIndex" />i <paramref name="count" /> nie określaj prawidłowej sekcji <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-558"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast">
      <MemberSignature Language="C#" Value="public T FindLast (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T FindLast(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLast (match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T FindLast(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLast : Predicate&lt;'T&gt; -&gt; 'T" Usage="list.FindLast match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="2194e-559"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-559">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-560">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca ostatnie wystąpienie w całości <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-560">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-561">Ostatni element, który jest zgodny z warunkami zdefiniowanymi przez określony predykat, jeśli znaleziono; w przeciwnym razie wartość domyślna dla typu <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-561">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-562">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-562">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-563">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata <xref:System.Collections.Generic.List%601>, przenoszące wstecz w, rozpoczynając od ostatniego elementu i kończąc na pierwszym elemencie.</span><span class="sxs-lookup"><span data-stu-id="2194e-563">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, moving backward in the <xref:System.Collections.Generic.List%601>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="2194e-564">Przetwarzanie jest zatrzymane po znalezieniu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-564">Processing is stopped when a match is found.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2194e-565">Podczas wyszukiwania listy zawierającej typy wartości upewnij się, że wartość domyślna dla tego typu nie spełnia predykatu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-565">When searching a list containing value types, make sure the default value for the type does not satisfy the search predicate.</span></span> <span data-ttu-id="2194e-566">W przeciwnym razie nie istnieje sposób rozróżniania między wartością domyślną wskazującą, że nie znaleziono dopasowania i element listy, który ma mieć wartość domyślną dla tego typu.</span><span class="sxs-lookup"><span data-stu-id="2194e-566">Otherwise, there is no way to distinguish between a default value indicating that no match was found and a list element that happens to have the default value for the type.</span></span> <span data-ttu-id="2194e-567">Jeśli wartość domyślna spełnia predykat wyszukiwania, zamiast tego użyj <xref:System.Collections.Generic.List%601.FindLastIndex%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-567">If the default value satisfies the search predicate, use the <xref:System.Collections.Generic.List%601.FindLastIndex%2A> method instead.</span></span>  
  
 <span data-ttu-id="2194e-568">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-568">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-569">Poniższy przykład ilustruje metody znajdowania dla <xref:System.Collections.Generic.List%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-569">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="2194e-570">Przykład dla <xref:System.Collections.Generic.List%601> klasy zawiera `book` obiekty klasy `Book`, przy użyciu danych z [przykładowego pliku XML: Książki (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="2194e-570">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="2194e-571">Metoda w przykładzie używa [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) , aby przeanalizować wartości z XML do wartości `book` właściwości obiektów. `FillList`</span><span class="sxs-lookup"><span data-stu-id="2194e-571">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="2194e-572">W poniższej tabeli opisano przykłady dotyczące metod znajdowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-572">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="2194e-573">Metoda</span><span class="sxs-lookup"><span data-stu-id="2194e-573">Method</span></span>|<span data-ttu-id="2194e-574">Przykład</span><span class="sxs-lookup"><span data-stu-id="2194e-574">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-575">Znajduje książkę według identyfikatora przy użyciu `IDToFind` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-575">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-576">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-576">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-577">Znajdź wszystkie książki, `Genre` których właściwość jest "Computer" `FindComputer` przy użyciu delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-577">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-578">Znajduje ostatnią książkę w kolekcji, która ma datę opublikowania przed 2001, przy użyciu `PubBefore2001` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-578">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-579">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-579">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-580">Znajduje indeks pierwszej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-580">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-581">Znajduje indeks ostatniej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-581">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-582">Znajduje indeks pierwszej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-582">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-583">Znajduje indeks ostatniej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-583">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-584"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-584"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindLastIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-585">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca indeks (liczony od zera) ostatniego wystąpienia w <see cref="T:System.Collections.Generic.List`1" /> lub jego części.</span><span class="sxs-lookup"><span data-stu-id="2194e-585">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="2194e-586"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-586">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-587">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca indeks (liczony od zera) ostatniego wystąpienia w całości <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-587">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-588">Indeks (liczony od zera) ostatniego wystąpienia elementu, który jest zgodny z warunkami zdefiniowanymi przez <paramref name="match" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-588">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-589"><xref:System.Collections.Generic.List%601> Jest przeszukiwany wstecz od ostatniego elementu i kończący się na pierwszym elemencie.</span><span class="sxs-lookup"><span data-stu-id="2194e-589">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="2194e-590">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-590">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-591">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-591">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="2194e-592">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-592">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-593">Poniższy przykład ilustruje metody znajdowania dla <xref:System.Collections.Generic.List%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-593">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="2194e-594">Przykład dla <xref:System.Collections.Generic.List%601> klasy zawiera `book` obiekty klasy `Book`, przy użyciu danych z [przykładowego pliku XML: Książki (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="2194e-594">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="2194e-595">Metoda w przykładzie używa [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) , aby przeanalizować wartości z XML do wartości `book` właściwości obiektów. `FillList`</span><span class="sxs-lookup"><span data-stu-id="2194e-595">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="2194e-596">W poniższej tabeli opisano przykłady dotyczące metod znajdowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-596">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="2194e-597">Metoda</span><span class="sxs-lookup"><span data-stu-id="2194e-597">Method</span></span>|<span data-ttu-id="2194e-598">Przykład</span><span class="sxs-lookup"><span data-stu-id="2194e-598">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-599">Znajduje książkę według identyfikatora przy użyciu `IDToFind` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-599">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-600">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-600">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-601">Znajdź wszystkie książki, `Genre` których właściwość jest "Computer" `FindComputer` przy użyciu delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-601">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-602">Znajduje ostatnią książkę w kolekcji, która ma datę opublikowania przed 2001, przy użyciu `PubBefore2001` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-602">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-603">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-603">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-604">Znajduje indeks pierwszej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-604">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-605">Znajduje indeks ostatniej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-605">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-606">Znajduje indeks pierwszej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-606">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-607">Znajduje indeks ostatniej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-607">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-608"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-608"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="2194e-609">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span><span class="sxs-lookup"><span data-stu-id="2194e-609">The zero-based starting index of the backward search.</span></span></param>
        <param name="match"><span data-ttu-id="2194e-610"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-610">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-611">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca indeks (liczony od zera) ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Collections.Generic.List`1" /> , który rozciąga się od pierwszego elementu do określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="2194e-611">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="2194e-612">Indeks (liczony od zera) ostatniego wystąpienia elementu, który jest zgodny z warunkami zdefiniowanymi przez <paramref name="match" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-612">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-613">Jest przeszukiwany wstecz od początku `startIndex` i kończąc na pierwszym elemencie. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-613">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="2194e-614">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-614">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-615">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-615">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="2194e-616">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (*n*), gdzie *n* jest liczbą elementów od <xref:System.Collections.Generic.List%601> początku do. `startIndex`</span><span class="sxs-lookup"><span data-stu-id="2194e-616">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `startIndex`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-617"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-617"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-618"><paramref name="startIndex" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-618"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex">
      <MemberSignature Language="C#" Value="public int FindLastIndex (int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 FindLastIndex(int32 startIndex, int32 count, class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindLastIndex (startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int FindLastIndex(int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.FindLastIndex : int * int * Predicate&lt;'T&gt; -&gt; int" Usage="list.FindLastIndex (startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="2194e-619">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span><span class="sxs-lookup"><span data-stu-id="2194e-619">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-620">Liczba elementów w sekcji do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-620">The number of elements in the section to search.</span></span></param>
        <param name="match"><span data-ttu-id="2194e-621"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementu do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-621">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the element to search for.</span></span></param>
        <summary><span data-ttu-id="2194e-622">Wyszukuje element, który odpowiada warunkom zdefiniowanym przez określony predykat, i zwraca indeks (liczony od zera) ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Collections.Generic.List`1" /> , który zawiera określoną liczbę elementów i kończą się na określony indeks.</span><span class="sxs-lookup"><span data-stu-id="2194e-622">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="2194e-623">Indeks (liczony od zera) ostatniego wystąpienia elementu, który jest zgodny z warunkami zdefiniowanymi przez <paramref name="match" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-623">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-624">`count` `count` `startIndex` `startIndex` Program jest przeszukiwany wstecz od i kończąc od minusa plus 1, jeśli jest większy niż 0. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-624">The <xref:System.Collections.Generic.List%601> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="2194e-625">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-625">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-626">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-626">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate.</span></span>  
  
 <span data-ttu-id="2194e-627">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie `count`n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-627">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-628">Poniższy przykład ilustruje metody znajdowania dla <xref:System.Collections.Generic.List%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="2194e-628">The following example demonstrates the find methods for the <xref:System.Collections.Generic.List%601> class.</span></span> <span data-ttu-id="2194e-629">Przykład dla <xref:System.Collections.Generic.List%601> klasy zawiera `book` obiekty klasy `Book`, przy użyciu danych z [przykładowego pliku XML: Książki (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span><span class="sxs-lookup"><span data-stu-id="2194e-629">The example for the <xref:System.Collections.Generic.List%601> class contains `book` objects, of class `Book`, using the data from the [Sample XML File: Books (LINQ to XML)](https://msdn.microsoft.com/library/94252daf-6097-4625-afc2-0eb778958d4f).</span></span> <span data-ttu-id="2194e-630">Metoda w przykładzie używa [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) , aby przeanalizować wartości z XML do wartości `book` właściwości obiektów. `FillList`</span><span class="sxs-lookup"><span data-stu-id="2194e-630">The `FillList` method in the example uses [LINQ to XML](https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13) to parse the values from the XML to property values of the `book` objects.</span></span>  
  
 <span data-ttu-id="2194e-631">W poniższej tabeli opisano przykłady dotyczące metod znajdowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-631">The following table describes the examples provided for the find methods.</span></span>  
  
|<span data-ttu-id="2194e-632">Metoda</span><span class="sxs-lookup"><span data-stu-id="2194e-632">Method</span></span>|<span data-ttu-id="2194e-633">Przykład</span><span class="sxs-lookup"><span data-stu-id="2194e-633">Example</span></span>|  
|------------|-------------|  
|<xref:System.Collections.Generic.List%601.Find%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-634">Znajduje książkę według identyfikatora przy użyciu `IDToFind` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-634">Finds a book by an ID using the `IDToFind` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-635">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-635">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindAll%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-636">Znajdź wszystkie książki, `Genre` których właściwość jest "Computer" `FindComputer` przy użyciu delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-636">Find all books that whose `Genre` property is "Computer" using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLast%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-637">Znajduje ostatnią książkę w kolekcji, która ma datę opublikowania przed 2001, przy użyciu `PubBefore2001` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-637">Finds the last book in the collection that has a publish date before 2001, using the `PubBefore2001` predicate delegate.</span></span><br /><br /> <span data-ttu-id="2194e-638">C#przykład używa anonimowego delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-638">C# example uses an anonymous delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-639">Znajduje indeks pierwszej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-639">Finds the index of first computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-640">Znajduje indeks ostatniej książki komputerowej przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-640">Finds the index of the last computer book using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-641">Znajduje indeks pierwszej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-641">Finds the index of first computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
|<xref:System.Collections.Generic.List%601.FindLastIndex%28System.Int32%2CSystem.Int32%2CSystem.Predicate%7B%600%7D%29>|<span data-ttu-id="2194e-642">Znajduje indeks ostatniej książki komputerowej w drugiej połowie kolekcji przy użyciu `FindComputer` delegata predykatu.</span><span class="sxs-lookup"><span data-stu-id="2194e-642">Finds the index of last computer book in the second half of the collection, using the `FindComputer` predicate delegate.</span></span>|  
  
 [!code-csharp[List\`1_Find_Methods#1](~/samples/snippets/csharp/VS_Snippets_CLR/list`1_find_methods/cs/program.cs#1)]
 [!code-vb[List\`1_Find_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/list`1_find_methods/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-643"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-643"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-644"><paramref name="startIndex" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-644"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="2194e-645">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-645">-or-</span></span> 
 <span data-ttu-id="2194e-646"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-646"><paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-647">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-647">-or-</span></span> 
 <span data-ttu-id="2194e-648"><paramref name="startIndex" />i <paramref name="count" /> nie określaj prawidłowej sekcji <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-648"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="Overload:System.Collections.Generic.List`1.FindIndex" />
        <altmember cref="Overload:System.Collections.Generic.List`1.BinarySearch" />
        <altmember cref="Overload:System.Collections.Generic.List`1.IndexOf" />
        <altmember cref="Overload:System.Collections.Generic.List`1.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class System.Action`1&lt;!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ForEach (action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ForEach(Action&lt;T&gt; ^ action);" />
      <MemberSignature Language="F#" Value="member this.ForEach : Action&lt;'T&gt; -&gt; unit" Usage="list.ForEach action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="2194e-649">Delegat do wykonania na każdym elemencie <see cref="T:System.Collections.Generic.List`1" />. <see cref="T:System.Action`1" /></span><span class="sxs-lookup"><span data-stu-id="2194e-649">The <see cref="T:System.Action`1" /> delegate to perform on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></param>
        <summary><span data-ttu-id="2194e-650">Wykonuje określoną akcję dla każdego elementu <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-650">Performs the specified action on each element of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-651"><xref:System.Action%601> Jest delegatem do metody, która wykonuje akcję na obiekcie, do którego została przeniesiona.</span><span class="sxs-lookup"><span data-stu-id="2194e-651">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="2194e-652">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Action%601> do delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-652">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Action%601> delegate.</span></span>  
  
 <span data-ttu-id="2194e-653">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-653">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="2194e-654">Modyfikowanie podstawowej kolekcji w treści <xref:System.Action%601> delegata nie jest obsługiwane i powoduje niezdefiniowane zachowanie.</span><span class="sxs-lookup"><span data-stu-id="2194e-654">Modifying the underlying collection in the body of the <xref:System.Action%601> delegate is not supported and causes undefined behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-655">Poniższy przykład ilustruje użycie <xref:System.Action%601> delegata do drukowania zawartości <xref:System.Collections.Generic.List%601> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2194e-655">The following example demonstrates the use of the <xref:System.Action%601> delegate to print the contents of a <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="2194e-656">W tym przykładzie `Print` Metoda jest używana do wyświetlania zawartości listy w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="2194e-656">In this example the `Print` method is used to display the contents of the list to the console.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2194e-657">Oprócz wyświetlania zawartości przy użyciu `Print` metody C# przykład ilustruje użycie [metod anonimowych](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md) , aby wyświetlić wyniki w konsoli.</span><span class="sxs-lookup"><span data-stu-id="2194e-657">In addition to displaying the contents using the `Print` method, the C# example demonstrates the use of [anonymous methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md) to display the results to the console.</span></span>  
  
 [!code-csharp[System.Action_PrintExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action_PrintExample/cs/action.cs#01)]
 [!code-vb[System.Action_PrintExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action_PrintExample/vb/action.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-658"><paramref name="action" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-658"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2194e-659">Element w kolekcji został zmodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="2194e-659">An element in the collection has been modified.</span></span></exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.List`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As List(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.List&lt;'T&gt;.Enumerator" Usage="list.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-660">Zwraca moduł wyliczający, który wykonuje iterację przez <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-660">Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-661"><see cref="T:System.Collections.Generic.List`1.Enumerator" /> A<see cref="T:System.Collections.Generic.List`1" />dla.</span><span class="sxs-lookup"><span data-stu-id="2194e-661">A <see cref="T:System.Collections.Generic.List`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-662">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="2194e-662">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="2194e-663">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="2194e-663">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2194e-664">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2194e-664">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2194e-665">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-665">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2194e-666">W tym miejscu <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> właściwość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="2194e-666">At this position, the <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="2194e-667">W związku z tym, należy <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> wywołać metodę, aby wykonać przechodzenie modułu wyliczającego do pierwszego elementu kolekcji przed odczytem <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>wartości.</span><span class="sxs-lookup"><span data-stu-id="2194e-667">Therefore, you must call the <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.List%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2194e-668">Właściwość zwraca ten sam obiekt, dopóki <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> nie zostanie wywołana. <xref:System.Collections.Generic.List%601.Enumerator.Current%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-668">The <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> property returns the same object until <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="2194e-669"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A>ustawia <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-669"><xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2194e-670">Jeśli <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2194e-670">If <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2194e-671">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="2194e-671">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2194e-672">Jeśli ostatnie wywołanie <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-672">If the last call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2194e-673">Nie można ponownie <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> ustawić na pierwszy element kolekcji; zamiast tego należy utworzyć nowe wystąpienie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="2194e-673">You cannot set <xref:System.Collections.Generic.List%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="2194e-674">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="2194e-674">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2194e-675">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-675">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.List%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.List%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-676">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="2194e-676">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2194e-677">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="2194e-677">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2194e-678">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-678">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2194e-679">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-679">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2194e-680">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-680">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.List`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;T&gt; GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;!T&gt; GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRange (index As Integer, count As Integer) As List(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;T&gt; ^ GetRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetRange : int * int -&gt; System.Collections.Generic.List&lt;'T&gt;" Usage="list.GetRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-681">Indeks (liczony od <see cref="T:System.Collections.Generic.List`1" /> zera), w którym zaczyna się zakres.</span><span class="sxs-lookup"><span data-stu-id="2194e-681">The zero-based <see cref="T:System.Collections.Generic.List`1" /> index at which the range starts.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-682">Liczba elementów w zakresie.</span><span class="sxs-lookup"><span data-stu-id="2194e-682">The number of elements in the range.</span></span></param>
        <summary><span data-ttu-id="2194e-683">Tworzy skróconą kopię zakresu elementów w źródle <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-683">Creates a shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-684">Skrócona kopia zakresu elementów w źródle <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-684">A shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-685">Skrócona kopia kolekcji typów referencyjnych lub podzbiór tej kolekcji zawiera tylko odwołania do elementów kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-685">A shallow copy of a collection of reference types, or a subset of that collection, contains only the references to the elements of the collection.</span></span> <span data-ttu-id="2194e-686">Same obiekty nie są kopiowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-686">The objects themselves are not copied.</span></span> <span data-ttu-id="2194e-687">Odwołania na nowej liście wskazują te same obiekty jak odwołania na liście pierwotnej.</span><span class="sxs-lookup"><span data-stu-id="2194e-687">The references in the new list point to the same objects as the references in the original list.</span></span>  
  
 <span data-ttu-id="2194e-688">Skrócona kopia kolekcji typów wartości lub podzbiór tej kolekcji zawiera elementy kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-688">A shallow copy of a collection of value types, or a subset of that collection, contains the elements of the collection.</span></span> <span data-ttu-id="2194e-689">Jeśli jednak elementy kolekcji zawierają odwołania do innych obiektów, te obiekty nie są kopiowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-689">However, if the elements of the collection contain references to other objects, those objects are not copied.</span></span> <span data-ttu-id="2194e-690">Odwołania w elementach nowej kolekcji wskazują te same obiekty jak odwołania w elementach oryginalnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-690">The references in the elements of the new collection point to the same objects as the references in the elements of the original collection.</span></span>  
  
 <span data-ttu-id="2194e-691">Z kolei Szczegółowa kopia kolekcji Kopiuje elementy i wszystko bezpośrednio lub pośrednio odwołujące się do elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-691">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="2194e-692">Ta metoda jest operacją O (*n*), gdzie *n* jest `count`.</span><span class="sxs-lookup"><span data-stu-id="2194e-692">This method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-693">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.GetRange%2A> metodę i inne metody <xref:System.Collections.Generic.List%601> klasy, które działają na zakresach.</span><span class="sxs-lookup"><span data-stu-id="2194e-693">The following example demonstrates the <xref:System.Collections.Generic.List%601.GetRange%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="2194e-694">Na końcu przykładu <xref:System.Collections.Generic.List%601.GetRange%2A> Metoda jest używana do uzyskania trzech elementów z listy, rozpoczynając od lokalizacji indeksu 2.</span><span class="sxs-lookup"><span data-stu-id="2194e-694">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="2194e-695">Metoda jest wywoływana na skutek <xref:System.Collections.Generic.List%601>, tworząc tablicę trzech elementów. <xref:System.Collections.Generic.List%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-695">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="2194e-696">Wyświetlane są elementy tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-696">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-697"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-697"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-698">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-698">-or-</span></span> 
 <span data-ttu-id="2194e-699"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-699"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-700"><paramref name="index" />i <paramref name="count" /> nie należy wskazywać prawidłowego zakresu elementów <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-700"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-701">Zwraca indeks (liczony od zera) pierwszego wystąpienia wartości w <see cref="T:System.Collections.Generic.List`1" /> lub w części.</span><span class="sxs-lookup"><span data-stu-id="2194e-701">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="list.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-702">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-702">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-703">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-703">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="2194e-704">Wyszukuje określony obiekt i zwraca indeks (liczony od zera) pierwszego wystąpienia w całości <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-704">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-705">Indeks (liczony od zera) pierwszego wystąpienia <paramref name="item" /> w całości <see cref="T:System.Collections.Generic.List`1" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-705">The zero-based index of the first occurrence of <paramref name="item" /> within the entire <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-706"><xref:System.Collections.Generic.List%601> Jest przeszukiwany do przodu, zaczynając od pierwszego elementu i kończąc na ostatnim elemencie.</span><span class="sxs-lookup"><span data-stu-id="2194e-706">The <xref:System.Collections.Generic.List%601> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="2194e-707">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-707">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-708">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-708">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-709">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.IndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-709">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="2194e-710"><xref:System.Collections.Generic.List%601> Zostanie utworzony ciąg z jednym wpisem, który występuje dwa razy, w lokalizacji indeksu 0 i lokalizacji indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="2194e-710">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="2194e-711">Przeciążenie <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> metody przeszukuje listę od początku i odnajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-711">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="2194e-712">Przeciążenie <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> metody służy do przeszukiwania listy zaczynającej się od lokalizacji indeksu 3 i kontynuowania na końcu listy i znajdowania drugiego wystąpienia ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-712">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="2194e-713">Na koniec Przeciążenie metody służy do przeszukiwania zakresu dwóch wpisów, zaczynając od lokalizacji indeksu dwa; zwraca wartość-1, ponieważ w tym zakresie nie ma wystąpień ciągu wyszukiwania. <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="2194e-713">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-714">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-714">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int -&gt; int" Usage="list.IndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-715">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-715">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-716">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-716">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="index"><span data-ttu-id="2194e-717">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-717">The zero-based starting index of the search.</span></span> <span data-ttu-id="2194e-718">wartość 0 (zero) jest prawidłowa na pustej liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-718">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="2194e-719">Wyszukuje określony obiekt i zwraca indeks (liczony od zera) pierwszego wystąpienia w zakresie elementów w <see cref="T:System.Collections.Generic.List`1" /> elemencie, który rozciąga się od określonego indeksu do ostatniego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-719">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="2194e-720">Indeks (liczony od zera) pierwszego wystąpienia <paramref name="item" /> w zakresie elementów <see cref="T:System.Collections.Generic.List`1" /> w programie, który rozciąga się od <paramref name="index" /> do ostatniego elementu, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-720">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from <paramref name="index" /> to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-721">Jest przeszukiwany do przodu `index` i kończący się na ostatnim elemencie. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-721">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at the last element.</span></span>  
  
 <span data-ttu-id="2194e-722">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-722">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-723">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (*n*), gdzie *n* jest liczbą elementów od `index` do końca <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-723">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from `index` to the end of the <xref:System.Collections.Generic.List%601>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-724">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.IndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-724">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="2194e-725"><xref:System.Collections.Generic.List%601> Zostanie utworzony ciąg z jednym wpisem, który występuje dwa razy, w lokalizacji indeksu 0 i lokalizacji indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="2194e-725">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="2194e-726">Przeciążenie <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> metody przeszukuje listę od początku i odnajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-726">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="2194e-727">Przeciążenie <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> metody służy do przeszukiwania listy zaczynającej się od lokalizacji indeksu 3 i kontynuowania na końcu listy i znajdowania drugiego wystąpienia ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-727">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="2194e-728">Na koniec Przeciążenie metody służy do przeszukiwania zakresu dwóch wpisów, zaczynając od lokalizacji indeksu dwa; zwraca wartość-1, ponieważ w tym zakresie nie ma wystąpień ciągu wyszukiwania. <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="2194e-728">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-729"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-729"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-730">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-730">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : 'T * int * int -&gt; int" Usage="list.IndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-731">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-731">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-732">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-732">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="index"><span data-ttu-id="2194e-733">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-733">The zero-based starting index of the search.</span></span> <span data-ttu-id="2194e-734">wartość 0 (zero) jest prawidłowa na pustej liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-734">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-735">Liczba elementów w sekcji do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-735">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="2194e-736">Wyszukuje określony obiekt i zwraca indeks (liczony od zera) pierwszego wystąpienia w zakresie elementów w <see cref="T:System.Collections.Generic.List`1" /> obiekcie, który zaczyna się od określonego indeksu i zawiera określoną liczbę elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-736">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="2194e-737">Indeks (liczony od zera) pierwszego <paramref name="item" /> wystąpienia elementu <see cref="T:System.Collections.Generic.List`1" /> w zakresie, który zaczyna się <paramref name="index" /> od i zawiera <paramref name="count" /> liczbę elementów, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-737">The zero-based index of the first occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that starts at <paramref name="index" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-738">`count` `count` `index` `index` Program jest przeszukiwany do przodu, rozpoczynając od i kończąc o minus 1, jeśli jest większy niż 0. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-738">The <xref:System.Collections.Generic.List%601> is searched forward starting at `index` and ending at `index` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="2194e-739">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-739">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-740">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie `count`n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-740">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-741">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.IndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-741">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.IndexOf%2A> method.</span></span> <span data-ttu-id="2194e-742"><xref:System.Collections.Generic.List%601> Zostanie utworzony ciąg z jednym wpisem, który występuje dwa razy, w lokalizacji indeksu 0 i lokalizacji indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="2194e-742">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="2194e-743">Przeciążenie <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> metody przeszukuje listę od początku i odnajduje pierwsze wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-743">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%29> method overload searches the list from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="2194e-744">Przeciążenie <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> metody służy do przeszukiwania listy zaczynającej się od lokalizacji indeksu 3 i kontynuowania na końcu listy i znajdowania drugiego wystąpienia ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-744">The <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list beginning with index location 3 and continuing to the end of the list, and finds the second occurrence of the string.</span></span> <span data-ttu-id="2194e-745">Na koniec Przeciążenie metody służy do przeszukiwania zakresu dwóch wpisów, zaczynając od lokalizacji indeksu dwa; zwraca wartość-1, ponieważ w tym zakresie nie ma wystąpień ciągu wyszukiwania. <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="2194e-745">Finally, the <xref:System.Collections.Generic.List%601.IndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_IndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-746"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-746"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="2194e-747">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-747">-or-</span></span> 
 <span data-ttu-id="2194e-748"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-748"><paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-749">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-749">-or-</span></span> 
 <span data-ttu-id="2194e-750"><paramref name="index" />i <paramref name="count" /> nie określaj prawidłowej sekcji <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-750"><paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-751">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-751">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="list.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-752">Indeks (liczony od zera), <paramref name="item" /> który powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="2194e-752">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="2194e-753">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="2194e-753">The object to insert.</span></span> <span data-ttu-id="2194e-754">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-754">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="2194e-755">Wstawia element do <see cref="T:System.Collections.Generic.List`1" /> obiektu o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="2194e-755">Inserts an element into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-756"><xref:System.Collections.Generic.List%601>akceptuje `null` jako prawidłową wartość dla typów odwołań i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-756"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2194e-757">Jeśli <xref:System.Collections.Generic.List%601.Count%2A> już jest <xref:System.Collections.Generic.List%601.Capacity%2A>równa <xref:System.Collections.Generic.List%601> , Pojemność programu jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-757">If <xref:System.Collections.Generic.List%601.Count%2A> already equals <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="2194e-758">Jeśli `index` jest `item` <xref:System.Collections.Generic.List%601>równa, jest dodawany do końca. <xref:System.Collections.Generic.List%601.Count%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-758">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, `item` is added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-759">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-759">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="2194e-760">Poniższy przykład pokazuje, jak dodawać, usuwać i wstawiać prosty obiekt biznesowy w programie <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-760">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="2194e-761">Poniższy przykład demonstruje <xref:System.Collections.Generic.List%601.Insert%2A> metodę wraz z różnymi innymi właściwościami i metodami <xref:System.Collections.Generic.List%601> klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="2194e-761">The following example demonstrates the <xref:System.Collections.Generic.List%601.Insert%2A> method, along with various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="2194e-762">Po utworzeniu listy są dodawane elementy.</span><span class="sxs-lookup"><span data-stu-id="2194e-762">After the list is created, elements are added.</span></span> <span data-ttu-id="2194e-763"><xref:System.Collections.Generic.List%601.Insert%2A> Metoda służy do wstawiania elementu do środka listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-763">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert an item into the middle of the list.</span></span> <span data-ttu-id="2194e-764">Wstawiony element jest duplikatem, który został później usunięty przy użyciu <xref:System.Collections.Generic.List%601.Remove%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-764">The item inserted is a duplicate, which is later removed using the <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-765"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-765"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-766">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-766">-or-</span></span> 
 <span data-ttu-id="2194e-767"><paramref name="index" />jest większa niż <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-767"><paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public void InsertRange (int index, System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertRange(int32 index, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertRange (index As Integer, collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertRange(int index, System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.InsertRange : int * seq&lt;'T&gt; -&gt; unit" Usage="list.InsertRange (index, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-768">Indeks (liczony od zera), w którym należy wstawić nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="2194e-768">The zero-based index at which the new elements should be inserted.</span></span></param>
        <param name="collection"><span data-ttu-id="2194e-769">Kolekcja, której elementy powinny być wstawiane do <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-769">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-770">Sama kolekcja nie może być <see langword="null" />, ale może zawierać elementy, które są <see langword="null" />, jeśli typ <paramref name="T" /> jest typem referencyjnym.</span><span class="sxs-lookup"><span data-stu-id="2194e-770">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />, if type <paramref name="T" /> is a reference type.</span></span></param>
        <summary><span data-ttu-id="2194e-771">Wstawia elementy kolekcji do <see cref="T:System.Collections.Generic.List`1" /> określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="2194e-771">Inserts the elements of a collection into the <see cref="T:System.Collections.Generic.List`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-772"><xref:System.Collections.Generic.List%601>akceptuje `null` jako prawidłową wartość dla typów odwołań i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-772"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2194e-773">Jeśli nowy <xref:System.Collections.Generic.List%601.Count%2A> (bieżący <xref:System.Collections.Generic.List%601.Count%2A> i rozmiar kolekcji) będzie większy niż <xref:System.Collections.Generic.List%601.Capacity%2A>, pojemność <xref:System.Collections.Generic.List%601> jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej w celu uwzględnienia nowych elementów, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-773">If the new <xref:System.Collections.Generic.List%601.Count%2A> (the current <xref:System.Collections.Generic.List%601.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.Generic.List%601.Capacity%2A>, the capacity of the <xref:System.Collections.Generic.List%601> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="2194e-774">Jeśli `index` jest <xref:System.Collections.Generic.List%601>równa, elementy są dodawane na końcu. <xref:System.Collections.Generic.List%601.Count%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-774">If `index` is equal to <xref:System.Collections.Generic.List%601.Count%2A>, the elements are added to the end of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-775">Kolejność elementów w kolekcji jest zachowywana w <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-775">The order of the elements in the collection is preserved in the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-776">Ta metoda jest operacją o (*n* \* *m*), gdzie *n* to liczba elementów do dodania i m jest. \*\* <xref:System.Collections.Generic.List%601.Count%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-776">This method is an O(*n* \* *m*) operation, where *n* is the number of elements to be added and *m* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-777">Poniższy przykład demonstruje <xref:System.Collections.Generic.List%601.InsertRange%2A> metodę i różne inne metody <xref:System.Collections.Generic.List%601> klasy, które działają na zakresach.</span><span class="sxs-lookup"><span data-stu-id="2194e-777">The following example demonstrates <xref:System.Collections.Generic.List%601.InsertRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="2194e-778">Gdy lista została utworzona i uzupełniona o nazwy kilku pokojowych dinozaurów, Metoda ta <xref:System.Collections.Generic.List%601.InsertRange%2A> jest używana do wstawienia tablicy trzech ferociousów, które są dinozaurami do listy, rozpoczynając od lokalizacji indeksu 3.</span><span class="sxs-lookup"><span data-stu-id="2194e-778">After the list has been created and populated with the names of several peaceful plant-eating dinosaurs, the <xref:System.Collections.Generic.List%601.InsertRange%2A> method is used to insert an array of three ferocious meat-eating dinosaurs into the list, beginning at index location 3.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-779"><paramref name="collection" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-779"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-780"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-780"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-781">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-781">-or-</span></span> 
 <span data-ttu-id="2194e-782"><paramref name="index" />jest większa niż <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-782"><paramref name="index" /> is greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.Generic.List&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-783">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="2194e-783">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="2194e-784">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="2194e-784">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="2194e-785">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="2194e-785">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-786"><xref:System.Collections.Generic.List%601>akceptuje `null` jako prawidłową wartość dla typów odwołań i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-786"><xref:System.Collections.Generic.List%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="2194e-787">Ta właściwość zapewnia możliwość dostępu do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="2194e-787">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="2194e-788">Pobieranie wartości tej właściwości jest operacją O (1); ustawienie właściwości jest również operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="2194e-788">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-789">W przykładzie w tej sekcji przedstawiono <xref:System.Collections.Generic.List%601.Item%2A> Właściwość (indeksator w programie C#) i różne inne właściwości <xref:System.Collections.Generic.List%601> i metody klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="2194e-789">The example in this section demonstrates the <xref:System.Collections.Generic.List%601.Item%2A> property (the indexer in C#) and various other properties and methods of the <xref:System.Collections.Generic.List%601> generic class.</span></span> <span data-ttu-id="2194e-790">Po utworzeniu listy i wypełnieniu jej przy użyciu <xref:System.Collections.Generic.List%601.Add%2A> metody element jest pobierany i wyświetlany <xref:System.Collections.Generic.List%601.Item%2A> przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="2194e-790">After the list has been created and populated using the <xref:System.Collections.Generic.List%601.Add%2A> method, an element is retrieved and displayed using the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="2194e-791">(W przypadku przykładu korzystającego <xref:System.Collections.Generic.List%601.Item%2A> z właściwości w celu ustawienia wartości elementu listy Zobacz <xref:System.Collections.Generic.List%601.AsReadOnly%2A>).</span><span class="sxs-lookup"><span data-stu-id="2194e-791">(For an example that uses the <xref:System.Collections.Generic.List%601.Item%2A> property to set the value of a list element, see <xref:System.Collections.Generic.List%601.AsReadOnly%2A>.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2194e-792">Visual Basic, C#i C++ wszystkie mają składnię dostępu <xref:System.Collections.Generic.List%601.Item%2A> do właściwości bez użycia jej nazwy.</span><span class="sxs-lookup"><span data-stu-id="2194e-792">Visual Basic, C#, and C++ all have syntax for accessing the <xref:System.Collections.Generic.List%601.Item%2A> property without using its name.</span></span> <span data-ttu-id="2194e-793">Zamiast tego zmienna zawierająca <xref:System.Collections.Generic.List%601> jest używana tak, jakby była tablicą.</span><span class="sxs-lookup"><span data-stu-id="2194e-793">Instead, the variable containing the <xref:System.Collections.Generic.List%601> is used as if it were an array.</span></span>  
  
 <span data-ttu-id="2194e-794">C# Język używa [`this`](~/docs/csharp/language-reference/keywords/this.md) słowa kluczowego do definiowania indeksatorów <xref:System.Collections.Generic.List%601.Item%2A> zamiast implementowania właściwości.</span><span class="sxs-lookup"><span data-stu-id="2194e-794">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.Item%2A> property.</span></span> <span data-ttu-id="2194e-795">Visual Basic implementuje <xref:System.Collections.Generic.List%601.Item%2A> jako właściwość domyślną, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-795">Visual Basic implements <xref:System.Collections.Generic.List%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 [!code-csharp[List`1_Class#2](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#2)]
 [!code-vb[List`1_Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#2)]  
[!code-csharp[List`1_Class#3](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#3)]
[!code-vb[List`1_Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-796"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-796"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-797">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-797">-or-</span></span> 
 <span data-ttu-id="2194e-798"><paramref name="index" />jest równa lub większa niż <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-798"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-799">Zwraca indeks (liczony od zera) ostatniego wystąpienia wartości w <see cref="T:System.Collections.Generic.List`1" /> lub w części.</span><span class="sxs-lookup"><span data-stu-id="2194e-799">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.Generic.List`1" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T -&gt; int" Usage="list.LastIndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-800">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-800">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-801">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-801">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="2194e-802">Wyszukuje określony obiekt i zwraca indeks (liczony od zera) ostatniego wystąpienia w całości <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-802">Searches for the specified object and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-803">Indeks (liczony od zera) ostatniego wystąpienia <paramref name="item" /> w <see cref="T:System.Collections.Generic.List`1" />całości, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-803">The zero-based index of the last occurrence of <paramref name="item" /> within the entire the <see cref="T:System.Collections.Generic.List`1" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-804"><xref:System.Collections.Generic.List%601> Jest przeszukiwany wstecz od ostatniego elementu i kończący się na pierwszym elemencie.</span><span class="sxs-lookup"><span data-stu-id="2194e-804">The <xref:System.Collections.Generic.List%601> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="2194e-805">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-805">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-806">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-806">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-807">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.LastIndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-807">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="2194e-808"><xref:System.Collections.Generic.List%601> Zostanie utworzony ciąg z jednym wpisem, który występuje dwa razy, w lokalizacji indeksu 0 i lokalizacji indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="2194e-808">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="2194e-809">Przeciążenie <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> metody przeszukuje całą listę od końca i znajduje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-809">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="2194e-810">Przeciążenie <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> metody służy do przeszukiwania listy wstecz Zaczynając od lokalizacji indeksu 3 i kontynuowania na początku listy, dlatego Znajdź pierwsze wystąpienie ciągu na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-810">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="2194e-811">Na koniec metoda przeciążenia jest używana do wyszukiwania zakresu czterech wpisów, rozpoczynając od lokalizacji indeksu 4 i rozszerzania do tyłu (to znaczy przeszukuje elementy w lokalizacjach 4, 3, 2 i 1). Wyszukiwanie zwraca wartość-1, ponieważ nie ma wystąpień wyszukiwania <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> ciąg w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="2194e-811">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-812">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-812">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int -&gt; int" Usage="list.LastIndexOf (item, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-813">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-813">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-814">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-814">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="index"><span data-ttu-id="2194e-815">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span><span class="sxs-lookup"><span data-stu-id="2194e-815">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="2194e-816">Wyszukuje określony obiekt i zwraca indeks (liczony od zera) ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Collections.Generic.List`1" /> elemencie, który rozciąga się od pierwszego elementu do określonego indeksu.</span><span class="sxs-lookup"><span data-stu-id="2194e-816">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="2194e-817">Indeks (liczony od zera) ostatniego wystąpienia <paramref name="item" /> w zakresie elementów <see cref="T:System.Collections.Generic.List`1" /> w programie, który rozciąga się od pierwszego elementu do <paramref name="index" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-817">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that extends from the first element to <paramref name="index" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-818">Jest przeszukiwany wstecz od początku `index` i kończąc na pierwszym elemencie. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-818">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at the first element.</span></span>  
  
 <span data-ttu-id="2194e-819">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-819">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-820">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (*n*), gdzie *n* jest liczbą elementów od <xref:System.Collections.Generic.List%601> początku do. `index`</span><span class="sxs-lookup"><span data-stu-id="2194e-820">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is the number of elements from the beginning of the <xref:System.Collections.Generic.List%601> to `index`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-821">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.LastIndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-821">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="2194e-822"><xref:System.Collections.Generic.List%601> Zostanie utworzony ciąg z jednym wpisem, który występuje dwa razy, w lokalizacji indeksu 0 i lokalizacji indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="2194e-822">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="2194e-823">Przeciążenie <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> metody przeszukuje całą listę od końca i znajduje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-823">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="2194e-824">Przeciążenie <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> metody służy do przeszukiwania listy wstecz Zaczynając od lokalizacji indeksu 3 i kontynuowania na początku listy, dlatego Znajdź pierwsze wystąpienie ciągu na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-824">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="2194e-825">Na koniec metoda przeciążenia jest używana do wyszukiwania zakresu czterech wpisów, rozpoczynając od lokalizacji indeksu 4 i rozszerzania do tyłu (to znaczy przeszukuje elementy w lokalizacjach 4, 3, 2 i 1). Wyszukiwanie zwraca wartość-1, ponieważ nie ma wystąpień wyszukiwania <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> ciąg w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="2194e-825">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-826"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-826"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-827">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-827">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (T item, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(!T item, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (item As T, index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(T item, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : 'T * int * int -&gt; int" Usage="list.LastIndexOf (item, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-828">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-828">The object to locate in the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-829">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-829">The value can be <see langword="null" /> for reference types.</span></span></param>
        <param name="index"><span data-ttu-id="2194e-830">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span><span class="sxs-lookup"><span data-stu-id="2194e-830">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-831">Liczba elementów w sekcji do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="2194e-831">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="2194e-832">Wyszukuje określony obiekt i zwraca indeks (liczony od zera) ostatniego wystąpienia w zakresie elementów w <see cref="T:System.Collections.Generic.List`1" /> elemencie, który zawiera określoną liczbę elementów i kończą się określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="2194e-832">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="2194e-833">Indeks (liczony od zera) ostatniego <paramref name="item" /> wystąpienia elementu <see cref="T:System.Collections.Generic.List`1" /> w zakresie, który zawiera <paramref name="count" /> liczbę elementów i kończą się o <paramref name="index" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-833">The zero-based index of the last occurrence of <paramref name="item" /> within the range of elements in the <see cref="T:System.Collections.Generic.List`1" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="index" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-834">`count` `count` `index` `index` Program jest przeszukiwany wstecz od i kończąc od minusa plus 1, jeśli jest większy niż 0. <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-834">The <xref:System.Collections.Generic.List%601> is searched backward starting at `index` and ending at `index` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="2194e-835">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-835">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-836">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie `count`n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-836">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-837">Poniższy przykład ilustruje wszystkie trzy przeciążenia <xref:System.Collections.Generic.List%601.LastIndexOf%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-837">The following example demonstrates all three overloads of the <xref:System.Collections.Generic.List%601.LastIndexOf%2A> method.</span></span> <span data-ttu-id="2194e-838"><xref:System.Collections.Generic.List%601> Zostanie utworzony ciąg z jednym wpisem, który występuje dwa razy, w lokalizacji indeksu 0 i lokalizacji indeksu 5.</span><span class="sxs-lookup"><span data-stu-id="2194e-838">A <xref:System.Collections.Generic.List%601> of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="2194e-839">Przeciążenie <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> metody przeszukuje całą listę od końca i znajduje drugie wystąpienie ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-839">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%29> method overload searches the entire list from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="2194e-840">Przeciążenie <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> metody służy do przeszukiwania listy wstecz Zaczynając od lokalizacji indeksu 3 i kontynuowania na początku listy, dlatego Znajdź pierwsze wystąpienie ciągu na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-840">The <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%29> method overload is used to search the list backward beginning with index location 3 and continuing to the beginning of the list, so it finds the first occurrence of the string in the list.</span></span> <span data-ttu-id="2194e-841">Na koniec metoda przeciążenia jest używana do wyszukiwania zakresu 4 wpisów, rozpoczynając od lokalizacji indeksu 4 i rozszerzania do tyłu (to oznacza, że przeszukuje elementy w lokalizacjach 4, 3, 2 i 1). Wyszukiwanie zwraca wartość-1, ponieważ nie ma wystąpień wyszukiwania <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> ciąg w tym zakresie.</span><span class="sxs-lookup"><span data-stu-id="2194e-841">Finally, the <xref:System.Collections.Generic.List%601.LastIndexOf%28%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of 4 entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns -1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[List\`1_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[List\`1_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_LastIndexOf/cs/source.cs#1)]
 [!code-vb[List\`1_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-842"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-842"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="2194e-843">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-843">-or-</span></span> 
 <span data-ttu-id="2194e-844"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-844"><paramref name="count" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-845">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-845">-or-</span></span> 
 <span data-ttu-id="2194e-846"><paramref name="index" />i <paramref name="count" /> nie określaj prawidłowej sekcji <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-846"><paramref name="index" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Contains(`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-847">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-847">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="list.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-848">Obiekt, który ma zostać usunięty <see cref="T:System.Collections.Generic.List`1" />z.</span><span class="sxs-lookup"><span data-stu-id="2194e-848">The object to remove from the <see cref="T:System.Collections.Generic.List`1" />.</span></span> <span data-ttu-id="2194e-849">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="2194e-849">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="2194e-850">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-850">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-851"><see langword="true" />Jeśli <paramref name="item" /> program<see langword="false" />został pomyślnie usunięty; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2194e-851"><see langword="true" /> if <paramref name="item" /> is successfully removed; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="2194e-852">Ta metoda zwraca również <see langword="false" /> wartość <paramref name="item" /> , <see cref="T:System.Collections.Generic.List`1" />Jeśli nie została znaleziona w.</span><span class="sxs-lookup"><span data-stu-id="2194e-852">This method also returns <see langword="false" /> if <paramref name="item" /> was not found in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-853">Jeśli typ `T` <xref:System.IEquatable%601.Equals%2A> implementuje interfejs <xref:System.Object.Equals%2A?displayProperty=nameWithType>ogólny, funkcja porównująca równość jest metodą tego interfejsu; w przeciwnym razie domyślna funkcja porównująca równość to. <xref:System.IEquatable%601></span><span class="sxs-lookup"><span data-stu-id="2194e-853">If type `T` implements the <xref:System.IEquatable%601> generic interface, the equality comparer is the <xref:System.IEquatable%601.Equals%2A> method of that interface; otherwise, the default equality comparer is <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2194e-854">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-854">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="2194e-855">Poniższy przykład pokazuje, jak dodawać, usuwać i wstawiać prosty obiekt biznesowy w programie <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-855">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 <span data-ttu-id="2194e-856">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Remove%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="2194e-856">The following example demonstrates <xref:System.Collections.Generic.List%601.Remove%2A> method.</span></span> <span data-ttu-id="2194e-857">Kilka właściwości i metod <xref:System.Collections.Generic.List%601> klasy generycznej służy do dodawania, wstawiania i wyszukiwania listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-857">Several properties and methods of the <xref:System.Collections.Generic.List%601> generic class are used to add, insert, and search the list.</span></span> <span data-ttu-id="2194e-858">Po wykonaniu tych operacji lista zawiera duplikat.</span><span class="sxs-lookup"><span data-stu-id="2194e-858">After these operations, the list contains a duplicate.</span></span> <span data-ttu-id="2194e-859"><xref:System.Collections.Generic.List%601.Remove%2A> Metoda jest używana do usuwania pierwszego wystąpienia zduplikowanego elementu, a zawartość zostanie wyświetlona.</span><span class="sxs-lookup"><span data-stu-id="2194e-859">The <xref:System.Collections.Generic.List%601.Remove%2A> method is used to remove the first instance of the duplicate item, and the contents are displayed.</span></span> <span data-ttu-id="2194e-860"><xref:System.Collections.Generic.List%601.Remove%2A> Metoda zawsze usuwa pierwsze wystąpienie, które napotka.</span><span class="sxs-lookup"><span data-stu-id="2194e-860">The <xref:System.Collections.Generic.List%601.Remove%2A> method always removes the first instance it encounters.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-861">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-861">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public int RemoveAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 RemoveAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int RemoveAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : Predicate&lt;'T&gt; -&gt; int" Usage="list.RemoveAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="2194e-862"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki elementów do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2194e-862">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.</span></span></param>
        <summary><span data-ttu-id="2194e-863">Usuwa wszystkie elementy, które pasują do warunków zdefiniowanych przez określony predykat.</span><span class="sxs-lookup"><span data-stu-id="2194e-863">Removes all the elements that match the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="2194e-864">Liczba elementów usuniętych z <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-864">The number of elements removed from the <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-865">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-865">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-866">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przenoszone <xref:System.Predicate%601> do delegata, a elementy, które pasują do <xref:System.Collections.Generic.List%601>warunków, są usuwane z.</span><span class="sxs-lookup"><span data-stu-id="2194e-866">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and the elements that match the conditions are removed from the <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="2194e-867">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-867">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-868">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.RemoveAll%2A> metodę i kilka innych metod, które <xref:System.Predicate%601> używają delegata ogólnego.</span><span class="sxs-lookup"><span data-stu-id="2194e-868">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveAll%2A> method and several other methods that use the <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="2194e-869">Tworzony jest ciąg z 8. nazwami, z których dwa są (w pozycjach 1 i 5) kończą się znakiem "saurus". <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-869">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="2194e-870">W przykładzie zdefiniowano także metodę predykatu wyszukiwania `EndsWithSaurus`o nazwie, która akceptuje parametr String i zwraca wartość logiczną wskazującą, czy ciąg wejściowy jest kończący się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="2194e-870">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="2194e-871">Metody <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, i<xref:System.Collections.Generic.List%601.FindAll%2A> są używane do przeszukiwania listy za pomocą metody predykatu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2194e-871">The <xref:System.Collections.Generic.List%601.Find%2A>, <xref:System.Collections.Generic.List%601.FindLast%2A>, and <xref:System.Collections.Generic.List%601.FindAll%2A> methods are used to search the list with the search predicate method.</span></span>  
  
 <span data-ttu-id="2194e-872"><xref:System.Collections.Generic.List%601.RemoveAll%2A> Metoda służy do usuwania wszystkich wpisów kończących się ciągiem "saurus".</span><span class="sxs-lookup"><span data-stu-id="2194e-872">The <xref:System.Collections.Generic.List%601.RemoveAll%2A> method is used to remove all entries ending with "saurus".</span></span> <span data-ttu-id="2194e-873">Przechodzi na listę od początku, przekazując każdy element z kolei do `EndsWithSaurus` metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-873">It traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="2194e-874">Element jest usuwany, jeśli `EndsWithSaurus` Metoda zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="2194e-874">The element is removed if the `EndsWithSaurus` method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2194e-875">W C# i Visual Basic nie jest konieczne jawne utworzenie `Predicate<string>` delegata (`Predicate(Of String)` w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2194e-875">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="2194e-876">W tych językach zostanie wywnioskowany poprawny delegat z kontekstu i utworzony automatycznie.</span><span class="sxs-lookup"><span data-stu-id="2194e-876">These languages infer the correct delegate from context, and create it automatically.</span></span>  
  
 <span data-ttu-id="2194e-877">Na <xref:System.Collections.Generic.List%601.Exists%2A> koniec metoda weryfikuje, czy na liście nie ma żadnych ciągów kończących się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="2194e-877">Finally, the <xref:System.Collections.Generic.List%601.Exists%2A> method verifies that there are no strings in the list that end with "saurus".</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-878"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-878"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="list.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-879">Indeks (liczony od zera) elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2194e-879">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="2194e-880">Usuwa element w określonym indeksie <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-880">Removes the element at the specified index of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-881">Po wywołaniu <xref:System.Collections.Generic.List%601.RemoveAt%2A> usunięcia elementu pozostałe elementy na liście są ponownie numerowane w celu zastąpienia usuniętego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-881">When you call <xref:System.Collections.Generic.List%601.RemoveAt%2A> to remove an item, the remaining items in the list are renumbered to replace the removed item.</span></span> <span data-ttu-id="2194e-882">Na przykład, jeśli usuniesz element o indeksie 3, element pod indeksem 4 zostanie przeniesiony do pozycji 3.</span><span class="sxs-lookup"><span data-stu-id="2194e-882">For example, if you remove the item at index 3, the item at index 4 is moved to the 3 position.</span></span> <span data-ttu-id="2194e-883">Ponadto liczba elementów na liście (w formie reprezentowanej przez <xref:System.Collections.Generic.List%601.Count%2A> Właściwość) jest ograniczona przez 1.</span><span class="sxs-lookup"><span data-stu-id="2194e-883">In addition, the number of items in the list (as represented by the <xref:System.Collections.Generic.List%601.Count%2A> property) is reduced by 1.</span></span>  
  
 <span data-ttu-id="2194e-884">Ta metoda jest operacją O (*n*), gdzie *n* to (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span><span class="sxs-lookup"><span data-stu-id="2194e-884">This method is an O(*n*) operation, where *n* is (<xref:System.Collections.Generic.List%601.Count%2A> - `index`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-885">Poniższy przykład pokazuje, jak dodawać, usuwać i wstawiać prosty obiekt biznesowy w programie <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="2194e-885">The following example demonstrates how to add, remove, and insert a simple business object in a <xref:System.Collections.Generic.List%601>.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/vb/module1.vb#1)]  
 [!code-fsharp[System.Collections.Generic.List.AddRemoveInsert#1](~/samples/snippets/fsharp/VS_Snippets_CLR_System/system.collections.generic.list.addremoveinsert/fs/addremoveinsert.fs#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-886"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-886"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-887">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-887">-or-</span></span> 
 <span data-ttu-id="2194e-888"><paramref name="index" />jest równa lub większa niż <see cref="P:System.Collections.Generic.List`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-888"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.Generic.List`1.Count" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.Add(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.RemoveRange : int * int -&gt; unit" Usage="list.RemoveRange (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-889">Początkowy indeks (liczony od zera) zakresu elementów do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2194e-889">The zero-based starting index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-890">Liczba elementów do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="2194e-890">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="2194e-891">Usuwa zakres elementów z <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-891">Removes a range of elements from the <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-892">Elementy zostaną usunięte, a wszystkie elementy po nich <xref:System.Collections.Generic.List%601> są ograniczone przez. `count`</span><span class="sxs-lookup"><span data-stu-id="2194e-892">The items are removed and all the elements following them in the <xref:System.Collections.Generic.List%601> have their indexes reduced by `count`.</span></span>  
  
 <span data-ttu-id="2194e-893">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-893">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-894">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.RemoveRange%2A> metodę i różne inne metody <xref:System.Collections.Generic.List%601> klasy, które działają na zakresach.</span><span class="sxs-lookup"><span data-stu-id="2194e-894">The following example demonstrates the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method and various other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="2194e-895">Po utworzeniu i zmodyfikowaniu <xref:System.Collections.Generic.List%601.RemoveRange%2A> listy Metoda jest używana do usuwania dwóch elementów z listy, rozpoczynając od lokalizacji indeksu 2.</span><span class="sxs-lookup"><span data-stu-id="2194e-895">After the list has been created and modified, the <xref:System.Collections.Generic.List%601.RemoveRange%2A> method is used to remove two elements from the list, beginning at index location 2.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-896"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-896"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-897">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-897">-or-</span></span> 
 <span data-ttu-id="2194e-898"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-898"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-899"><paramref name="index" />i <paramref name="count" /> nie należy wskazywać prawidłowego zakresu elementów <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-899"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Remove(`0)" />
        <altmember cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <altmember cref="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-900">Odwraca kolejność elementów w <see cref="T:System.Collections.Generic.List`1" /> lub jej części.</span><span class="sxs-lookup"><span data-stu-id="2194e-900">Reverses the order of the elements in the <see cref="T:System.Collections.Generic.List`1" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="list.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-901">Odwraca kolejność elementów w całości <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-901">Reverses the order of the elements in the entire <see cref="T:System.Collections.Generic.List`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-902">Ta metoda używa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> do odwrócenia kolejności elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-902">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="2194e-903">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-903">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-904">Poniższy przykład ilustruje oba przeciążenia <xref:System.Collections.Generic.List%601.Reverse%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-904">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="2194e-905">Przykład tworzy <xref:System.Collections.Generic.List%601> ciągi i dodaje sześć ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-905">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="2194e-906">Przeciążenie metody jest używane do odwrócenia listy, a <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> następnie Przeciążenie metody jest używany do odwrócenia środka listy, zaczynając od elementu 1 i obejmującego cztery elementy. <xref:System.Collections.Generic.List%601.Reverse></span><span class="sxs-lookup"><span data-stu-id="2194e-906">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse(int index, int count);" />
      <MemberSignature Language="F#" Value="member this.Reverse : int * int -&gt; unit" Usage="list.Reverse (index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-907">Początkowy indeks (liczony od zera) zakresu do odwrócenia.</span><span class="sxs-lookup"><span data-stu-id="2194e-907">The zero-based starting index of the range to reverse.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-908">Liczba elementów w zakresie do odwrócenia.</span><span class="sxs-lookup"><span data-stu-id="2194e-908">The number of elements in the range to reverse.</span></span></param>
        <summary><span data-ttu-id="2194e-909">Odwraca kolejność elementów w określonym zakresie.</span><span class="sxs-lookup"><span data-stu-id="2194e-909">Reverses the order of the elements in the specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-910">Ta metoda używa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> do odwrócenia kolejności elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-910">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements.</span></span>  
  
 <span data-ttu-id="2194e-911">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-911">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-912">Poniższy przykład ilustruje oba przeciążenia <xref:System.Collections.Generic.List%601.Reverse%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-912">The following example demonstrates both overloads of the <xref:System.Collections.Generic.List%601.Reverse%2A> method.</span></span> <span data-ttu-id="2194e-913">Przykład tworzy <xref:System.Collections.Generic.List%601> ciągi i dodaje sześć ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-913">The example creates a <xref:System.Collections.Generic.List%601> of strings and adds six strings.</span></span> <span data-ttu-id="2194e-914">Przeciążenie metody jest używane do odwrócenia listy, a <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> następnie Przeciążenie metody jest używany do odwrócenia środka listy, zaczynając od elementu 1 i obejmującego cztery elementy. <xref:System.Collections.Generic.List%601.Reverse></span><span class="sxs-lookup"><span data-stu-id="2194e-914">The <xref:System.Collections.Generic.List%601.Reverse> method overload is used to reverse the list, and then the <xref:System.Collections.Generic.List%601.Reverse%28System.Int32%2CSystem.Int32%29> method overload is used to reverse the middle of the list, beginning with element 1 and encompassing four elements.</span></span>  
  
 [!code-cpp[List\`1_Reverse#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Reverse/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Reverse/cs/source.cs#1)]
 [!code-vb[List\`1_Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Reverse/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-915"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-915"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-916">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-916">-or-</span></span> 
 <span data-ttu-id="2194e-917"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-917"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-918"><paramref name="index" />i <paramref name="count" /> nie należy wskazywać prawidłowego zakresu elementów <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-918"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2194e-919">Sortuje elementy lub część elementów w programie <see cref="T:System.Collections.Generic.List`1" /> przy użyciu określonej lub domyślnej <see cref="T:System.Collections.Generic.IComparer`1" /> implementacji lub podanego <see cref="T:System.Comparison`1" /> delegata do porównania elementów listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-919">Sorts the elements or a portion of the elements in the <see cref="T:System.Collections.Generic.List`1" /> using either the specified or default <see cref="T:System.Collections.Generic.IComparer`1" /> implementation or a provided <see cref="T:System.Comparison`1" /> delegate to compare list elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="list.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-920">Sortuje elementy w całości <see cref="T:System.Collections.Generic.List`1" /> przy użyciu domyślnej funkcji porównującej.</span><span class="sxs-lookup"><span data-stu-id="2194e-920">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the default comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-921">Ta metoda używa domyślnej wartości porównującej <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> dla typu `T` w celu określenia kolejności elementów listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-921">This method uses the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> for type `T` to determine the order of list elements.</span></span> <span data-ttu-id="2194e-922">Właściwość sprawdza, czy typ `T` implementuje <xref:System.IComparable%601> interfejs generyczny i używa tej implementacji, jeśli jest dostępny. <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="2194e-922">The <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> property checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="2194e-923">Jeśli nie, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> Sprawdź, czy `T` typ implementuje <xref:System.IComparable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="2194e-923">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="2194e-924">Jeśli typ `T` nie implementuje żadnego interfejsu, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-924">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-925">Ta metoda używa <xref:System.Array.Sort%2A?displayProperty=nameWithType> metody, która stosuje sortowanie algorytmu w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="2194e-925">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="2194e-926">Jeśli rozmiar partycji jest mniejszy niż 16 elementów, używa algorytmu sortowania wstawiania.</span><span class="sxs-lookup"><span data-stu-id="2194e-926">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="2194e-927">Jeśli liczba partycji przekracza 2 log *n*, gdzie *n* jest zakresem tablicy wejściowej, używa algorytmu kopcowanie.</span><span class="sxs-lookup"><span data-stu-id="2194e-927">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="2194e-928">W przeciwnym razie używa algorytmu sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-928">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="2194e-929">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="2194e-929">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="2194e-930">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="2194e-930">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="2194e-931">Średnio ta metoda jest operacją o (*n* log *n*), gdzie *n* <xref:System.Collections.Generic.List%601.Count%2A>to; w najgorszym przypadku jest to operacja o (*n*<sup>2</sup>).</span><span class="sxs-lookup"><span data-stu-id="2194e-931">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-932">Poniższy przykład dodaje nazwy do `List<String>` obiektu, wyświetla listę w kolejności niesortowanej, <xref:System.Collections.Generic.List%601.Sort%2A> wywołuje metodę, a następnie wyświetla posortowaną listę.</span><span class="sxs-lookup"><span data-stu-id="2194e-932">The following example adds some names to a `List<String>` object, displays the list in unsorted order, calls the <xref:System.Collections.Generic.List%601.Sort%2A> method, and then displays the sorted list.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/Sort1.cs#2)]
 [!code-vb[System.Collections.Generic.List.Sort#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/Sort1.vb#2)]  
  
 <span data-ttu-id="2194e-933">Poniższy kod ilustruje <xref:System.Collections.Generic.List%601.Sort> przeciążenia metody i <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> w prostym obiekcie biznesowym.</span><span class="sxs-lookup"><span data-stu-id="2194e-933">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort> and <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overloads on a simple business object.</span></span> <span data-ttu-id="2194e-934">Wywołanie metody powoduje użycie domyślnej funkcji porównującej dla typu części, <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> a metoda jest implementowana przy użyciu metody anonimowej. <xref:System.Collections.Generic.List%601.Sort></span><span class="sxs-lookup"><span data-stu-id="2194e-934">Calling the <xref:System.Collections.Generic.List%601.Sort> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method is implemented by using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="2194e-935">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Sort> Przeciążenie metody <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> i Przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-935">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload.</span></span> <span data-ttu-id="2194e-936"><xref:System.Collections.Generic.List%601> Ciąg jest tworzony i wypełniany czterema ciągami, w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="2194e-936">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="2194e-937">Lista zostanie wyświetlona, posortowana i wyświetlona ponownie.</span><span class="sxs-lookup"><span data-stu-id="2194e-937">The list is displayed, sorted, and displayed again.</span></span>  
  
 <span data-ttu-id="2194e-938">Przeciążenie metody jest następnie używane do wyszukiwania dwóch ciągów, które nie znajdują się na liście, <xref:System.Collections.Generic.List%601.Insert%2A> a metoda jest używana do ich wstawiania. <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29></span><span class="sxs-lookup"><span data-stu-id="2194e-938">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%29> method overload is then used to search for two strings that are not in the list, and the <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert them.</span></span> <span data-ttu-id="2194e-939">Wartość <xref:System.Collections.Generic.List%601.BinarySearch%2A> zwracana metody jest ujemna w każdym przypadku, ponieważ ciągi nie znajdują się na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-939">The return value of the <xref:System.Collections.Generic.List%601.BinarySearch%2A> method is negative in each case, because the strings are not in the list.</span></span> <span data-ttu-id="2194e-940">Przejęcie bitowego uzupełniania (operator ~ w C# i C++Wizualizacja `Xor` ,-1 w Visual Basic) tej liczby ujemnej daje indeks pierwszego elementu na liście, który jest większy niż ciąg wyszukiwania i wstawiania w tej lokalizacji zachowuje porządek sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-940">Taking the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of this negative number produces the index of the first element in the list that is larger than the search string, and inserting at this location preserves the sort order.</span></span> <span data-ttu-id="2194e-941">Drugi ciąg wyszukiwania jest większy niż dowolny element na liście, więc pozycja wstawiania znajduje się na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-941">The second search string is larger than any element in the list, so the insertion position is at the end of the list.</span></span>  
  
 [!code-cpp[List\`1_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearch/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2194e-942">Domyślna funkcja porównująca <see cref="P:System.Collections.Generic.Comparer`1.Default" /> nie może znaleźć implementacji <see cref="T:System.IComparable`1" /> interfejsu generycznego lub <see cref="T:System.IComparable" /> interfejsu dla typu <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-942">The default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find an implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-943">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-943">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="2194e-944">Implementacja do użycia podczas porównywania elementów lub <see langword="null" /> używania domyślnego programu porównującego <see cref="P:System.Collections.Generic.Comparer`1.Default" />. <see cref="T:System.Collections.Generic.IComparer`1" /></span><span class="sxs-lookup"><span data-stu-id="2194e-944">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="2194e-945">Sortuje elementy w całości <see cref="T:System.Collections.Generic.List`1" /> przy użyciu określonej funkcji porównującej.</span><span class="sxs-lookup"><span data-stu-id="2194e-945">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-946">Jeśli `comparer` jest podany, elementy <xref:System.Collections.Generic.List%601> elementu są sortowane przy użyciu określonej <xref:System.Collections.Generic.IComparer%601> implementacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-946">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="2194e-947">Jeśli `comparer` jest `null`, domyślna funkcja porównująca <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> sprawdza, `T` czy typ <xref:System.IComparable%601> implementuje interfejs generyczny i używa tej implementacji, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="2194e-947">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="2194e-948">Jeśli nie, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> Sprawdź, czy `T` typ implementuje <xref:System.IComparable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="2194e-948">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="2194e-949">Jeśli typ `T` nie implementuje żadnego interfejsu, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-949">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-950">Ta metoda używa <xref:System.Array.Sort%2A?displayProperty=nameWithType> metody, która stosuje sortowanie algorytmu w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="2194e-950">This method uses the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="2194e-951">Jeśli rozmiar partycji jest mniejszy niż 16 elementów, używa algorytmu sortowania wstawiania.</span><span class="sxs-lookup"><span data-stu-id="2194e-951">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm.</span></span>  
  
-   <span data-ttu-id="2194e-952">Jeśli liczba partycji przekracza 2 log *n*, gdzie *n* jest zakresem tablicy wejściowej, używa algorytmu kopcowanie.</span><span class="sxs-lookup"><span data-stu-id="2194e-952">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a Heapsort algorithm.</span></span>  
  
-   <span data-ttu-id="2194e-953">W przeciwnym razie używa algorytmu sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-953">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="2194e-954">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="2194e-954">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="2194e-955">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="2194e-955">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="2194e-956">Średnio ta metoda jest operacją o (*n* log *n*), gdzie *n* <xref:System.Collections.Generic.List%601.Count%2A>to; w najgorszym przypadku jest to operacja o (*n*<sup>2</sup>).</span><span class="sxs-lookup"><span data-stu-id="2194e-956">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-957">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> Przeciążenie metody <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> i Przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-957">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="2194e-958">W przykładzie zdefiniowano alternatywną funkcję porównującą dla ciągów o nazwie DinoCompare `IComparer<string>` ,`IComparer(Of String)` która implementuje interfejs `IComparer<String^>` ogólny ( C++w Visual Basic w języku Visual).</span><span class="sxs-lookup"><span data-stu-id="2194e-958">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="2194e-959">Moduł porównujący działa w następujący sposób: Najpierw comparands są testowane dla `null`, a odwołanie o wartości null jest traktowane jako mniejsze niż wartość null.</span><span class="sxs-lookup"><span data-stu-id="2194e-959">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="2194e-960">W drugim, długości ciągu są porównywane, a dłuższy ciąg jest uznawany za większy.</span><span class="sxs-lookup"><span data-stu-id="2194e-960">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="2194e-961">Trzecia, jeśli długości są równe, używane jest zwykłe Porównywanie ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-961">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="2194e-962"><xref:System.Collections.Generic.List%601> Ciąg jest tworzony i wypełniany czterema ciągami, w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="2194e-962">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="2194e-963">Zostanie wyświetlona lista, posortowana przy użyciu alternatywnej funkcji porównującej i ponownie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="2194e-963">The list is displayed, sorted using the alternate comparer, and displayed again.</span></span>  
  
 <span data-ttu-id="2194e-964">Przeciążenie <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> metody jest następnie używane do wyszukiwania kilku ciągów, które nie znajdują się na liście, przy użyciu alternatywnego porównania.</span><span class="sxs-lookup"><span data-stu-id="2194e-964">The <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search for several strings that are not in the list, employing the alternate comparer.</span></span> <span data-ttu-id="2194e-965"><xref:System.Collections.Generic.List%601.Insert%2A> Metoda jest używana do wstawiania ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-965">The <xref:System.Collections.Generic.List%601.Insert%2A> method is used to insert the strings.</span></span> <span data-ttu-id="2194e-966">Te dwie metody znajdują się w funkcji o `SearchAndInsert`nazwie, wraz z kodem, aby przyjmować użycie bitowe (operator ~ w C# i C++Wizualizacja `Xor` ,-1 w Visual Basic) liczb ujemnych zwracanych <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> przez i używać go jako indeks służący do wstawiania nowego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-966">These two methods are located in the function named `SearchAndInsert`, along with code to take the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by <xref:System.Collections.Generic.List%601.BinarySearch%28%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> and use it as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2194e-967"><paramref name="comparer" />jest <see langword="null" />, a domyślna funkcja porównująca <see cref="T:System.IComparable`1" /> <see cref="P:System.Collections.Generic.Comparer`1.Default" /> nie może znaleźć implementacji interfejsu generycznego lub <see cref="T:System.IComparable" /> interfejsu dla typu <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-967"><paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-968">Implementacja <paramref name="comparer" /> spowodowała błąd podczas sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-968">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="2194e-969">Na przykład, <paramref name="comparer" /> program nie może zwrócić wartości 0 podczas porównywania elementu z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="2194e-969">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-970">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-970">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="member this.Sort : Comparison&lt;'T&gt; -&gt; unit" Usage="list.Sort comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison"><span data-ttu-id="2194e-971"><see cref="T:System.Comparison`1" /> Do użycia podczas porównywania elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-971">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span></span></param>
        <summary><span data-ttu-id="2194e-972">Sortuje elementy w całości <see cref="T:System.Collections.Generic.List`1" /> przy użyciu określonego. <see cref="T:System.Comparison`1" /></span><span class="sxs-lookup"><span data-stu-id="2194e-972">Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1" /> using the specified <see cref="T:System.Comparison`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-973">Jeśli `comparison` jest podany, elementy <xref:System.Collections.Generic.List%601> elementu są sortowane przy użyciu metody reprezentowanej przez delegata.</span><span class="sxs-lookup"><span data-stu-id="2194e-973">If `comparison` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the method represented by the delegate.</span></span>  
  
 <span data-ttu-id="2194e-974">Jeśli `comparison` jest `null` ,<xref:System.ArgumentNullException> jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="2194e-974">If `comparison` is `null`, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="2194e-975">Ta metoda używa <xref:System.Array.Sort%2A?displayProperty=nameWithType>metody, która stosuje sortowanie algorytmu w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="2194e-975">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="2194e-976">Jeśli rozmiar partycji jest mniejszy niż 16 elementów, używa algorytmu sortowania wstawiania</span><span class="sxs-lookup"><span data-stu-id="2194e-976">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="2194e-977">Jeśli liczba partycji przekracza 2 log *n*, gdzie *n* jest zakresem tablicy wejściowej, używa algorytmu [kopcowanie](https://en.wikipedia.org/wiki/Heapsort) .</span><span class="sxs-lookup"><span data-stu-id="2194e-977">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="2194e-978">W przeciwnym razie używa algorytmu sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-978">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="2194e-979">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="2194e-979">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="2194e-980">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="2194e-980">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="2194e-981">Średnio ta metoda jest operacją o (*n* log *n*), gdzie *n* <xref:System.Collections.Generic.List%601.Count%2A>to; w najgorszym przypadku jest to operacja o (*n*<sup>2</sup>).</span><span class="sxs-lookup"><span data-stu-id="2194e-981">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-982">Poniższy kod ilustruje <xref:System.Collections.Generic.List%601.Sort%2A> przeciążenia metody i <xref:System.Collections.Generic.List%601.Sort%2A> w prostym obiekcie biznesowym.</span><span class="sxs-lookup"><span data-stu-id="2194e-982">The following code demonstrates the <xref:System.Collections.Generic.List%601.Sort%2A> and <xref:System.Collections.Generic.List%601.Sort%2A> method overloads on a simple business object.</span></span> <span data-ttu-id="2194e-983">Wywołanie metody powoduje użycie domyślnej funkcji porównującej dla typu części, <xref:System.Collections.Generic.List%601.Sort%2A> a metoda jest implementowana przy użyciu metody anonimowej. <xref:System.Collections.Generic.List%601.Sort%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-983">Calling the <xref:System.Collections.Generic.List%601.Sort%2A> method results in the use of the default comparer for the Part type, and the <xref:System.Collections.Generic.List%601.Sort%2A> method is implemented using an anonymous method.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.sort/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.sort/vb/module1.vb#1)]  
  
 <span data-ttu-id="2194e-984">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> Przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-984">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="2194e-985">W przykładzie zdefiniowano alternatywną metodę porównania dla ciągów o `CompareDinosByLength`nazwie.</span><span class="sxs-lookup"><span data-stu-id="2194e-985">The example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="2194e-986">Ta metoda działa w następujący sposób: Najpierw comparands są testowane dla `null`, a odwołanie o wartości null jest traktowane jako mniejsze niż wartość null.</span><span class="sxs-lookup"><span data-stu-id="2194e-986">This method works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="2194e-987">W drugim, długości ciągu są porównywane, a dłuższy ciąg jest uznawany za większy.</span><span class="sxs-lookup"><span data-stu-id="2194e-987">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="2194e-988">Trzecia, jeśli długości są równe, używane jest zwykłe Porównywanie ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-988">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="2194e-989"><xref:System.Collections.Generic.List%601> Ciąg jest tworzony i wypełniany czterema ciągami, w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="2194e-989">A <xref:System.Collections.Generic.List%601> of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="2194e-990">Lista zawiera również pusty ciąg i odwołanie o wartości null.</span><span class="sxs-lookup"><span data-stu-id="2194e-990">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="2194e-991">Zostanie wyświetlona lista, posortowana przy użyciu <xref:System.Comparison%601> ogólnego delegata `CompareDinosByLength` reprezentującego metodę i ponownie wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="2194e-991">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[List\`1_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortComparison/cs/source.cs#1)]
 [!code-vb[List\`1_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-992"><paramref name="comparison" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-992"><paramref name="comparison" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-993">Implementacja <paramref name="comparison" /> spowodowała błąd podczas sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-993">The implementation of <paramref name="comparison" /> caused an error during the sort.</span></span> <span data-ttu-id="2194e-994">Na przykład, <paramref name="comparison" /> program nie może zwrócić wartości 0 podczas porównywania elementu z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="2194e-994">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <altmember cref="T:System.Comparison`1" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-995">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-995">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (int index, int count, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(int32 index, int32 count, class System.Collections.Generic.IComparer`1&lt;!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort (index As Integer, count As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort(int index, int count, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="member this.Sort : int * int * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="list.Sort (index, count, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-996">Początkowy indeks (liczony od zera) zakresu, który ma zostać posortowany.</span><span class="sxs-lookup"><span data-stu-id="2194e-996">The zero-based starting index of the range to sort.</span></span></param>
        <param name="count"><span data-ttu-id="2194e-997">Długość zakresu, który ma zostać posortowany.</span><span class="sxs-lookup"><span data-stu-id="2194e-997">The length of the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="2194e-998">Implementacja do użycia podczas porównywania elementów lub <see langword="null" /> używania domyślnego programu porównującego <see cref="P:System.Collections.Generic.Comparer`1.Default" />. <see cref="T:System.Collections.Generic.IComparer`1" /></span><span class="sxs-lookup"><span data-stu-id="2194e-998">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements, or <see langword="null" /> to use the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" />.</span></span></param>
        <summary><span data-ttu-id="2194e-999">Sortuje elementy w zakresie elementów <see cref="T:System.Collections.Generic.List`1" /> przy użyciu określonej funkcji porównującej.</span><span class="sxs-lookup"><span data-stu-id="2194e-999">Sorts the elements in a range of elements in <see cref="T:System.Collections.Generic.List`1" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1000">Jeśli `comparer` jest podany, elementy <xref:System.Collections.Generic.List%601> elementu są sortowane przy użyciu określonej <xref:System.Collections.Generic.IComparer%601> implementacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1000">If `comparer` is provided, the elements of the <xref:System.Collections.Generic.List%601> are sorted using the specified <xref:System.Collections.Generic.IComparer%601> implementation.</span></span>  
  
 <span data-ttu-id="2194e-1001">Jeśli `comparer` jest `null`, domyślna funkcja porównująca <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> sprawdza, `T` czy typ <xref:System.IComparable%601> implementuje interfejs generyczny i używa tej implementacji, jeśli jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="2194e-1001">If `comparer` is `null`, the default comparer <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable%601> generic interface and uses that implementation, if available.</span></span>  <span data-ttu-id="2194e-1002">Jeśli nie, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> Sprawdź, czy `T` typ implementuje <xref:System.IComparable> interfejs.</span><span class="sxs-lookup"><span data-stu-id="2194e-1002">If not, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> checks whether type `T` implements the <xref:System.IComparable> interface.</span></span>  <span data-ttu-id="2194e-1003">Jeśli typ `T` nie implementuje żadnego interfejsu, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1003">If type `T` does not implement either interface, <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-1004">Ta metoda używa <xref:System.Array.Sort%2A?displayProperty=nameWithType>metody, która stosuje sortowanie algorytmu w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="2194e-1004">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which applies the introspective sort as follows:</span></span>  
  
-   <span data-ttu-id="2194e-1005">Jeśli rozmiar partycji jest mniejszy niż 16 elementów, używa algorytmu sortowania wstawiania</span><span class="sxs-lookup"><span data-stu-id="2194e-1005">If the partition size is fewer than 16 elements, it uses an insertion sort algorithm</span></span>  
  
-   <span data-ttu-id="2194e-1006">Jeśli liczba partycji przekracza 2 log *n*, gdzie *n* jest zakresem tablicy wejściowej, używa algorytmu [kopcowanie](https://en.wikipedia.org/wiki/Heapsort) .</span><span class="sxs-lookup"><span data-stu-id="2194e-1006">If the number of partitions exceeds 2 log *n*, where *n* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="2194e-1007">W przeciwnym razie używa algorytmu sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-1007">Otherwise, it uses a Quicksort algorithm.</span></span>  
  
 <span data-ttu-id="2194e-1008">Ta implementacja wykonuje niestabilne sortowanie; oznacza to, że jeśli dwa elementy są równe, ich kolejność może nie zostać zachowana.</span><span class="sxs-lookup"><span data-stu-id="2194e-1008">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="2194e-1009">Natomiast stabilne sortowanie zachowuje kolejność elementów, które są równe.</span><span class="sxs-lookup"><span data-stu-id="2194e-1009">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="2194e-1010">Średnio ta metoda jest operacją o (*n* log *n*), gdzie *n* <xref:System.Collections.Generic.List%601.Count%2A>to; w najgorszym przypadku jest to operacja o (*n*<sup>2</sup>).</span><span class="sxs-lookup"><span data-stu-id="2194e-1010">On average, this method is an O(*n* log *n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>; in the worst case it is an O(*n*<sup>2</sup>) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-1011">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> Przeciążenie metody <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> i Przeciążenie metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-1011">The following example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload and the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="2194e-1012">W przykładzie zdefiniowano alternatywną funkcję porównującą dla ciągów o nazwie DinoCompare `IComparer<string>` ,`IComparer(Of String)` która implementuje interfejs `IComparer<String^>` ogólny ( C++w Visual Basic w języku Visual).</span><span class="sxs-lookup"><span data-stu-id="2194e-1012">The example defines an alternative comparer for strings named DinoCompare, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="2194e-1013">Moduł porównujący działa w następujący sposób: Najpierw comparands są testowane dla `null`, a odwołanie o wartości null jest traktowane jako mniejsze niż wartość null.</span><span class="sxs-lookup"><span data-stu-id="2194e-1013">The comparer works as follows: First, the comparands are tested for `null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="2194e-1014">W drugim, długości ciągu są porównywane, a dłuższy ciąg jest uznawany za większy.</span><span class="sxs-lookup"><span data-stu-id="2194e-1014">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="2194e-1015">Trzecia, jeśli długości są równe, używane jest zwykłe Porównywanie ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-1015">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="2194e-1016"><xref:System.Collections.Generic.List%601> Jest tworzony i wypełniany przy użyciu nazw pięciu herbivorous dinozaurów i trzech dinozaurów carnivorous.</span><span class="sxs-lookup"><span data-stu-id="2194e-1016">A <xref:System.Collections.Generic.List%601> of strings is created and populated with the names of five herbivorous dinosaurs and three carnivorous dinosaurs.</span></span> <span data-ttu-id="2194e-1017">W ramach każdej z tych dwóch grup nazwy nie są w żadnym konkretnym porządku sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-1017">Within each of the two groups, the names are not in any particular sort order.</span></span> <span data-ttu-id="2194e-1018">Zostanie wyświetlona lista, zakres herbivores jest sortowany przy użyciu alternatywnej funkcji porównującej, a lista zostanie ponownie wyświetlona.</span><span class="sxs-lookup"><span data-stu-id="2194e-1018">The list is displayed, the range of herbivores is sorted using the alternate comparer, and the list is displayed again.</span></span>  
  
 <span data-ttu-id="2194e-1019">Przeciążenie <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> metody jest następnie używane do przeszukiwania tylko zakresu herbivores dla "Brachiosaurus".</span><span class="sxs-lookup"><span data-stu-id="2194e-1019">The <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method overload is then used to search only the range of herbivores for "Brachiosaurus".</span></span> <span data-ttu-id="2194e-1020">Nie odnaleziono C# ciągu, a dopełnienie bitowe (operator ~ w i wizualizacja C++, `Xor` -1 w Visual Basic) liczby ujemnej zwracanej przez <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> metodę jest używany jako indeks do wstawiania nowego ciągu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1020">The string is not found, and the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) of the negative number returned by the <xref:System.Collections.Generic.List%601.BinarySearch%28System.Int32%2CSystem.Int32%2C%600%2CSystem.Collections.Generic.IComparer%7B%600%7D%29> method is used as an index for inserting the new string.</span></span>  
  
 [!code-cpp[List\`1_SortSearchComparerRange#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cpp/source.cpp#1)]
 [!code-csharp[List\`1_SortSearchComparerRange#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_SortSearchComparerRange/cs/source.cs#1)]
 [!code-vb[List\`1_SortSearchComparerRange#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_SortSearchComparerRange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-1021"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-1021"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="2194e-1022">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-1022">-or-</span></span> 
 <span data-ttu-id="2194e-1023"><paramref name="count" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-1023"><paramref name="count" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-1024"><paramref name="index" />i <paramref name="count" /> nie określaj prawidłowego zakresu <see cref="T:System.Collections.Generic.List`1" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-1024"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.Generic.List`1" />.</span></span>  
  
<span data-ttu-id="2194e-1025">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-1025">-or-</span></span> 
<span data-ttu-id="2194e-1026">Implementacja <paramref name="comparer" /> spowodowała błąd podczas sortowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-1026">The implementation of <paramref name="comparer" /> caused an error during the sort.</span></span> <span data-ttu-id="2194e-1027">Na przykład, <paramref name="comparer" /> program nie może zwrócić wartości 0 podczas porównywania elementu z samym sobą.</span><span class="sxs-lookup"><span data-stu-id="2194e-1027">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2194e-1028"><paramref name="comparer" />jest <see langword="null" />, a domyślna funkcja porównująca <see cref="T:System.IComparable`1" /> <see cref="P:System.Collections.Generic.Comparer`1.Default" /> nie może znaleźć implementacji interfejsu generycznego lub <see cref="T:System.IComparable" /> interfejsu dla typu <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1028"><paramref name="comparer" /> is <see langword="null" />, and the default comparer <see cref="P:System.Collections.Generic.Comparer`1.Default" /> cannot find implementation of the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface for type <paramref name="T" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="2194e-1029">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="2194e-1029">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2194e-1030">Pobiera wartość wskazującą, czy jest <see cref="T:System.Collections.Generic.ICollection`1" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1030">Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="2194e-1031"><see langword="true" />Jeśli jest <see cref="T:System.Collections.Generic.ICollection`1" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2194e-1031"><see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="2194e-1032">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.List`1" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2194e-1032">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1033">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-1033">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="2194e-1034">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="2194e-1034">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2194e-1035">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1035">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-1036">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1036">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="2194e-1037"><see cref="T:System.Collections.Generic.IEnumerator`1" /> , Który może być używany do iteracji kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1037">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1038">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="2194e-1038">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="2194e-1039">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="2194e-1039">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2194e-1040">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2194e-1040">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2194e-1041">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1041">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2194e-1042">W tym miejscu <xref:System.Collections.Generic.IEnumerator%601.Current%2A> właściwość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="2194e-1042">At this position, the <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property is undefined.</span></span> <span data-ttu-id="2194e-1043">W związku z tym, należy <xref:System.Collections.IEnumerator.MoveNext%2A> wywołać metodę, aby wykonać przechodzenie modułu wyliczającego do pierwszego elementu kolekcji przed odczytem <xref:System.Collections.Generic.IEnumerator%601.Current%2A>wartości.</span><span class="sxs-lookup"><span data-stu-id="2194e-1043">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="2194e-1044">Właściwość zwraca ten sam obiekt, dopóki <xref:System.Collections.IEnumerator.MoveNext%2A> nie zostanie wywołana. <xref:System.Collections.Generic.IEnumerator%601.Current%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-1044">The <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="2194e-1045"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.Generic.IEnumerator%601.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1045"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2194e-1046">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2194e-1046">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2194e-1047">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="2194e-1047">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2194e-1048">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-1048">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="2194e-1049">Nie można ponownie <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ustawić na pierwszy element kolekcji; zamiast tego należy utworzyć nowe wystąpienie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="2194e-1049">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="2194e-1050">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="2194e-1050">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2194e-1051">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1051">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-1052">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="2194e-1052">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="2194e-1053">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="2194e-1053">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2194e-1054">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1054">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2194e-1055">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-1055">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2194e-1056">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1056">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2194e-1057">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1057">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="2194e-1058"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="2194e-1058">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="2194e-1059">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="2194e-1059">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="2194e-1060">Kopiuje elementy <see cref="T:System.Collections.ICollection" /> <see cref="T:System.Array" />do, zaczynając od określonego <see cref="T:System.Array" /> indeksu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1060">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2194e-1061">Jeśli nie można automatycznie rzutować <xref:System.Collections.ICollection> typu źródła na typ docelowy `array`, nieogólne implementacje <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, podczas gdy są zgłaszane implementacje <xref:System.ArgumentException>ogólne.</span><span class="sxs-lookup"><span data-stu-id="2194e-1061">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the nongeneric implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="2194e-1062">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1062">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-1063"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1063"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-1064"><paramref name="arrayIndex" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="2194e-1064"><paramref name="arrayIndex" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-1065"><paramref name="array" />jest wielowymiarowych.</span><span class="sxs-lookup"><span data-stu-id="2194e-1065"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="2194e-1066">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-1066">-or-</span></span> 
 <span data-ttu-id="2194e-1067"><paramref name="array" />nie ma indeksowania opartego na zero.</span><span class="sxs-lookup"><span data-stu-id="2194e-1067"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="2194e-1068">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-1068">-or-</span></span> 
<span data-ttu-id="2194e-1069">Liczba elementów w źródle <see cref="T:System.Collections.ICollection" /> jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca miejsca docelowego <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1069">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="2194e-1070">—lub—</span><span class="sxs-lookup"><span data-stu-id="2194e-1070">-or-</span></span> 
<span data-ttu-id="2194e-1071">Nie można automatycznie rzutować <see cref="T:System.Collections.ICollection" /> typu źródła na typ docelowy. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="2194e-1071">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2194e-1072">Pobiera wartość wskazującą, <see cref="T:System.Collections.ICollection" /> czy dostęp do elementu jest synchronizowany (bezpieczny wątkowo).</span><span class="sxs-lookup"><span data-stu-id="2194e-1072">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="2194e-1073"><see langword="true" />Jeśli dostęp do programu <see cref="T:System.Collections.ICollection" /> jest synchronizowany (wątek bezpieczny); <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2194e-1073"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="2194e-1074">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.List`1" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2194e-1074">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1075">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-1075">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2194e-1076">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="2194e-1076">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2194e-1077">W rzadkich przypadkach, gdy Wyliczenie jest zgodne z dostępem do zapisu, można zablokować kolekcję podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="2194e-1077">In the rare case where enumeration contends with write accesses, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2194e-1078">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1078">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2194e-1079"><xref:System.Collections.ICollection.SyncRoot%2A>zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1079"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="2194e-1080">Synchronizacja jest skuteczna tylko wtedy, gdy wszystkie wątki blokują ten obiekt przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1080">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="2194e-1081">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1081">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2194e-1082">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1082">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="2194e-1083">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1083">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="2194e-1084">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.List`1" />ta właściwość zawsze zwraca bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="2194e-1084">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1085">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-1085">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2194e-1086">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="2194e-1086">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2194e-1087">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="2194e-1087">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2194e-1088">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1088">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2194e-1089"><xref:System.Collections.ICollection.SyncRoot%2A>zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1089"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="2194e-1090">Synchronizacja jest skuteczna tylko wtedy, gdy wszystkie wątki blokują ten obiekt przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1090">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="2194e-1091">Poniższy kod przedstawia użycie <xref:System.Collections.ICollection.SyncRoot%2A> właściwości dla C#, C++i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="2194e-1091">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot)   
{  
    // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
    ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try   
{  
    Monitor::Enter(ic->SyncRoot);  
    // Access the collection.  
}  
finally   
{  
    Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="2194e-1092">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1092">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-1093">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1093">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="2194e-1094"><see cref="T:System.Collections.IEnumerator" /> , Który może być używany do iteracji kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1094">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1095">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="2194e-1095">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="2194e-1096">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="2194e-1096">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="2194e-1097">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2194e-1097">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="2194e-1098">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1098">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="2194e-1099"><xref:System.Collections.IEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="2194e-1099"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="2194e-1100">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> właściwość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="2194e-1100">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="2194e-1101">W związku z tym, należy <xref:System.Collections.IEnumerator.MoveNext%2A> wywołać metodę, aby wykonać przechodzenie modułu wyliczającego do pierwszego elementu kolekcji przed odczytem <xref:System.Collections.IEnumerator.Current%2A>wartości.</span><span class="sxs-lookup"><span data-stu-id="2194e-1101">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="2194e-1102">Właściwość zwraca ten sam obiekt <xref:System.Collections.IEnumerator.MoveNext%2A> do momentu wywołania <xref:System.Collections.IEnumerator.Reset%2A>lub. <xref:System.Collections.IEnumerator.Current%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-1102">The <xref:System.Collections.IEnumerator.Current%2A> property returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="2194e-1103"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1103"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="2194e-1104">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="2194e-1104">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="2194e-1105">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="2194e-1105">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="2194e-1106">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-1106">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="2194e-1107">Aby ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1107">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="2194e-1108">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="2194e-1108">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="2194e-1109">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1109">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2194e-1110">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="2194e-1110">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="2194e-1111">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="2194e-1111">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="2194e-1112">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="2194e-1112">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="2194e-1113">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="2194e-1113">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace are not synchronized.</span></span>  
  
 <span data-ttu-id="2194e-1114">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1114">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-1115">, <see cref="T:System.Object" /> Aby dodać <see cref="T:System.Collections.IList" />do.</span><span class="sxs-lookup"><span data-stu-id="2194e-1115">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2194e-1116">Dodaje element do <see cref="T:System.Collections.IList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1116">Adds an item to the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-1117">Położenie, do którego wstawiono nowy element.</span><span class="sxs-lookup"><span data-stu-id="2194e-1117">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1118">Jeśli <xref:System.Collections.Generic.List%601.Count%2A> jest mniejsza niż <xref:System.Collections.Generic.List%601.Capacity%2A>, ta metoda jest operacją o (1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1118">If <xref:System.Collections.Generic.List%601.Count%2A> is less than <xref:System.Collections.Generic.List%601.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="2194e-1119">Jeśli pojemność musi zostać zwiększona w celu uwzględnienia nowego elementu, ta metoda będzie operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1119">If the capacity needs to be increased to accommodate the new element, this method becomes an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-1120"><paramref name="item" />jest typu, którego nie można przypisać do <see cref="T:System.Collections.IList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1120"><paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-1121"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Collections.IList" />w.</span><span class="sxs-lookup"><span data-stu-id="2194e-1121">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2194e-1122">Określa, <see cref="T:System.Collections.IList" /> czy zawiera konkretną wartość.</span><span class="sxs-lookup"><span data-stu-id="2194e-1122">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="2194e-1123"><see langword="true" />Jeśli <paramref name="item" /> znajduje się <see cref="T:System.Collections.IList" />w; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="2194e-1123"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1124">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-1124">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-1125">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-1125">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-1126">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1126">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2194e-1127">Określa indeks określonego elementu w <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1127">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="2194e-1128">Indeks elementu <paramref name="item" /> if znajduje się na liście; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="2194e-1128">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1129">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-1129">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-1130">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-1130">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-1131"><paramref name="item" />jest typu, którego nie można przypisać do <see cref="T:System.Collections.IList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1131"><paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-1132">Indeks (liczony od zera), <paramref name="item" /> który powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="2194e-1132">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="2194e-1133">Obiekt, który ma zostać wstawiony <see cref="T:System.Collections.IList" />do.</span><span class="sxs-lookup"><span data-stu-id="2194e-1133">The object to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2194e-1134">Wstawia element do <see cref="T:System.Collections.IList" /> obiektu o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="2194e-1134">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1135">Jeśli `index` jest równa liczbie elementów <xref:System.Collections.IList>w, `item` jest dołączany na końcu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1135">If `index` equals the number of items in the <xref:System.Collections.IList>, then `item` is appended to the end.</span></span>  
  
 <span data-ttu-id="2194e-1136">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1136">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-1137"><paramref name="index" />nie jest prawidłowym indeksem w <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1137"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-1138"><paramref name="item" />jest typu, którego nie można przypisać do <see cref="T:System.Collections.IList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1138"><paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2194e-1139">Pobiera wartość wskazującą, <see cref="T:System.Collections.IList" /> czy ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="2194e-1139">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="2194e-1140"><see langword="true" />Jeśli ma stały rozmiar; <see langword="false" />w przeciwnym razie. <see cref="T:System.Collections.IList" /></span><span class="sxs-lookup"><span data-stu-id="2194e-1140"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="2194e-1141">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.List`1" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2194e-1141">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1142">W kolekcji o stałym rozmiarze po jej utworzeniu nie można dodawać ani usuwać elementów, jednak można modyfikować istniejące elementy.</span><span class="sxs-lookup"><span data-stu-id="2194e-1142">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="2194e-1143">Kolekcja o stałym rozmiarze jest po prostu kolekcją z otoką, która zapobiega dodawaniu i usuwaniu elementów; w związku z tym, jeśli wprowadzono zmiany do źródłowej kolekcji, w tym dodawanie lub usuwanie elementów, kolekcja o stałym rozmiarze odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="2194e-1143">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2194e-1144">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1144">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2194e-1145">Pobiera wartość wskazującą, czy jest <see cref="T:System.Collections.IList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1145">Gets a value indicating whether the <see cref="T:System.Collections.IList" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="2194e-1146"><see langword="true" />Jeśli jest <see cref="T:System.Collections.IList" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2194e-1146"><see langword="true" /> if the <see cref="T:System.Collections.IList" /> is read-only; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="2194e-1147">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.List`1" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2194e-1147">In the default implementation of <see cref="T:System.Collections.Generic.List`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1148">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-1148">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="2194e-1149">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="2194e-1149">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="2194e-1150">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1150">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2194e-1151">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="2194e-1151">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="2194e-1152">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="2194e-1152">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="2194e-1153">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="2194e-1153">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1154">Język używa [tego](~/docs/csharp/language-reference/keywords/this.md) słowa kluczowego, aby zdefiniować indeksatory zamiast implementowania <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> właściwości. C#</span><span class="sxs-lookup"><span data-stu-id="2194e-1154">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> property.</span></span> <span data-ttu-id="2194e-1155">Visual Basic implementuje <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> jako właściwość domyślną, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="2194e-1155">Visual Basic implements <xref:System.Collections.Generic.List%601.System%23Collections%23IList%23Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="2194e-1156">Pobieranie wartości tej właściwości jest operacją O (1); ustawienie właściwości jest również operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="2194e-1156">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2194e-1157"><paramref name="index" />nie jest prawidłowym indeksem w <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1157"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-1158">Właściwość jest ustawiona i <paramref name="value" /> jest typu, którego nie <see cref="T:System.Collections.IList" />można przypisać do elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1158">The property is set and <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="2194e-1159">Obiekt, który ma zostać usunięty <see cref="T:System.Collections.IList" />z.</span><span class="sxs-lookup"><span data-stu-id="2194e-1159">The object to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="2194e-1160">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1160">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1161">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="2194e-1161">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="2194e-1162">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją O (*n*) \*\* , gdzie <xref:System.Collections.Generic.List%601.Count%2A>n jest.</span><span class="sxs-lookup"><span data-stu-id="2194e-1162">This method performs a linear search; therefore, this method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2194e-1163"><paramref name="item" />jest typu, którego nie można przypisać do <see cref="T:System.Collections.IList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1163"><paramref name="item" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="list.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-1164">Kopiuje elementy <see cref="T:System.Collections.Generic.List`1" /> do nowej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-1164">Copies the elements of the <see cref="T:System.Collections.Generic.List`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="2194e-1165">Tablica zawierająca kopie elementów <see cref="T:System.Collections.Generic.List`1" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1165">An array containing copies of the elements of the <see cref="T:System.Collections.Generic.List`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1166">Elementy są kopiowane przy użyciu <xref:System.Array.Copy%2A?displayProperty=nameWithType>, która jest operacją o (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1166">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="2194e-1167">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1167">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-1168">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.ToArray%2A> metodę i inne metody <xref:System.Collections.Generic.List%601> klasy, które działają na zakresach.</span><span class="sxs-lookup"><span data-stu-id="2194e-1168">The following example demonstrates the <xref:System.Collections.Generic.List%601.ToArray%2A> method and other methods of the <xref:System.Collections.Generic.List%601> class that act on ranges.</span></span> <span data-ttu-id="2194e-1169">Na końcu przykładu <xref:System.Collections.Generic.List%601.GetRange%2A> Metoda jest używana do uzyskania trzech elementów z listy, rozpoczynając od lokalizacji indeksu 2.</span><span class="sxs-lookup"><span data-stu-id="2194e-1169">At the end of the example, the <xref:System.Collections.Generic.List%601.GetRange%2A> method is used to get three items from the list, beginning with index location 2.</span></span> <span data-ttu-id="2194e-1170">Metoda jest wywoływana na skutek <xref:System.Collections.Generic.List%601>, tworząc tablicę trzech elementów. <xref:System.Collections.Generic.List%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-1170">The <xref:System.Collections.Generic.List%601.ToArray%2A> method is called on the resulting <xref:System.Collections.Generic.List%601>, creating an array of three elements.</span></span> <span data-ttu-id="2194e-1171">Wyświetlane są elementy tablicy.</span><span class="sxs-lookup"><span data-stu-id="2194e-1171">The elements of the array are displayed.</span></span>  
  
 [!code-cpp[List\`1_Ranges#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Ranges/cpp/source.cpp#1)]
 [!code-csharp[List\`1_Ranges#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Ranges/cs/source.cs#1)]
 [!code-vb[List\`1_Ranges#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Ranges/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="list.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2194e-1172">Ustawia pojemność na rzeczywistą liczbę elementów w <see cref="T:System.Collections.Generic.List`1" />, jeśli ta liczba jest mniejsza niż wartość progowa.</span><span class="sxs-lookup"><span data-stu-id="2194e-1172">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.List`1" />, if that number is less than a threshold value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1173">Tej metody można użyć do zminimalizowania obciążenia pamięci kolekcji, jeśli do kolekcji nie zostaną dodane żadne nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="2194e-1173">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="2194e-1174">Koszt ponownej alokacji i kopiowania dużego <xref:System.Collections.Generic.List%601> może być istotny, <xref:System.Collections.Generic.List%601.TrimExcess%2A> Dlatego metoda nie robi nic, jeśli lista ma więcej niż 90% pojemności.</span><span class="sxs-lookup"><span data-stu-id="2194e-1174">The cost of reallocating and copying a large <xref:System.Collections.Generic.List%601> can be considerable, however, so the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="2194e-1175">Pozwala to uniknąć ponoszenia dużego kosztu ponownego alokacji dla stosunkowo małego wzmocnienia.</span><span class="sxs-lookup"><span data-stu-id="2194e-1175">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2194e-1176">Bieżący próg 90 procent może ulec zmianie w przyszłych wydaniach.</span><span class="sxs-lookup"><span data-stu-id="2194e-1176">The current threshold of 90 percent might change in future releases.</span></span>  
  
 <span data-ttu-id="2194e-1177">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1177">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="2194e-1178">Aby zresetować <xref:System.Collections.Generic.List%601> do stanu początkowego, należy <xref:System.Collections.Generic.List%601.Clear%2A> wywołać metodę przed wywołaniem <xref:System.Collections.Generic.List%601.TrimExcess%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="2194e-1178">To reset a <xref:System.Collections.Generic.List%601> to its initial state, call the <xref:System.Collections.Generic.List%601.Clear%2A> method before calling the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="2194e-1179">Przycinanie pustego <xref:System.Collections.Generic.List%601> zestawu ustawia pojemność <xref:System.Collections.Generic.List%601> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="2194e-1179">Trimming an empty <xref:System.Collections.Generic.List%601> sets the capacity of the <xref:System.Collections.Generic.List%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="2194e-1180">Wydajność można również ustawić przy użyciu <xref:System.Collections.Generic.List%601.Capacity%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="2194e-1180">The capacity can also be set using the <xref:System.Collections.Generic.List%601.Capacity%2A> property.</span></span>  
  
   
  
## Examples  

 [!INCLUDE[interactive-note](~/includes/csharp-interactive-note-some.md)]

 <span data-ttu-id="2194e-1181">Poniższy przykład ilustruje sposób sprawdzania pojemności i liczby <xref:System.Collections.Generic.List%601> , która zawiera prosty obiekt biznesowy, i ilustruje <xref:System.Collections.Generic.List%601.TrimExcess%2A> użycie metody w celu usunięcia dodatkowej pojemności.</span><span class="sxs-lookup"><span data-stu-id="2194e-1181">The following example demonstrates how to check the capacity and count of a  <xref:System.Collections.Generic.List%601> that contains a simple business object, and illustrates using the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method to remove extra capacity.</span></span>  
  
 [!code-csharp[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.List.CapacityCount#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.list.capacitycount/vb/module1.vb#1)]  
  
 <span data-ttu-id="2194e-1182">Poniższy przykład demonstruje <xref:System.Collections.Generic.List%601.TrimExcess%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="2194e-1182">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="2194e-1183">Kilka właściwości i metod <xref:System.Collections.Generic.List%601> klasy służy do dodawania, wstawiania i usuwania elementów z listy ciągów.</span><span class="sxs-lookup"><span data-stu-id="2194e-1183">Several properties and methods of the <xref:System.Collections.Generic.List%601> class are used to add, insert, and remove items from a list of strings.</span></span> <span data-ttu-id="2194e-1184">Następnie metoda jest używana w celu zredukowania pojemności do liczby, <xref:System.Collections.Generic.List%601.Capacity%2A> a są wyświetlane właściwości i <xref:System.Collections.Generic.List%601.Count%2A>. <xref:System.Collections.Generic.List%601.TrimExcess%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-1184">Then the <xref:System.Collections.Generic.List%601.TrimExcess%2A> method is used to reduce the capacity to match the count, and the <xref:System.Collections.Generic.List%601.Capacity%2A> and <xref:System.Collections.Generic.List%601.Count%2A> properties are displayed.</span></span> <span data-ttu-id="2194e-1185">Jeśli niewykorzystana pojemność była mniejsza niż 10 procent całkowitej pojemności, nie można zmienić rozmiaru listy.</span><span class="sxs-lookup"><span data-stu-id="2194e-1185">If the unused capacity had been less than 10 percent of total capacity, the list would not have been resized.</span></span> <span data-ttu-id="2194e-1186">Na koniec zawartość listy jest czyszczona.</span><span class="sxs-lookup"><span data-stu-id="2194e-1186">Finally, the contents of the list are cleared.</span></span>  
  
 [!code-cpp[List\`1_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_Class/cpp/source.cpp#1)]
 [!code-csharp-interactive[List\`1_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_Class/cs/source.cs#1)]
 [!code-vb[List\`1_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_Class/vb/source.vb#1)]  
 [!code-fsharp[List\`1_Class#1](~/samples/snippets/fsharp/VS_Snippets_CLR/List`1_Class/fs/listclass.fs#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.List`1.Clear" />
        <altmember cref="P:System.Collections.Generic.List`1.Capacity" />
        <altmember cref="P:System.Collections.Generic.List`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TrueForAll">
      <MemberSignature Language="C#" Value="public bool TrueForAll (Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TrueForAll(class System.Predicate`1&lt;!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TrueForAll (match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TrueForAll(Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="member this.TrueForAll : Predicate&lt;'T&gt; -&gt; bool" Usage="list.TrueForAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="2194e-1187"><see cref="T:System.Predicate`1" /> Delegat, który definiuje warunki do sprawdzenia względem elementów.</span><span class="sxs-lookup"><span data-stu-id="2194e-1187">The <see cref="T:System.Predicate`1" /> delegate that defines the conditions to check against the elements.</span></span></param>
        <summary><span data-ttu-id="2194e-1188">Określa, czy każdy element w <see cref="T:System.Collections.Generic.List`1" /> jest zgodny z warunkami zdefiniowanymi przez określony predykat.</span><span class="sxs-lookup"><span data-stu-id="2194e-1188">Determines whether every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="2194e-1189"><see langword="true" />Jeśli każdy element w jest <see cref="T:System.Collections.Generic.List`1" /> zgodny z warunkami zdefiniowanymi przez określony predykat; w przeciwnym <see langword="false" />razie,.</span><span class="sxs-lookup"><span data-stu-id="2194e-1189"><see langword="true" /> if every element in the <see cref="T:System.Collections.Generic.List`1" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2194e-1190">Jeśli lista nie zawiera żadnych elementów, wartość zwracana to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1190">If the list has no elements, the return value is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2194e-1191">Jest delegatem metody, która zwraca `true` , jeśli obiekt przeszedł do niego, odpowiada warunkom zdefiniowanym w obiekcie delegowanym. <xref:System.Predicate%601></span><span class="sxs-lookup"><span data-stu-id="2194e-1191">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="2194e-1192">Elementy bieżącego <xref:System.Collections.Generic.List%601> są indywidualnie przesyłane <xref:System.Predicate%601> do delegata, a przetwarzanie jest przerywane, gdy delegat zwraca `false` dla dowolnego elementu.</span><span class="sxs-lookup"><span data-stu-id="2194e-1192">The elements of the current <xref:System.Collections.Generic.List%601> are individually passed to the <xref:System.Predicate%601> delegate, and processing is stopped when the delegate returns `false` for any element.</span></span> <span data-ttu-id="2194e-1193">Elementy są przetwarzane w kolejności, a wszystkie wywołania są wykonywane na pojedynczym wątku.</span><span class="sxs-lookup"><span data-stu-id="2194e-1193">The elements are processed in order, and all calls are made on a single thread.</span></span>  
  
 <span data-ttu-id="2194e-1194">Ta metoda jest operacją O (*n*), gdzie *n* jest <xref:System.Collections.Generic.List%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="2194e-1194">This method is an O(*n*) operation, where *n* is <xref:System.Collections.Generic.List%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2194e-1195">Poniższy przykład ilustruje <xref:System.Collections.Generic.List%601.TrueForAll%2A> metodę i kilka innych metod, które używają <xref:System.Predicate%601> delegata ogólnego.</span><span class="sxs-lookup"><span data-stu-id="2194e-1195">The following example demonstrates the <xref:System.Collections.Generic.List%601.TrueForAll%2A> method and several other methods that use <xref:System.Predicate%601> generic delegate.</span></span>  
  
 <span data-ttu-id="2194e-1196">Tworzony jest ciąg z 8. nazwami, z których dwa są (w pozycjach 1 i 5) kończą się znakiem "saurus". <xref:System.Collections.Generic.List%601></span><span class="sxs-lookup"><span data-stu-id="2194e-1196">A <xref:System.Collections.Generic.List%601> of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="2194e-1197">W przykładzie zdefiniowano także metodę predykatu wyszukiwania `EndsWithSaurus`o nazwie, która akceptuje parametr String i zwraca wartość logiczną wskazującą, czy ciąg wejściowy jest kończący się na "saurus".</span><span class="sxs-lookup"><span data-stu-id="2194e-1197">The example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="2194e-1198">Metoda przechodzi na listę od początku, przekazując każdy element z kolei `EndsWithSaurus` do metody. <xref:System.Collections.Generic.List%601.TrueForAll%2A></span><span class="sxs-lookup"><span data-stu-id="2194e-1198">The <xref:System.Collections.Generic.List%601.TrueForAll%2A> method traverses the list from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="2194e-1199">Wyszukiwanie jest zatrzymywane, `EndsWithSaurus` gdy metoda `false`zwraca.</span><span class="sxs-lookup"><span data-stu-id="2194e-1199">The search stops when the `EndsWithSaurus` method returns `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2194e-1200">W C# i Visual Basic nie jest konieczne jawne utworzenie `Predicate<string>` delegata (`Predicate(Of String)` w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="2194e-1200">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="2194e-1201">Te języki wnioskują o poprawnym delegacie z kontekstu, a następnie są tworzone automatycznie.</span><span class="sxs-lookup"><span data-stu-id="2194e-1201">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 [!code-cpp[List\`1_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/List`1_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[List\`1_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/List`1_FindEtAl/cs/source.cs#1)]
 [!code-vb[List\`1_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/List`1_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2194e-1202"><paramref name="match" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2194e-1202"><paramref name="match" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>
