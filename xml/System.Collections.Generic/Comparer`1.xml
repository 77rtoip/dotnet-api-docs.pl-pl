<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26fe0404b5f04bc1e12bf98c6cad3f1ecb47f3e7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36713234" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&#xA;    interface IComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="84b38-101">Typ obiektów do porównania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84b38-101">The type of objects to compare.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="84b38-102">Udostępnia klasę podstawową dla implementacji <see cref="T:System.Collections.Generic.IComparer`1" /> interfejs generyczny.</span>
      <span class="sxs-lookup">
        <span data-stu-id="84b38-102">Provides a base class for implementations of the <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b38-103">Dziedziczyć po tej klasie do implementacji niestandardowych z <xref:System.Collections.Generic.IComparer%601> interfejsu do użycia z klasy kolekcji, takie jak <xref:System.Collections.Generic.SortedList%602> i <xref:System.Collections.Generic.SortedDictionary%602> klas rodzajowych.</span><span class="sxs-lookup"><span data-stu-id="84b38-103">Derive from this class to provide a custom implementation of the <xref:System.Collections.Generic.IComparer%601> interface for use with collection classes such as the <xref:System.Collections.Generic.SortedList%602> and <xref:System.Collections.Generic.SortedDictionary%602> generic classes.</span></span>  
  
 <span data-ttu-id="84b38-104">Różnica między pochodny <xref:System.Collections.Generic.Comparer%601> klasy i wdrażanie <xref:System.IComparable?displayProperty=nameWithType> interfejsu wygląda następująco:</span><span class="sxs-lookup"><span data-stu-id="84b38-104">The difference between deriving from the <xref:System.Collections.Generic.Comparer%601> class and implementing the <xref:System.IComparable?displayProperty=nameWithType> interface is as follows:</span></span>  
  
-   <span data-ttu-id="84b38-105">Aby określić, w jaki sposób należy porównać dwa obiekty domyślnie, wdrożenie <xref:System.IComparable?displayProperty=nameWithType> interfejsu w klasie.</span><span class="sxs-lookup"><span data-stu-id="84b38-105">To specify how two objects should be compared by default, implement the <xref:System.IComparable?displayProperty=nameWithType> interface in your class.</span></span> <span data-ttu-id="84b38-106">Dzięki temu, że sortowanie będzie używać domyślnego kodu porównania podane.</span><span class="sxs-lookup"><span data-stu-id="84b38-106">This ensures that sort operations will use the default comparison code that you provided.</span></span>  
  
-   <span data-ttu-id="84b38-107">Aby zdefiniować porównania można użyć zamiast domyślna funkcja porównująca, pochodzi z <xref:System.Collections.Generic.Comparer%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="84b38-107">To define a comparer to use instead of the default comparer, derive from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="84b38-108">Następnie można ten moduł porównujący w operacji sortowania, które przyjmują porównania jako parametr.</span><span class="sxs-lookup"><span data-stu-id="84b38-108">You can then use this comparer in sort operations that take a comparer as a parameter.</span></span>  
  
 <span data-ttu-id="84b38-109">Obiekt zwrócony przez <xref:System.Collections.Generic.Comparer%601.Default%2A> używa właściwości <xref:System.IComparable%601?displayProperty=nameWithType> interfejs ogólny (`IComparable<T>` w języku C# `IComparable(Of T)` w języku Visual Basic) do porównywania dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="84b38-109">The object returned by the <xref:System.Collections.Generic.Comparer%601.Default%2A> property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="84b38-110">Jeśli typ `T` nie implementuje <xref:System.IComparable%601?displayProperty=nameWithType> ogólny interfejs <xref:System.Collections.Generic.Comparer%601.Default%2A> zwraca <xref:System.Collections.Generic.Comparer%601> używającą <xref:System.IComparable?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="84b38-110">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, the <xref:System.Collections.Generic.Comparer%601.Default%2A> property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b38-111">Poniższy przykład pochodzi z klasy, `BoxLengthFirst`, z <xref:System.Collections.Generic.Comparer%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="84b38-111">The following example derives a class, `BoxLengthFirst`, from the <xref:System.Collections.Generic.Comparer%601> class.</span></span> <span data-ttu-id="84b38-112">Ta funkcja porównująca porównuje dwa obiekty typu `Box`.</span><span class="sxs-lookup"><span data-stu-id="84b38-112">This comparer compares two objects of type `Box`.</span></span> <span data-ttu-id="84b38-113">Sortuje je najpierw długość, a następnie przez wysokość, a następnie szerokości.</span><span class="sxs-lookup"><span data-stu-id="84b38-113">It sorts them first by length, then by height, and then by width.</span></span> <span data-ttu-id="84b38-114">`Box` Klasa implementuje <xref:System.IComparable%601> interfejsu do sterowania domyślnym porównaniem między dwiema `Box` obiektów.</span><span class="sxs-lookup"><span data-stu-id="84b38-114">The `Box` class implements the <xref:System.IComparable%601> interface to control the default comparison between two `Box` objects.</span></span> <span data-ttu-id="84b38-115">Ta domyślna implementacja sortuje przez wysokość, a następnie według długości, a następnie szerokość.</span><span class="sxs-lookup"><span data-stu-id="84b38-115">This default implementation sorts first by height, then by length, and then by width.</span></span> <span data-ttu-id="84b38-116">W przykładzie przedstawiono różnice między dwoma porównań, sortując listę `Box` obiektów przy użyciu `BoxLengthFirst` porównania i przy użyciu domyślna funkcja porównująca.</span><span class="sxs-lookup"><span data-stu-id="84b38-116">The example shows the differences between the two comparisons by sorting a list of `Box` objects first by using the `BoxLengthFirst` comparer and then by using the default comparer.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="84b38-117">
        <para>
          <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> i <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> może zachowywać się inaczej pod względem czułości kultury i uwzględnianie wielkości liter.  Do porównywnania ciągów <see cref="T:System.StringComparer" /> klasy zaleca się za pośrednictwem <c>porównania&lt;ciąg&gt;</c>.  Właściwości <see cref="T:System.StringComparer" /> klasy zwracać wstępnie zdefiniowanych wystąpień, które porównywania ciągów z różną kombinacją liter kultury i uwzględnianie wielkości liter.  Opcja uwzględniania wielkości liter i czułości kultury są spójne między elementami tego samego <see cref="T:System.StringComparer" /> wystąpienia.  Aby uzyskać więcej informacji dotyczących specyficzne dla kultury porównań, zobacz <see cref="N:System.Globalization" /> przestrzeni nazw i [globalizacji i Localization](~/docs/standard/globalization-localization/index.md).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="84b38-117">
          <para>
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> may behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="84b38-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Comparer`1" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-118">Initializes a new instance of the <see cref="T:System.Collections.Generic.Comparer`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="comparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="84b38-119">Pierwszy obiekt, który ma zostać porównany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-119">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="84b38-120">Drugi obiekt, który będzie porównywany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-120">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b38-121">W przypadku przesłonięcia w klasie pochodnej, wykonuje porównanie dwóch obiektów tego samego typu i zwraca wartość wskazującą, czy jeden obiekt jest mniejszy, równy lub większy niż drugi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-121">When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b38-122">Całkowita wskazująca wartości <paramref name="x" /> i <paramref name="y" />, jak pokazano w poniższej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-122">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="84b38-123">
            <list type="table">
              <listheader>
                <term> Wartość </term>
                <description> znaczenie </description>
              </listheader>
              <item>
                <term> mniejsza od zera </term>
                <description>
                  <paramref name="x" /> jest mniejsza niż <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description>
                  <paramref name="x" /> jest równe <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Większa od zera </term>
                <description>
                  <paramref name="x" /> jest większa niż <paramref name="y" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-123">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b38-124">Zaimplementuj tę metodę, aby zapewnić dostosowany, sortować kolejności porównania dla typu `T`.</span><span class="sxs-lookup"><span data-stu-id="84b38-124">Implement this method to provide a customized sort order comparison for type `T`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b38-125">W poniższym przykładzie zdefiniowano porównania z `Box` obiektów, których można użyć zamiast domyślna funkcja porównująca.</span><span class="sxs-lookup"><span data-stu-id="84b38-125">The following example defines a comparer of `Box` objects that can be used instead of the default comparer.</span></span> <span data-ttu-id="84b38-126">Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Collections.Generic.Comparer%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="84b38-126">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="84b38-127">Typ <paramref name="T" /> nie implementuje albo <see cref="T:System.IComparable`1" /> ogólny interfejs lub <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-127">Type <paramref name="T" /> does not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="84b38-128">
            <para>Porównywanie <see langword="null" /> z odwołaniem do dowolnego typu jest dozwolone i nie generuje wyjątku. Odwołanie o wartości null jest uważany za mniej niż wszystkich odwołań, który nie jest zerowa.  Aby uzyskać informacje na specyficzne dla kultury porównań, zobacz <see cref="N:System.Globalization" /> przestrzeni nazw i [globalizacji i Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-128">
              <para>Comparing <see langword="null" /> with any reference type is allowed and does not generate an exception. A null reference is considered to be less than any reference that is not null.  For information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Create : Comparison&lt;'T&gt; -&gt; System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Create comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="comparison">
          <span data-ttu-id="84b38-129">Porównanie do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-129">The comparison to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b38-130">Tworzy moduł porównujący przy użyciu określonego porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-130">Creates a comparer by using the specified comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b38-131">Nowy moduł porównujący.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-131">The new comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="84b38-132">Zwraca domyślne sortowanie kolejności porównania dla typu określone przez argument rodzajowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-132">Returns a default sort order comparer for the type specified by the generic argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="84b38-133">Obiekt, który dziedziczy <see cref="T:System.Collections.Generic.Comparer`1" /> i służy jako funkcja porównująca kolejność sortowania dla typu <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-133">An object that inherits <see cref="T:System.Collections.Generic.Comparer`1" /> and serves as a sort order comparer for type <paramref name="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b38-134"><xref:System.Collections.Generic.Comparer%601> Zwracane przez tę właściwość używa <xref:System.IComparable%601?displayProperty=nameWithType> interfejs ogólny (`IComparable<T>` w języku C# `IComparable(Of T)` w języku Visual Basic) do porównywania dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="84b38-134">The <xref:System.Collections.Generic.Comparer%601> returned by this property uses the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface (`IComparable<T>` in C#, `IComparable(Of T)` in Visual Basic) to compare two objects.</span></span> <span data-ttu-id="84b38-135">Jeśli typ `T` nie implementuje <xref:System.IComparable%601?displayProperty=nameWithType> interfejs ogólny, ta właściwość zwraca <xref:System.Collections.Generic.Comparer%601> używającą <xref:System.IComparable?displayProperty=nameWithType> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="84b38-135">If type `T` does not implement the <xref:System.IComparable%601?displayProperty=nameWithType> generic interface, this property returns a <xref:System.Collections.Generic.Comparer%601> that uses the <xref:System.IComparable?displayProperty=nameWithType> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b38-136">Poniższy przykład przedstawia użycie <xref:System.Collections.Generic.Comparer%601.Default%2A> właściwość pobierania obiektu, który wykonuje domyślnym porównaniem.</span><span class="sxs-lookup"><span data-stu-id="84b38-136">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.Default%2A> property to get an object that performs the default comparison.</span></span> <span data-ttu-id="84b38-137">Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Collections.Generic.Comparer%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="84b38-137">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="84b38-138">
            <para>Do porównywnania ciągów <see cref="T:System.StringComparer" /> klasy zaleca się za pośrednictwem <c>porównania&lt;ciąg&gt; </c> (<c>porównania (Of String)</c> w języku Visual Basic).  Właściwości <see cref="T:System.StringComparer" /> klasy zwracać wstępnie zdefiniowanych wystąpień, które porównywania ciągów z różną kombinacją liter kultury i uwzględnianie wielkości liter.  Opcja uwzględniania wielkości liter i czułości kultury są spójne między elementami tego samego <see cref="T:System.StringComparer" /> wystąpienia.  Aby uzyskać więcej informacji dotyczących specyficzne dla kultury porównań, zobacz <see cref="N:System.Globalization" /> przestrzeni nazw i [globalizacji i Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-138">
              <para>For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c> (<c>Comparer(Of String)</c> in Visual Basic).  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="84b38-139">Pierwszy obiekt, który ma zostać porównany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-139">The first object to compare.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="84b38-140">Drugi obiekt, który będzie porównywany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-140">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="84b38-141">Porównuje dwa obiekty i zwraca wartość wskazującą, czy dany obiekt jest mniejszy, równy lub większy niż drugi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-141">Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="84b38-142">Całkowita wskazująca wartości <paramref name="x" /> i <paramref name="y" />, jak pokazano w poniższej tabeli.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-142">A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="84b38-143">
            <list type="table">
              <listheader>
                <term> Wartość </term>
                <description> znaczenie </description>
              </listheader>
              <item>
                <term> mniejsza od zera </term>
                <description>
                  <paramref name="x" /> jest mniejsza niż <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Zero </term>
                <description>
                  <paramref name="x" /> jest równe <paramref name="y" />.  </description>
              </item>
              <item>
                <term> Większa od zera </term>
                <description>
                  <paramref name="x" /> jest większa niż <paramref name="y" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-143">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="x" /> is less than <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="x" /> equals <paramref name="y" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="x" /> is greater than <paramref name="y" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b38-144">Ta metoda jest otoki dla <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> metody, więc `obj` musi być rzutowane na typ określony przez argument rodzajowy `T` bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="84b38-144">This method is a wrapper for the <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> method, so `obj` must be cast to the type specified by the generic argument `T` of the current instance.</span></span> <span data-ttu-id="84b38-145">Jeśli nie można rzutować na `T`, <xref:System.ArgumentException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="84b38-145">If it cannot be cast to `T`, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="84b38-146">Porównywanie `null` z odwołaniem do dowolnego typu jest dozwolone i nie generuje wyjątku.</span><span class="sxs-lookup"><span data-stu-id="84b38-146">Comparing `null` with any reference type is allowed and does not generate an exception.</span></span> <span data-ttu-id="84b38-147">Podczas sortowania, `null` jest uznawane za mniej niż jakiegokolwiek innego obiektu.</span><span class="sxs-lookup"><span data-stu-id="84b38-147">When sorting, `null` is considered to be less than any other object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b38-148">Poniższy przykład przedstawia użycie <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> metody do porównania dwóch obiektów.</span><span class="sxs-lookup"><span data-stu-id="84b38-148">The following example shows how to use the <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> method to compare two objects.</span></span> <span data-ttu-id="84b38-149">Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Collections.Generic.Comparer%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="84b38-149">This example is part of a larger example provided for the <xref:System.Collections.Generic.Comparer%601> class.</span></span>  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="84b38-150">
            <paramref name="x" /> lub <paramref name="y" /> jest typu, który nie może być rzutowana na typ <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-150">
              <paramref name="x" /> or <paramref name="y" /> is of a type that cannot be cast to type <paramref name="T" />.</span>
          </span>
          <span data-ttu-id="84b38-151">- lub - <paramref name="x" /> i <paramref name="y" /> albo nie implementuje <see cref="T:System.IComparable`1" /> ogólny interfejs lub <see cref="T:System.IComparable" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-151">-or-  <paramref name="x" /> and <paramref name="y" /> do not implement either the <see cref="T:System.IComparable`1" /> generic interface or the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="84b38-152">
            <para>
              <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> i <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> zachowywać się inaczej w zakresie czułości kultury i uwzględnianie wielkości liter.  Do porównywnania ciągów <see cref="T:System.StringComparer" /> klasy zaleca się za pośrednictwem <c>porównania&lt;ciąg&gt;</c>.  Właściwości <see cref="T:System.StringComparer" /> klasy zwracać wstępnie zdefiniowanych wystąpień, które porównywania ciągów z różną kombinacją liter kultury i uwzględnianie wielkości liter.  Opcja uwzględniania wielkości liter i czułości kultury są spójne między elementami tego samego <see cref="T:System.StringComparer" /> wystąpienia.  Aby uzyskać więcej informacji dotyczących specyficzne dla kultury porównań, zobacz <see cref="N:System.Globalization" /> przestrzeni nazw i [globalizacji i Localization](~/docs/standard/globalization-localization/index.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="84b38-152">
              <para>
                <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" /> and <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> behave differently in terms of culture-sensitivity and case-sensitivity.  For string comparisons, the <see cref="T:System.StringComparer" /> class is recommended over <c>Comparer&lt;String&gt;</c>.  Properties of the <see cref="T:System.StringComparer" /> class return predefined instances that perform string comparisons with different combinations of culture-sensitivity and case-sensitivity.  The case-sensitivity and culture-sensitivity are consistent among the members of the same <see cref="T:System.StringComparer" /> instance.  For more information on culture-specific comparisons, see the <see cref="N:System.Globalization" /> namespace and [Globalization and Localization](~/docs/standard/globalization-localization/index.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>