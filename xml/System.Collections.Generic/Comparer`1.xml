<Type Name="Comparer&lt;T&gt;" FullName="System.Collections.Generic.Comparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f518f5ced972dfa63784d51c93c4cd0209b57c3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69340612" /></Metadata><TypeSignature Language="C#" Value="public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Comparer`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IComparer`1&lt;!T&gt;, class System.Collections.IComparer" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Comparer`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Comparer(Of T)&#xA;Implements IComparer, IComparer(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Comparer abstract : System::Collections::Generic::IComparer&lt;T&gt;, System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type Comparer&lt;'T&gt; = class&#xA;    interface IComparer&#xA;    interface IComparer&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IComparer&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">Typ obiektów do porównania.</typeparam>
    <summary>Udostępnia klasę bazową dla implementacji <see cref="T:System.Collections.Generic.IComparer`1" /> interfejsu ogólnego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dziedzicz z tej klasy, aby zapewnić niestandardową implementację <xref:System.Collections.Generic.IComparer%601> interfejsu do użycia z klasami kolekcji, takimi <xref:System.Collections.Generic.SortedList%602> jak klasy i <xref:System.Collections.Generic.SortedDictionary%602> .  
  
 Różnica między pochodną <xref:System.Collections.Generic.Comparer%601> klasy a <xref:System.IComparable?displayProperty=nameWithType> implementacją interfejsu jest następująca:  
  
-   Aby określić, jak domyślnie mają być porównywane dwa obiekty, zaimplementuj <xref:System.IComparable?displayProperty=nameWithType> interfejs w klasie. Gwarantuje to, że operacje sortowania będą używały domyślnego kodu porównania, który podałeś.  
  
-   Aby zdefiniować moduł porównujący, który ma być używany zamiast domyślnej wartości porównującej <xref:System.Collections.Generic.Comparer%601> , pochodny od klasy. Tego modułu porównującego można użyć w operacjach sortowania, które przyjmują jako parametr funkcję porównującą.  
  
 Obiekt <xref:System.Collections.Generic.Comparer%601.Default%2A> zwrócony przez `IComparable(Of T)` Właściwość <xref:System.IComparable%601?displayProperty=nameWithType> używa interfejsu generycznego (`IComparable<T>` w C#, w Visual Basic) do porównywania dwóch obiektów. Jeśli typ `T` <xref:System.IComparable%601?displayProperty=nameWithType> nie implementuje interfejsu generycznego <xref:System.Collections.Generic.Comparer%601> , <xref:System.Collections.Generic.Comparer%601.Default%2A> Właściwość zwraca, który używa <xref:System.IComparable?displayProperty=nameWithType> interfejsu.  
  
   
  
## Examples  
 Poniższy przykład dziedziczy klasy, `BoxLengthFirst`, <xref:System.Collections.Generic.Comparer%601> z klasy. Ten moduł porównujący porównuje dwa `Box`obiekty typu. Sortuje je najpierw według długości, a następnie według wysokości, a następnie według szerokości. Klasa implementuje interfejs, aby kontrolować domyślne porównanie między dwoma `Box` obiektami. <xref:System.IComparable%601> `Box` Ta domyślna implementacja sortuje najpierw według wysokości, następnie według długości, a następnie według szerokości. W przykładzie pokazano różnice między dwoma porównaniami przez sortowanie listy `Box` obiektów w pierwszej kolejności przy `BoxLengthFirst` użyciu funkcji porównującej, a następnie przy użyciu domyślnej funkcji porównującej.  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.BoxCompare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>
        <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />i <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> mogą zachowywać się inaczej w zależności od rodzaju kultur i wielkości liter.  
  
W przypadku porównań ciągów <see cref="T:System.StringComparer" /> zaleca się użycie klasy <c>&lt;porównującej&gt;</c>.  <see cref="T:System.StringComparer" /> Właściwości klasy zwracają wstępnie zdefiniowane wystąpienia, które wykonują porównania ciągów z różnymi kombinacjami czułości i rozróżnianiem wielkości liter.  Wielkość liter i czułość kultury są spójne między elementami członkowskimi tego samego <see cref="T:System.StringComparer" /> wystąpienia.  
  
Aby uzyskać więcej informacji na temat porównań specyficznych dla <see cref="N:System.Globalization" /> kultury, zobacz Przestrzeń nazw oraz [globalizacja i lokalizacja](~/docs/standard/globalization-localization/index.md).</para></block>
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
    <altmember cref="T:System.IComparable`1" />
    <altmember cref="T:System.StringComparer" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Comparer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Comparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Comparer`1" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public abstract int Compare (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Compare (x As T, y As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int Compare(T x, T y);" />
      <MemberSignature Language="F#" Value="abstract member Compare : 'T * 'T -&gt; int" Usage="comparer.Compare (x, y)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IComparer`1.Compare(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">Pierwszy obiekt, który ma zostać porównany.</param>
        <param name="y">Drugi obiekt, który będzie porównywany.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, wykonuje porównanie dwóch obiektów tego samego typu i zwraca wartość wskazującą, czy jeden obiekt jest mniejszy niż drugi, czy jest równy lub większy.</summary>
        <returns>Liczba całkowita ze znakiem, która wskazuje wartości <paramref name="x" /> względne i <paramref name="y" />, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość 
 </term><description> Znaczenie 
 </description></listheader><item><term> Mniej niż zero 
 </term><description><paramref name="x" />jest mniejsze niż <paramref name="y" />.  
  
 </description></item><item><term> Zero 
 </term><description><paramref name="x" />równa <paramref name="y" />się.  
  
 </description></item><item><term> Większe od zera 
 </term><description><paramref name="x" />jest większa niż <paramref name="y" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj tę metodę, aby zapewnić dostosowany porównanie kolejności sortowania dla `T`typu.  
  
   
  
## Examples  
 W poniższym przykładzie zdefiniowano funkcję porównującą `Box` obiektów, które mogą być używane zamiast domyślnej wartości porównującej. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.Comparer%601> klasy.  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#5)]
 [!code-vb[System.Collections.Generic.BoxCompare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Typ <paramref name="T" /> nie implementuje <see cref="T:System.IComparable`1" /> interfejsu generycznego ani <see cref="T:System.IComparable" /> interfejsu.</exception>
        <block subset="none" type="overrides"><para>Porównywanie <see langword="null" /> z dowolnym typem referencyjnym jest dozwolone i nie generuje wyjątku. Odwołanie o wartości null jest uznawane za mniejsze niż dowolne odwołanie, które nie ma wartości null.  
  
Aby uzyskać informacje na temat porównań specyficznych dla <see cref="N:System.Globalization" /> kultury, zobacz Przestrzeń nazw oraz [globalizacja i lokalizacja](~/docs/standard/globalization-localization/index.md).</para></block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Comparer`1&lt;!T&gt; Create(class System.Comparison`1&lt;!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.Create(System.Comparison{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (comparison As Comparison(Of T)) As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::Comparer&lt;T&gt; ^ Create(Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Create : Comparison&lt;'T&gt; -&gt; System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Create comparison" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="comparison">Porównanie, które ma być używane.</param>
        <summary>Tworzy moduł porównujący przy użyciu określonego porównania.</summary>
        <returns>Nowy moduł porównujący.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.Comparer`1&lt;!T&gt; Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Comparer`1.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As Comparer(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::Comparer&lt;T&gt; ^ Default { System::Collections::Generic::Comparer&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.Generic.Comparer&lt;'T&gt;" Usage="System.Collections.Generic.Comparer&lt;'T&gt;.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Comparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca domyślną funkcję porównującą kolejność sortowania dla typu określonego przez argument generyczny.</summary>
        <value>Obiekt, który dziedziczy <see cref="T:System.Collections.Generic.Comparer`1" /> i służy jako moduł porównujący kolejności sortowania dla <paramref name="T" />typu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 C# `IComparable(Of T)` `IComparable<T>` Zwracana przez tę właściwość <xref:System.IComparable%601?displayProperty=nameWithType> używa interfejsu generycznego (w, w Visual Basic) do porównywania dwóch obiektów. <xref:System.Collections.Generic.Comparer%601> Jeśli typ `T` <xref:System.IComparable%601?displayProperty=nameWithType> nie implementuje interfejsu generycznego <xref:System.Collections.Generic.Comparer%601> , ta właściwość <xref:System.IComparable?displayProperty=nameWithType> zwraca, który używa interfejsu.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Collections.Generic.Comparer%601.Default%2A> jak używać właściwości, aby pobrać obiekt, który wykonuje domyślne porównanie. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.Comparer%601> klasy.  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#3)]
 [!code-vb[System.Collections.Generic.BoxCompare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>W przypadku porównań <see cref="T:System.StringComparer" /> ciągów zaleca się użycie klasy <c>&lt;porównującej&gt;</c> (<c>z ciągu)</c> w Visual Basic).  <see cref="T:System.StringComparer" /> Właściwości klasy zwracają wstępnie zdefiniowane wystąpienia, które wykonują porównania ciągów z różnymi kombinacjami czułości i rozróżnianiem wielkości liter.  Wielkość liter i czułość kultury są spójne między elementami członkowskimi tego samego <see cref="T:System.StringComparer" /> wystąpienia.  
  
Aby uzyskać więcej informacji na temat porównań specyficznych dla <see cref="N:System.Globalization" /> kultury, zobacz Przestrzeń nazw oraz [globalizacja i lokalizacja](~/docs/standard/globalization-localization/index.md).</para></block>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IComparer.Compare">
      <MemberSignature Language="C#" Value="int IComparer.Compare (object x, object y);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IComparer.Compare(object x, object y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Compare (x As Object, y As Object) As Integer Implements IComparer.Compare" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IComparer.Compare(System::Object ^ x, System::Object ^ y) = System::Collections::IComparer::Compare;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Object" />
        <Parameter Name="y" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="x">Pierwszy obiekt, który ma zostać porównany.</param>
        <param name="y">Drugi obiekt, który będzie porównywany.</param>
        <summary>Porównuje dwa obiekty i zwraca wartość wskazującą, czy jedna z nich jest mniejsza, równa lub większa od drugiej.</summary>
        <returns>Liczba całkowita ze znakiem, która wskazuje wartości <paramref name="x" /> względne i <paramref name="y" />, jak pokazano w poniższej tabeli.  
  
 <list type="table"><listheader><term> Wartość 
 </term><description> Znaczenie 
 </description></listheader><item><term> Mniej niż zero 
 </term><description><paramref name="x" />jest mniejsze niż <paramref name="y" />.  
  
 </description></item><item><term> Zero 
 </term><description><paramref name="x" />równa <paramref name="y" />się.  
  
 </description></item><item><term> Większe od zera 
 </term><description><paramref name="x" />jest większa niż <paramref name="y" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest otoką dla <xref:System.Collections.Generic.Comparer%601.Compare%28%600%2C%600%29> metody, dlatego `obj` musi być rzutowana na typ określony przez argument `T` rodzajowy bieżącego wystąpienia. Jeśli nie można rzutować do `T` <xref:System.ArgumentException> , jest zgłaszany.  
  
 Porównywanie `null` z dowolnym typem referencyjnym jest dozwolone i nie generuje wyjątku. Podczas sortowania `null` jest uznawana za mniej niż każdy inny obiekt.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Collections.Generic.Comparer%601.System%23Collections%23IComparer%23Compare%2A> jak używać metody do porównywania dwóch obiektów. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Collections.Generic.Comparer%601> klasy.  
  
 [!code-csharp[System.Collections.Generic.BoxCompare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.boxcompare/cs/program.cs#4)]
 [!code-vb[System.Collections.Generic.BoxCompare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.boxcompare/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="x" />lub <paramref name="y" /> jest typu, którego nie można rzutować na typ <paramref name="T" />.  
  
—lub— 
 <paramref name="x" />i <paramref name="y" /> nie implementuje <see cref="T:System.IComparable`1" /> interfejsu generycznego ani <see cref="T:System.IComparable" /> interfejsu.</exception>
        <block subset="none" type="usage"><para>
            <see cref="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)" />i <see cref="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)" /> zachowują się inaczej pod względem wielkości kultur i uwzględniania wielkości liter.  
  
W przypadku porównań ciągów <see cref="T:System.StringComparer" /> zaleca się użycie klasy <c>&lt;porównującej&gt;</c>.  <see cref="T:System.StringComparer" /> Właściwości klasy zwracają wstępnie zdefiniowane wystąpienia, które wykonują porównania ciągów z różnymi kombinacjami czułości i rozróżnianiem wielkości liter.  Wielkość liter i czułość kultury są spójne między elementami członkowskimi tego samego <see cref="T:System.StringComparer" /> wystąpienia.  
  
Aby uzyskać więcej informacji na temat porównań specyficznych dla <see cref="N:System.Globalization" /> kultury, zobacz Przestrzeń nazw oraz [globalizacja i lokalizacja](~/docs/standard/globalization-localization/index.md).</para></block>
        <altmember cref="T:System.StringComparer" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
