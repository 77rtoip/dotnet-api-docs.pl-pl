<Type Name="Dictionary&lt;TKey,TValue&gt;+ValueCollection+Enumerator" FullName="System.Collections.Generic.Dictionary&lt;TKey,TValue&gt;+ValueCollection+Enumerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c87e98917fa917dfef23dd2604cc87f5baa43287" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36714267" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Dictionary&lt;TKey,TValue&gt;.ValueCollection.Enumerator : System.Collections.Generic.IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi serializable sealed beforefieldinit Dictionary`2/ValueCollection/Enumerator&lt;TKey, TValue&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!TValue&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure Dictionary(Of TKey, TValue).ValueCollection.Enumerator&#xA;Implements IEnumerator(Of TValue)" />
  <TypeSignature Language="C++ CLI" Value="public: value class Dictionary&lt;TKey, TValue&gt;::ValueCollection::Enumerator : System::Collections::Generic::IEnumerator&lt;TValue&gt;" />
  <TypeSignature Language="F#" Value="type Dictionary&lt;'Key, 'Value&gt;.ValueCollection.Enumerator = struct&#xA;    interface IEnumerator&lt;'Value&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;TValue&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Wylicza elementy <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `foreach` Instrukcji języka C# (`for each` w języku C++ `For Each` w języku Visual Basic) ukrywa złożoność wyliczenia. W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.  
  
 Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.  
  
 Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. W tym miejscu <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> jest niezdefiniowana. Należy wywołać <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A>.  
  
 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> jest wywoływana. <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> Ustawia <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> do następnego elementu.  
  
 Jeśli <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> zwraca `false`. Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> zwracają również `false`. Jeśli przez ostatnie wywołanie <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> jest niezdefiniowana. Nie można ustawić <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> do pierwszego elementu w kolekcji; należy utworzyć nowe wystąpienie modułu wyliczającego zamiast tego.  
  
 Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona. Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> zgłasza <xref:System.InvalidOperationException>.  
  
 Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość. Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.  Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.  
  
 Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.Dictionary`2.Enumerator" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public TValue Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TValue Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TValue Current { TValue get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : 'Value" Usage="System.Collections.Generic.Dictionary&lt;'Key, 'Value&gt;.ValueCollection.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element w bieżącym położeniu modułu wyliczającego.</summary>
        <value>Element w <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" /> w bieżącym położeniu modułu wyliczającego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> jest niezdefiniowana we wszystkich następujących warunków:  
  
- Moduł wyliczający jest umieszczony przed pierwszym elementem kolekcji. Tak się stanie po utworzeniu modułu wyliczającego lub po <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> metoda jest wywoływana. <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> Metoda musi zostać wywołana można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> właściwości.  
  
- Ostatnie wywołanie <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> zwrócił `false`, co oznacza koniec kolekcji i że moduł wyliczający jest umieszczony za ostatnim elementem kolekcji.

- Moduł wyliczający jest unieważnione z powodu zmian wprowadzonych w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów.

 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> nie powoduje przeniesienia pozycja modułu wyliczającego i kolejne wywołania <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> zwracać ten sam obiekt do momentu <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> jest wywoływana.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="enumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przechodzi do następnego elementu modułu wyliczającego <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection" />.</summary>
        <returns>
          <see langword="true" /> Jeśli moduł wyliczający został pomyślnie poprawionym do następnego elementu; <see langword="false" /> po zakończeniu zbierania moduł wyliczający.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu modułu wyliczającego moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji i w pierwszym wywołaniu <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> zmienia modułu wyliczającego pierwszym elementem kolekcji.  
  
 Jeśli <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> zwraca `false`. Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> zwracają również `false`.  
  
 Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona. Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> zgłasza <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego.</exception>
        <altmember cref="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.Dictionary&lt;'Key, 'Value&gt;.ValueCollection.Enumerator.System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element w bieżącym położeniu modułu wyliczającego.</summary>
        <value>Element w kolekcji w bieżącym położeniu modułu wyliczającego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Current%2A> jest niezdefiniowana we wszystkich następujących warunków:  
  
- Moduł wyliczający jest umieszczony przed pierwszym elementem kolekcji. Tak się stanie po utworzeniu modułu wyliczającego lub po <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> metoda jest wywoływana. <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> Metoda musi zostać wywołana można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Current%2A> właściwości.  
  
- Ostatnie wywołanie <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> zwrócił `false`, co oznacza koniec kolekcji i że moduł wyliczający jest umieszczony za ostatnim elementem kolekcji.

- Moduł wyliczający jest unieważnione z powodu zmian wprowadzonych w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów.

 <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Current%2A> nie powoduje przeniesienia pozycja modułu wyliczającego i kolejne wywołania <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Current%2A> zwracać ten sam obiekt do momentu <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> jest wywoływana.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia modułu wyliczającego pozycji początkowej, czyli przed pierwszym elementem w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> metody należy wywołać <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> metodę modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.Current%2A> właściwości.  
  
 Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona. Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.Dictionary%602.ValueCollection.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> zgłasza <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego.</exception>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>