<Type Name="SynchronizedReadOnlyCollection&lt;T&gt;" FullName="System.Collections.Generic.SynchronizedReadOnlyCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2fbe159690e2ad637dc52cc907bea55a802e112" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39792909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SynchronizedReadOnlyCollection&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizedReadOnlyCollection`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizedReadOnlyCollection(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class SynchronizedReadOnlyCollection : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type SynchronizedReadOnlyCollection&lt;'T&gt; = class&#xA;    interface IList&lt;'T&gt;&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="7b484-101">Typ obiektu zawartych jako elementy w kolekcji wątkowo, tylko do odczytu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b484-101">The type of object contained as items in the thread-safe, read-only collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="7b484-102">Zawiera kolekcję wątkowo, tylko do odczytu, która zawiera obiekty typu określonego przez parametr ogólny jako elementy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7b484-102">Provides a thread-safe, read-only collection that contains objects of a type specified by the generic parameter as elements.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-103"><xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> Przechowuje dane w <xref:System.Collections.Generic.IList%601> kontenera i zapewnia obiekt, który można ustawić i używane do synchronizowania dostępu do kolekcji, tak aby był bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="7b484-103">The <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> stores data in an <xref:System.Collections.Generic.IList%601> container and provides an object that can be set and used to synchronize access to the collection so that it is thread safe.</span></span> <span data-ttu-id="7b484-104"><xref:System.Collections.Generic.IList%601> Kontenera można odzyskać przy użyciu <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.Items%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7b484-104">The <xref:System.Collections.Generic.IList%601> container can be recovered using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.Items%2A> property.</span></span> <span data-ttu-id="7b484-105">Synchronizacja obiektów można odzyskać przy użyciu <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23ICollection%23SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="7b484-105">The synchronized object can be recovered using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.System%23Collections%23ICollection%23SyncRoot%2A> property.</span></span> <span data-ttu-id="7b484-106">Tylko można ustawić, za pomocą jednego z konstruktorów, które przyjmują `syncRoot` parametru.</span><span class="sxs-lookup"><span data-stu-id="7b484-106">It can only be set using one of the constructors that take the `syncRoot` parameter.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7b484-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-107">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b484-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-108">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object)" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt; : obj -&gt; System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt;" Usage="new System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt; sync_root" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="syncRoot">
          <span data-ttu-id="7b484-109">Obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-109">The object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </param>
        <param name="sync_root">
          <span data-ttu-id="7b484-110">Obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-110">The object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> klasy z obiektu, używane do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-111">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class with the object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-112">Jeśli wiele wystąpień <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> są tworzone, korzystając z tych samych `syncRoot`, a następnie dostępu są chronione we wszystkich wystąpieniach.</span><span class="sxs-lookup"><span data-stu-id="7b484-112">If multiple instances of the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601> are created using the same `syncRoot`, then access is protected across all instances.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b484-113">
            <paramref name="syncRoot" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-113">
              <paramref name="syncRoot" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, System.Collections.Generic.List&lt;T&gt; list, bool make_copy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, class System.Collections.Generic.List`1&lt;!T&gt; list, bool make_copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.List{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, list As List(Of T), make_copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, System::Collections::Generic::List&lt;T&gt; ^ list, bool make_copy);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt; : obj * System.Collections.Generic.List&lt;'T&gt; * bool -&gt; System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt;" Usage="new System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt; (sync_root, list, make_copy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sync_root" Type="System.Object" />
        <Parameter Name="list" Type="System.Collections.Generic.List&lt;T&gt;" />
        <Parameter Name="make_copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sync_root">To be added.</param>
        <param name="list">To be added.</param>
        <param name="make_copy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot, System.Collections.Generic.IEnumerable&lt;T&gt; list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, list As IEnumerable(Of T))" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, System.Collections.Generic.IEnumerable&lt;T&gt; list);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; list) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, list As IEnumerable(Of T))" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, System::Collections::Generic::IEnumerable&lt;T&gt; ^ list);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt; : obj * seq&lt;'T&gt; -&gt; System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt;" Usage="new System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt; (sync_root, list)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="list" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" />
      </Parameters>
      <Docs>
        <param name="syncRoot">
          <span data-ttu-id="7b484-114">Obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-114">The object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </param>
        <param name="sync_root">
          <span data-ttu-id="7b484-115">Obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-115">The object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </param>
        <param name="list">
          <span data-ttu-id="7b484-116">
            <see cref="T:System.Collections.Generic.IEnumerable`1" /> Kolekcję elementów używane do inicjowania kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-116">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe, read-only collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> klasy z określonym Lista numerowana elementów i obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-117">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b484-118">
            <paramref name="syncRoot" /> lub <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-118">
              <paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object syncRoot, params T[] list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object syncRoot, !T[] list) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (syncRoot As Object, ParamArray list As T())" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ syncRoot, ... cli::array &lt;T&gt; ^ list);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C#" Value="public SynchronizedReadOnlyCollection (object sync_root, params T[] list);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object sync_root, !T[] list) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,`0[])" FrameworkAlternate="xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync_root As Object, ParamArray list As T())" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizedReadOnlyCollection(System::Object ^ sync_root, ... cli::array &lt;T&gt; ^ list);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt; : obj * 'T[] -&gt; System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt;" Usage="new System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt; (sync_root, list)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="syncRoot" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0" />
        <Parameter Name="sync_root" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="list" Type="T[]" Index="1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="syncRoot">
          <span data-ttu-id="7b484-119">Obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-119">The object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </param>
        <param name="sync_root">
          <span data-ttu-id="7b484-120">Obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-120">The object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </param>
        <param name="list">
          <span data-ttu-id="7b484-121">
            <see cref="T:System.Array" /> Typu <c>T</c> elementy służące do zainicjowania kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-121">The <see cref="T:System.Array" /> of type <c>T</c> elements used to initialize the thread-safe, read-only collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-122">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> klasy z określonej tablicy elementów i obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-122">Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7b484-123">
            <paramref name="syncRoot" /> lub <paramref name="list" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-123">
              <paramref name="syncRoot" /> or <paramref name="list" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="synchronizedReadOnlyCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b484-124">Obiekt do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-124">The object to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-125">Określa, czy kolekcja zawiera element z określoną wartością.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-125">Determines whether the collection contains an element with a specific value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b484-126">
            <see langword="true" /> Jeśli element <paramref name="value" /> jest znaleziony w kolekcji; w przeciwnym <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-126">
              <see langword="true" /> if the element <paramref name="value" /> is found in the collection; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b484-127">
            <paramref name="value" /> nie jest obiektem typu zawartego w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-127">
              <paramref name="value" /> is not an object of the type contained in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="synchronizedReadOnlyCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7b484-128">
            <see cref="T:System.Array" /> Jest miejscem docelowym elementów kopiowanych z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-128">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7b484-129">Rozpoczyna się od zera indeks w tablicy, w których kopiowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-129">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-130">Kopiuje elementy kolekcji do określonej tablicy, zaczynając od określonego indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-130">Copies the elements of the collection to a specified array, starting at a particular index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b484-131">Pobiera liczbę elementów znajdujących się w kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-131">Gets the number of elements contained in the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-132">Liczba elementów znajdujących się w kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-132">The number of elements contained in the thread-safe, read-only collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="synchronizedReadOnlyCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b484-133">Zwraca moduł wyliczający, który iteruje po kolekcji zsynchronizowane, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-133">Returns an enumerator that iterates through the synchronized, read-only collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b484-134">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> Dla obiektów typu przechowywane w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-134">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="synchronizedReadOnlyCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b484-135">Element, którego indeks jest pobierana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-135">The element whose index is being retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-136">Zwraca indeks pierwszego wystąpienia wartości w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-136">Returns the index of the first occurrence of a value in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b484-137">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-137">The zero-based index of the first occurrence of the <paramref name="value" /> in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T" Usage="System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7b484-138">Liczony od zera indeks elementu do pobrania z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-138">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-139">Pobiera element z kolekcji wątkowo, tylko do odczytu o określonym indeksie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-139">Gets an element from the thread-safe, read-only collection with a specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-140">Obiekt w kolekcji, która ma określony <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-140">The object in the collection that has the specified <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.IList&lt;T&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;!T&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Items As IList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::IList&lt;T&gt; ^ Items { System::Collections::Generic::IList&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.IList&lt;'T&gt;" Usage="System.Collections.Generic.SynchronizedReadOnlyCollection&lt;'T&gt;.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b484-141">Pobiera listę elementów znajdujących się w kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-141">Gets the list of elements contained in the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-142">
            <see cref="T:System.Collections.Generic.IList`1" /> Elementów, które są zawarte w kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-142">The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (value As T) Implements ICollection(Of T).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Add(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b484-143">Element, który ma zostać dodany do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-143">The element to be added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-144">Zgłasza <see cref="T:System.NotSupportedException" /> przypadku ich wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-144">Throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-145">Nie można dodać elementów do kolekcji tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7b484-145">Items cannot be added to a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-146">Nie można ustawić elementów w kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-146">Items cannot be set in a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;T&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;T&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of T).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;T&gt;.Clear() = System::Collections::Generic::ICollection&lt;T&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b484-147">Zgłasza <see cref="T:System.NotSupportedException" /> przypadku ich wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-147">Throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-148">Nie można usunąć elementy z kolekcji tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7b484-148">Items cannot be cleared from a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-149">Nie można usunąć elementy z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-149">Items cannot be cleared from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b484-150">Właściwość ta zwraca zawsze <see langword="true" /> ponieważ kolekcja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-150">This property always returns <see langword="true" /> because the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-151">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-151">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="7b484-152">Właściwość ta zwraca zawsze <see langword="true" /> ponieważ kolekcja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-152">This property always returns <see langword="true" /> because the collection is read-only.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;T&gt;.Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (value As T) As Boolean Implements ICollection(Of T).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;T&gt;.Remove(T value) = System::Collections::Generic::ICollection&lt;T&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b484-153">Wartość, która ma zostać usunięty z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-153">The value to be removed from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-154">Zwraca <see langword="false" /> i zgłasza <see cref="T:System.NotSupportedException" /> przypadku ich wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-154">Returns <see langword="false" /> and throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b484-155">
            <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-155">
              <see langword="False" />.</span>
          </span>
          <span data-ttu-id="7b484-156">Metoda ta zwraca <see langword="false" /> do wskazania, że element nie został usunięty z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-156">The method returns <see langword="false" /> to indicate that the item was not removed from the read-only collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-157">Nie można usunąć elementy z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-157">Items cannot be removed from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As T) Implements IList(Of T).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.Insert(int index, T value) = System::Collections::Generic::IList&lt;T&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7b484-158">Liczony od zera indeks, w którym <c>wartość</c> ma zostać wstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-158">The zero-based index at which <c>value</c> is to be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7b484-159">Obiekt do wstawienia do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-159">The object to insert into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-160">Zgłasza <see cref="T:System.NotSupportedException" /> przypadku ich wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-160">Throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-161">Nie można wstawić elementów w kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-161">Items cannot be inserted into a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.Item">
      <MemberSignature Language="C#" Value="T System.Collections.Generic.IList&lt;T&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T System.Collections.Generic.IList&lt;T&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As T Implements IList(Of T).Item" />
      <MemberSignature Language="C++ CLI" Value="property T System::Collections::Generic::IList&lt;T&gt;::Item[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IList&lt;T&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7b484-162">Liczony od zera indeks elementu do pobrania z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-162">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-163">Zwraca obiekt w kolekcji, która ma określony <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-163">Returns the object in the collection that has the specified <paramref name="index" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-164">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-164">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="7b484-165">Zwraca obiekt w kolekcji, która ma określony <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-165">Returns the object in the collection that has the specified <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;T&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;T&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList&lt;T&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of T).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;T&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;T&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7b484-166">Liczony od zera indeks elementu do pobrania z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-166">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-167">Zgłasza <see cref="T:System.NotSupportedException" /> przypadku ich wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-167">Throws a <see cref="T:System.NotSupportedException" /> if called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-168">Nie można usunąć elementy z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-168">Items cannot be removed from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7b484-169">
            <see cref="T:System.Array" /> Jest miejscem docelowym elementów kopiowanych z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-169">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="7b484-170">Rozpoczyna się od zera indeks w tablicy, w których kopiowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-170">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-171">Kopiuje elementy kolekcji do określonej tablicy, zaczynając od określonego indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-171">Copies the elements of the collection to a specified array, starting at a particular index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b484-172">Właściwość ta zwraca zawsze <see langword="true" /> ponieważ kolekcja jest bezpieczny dla wątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-172">This property always returns <see langword="true" /> because the collection is thread safe.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-173">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-173">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="7b484-174">Właściwość ta zwraca zawsze <see langword="true" /> ponieważ kolekcja jest bezpieczny dla wątków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-174">This property always returns <see langword="true" /> because the collection is thread safe.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b484-175">Pobiera obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-175">Gets the object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-176">Zwraca <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-176">Returns <see cref="T:System.Object" />.</span>
          </span>
          <span data-ttu-id="7b484-177">Obiekt używany do synchronizowania dostępu do kolekcji wątkowo, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-177">The object used to synchronize access to the thread-safe, read-only collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-178">Wartość tego `syncRoot` obiektu można ustawić podczas tworzenia kolekcji metodą o bezpiecznych wątkach, za pomocą <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.%23ctor%28System.Object%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="7b484-178">The value of this `syncRoot` object can be set when creating the thread-safe collection using the <xref:System.Collections.Generic.SynchronizedReadOnlyCollection%601.%23ctor%28System.Object%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b484-179">Zwraca moduł wyliczający, który iteruje po kolekcji zsynchronizowane, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-179">Returns an enumerator that iterates through the synchronized, read-only collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b484-180">Zwraca <see cref="T:System.Collections.IEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-180">Returns <see cref="T:System.Collections.IEnumerator" />.</span>
          </span>
          <span data-ttu-id="7b484-181">Moduł wyliczający, który iteruje po kolekcji zsynchronizowane, tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-181">An enumerator that iterates through the synchronized, read-only collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b484-182">Element, który ma zostać dodany do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-182">The element to be added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-183">Dodaje element do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-183">Adds an element to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b484-184">Zwraca <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-184">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="7b484-185">Pozycja, do którego dodano nowy element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-185">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-186">Nie można dodać elementów do kolekcji tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7b484-186">Items cannot be added to a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-187">Nie można ustawić elementów w kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-187">Items cannot be set in a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7b484-188">Nie można usunąć elementy z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-188">Items cannot be cleared from a read-only collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-189">Nie można usunąć elementy z kolekcji tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7b484-189">Items cannot be cleared from a read-only collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-190">Nie można usunąć elementy z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-190">Items cannot be cleared from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b484-191">Obiekt do zlokalizowania w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-191">The object to locate in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-192">Sprawdza, czy określony obiekt istnieje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-192">Checks whether the specified object exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b484-193">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-193">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="7b484-194">Wartość true, jeśli obiekt znajduje się w kolekcji; w przeciwnym razie wartość false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-194">True if the object is located in the collection; otherwise false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-195">Zwraca `true` Jeśli element `value` jest znaleziony w kolekcji; w przeciwnym `false`.</span><span class="sxs-lookup"><span data-stu-id="7b484-195">Returns `true` if the element `value` is found in the collection; otherwise `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7b484-196">
            <paramref name="value" /> nie jest obiektem typu zawartego w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-196">
              <paramref name="value" /> is not an object of the type contained in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b484-197">Element, którego indeks jest pobierana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-197">The element whose index is being retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-198">Pobiera indeks określony element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-198">Gets the index of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7b484-199">Zwraca <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-199">Returns <see cref="T:System.Int32" />.</span>
          </span>
          <span data-ttu-id="7b484-200">Liczony od zera indeks pierwszego wystąpienia <paramref name="value" /> w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-200">The zero-based index of the first occurrence of the <paramref name="value" /> in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7b484-201">Liczony od zera indeks, w którym <c>wartość</c> ma zostać wstawiony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-201">The zero-based index at which <c>value</c> is to be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7b484-202">Obiekt do wstawienia do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-202">The object to insert into the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-203">Nie można wstawić elementów w kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-203">Items cannot be inserted into a read-only collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-204">Zgłasza <xref:System.NotSupportedException> przypadku ich wywołania.</span><span class="sxs-lookup"><span data-stu-id="7b484-204">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-205">Nie można wstawić elementów w kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-205">Items cannot be inserted into a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b484-206">Ta właściwość zwraca <see langword="true" /> ponieważ kolekcja tylko do odczytu jest zawsze stałym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-206">This property returns <see langword="true" /> because the read-only collection is always fixed in size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-207">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-207">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="7b484-208">Ta właściwość zwraca <see langword="true" /> ponieważ kolekcja tylko do odczytu jest zawsze stałym rozmiarze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-208">This property returns <see langword="true" /> because the read-only collection is always fixed in size.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7b484-209">Właściwość ta zwraca zawsze <see langword="true" /> ponieważ kolekcja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-209">This property always returns <see langword="true" /> because the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-210">Zwraca <see cref="T:System.Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-210">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="7b484-211">Właściwość ta zwraca zawsze <see langword="true" /> ponieważ kolekcja jest tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-211">This property always returns <see langword="true" /> because the collection is read-only.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7b484-212">Liczony od zera indeks elementu do pobrania z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-212">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-213">Pobiera element z określonym indeksem liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-213">Gets the item at a specified zero-based index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7b484-214">Zwraca <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-214">Returns <see cref="T:System.Object" />.</span>
          </span>
          <span data-ttu-id="7b484-215">Pobiera element z określonym indeksem liczony od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-215">Gets the item at a specified zero-based index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-216">Nie można ustawić elementów w kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-216">Items cannot be set in a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7b484-217">Liczony od zera indeks elementu do pobrania z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-217">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-218">Pobiera określony element z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-218">Retrieves the specified element from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-219">Zgłasza <xref:System.NotSupportedException> przypadku ich wywołania.</span><span class="sxs-lookup"><span data-stu-id="7b484-219">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-220">Nie można usunąć elementy z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-220">Items cannot be removed from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="7b484-221">Liczony od zera indeks elementu do pobrania z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-221">The zero-based index of the element to be retrieved from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7b484-222">Nie można usunąć elementy z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-222">Items cannot be removed from a read-only collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b484-223">Zgłasza <xref:System.NotSupportedException> przypadku ich wywołania.</span><span class="sxs-lookup"><span data-stu-id="7b484-223">Throws a <xref:System.NotSupportedException> if called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7b484-224">Nie można usunąć elementy z kolekcji tylko do odczytu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7b484-224">Items cannot be removed from a read-only collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>