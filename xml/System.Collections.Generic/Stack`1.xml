<Type Name="Stack&lt;T&gt;" FullName="System.Collections.Generic.Stack&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aab26b9c2d23749c4d13cae365541686e6c2ad96" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69334637" /></Metadata><TypeSignature Language="C#" Value="public class Stack&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Stack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Stack : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Stack&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_StackDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="fed79-101">Określa typ elementów w stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-101">Specifies the type of elements in the stack.</span></span></typeparam>
    <summary><span data-ttu-id="fed79-102">Reprezentuje kolekcję o rozmiarze "ostatniego" w pierwszej kolejności (LIFO) wystąpień tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="fed79-102">Represents a variable size last-in-first-out (LIFO) collection of instances of the same specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-103"><xref:System.Collections.Generic.Stack%601>jest zaimplementowany jako tablica.</span><span class="sxs-lookup"><span data-stu-id="fed79-103"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="fed79-104">Stosy i kolejki są przydatne, gdy potrzebujesz magazynu tymczasowego na potrzeby informacji; oznacza to, że jeśli chcesz odrzucić element po pobraniu jego wartości.</span><span class="sxs-lookup"><span data-stu-id="fed79-104">Stacks and queues are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="fed79-105">Użyj <xref:System.Collections.Generic.Queue%601> , jeśli chcesz uzyskać dostęp do informacji w takiej samej kolejności, w jakiej są przechowywane w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-105">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="fed79-106">Użyj <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> , jeśli chcesz uzyskać dostęp do informacji w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="fed79-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> if you need to access the information in reverse order.</span></span>  
  
 <span data-ttu-id="fed79-107">Użyj typów <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> i, jeśli chcesz uzyskać dostęp do kolekcji z wielu wątków jednocześnie. <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fed79-107">Use the <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> and <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types when you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="fed79-108">Typowym zastosowaniem <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> jest zachowywanie Stanów zmiennych podczas wywołań do innych procedur.</span><span class="sxs-lookup"><span data-stu-id="fed79-108">A common use for <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> is to preserve variable states during calls to other procedures.</span></span>  
  
 <span data-ttu-id="fed79-109">Trzy główne operacje można wykonać na <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> i jego elementach:</span><span class="sxs-lookup"><span data-stu-id="fed79-109">Three main operations can be performed on a <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> and its elements:</span></span>  
  
-   <span data-ttu-id="fed79-110"><xref:System.Collections.Generic.Stack%601.Push%2A>Wstawia element w górnej części <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fed79-110"><xref:System.Collections.Generic.Stack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
-   <span data-ttu-id="fed79-111"><xref:System.Collections.Generic.Stack%601.Pop%2A>Usuwa element z góry <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fed79-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> removes an element from the top of the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
-   <span data-ttu-id="fed79-112"><xref:System.Collections.Generic.Stack%601.Peek%2A>Zwraca element, który znajduje się w górnej części, <xref:System.Collections.Generic.Stack%601> ale nie usuwa go <xref:System.Collections.Generic.Stack%601>z.</span><span class="sxs-lookup"><span data-stu-id="fed79-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> returns an element that is at the top of the <xref:System.Collections.Generic.Stack%601> but does not remove it from the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fed79-113">Pojemność a to liczba <xref:System.Collections.Generic.Stack%601> elementów, które <xref:System.Collections.Generic.Stack%601> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="fed79-113">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="fed79-114">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="fed79-114">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="fed79-115">Wydajność można zmniejszyć, wywołując <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="fed79-116">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest mniejsza niż pojemność stosu, <xref:System.Collections.Generic.Stack%601.Push%2A> jest operacją o (1).</span><span class="sxs-lookup"><span data-stu-id="fed79-116">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="fed79-117">Jeśli pojemność musi być zwiększona w celu uwzględnienia nowego elementu <xref:System.Collections.Generic.Stack%601.Push%2A> , to operacja o (`n`), gdzie `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-117">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="fed79-118"><xref:System.Collections.Generic.Stack%601.Pop%2A>jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="fed79-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="fed79-119"><xref:System.Collections.Generic.Stack%601>akceptuje `null` jako prawidłową wartość dla typów odwołań i umożliwia duplikowanie elementów.</span><span class="sxs-lookup"><span data-stu-id="fed79-119"><xref:System.Collections.Generic.Stack%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-120">Poniższy przykład kodu ilustruje kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="fed79-120">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span> <span data-ttu-id="fed79-121">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-121">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-122">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-122">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-123"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-123">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-124">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-124">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-125">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-125">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-126">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-126">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-127">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-127">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-128"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-128">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-129">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-129">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="fed79-130">Publiczne statyczne (<see langword="Shared" /> w Visual Basic) członkowie tego typu są bezpieczne wątkowo.</span><span class="sxs-lookup"><span data-stu-id="fed79-130">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="fed79-131">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="fed79-131">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="fed79-132"><see cref="T:System.Collections.Generic.Stack`1" /> Może obsługiwać wielu czytników współbieżnie, o ile kolekcja nie jest modyfikowana.</span><span class="sxs-lookup"><span data-stu-id="fed79-132">A <see cref="T:System.Collections.Generic.Stack`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="fed79-133">Nawet w ten sposób Wyliczanie za pomocą kolekcji nie jest w sposób wewnętrzny bezpieczny dla wątków.</span><span class="sxs-lookup"><span data-stu-id="fed79-133">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fed79-134">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fed79-134">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fed79-135">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="fed79-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="fed79-136">Iteratory (C# i Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fed79-136">Iterators (C# and Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fed79-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="fed79-137">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-138">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.Stack`1" /> klasy, która jest pusta i ma domyślną pojemność początkową.</span><span class="sxs-lookup"><span data-stu-id="fed79-138">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-139">Pojemność programu to liczba <xref:System.Collections.Generic.Stack%601> elementów <xref:System.Collections.Generic.Stack%601> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="fed79-139">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="fed79-140">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="fed79-140">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fed79-141">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fed79-141">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fed79-142">Wydajność można zmniejszyć, wywołując <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-142">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="fed79-143">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="fed79-143">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-144">Poniższy przykład kodu demonstruje tego konstruktora i kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="fed79-144">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="fed79-145">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-145">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-146">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-146">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-147"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-147">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-148">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-148">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-149">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-149">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-150">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-150">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-151">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-151">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-152"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-152">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-153">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-153">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="fed79-154">Kolekcja, z której mają zostać skopiowane elementy.</span><span class="sxs-lookup"><span data-stu-id="fed79-154">The collection to copy elements from.</span></span></param>
        <summary><span data-ttu-id="fed79-155">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.Stack`1" /> klasy zawierające elementy skopiowane z określonej kolekcji i ma wystarczającą pojemność, aby pomieścić liczbę skopiowanych elementów.</span><span class="sxs-lookup"><span data-stu-id="fed79-155">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-156">Pojemność programu to liczba <xref:System.Collections.Generic.Stack%601> elementów <xref:System.Collections.Generic.Stack%601> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="fed79-156">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="fed79-157">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="fed79-157">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fed79-158">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fed79-158">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fed79-159">Wydajność można zmniejszyć, wywołując <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-159">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="fed79-160">Elementy są kopiowane <xref:System.Collections.Generic.Stack%601> do tabeli w tej samej kolejności, w jakiej są odczytywane <xref:System.Collections.Generic.IEnumerator%601> przez kolekcję.</span><span class="sxs-lookup"><span data-stu-id="fed79-160">The elements are copied onto the <xref:System.Collections.Generic.Stack%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="fed79-161">Ten konstruktor jest operacją o`n`(), gdzie `n` jest liczbą elementów w `collection`.</span><span class="sxs-lookup"><span data-stu-id="fed79-161">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-162">Poniższy przykład kodu demonstruje tego konstruktora i kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej.</span><span class="sxs-lookup"><span data-stu-id="fed79-162">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="fed79-163">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-163">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-164">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-164">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-165"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-165">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-166">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-166">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-167">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-167">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-168">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-168">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-169">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-169">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-170"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-170">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-171">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-171">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed79-172"><paramref name="collection" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-172"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : int -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="fed79-173">Początkowa liczba elementów, które <see cref="T:System.Collections.Generic.Stack`1" /> może zawierać.</span><span class="sxs-lookup"><span data-stu-id="fed79-173">The initial number of elements that the <see cref="T:System.Collections.Generic.Stack`1" /> can contain.</span></span></param>
        <summary><span data-ttu-id="fed79-174">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Generic.Stack`1" /> klasy, która jest pusta i ma określoną pojemność początkową lub domyślną pojemność początkową, w zależności od tego, która jest większa.</span><span class="sxs-lookup"><span data-stu-id="fed79-174">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-175">Pojemność programu to liczba <xref:System.Collections.Generic.Stack%601> elementów <xref:System.Collections.Generic.Stack%601> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="fed79-175">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="fed79-176">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="fed79-176">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fed79-177">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fed79-177">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fed79-178">Wydajność można zmniejszyć, wywołując <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-178">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="fed79-179">Ten konstruktor jest operacją o`n`(), gdzie `n` is `capacity`.</span><span class="sxs-lookup"><span data-stu-id="fed79-179">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fed79-180"><paramref name="capacity" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="fed79-180"><paramref name="capacity" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="stack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-181">Usuwa wszystkie obiekty z <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-181">Removes all objects from the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-182"><xref:System.Collections.Generic.Stack%601.Count%2A>jest ustawiona na zero, a odwołania do innych obiektów z elementów kolekcji również są wydane.</span><span class="sxs-lookup"><span data-stu-id="fed79-182"><xref:System.Collections.Generic.Stack%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="fed79-183">Pojemność pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="fed79-183">The capacity remains unchanged.</span></span> <span data-ttu-id="fed79-184">Aby zresetować pojemność <xref:System.Collections.Generic.Stack%601>wywołania <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>,</span><span class="sxs-lookup"><span data-stu-id="fed79-184">To reset the capacity of the <xref:System.Collections.Generic.Stack%601>, call <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span> <span data-ttu-id="fed79-185">Przycinanie pustego <xref:System.Collections.Generic.Stack%601> zestawu ustawia pojemność <xref:System.Collections.Generic.Stack%601> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="fed79-185">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="fed79-186">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-186">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-187">Poniższy przykład kodu ilustruje kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej, w <xref:System.Collections.Generic.Stack%601.Clear%2A> tym metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-187">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="fed79-188">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-188">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-189">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-189">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-190"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-190">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-191">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-191">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-192">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-192">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-193">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-193">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-194">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-194">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-195"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-195">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-196">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-196">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="member this.Contains : 'T -&gt; bool" Usage="stack.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fed79-197">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-197">The object to locate in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="fed79-198">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="fed79-198">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="fed79-199">Określa, <see cref="T:System.Collections.Generic.Stack`1" />czy element znajduje się w.</span><span class="sxs-lookup"><span data-stu-id="fed79-199">Determines whether an element is in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="fed79-200"><see langword="true" />Jeśli <paramref name="item" /> znajduje się <see cref="T:System.Collections.Generic.Stack`1" />w; w przeciwnym razie <see langword="false" />,.</span><span class="sxs-lookup"><span data-stu-id="fed79-200"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Stack`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-201">Ta metoda określa równość przy użyciu domyślnej funkcji <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> porównującej `T`równość dla, typu wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="fed79-201">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="fed79-202">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym ta metoda jest operacją o (`n`), gdzie `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-202">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-203">Poniższy przykład kodu ilustruje kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej, w <xref:System.Collections.Generic.Stack%601.Contains%2A> tym metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-203">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="fed79-204">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-204">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-205">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-205">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-206"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-206">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-207">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-207">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-208">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-208">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-209">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-209">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-210">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-210">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-211"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-211">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-212">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-212">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="fed79-213">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="fed79-213">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="stack.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fed79-214">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-214">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="fed79-215"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="fed79-215">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="fed79-216">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="fed79-216">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fed79-217">Kopiuje do istniejącej jednowymiarowego <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy. <see cref="T:System.Collections.Generic.Stack`1" /></span><span class="sxs-lookup"><span data-stu-id="fed79-217">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-218">Elementy są kopiowane do tablicy w kolejności Last-in-First-Out (LIFO), podobnie jak w kolejności elementów zwracanych przez pomyślne wywołania do <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-218">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="fed79-219">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-219">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-220">Poniższy przykład kodu ilustruje kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej, w <xref:System.Collections.Generic.Stack%601.CopyTo%2A> tym metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-220">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method.</span></span>  
  
 <span data-ttu-id="fed79-221">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-221">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-222">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-222">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-223"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-223">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-224">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-224">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-225">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-225">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-226">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-226">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-227">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-227">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-228"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-228">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-229">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-229">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed79-230"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-230"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fed79-231"><paramref name="arrayIndex" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="fed79-231"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed79-232">Liczba elementów w źródle <see cref="T:System.Collections.Generic.Stack`1" /> jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca miejsca docelowego <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-232">The number of elements in the source <see cref="T:System.Collections.Generic.Stack`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.Stack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed79-233">Pobiera liczbę elementów zawartych w <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-233">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <value><span data-ttu-id="fed79-234">Liczba elementów zawartych w <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-234">The number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-235">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczbą elementów <xref:System.Collections.Generic.Stack%601> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="fed79-235">The capacity of the <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can store.</span></span> <span data-ttu-id="fed79-236"><xref:System.Collections.Generic.Stack%601.Count%2A>to liczba elementów, które faktycznie znajdują się w <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fed79-236"><xref:System.Collections.Generic.Stack%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fed79-237">Pojemność jest zawsze większa lub równa <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-237">The capacity is always greater than or equal to <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="fed79-238">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> przekracza pojemność podczas dodawania elementów, wydajność jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodaniem nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="fed79-238">If <xref:System.Collections.Generic.Stack%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="fed79-239">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fed79-239">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-240">Poniższy przykład kodu ilustruje kilka właściwości i metod <xref:System.Collections.Generic.Stack%601> klasy generycznej, łącznie z <xref:System.Collections.Generic.Stack%601.Count%2A> właściwością.</span><span class="sxs-lookup"><span data-stu-id="fed79-240">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="fed79-241">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-241">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-242">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-242">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-243"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-243">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-244">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-244">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-245">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-245">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-246">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-246">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-247">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-247">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-248"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-248">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-249">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-249">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Stack&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Stack`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Stack(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Stack&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.Stack&lt;'T&gt;.Enumerator" Usage="stack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Stack&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-250">Zwraca moduł wyliczający dla <see cref="T:System.Collections.Generic.Stack`1" />elementu.</span><span class="sxs-lookup"><span data-stu-id="fed79-250">Returns an enumerator for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="fed79-251"><see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> Dla .<see cref="T:System.Collections.Generic.Stack`1" /></span><span class="sxs-lookup"><span data-stu-id="fed79-251">An <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-252">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="fed79-252">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="fed79-253">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="fed79-253">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fed79-254">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="fed79-254">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fed79-255">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-255">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fed79-256">W tym miejscu <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-256">At this position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fed79-257">W związku z tym przed <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> przeczytaniem <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>wartości parametru należy wywołać metodę wyliczającą do pierwszego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-257">Therefore, you must call <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fed79-258"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> momentu wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="fed79-258"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="fed79-259"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A>ustawia <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="fed79-259"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fed79-260">Jeśli <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="fed79-260">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fed79-261">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="fed79-261">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fed79-262">Jeśli ostatnie wywołanie <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-262">If the last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fed79-263">Nie można ponownie <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> ustawić na pierwszy element kolekcji; zamiast tego należy utworzyć nowe wystąpienie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="fed79-263">You cannot set <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="fed79-264">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="fed79-264">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fed79-265">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fed79-265">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fed79-266">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fed79-266">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="fed79-267">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fed79-267">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fed79-268">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="fed79-268">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fed79-269">Implementacje domyślne kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> programie nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-269">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fed79-270">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fed79-270">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-271">Poniższy przykład kodu pokazuje, że <xref:System.Collections.Generic.Stack%601> Klasa generyczna jest wyliczalna.</span><span class="sxs-lookup"><span data-stu-id="fed79-271">The following code example demonstrates that the <xref:System.Collections.Generic.Stack%601> generic class is enumerable.</span></span> <span data-ttu-id="fed79-272">Instrukcja (`For Each` w Visual Basic, `for each` in C++) służy do wyliczania kolejki. `foreach`</span><span class="sxs-lookup"><span data-stu-id="fed79-272">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="fed79-273">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-273">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-274">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-274">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-275"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-275">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-276">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-276">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-277">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-277">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-278">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-278">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-279">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-279">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-280"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-280">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-281">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-281">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Stack`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; 'T" Usage="stack.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-282">Zwraca obiekt w górnej części <see cref="T:System.Collections.Generic.Stack`1" /> bez usuwania go.</span><span class="sxs-lookup"><span data-stu-id="fed79-282">Returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="fed79-283">Obiekt w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-283">The object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-284">Ta metoda jest podobna do <xref:System.Collections.Generic.Stack%601.Pop%2A> metody, ale <xref:System.Collections.Generic.Stack%601.Peek%2A> nie modyfikuje <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fed79-284">This method is similar to the <xref:System.Collections.Generic.Stack%601.Pop%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fed79-285">Jeśli typ `T` jest typem referencyjnym, `null` można go wypchnąć do <xref:System.Collections.Generic.Stack%601> elementu jako symbol zastępczy, w razie konieczności.</span><span class="sxs-lookup"><span data-stu-id="fed79-285">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="fed79-286">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fed79-286">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-287">Poniższy przykład kodu ilustruje kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej, w <xref:System.Collections.Generic.Stack%601.Peek%2A> tym metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-287">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="fed79-288">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-288">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-289">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-289">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-290"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-290">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-291">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-291">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-292">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-292">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-293">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-293">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-294">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-294">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-295"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-295">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-296">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-296">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed79-297">Wartość <see cref="T:System.Collections.Generic.Stack`1" /> jest pusta.</span><span class="sxs-lookup"><span data-stu-id="fed79-297">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public T Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; 'T" Usage="stack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-298">Usuwa i zwraca obiekt w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-298">Removes and returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="fed79-299">Obiekt usunięty z góry <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-299">The object removed from the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-300">Ta metoda jest podobna do <xref:System.Collections.Generic.Stack%601.Peek%2A> metody, ale <xref:System.Collections.Generic.Stack%601.Peek%2A> nie modyfikuje <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="fed79-300">This method is similar to the <xref:System.Collections.Generic.Stack%601.Peek%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="fed79-301">Jeśli typ `T` jest typem referencyjnym, `null` można go wypchnąć do <xref:System.Collections.Generic.Stack%601> elementu jako symbol zastępczy, w razie konieczności.</span><span class="sxs-lookup"><span data-stu-id="fed79-301">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="fed79-302"><xref:System.Collections.Generic.Stack%601>jest zaimplementowany jako tablica.</span><span class="sxs-lookup"><span data-stu-id="fed79-302"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span> <span data-ttu-id="fed79-303">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fed79-303">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-304">Poniższy przykład kodu ilustruje kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej, w <xref:System.Collections.Generic.Stack%601.Pop%2A> tym metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-304">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Pop%2A> method.</span></span>  
  
 <span data-ttu-id="fed79-305">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-305">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-306">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-306">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-307"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-307">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-308">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-308">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-309">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-309">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-310">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-310">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-311">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-311">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-312"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-312">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-313">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-313">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fed79-314">Wartość <see cref="T:System.Collections.Generic.Stack`1" /> jest pusta.</span><span class="sxs-lookup"><span data-stu-id="fed79-314">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="stack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="fed79-315">Obiekt do wypchnięcia na <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-315">The object to push onto the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="fed79-316">Wartość może być <see langword="null" /> dla typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="fed79-316">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="fed79-317">Wstawia obiekt w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-317">Inserts an object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-318"><xref:System.Collections.Generic.Stack%601>jest zaimplementowany jako tablica.</span><span class="sxs-lookup"><span data-stu-id="fed79-318"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="fed79-319">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest już równa pojemności, pojemność <xref:System.Collections.Generic.Stack%601> programu jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="fed79-319">If <xref:System.Collections.Generic.Stack%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Stack%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="fed79-320">Jeśli typ `T` jest typem referencyjnym, `null` można go wypchnąć do <xref:System.Collections.Generic.Stack%601> elementu jako symbol zastępczy, w razie konieczności.</span><span class="sxs-lookup"><span data-stu-id="fed79-320">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span> <span data-ttu-id="fed79-321">Zajmuje miejsce w stosie i jest traktowany jak każdy obiekt.</span><span class="sxs-lookup"><span data-stu-id="fed79-321">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="fed79-322">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest mniejsza niż pojemność stosu, <xref:System.Collections.Generic.Stack%601.Push%2A> jest operacją o (1).</span><span class="sxs-lookup"><span data-stu-id="fed79-322">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="fed79-323">Jeśli pojemność musi być zwiększona w celu uwzględnienia nowego elementu <xref:System.Collections.Generic.Stack%601.Push%2A> , to operacja o (`n`), gdzie `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-323">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-324">Poniższy przykład kodu ilustruje kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej, w <xref:System.Collections.Generic.Stack%601.Push%2A> tym metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-324">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Push%2A> method.</span></span>  
  
 <span data-ttu-id="fed79-325">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-325">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-326">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-326">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-327"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-327">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-328">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-328">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-329">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-329">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-330">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-330">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-331">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-331">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-332"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-332">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-333">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-333">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-334">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-334">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="fed79-335"><see cref="T:System.Collections.Generic.IEnumerator`1" /> , Który może być używany do iteracji kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-335">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-336">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="fed79-336">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="fed79-337">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="fed79-337">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fed79-338">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="fed79-338">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fed79-339">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-339">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fed79-340">W tym miejscu <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-340">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="fed79-341">W związku z tym przed <xref:System.Collections.IEnumerator.MoveNext%2A> przeczytaniem <xref:System.Collections.Generic.IEnumerator%601.Current%2A>wartości parametru należy wywołać metodę wyliczającą do pierwszego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-341">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="fed79-342"><xref:System.Collections.Generic.IEnumerator%601.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="fed79-342"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="fed79-343"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.Generic.IEnumerator%601.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="fed79-343"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fed79-344">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="fed79-344">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fed79-345">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="fed79-345">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fed79-346">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-346">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="fed79-347">Nie można ponownie <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ustawić na pierwszy element kolekcji; zamiast tego należy utworzyć nowe wystąpienie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="fed79-347">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="fed79-348">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="fed79-348">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fed79-349">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fed79-349">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fed79-350">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fed79-350">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="fed79-351">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fed79-351">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fed79-352">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="fed79-352">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fed79-353">Implementacje domyślne kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> programie nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-353">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fed79-354">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fed79-354">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="fed79-355">Jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-355">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="fed79-356"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="fed79-356">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="fed79-357">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="fed79-357">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="fed79-358">Kopiuje elementy <see cref="T:System.Collections.ICollection" /> <see cref="T:System.Array" />do, zaczynając od określonego <see cref="T:System.Array" /> indeksu.</span><span class="sxs-lookup"><span data-stu-id="fed79-358">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="fed79-359">Jeśli nie można automatycznie rzutować <xref:System.Collections.ICollection> typu źródła na typ docelowy `array`, nieogólne implementacje <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, podczas gdy ogólna implementacja <xref:System.ArgumentException>zgłasza.</span><span class="sxs-lookup"><span data-stu-id="fed79-359">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="fed79-360">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-360">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fed79-361"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-361"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="fed79-362"><paramref name="arrayIndex" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="fed79-362"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fed79-363"><paramref name="array" />jest wielowymiarowych.</span><span class="sxs-lookup"><span data-stu-id="fed79-363"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="fed79-364">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed79-364">-or-</span></span> 
 <span data-ttu-id="fed79-365"><paramref name="array" />nie ma indeksowania opartego na zero.</span><span class="sxs-lookup"><span data-stu-id="fed79-365"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="fed79-366">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed79-366">-or-</span></span> 
<span data-ttu-id="fed79-367">Liczba elementów w źródle <see cref="T:System.Collections.ICollection" /> jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca miejsca docelowego <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-367">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="fed79-368">—lub—</span><span class="sxs-lookup"><span data-stu-id="fed79-368">-or-</span></span> 
<span data-ttu-id="fed79-369">Nie można automatycznie rzutować <see cref="T:System.Collections.ICollection" /> typu źródła na typ docelowy. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="fed79-369">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed79-370">Pobiera wartość wskazującą, <see cref="T:System.Collections.ICollection" /> czy dostęp do elementu jest synchronizowany (bezpieczny wątkowo).</span><span class="sxs-lookup"><span data-stu-id="fed79-370">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="fed79-371"><see langword="true" />Jeśli dostęp do programu <see cref="T:System.Collections.ICollection" /> jest synchronizowany (wątek bezpieczny); <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="fed79-371"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="fed79-372">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.Stack`1" />ta właściwość zawsze zwraca wartość. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="fed79-372">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-373">Implementacje domyślne kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> programie nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-373">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fed79-374">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fed79-374">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fed79-375">W rzadkich przypadkach, gdy wyliczenia będą konkurować o z dostępem do zapisu, musisz zablokować kolekcję podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fed79-375">In the rare case where enumerations contend with write accesses, you must lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fed79-376">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="fed79-376">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fed79-377"><xref:System.Collections.ICollection.SyncRoot%2A>zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>elementu.</span><span class="sxs-lookup"><span data-stu-id="fed79-377"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="fed79-378">Synchronizacja jest skuteczna tylko wtedy, gdy wszystkie wątki blokują ten obiekt przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-378">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="fed79-379">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fed79-379">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fed79-380">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-380">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="fed79-381">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-381">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="fed79-382">W domyślnej implementacji programu <see cref="T:System.Collections.Generic.Stack`1" />ta właściwość zawsze zwraca bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="fed79-382">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-383">Implementacje domyślne kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> programie nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-383">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fed79-384">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fed79-384">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fed79-385">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fed79-385">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fed79-386">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="fed79-386">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fed79-387"><xref:System.Collections.ICollection.SyncRoot%2A>zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>elementu.</span><span class="sxs-lookup"><span data-stu-id="fed79-387"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="fed79-388">Synchronizacja jest skuteczna tylko wtedy, gdy wszystkie wątki blokują ten obiekt przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-388">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="fed79-389">Poniższy kod przedstawia użycie <xref:System.Collections.ICollection.SyncRoot%2A> właściwości dla C#, C++i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="fed79-389">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="fed79-390">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fed79-390">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-391">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-391">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="fed79-392"><see cref="T:System.Collections.IEnumerator" /> , Który może być używany do iteracji kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-392">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-393">`foreach` Instrukcja C# języka(`for each` C++w VisualBasic)ukrywazłożonośćmodułówwyliczających.`For Each`</span><span class="sxs-lookup"><span data-stu-id="fed79-393">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="fed79-394">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="fed79-394">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fed79-395">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="fed79-395">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fed79-396">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-396">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fed79-397"><xref:System.Collections.IEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="fed79-397"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="fed79-398">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-398">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fed79-399">W związku z tym przed <xref:System.Collections.IEnumerator.MoveNext%2A> przeczytaniem <xref:System.Collections.IEnumerator.Current%2A>wartości parametru należy wywołać metodę wyliczającą do pierwszego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fed79-399">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fed79-400"><xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu <xref:System.Collections.IEnumerator.Reset%2A> wywołania metody lub.</span><span class="sxs-lookup"><span data-stu-id="fed79-400"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="fed79-401"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="fed79-401"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fed79-402">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="fed79-402">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fed79-403">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="fed79-403">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fed79-404">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-404">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fed79-405">Aby ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-405">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="fed79-406">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="fed79-406">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fed79-407">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fed79-407">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fed79-408">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fed79-408">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fed79-409">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fed79-409">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fed79-410">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="fed79-410">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fed79-411">Implementacje domyślne kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> programie nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-411">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="fed79-412">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fed79-412">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="stack.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-413"><see cref="T:System.Collections.Generic.Stack`1" /> Kopiuje do nowej tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-413">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="fed79-414">Nowa tablica zawierająca kopie elementów <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="fed79-414">A new array containing copies of the elements of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-415">Elementy są kopiowane do tablicy w kolejności Last-in-First-Out (LIFO), podobnie jak w kolejności elementów zwracanych przez pomyślne wywołania do <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-415">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="fed79-416">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-416">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fed79-417">Poniższy przykład kodu ilustruje kilka metod <xref:System.Collections.Generic.Stack%601> klasy generycznej, w <xref:System.Collections.Generic.Stack%601.ToArray%2A> tym metodę.</span><span class="sxs-lookup"><span data-stu-id="fed79-417">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="fed79-418">Przykładowy kod tworzy stos ciągów z pojemnością domyślną i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metody do wypychania pięciu ciągów na stos.</span><span class="sxs-lookup"><span data-stu-id="fed79-418">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="fed79-419">Elementy stosu są wyliczane, co nie powoduje zmiany stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="fed79-419">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="fed79-420"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do wypróbowania pierwszego ciągu na stosie.</span><span class="sxs-lookup"><span data-stu-id="fed79-420">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="fed79-421">Metoda jest używana do przeszukiwania następnego elementu na stosie, a <xref:System.Collections.Generic.Stack%601.Pop%2A> następnie metoda jest używana do wyłączania. <xref:System.Collections.Generic.Stack%601.Peek%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-421">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="fed79-422">Metoda jest używana do tworzenia tablicy i kopiowania do niej elementów stosu, a następnie tablica jest przenoszona <xref:System.Collections.Generic.Stack%601.%23ctor%2A> do konstruktora, który pobiera <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu z kolejnością elementów odwróconych. <xref:System.Collections.Generic.Stack%601.ToArray%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-422">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="fed79-423">Zostaną wyświetlone elementy kopiowane.</span><span class="sxs-lookup"><span data-stu-id="fed79-423">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="fed79-424">Tworzona jest podwójna tablica rozmiaru stosu, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> Metoda jest używana do kopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="fed79-424">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="fed79-425"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktor jest ponownie używany do tworzenia kopii stosu z kolejnością elementów odwróconych; w związku z tym trzy elementy null są na końcu.</span><span class="sxs-lookup"><span data-stu-id="fed79-425">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="fed79-426">Metoda służy do pokazywania, że ciąg "cztery" znajduje się w pierwszej kopii stosu, po <xref:System.Collections.Generic.Stack%601.Clear%2A> której Metoda czyści kopię, a <xref:System.Collections.Generic.Stack%601.Count%2A> Właściwość wskazuje, że stos jest pusty. <xref:System.Collections.Generic.Stack%601.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="fed79-426">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="stack.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fed79-427">Ustawia pojemność na rzeczywistą liczbę elementów w <see cref="T:System.Collections.Generic.Stack`1" />, jeśli ta liczba jest mniejsza niż 90% bieżącej pojemności.</span><span class="sxs-lookup"><span data-stu-id="fed79-427">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Stack`1" />, if that number is less than 90 percent of current capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fed79-428">Tej metody można użyć do zminimalizowania obciążenia pamięci kolekcji, jeśli do kolekcji nie zostaną dodane żadne nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="fed79-428">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="fed79-429">Koszt ponownej alokacji i kopiowania dużego <xref:System.Collections.Generic.Stack%601> może być istotny, <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> Dlatego metoda nie robi nic, jeśli lista ma więcej niż 90% pojemności.</span><span class="sxs-lookup"><span data-stu-id="fed79-429">The cost of reallocating and copying a large <xref:System.Collections.Generic.Stack%601> can be considerable, however, so the <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="fed79-430">Pozwala to uniknąć ponoszenia dużego kosztu ponownego alokacji dla stosunkowo małego wzmocnienia.</span><span class="sxs-lookup"><span data-stu-id="fed79-430">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="fed79-431">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fed79-431">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="fed79-432">Aby zresetować <xref:System.Collections.Generic.Stack%601> do stanu początkowego, należy <xref:System.Collections.Generic.Stack%601.Clear%2A> wywołać metodę przed wywołaniem <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fed79-432">To reset a <xref:System.Collections.Generic.Stack%601> to its initial state, call the <xref:System.Collections.Generic.Stack%601.Clear%2A> method before calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="fed79-433">Przycinanie pustego <xref:System.Collections.Generic.Stack%601> zestawu ustawia pojemność <xref:System.Collections.Generic.Stack%601> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="fed79-433">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="stack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="stack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
