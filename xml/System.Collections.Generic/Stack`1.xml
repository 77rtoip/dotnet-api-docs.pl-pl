<Type Name="Stack&lt;T&gt;" FullName="System.Collections.Generic.Stack&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6be2dfad187b650682bb24b5e4a17854817bb16" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42974100" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Stack&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Stack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Stack : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Stack&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_StackDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="b8edd-101">Określa typ elementów w stosie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8edd-101">Specifies the type of elements in the stack.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b8edd-102">Reprezentuje kolekcję zmiennym rozmiarze ostatni wejściu — pierwszy na wyjściu (LIFO) wystąpień tego samego określonego typu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8edd-102">Represents a variable size last-in-first-out (LIFO) collection of instances of the same specified type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-103"><xref:System.Collections.Generic.Stack%601> jest implementowana jako tablica.</span><span class="sxs-lookup"><span data-stu-id="b8edd-103"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="b8edd-104">Stosów i kolejek są przydatne, gdy będziesz potrzebować informacji; magazynu tymczasowego oznacza to, kiedy warto odrzucić element po jego wartość.</span><span class="sxs-lookup"><span data-stu-id="b8edd-104">Stacks and queues are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="b8edd-105">Użyj <xref:System.Collections.Generic.Queue%601> muszą uzyskać dostęp do informacji w tej samej kolejności, że jest on przechowywany w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-105">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="b8edd-106">Użyj <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> Jeśli potrzebujesz dostępu do informacji w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="b8edd-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> if you need to access the information in reverse order.</span></span>  
  
 <span data-ttu-id="b8edd-107">Użyj <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> i <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> typów, gdy trzeba uzyskać dostęp do kolekcji z wielu wątków jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-107">Use the <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> and <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types when you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="b8edd-108">Typowym zastosowaniem dla <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> ma zachować stany zmiennej podczas wywołania do innych procedur.</span><span class="sxs-lookup"><span data-stu-id="b8edd-108">A common use for <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> is to preserve variable states during calls to other procedures.</span></span>  
  
 <span data-ttu-id="b8edd-109">Trzy główne operacje mogą być wykonywane na <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> i jego elementy:</span><span class="sxs-lookup"><span data-stu-id="b8edd-109">Three main operations can be performed on a <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> and its elements:</span></span>  
  
-   <span data-ttu-id="b8edd-110"><xref:System.Collections.Generic.Stack%601.Push%2A> Wstawia element w górnej części <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-110"><xref:System.Collections.Generic.Stack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
-   <span data-ttu-id="b8edd-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> Usuwa element z góry <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> removes an element from the top of the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
-   <span data-ttu-id="b8edd-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> Zwraca element, który znajduje się w górnej części <xref:System.Collections.Generic.Stack%601> , ale nie spowoduje usunięcia go z <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> returns an element that is at the top of the <xref:System.Collections.Generic.Stack%601> but does not remove it from the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="b8edd-113">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, które <xref:System.Collections.Generic.Stack%601> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="b8edd-113">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="b8edd-114">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-114">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="b8edd-115">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-116">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest mniejsza niż pojemność stosu, <xref:System.Collections.Generic.Stack%601.Push%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-116">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="b8edd-117">Jeśli pojemność musi zostać zwiększona, aby pomieścić nowy element <xref:System.Collections.Generic.Stack%601.Push%2A> staje się O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-117">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="b8edd-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="b8edd-119"><xref:System.Collections.Generic.Stack%601> akceptuje `null` prawidłową wartość dla odwołania do typów i pozwala zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-119"><xref:System.Collections.Generic.Stack%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-120">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="b8edd-120">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span> <span data-ttu-id="b8edd-121">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-121">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-122">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-122">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-123"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-123">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-124"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-124">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-125"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-125">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-126">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-126">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-127">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-127">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-128"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-128">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-129"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-129">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="b8edd-130">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8edd-130">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="b8edd-131">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8edd-131">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="b8edd-132">Element <see cref="T:System.Collections.Generic.Stack`1" /> może obsługiwać wielu elementów odczytujących współbieżnie, tak długo, jak długo Kolekcja nie jest modyfikowany.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8edd-132">A <see cref="T:System.Collections.Generic.Stack`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span>
      </span>
      <span data-ttu-id="b8edd-133">Nawet w takim przypadku wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8edd-133">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="b8edd-134">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8edd-134">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span>
      </span>
      <span data-ttu-id="b8edd-135">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8edd-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-136">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> klasę, która jest pusta i ma pojemność domyślna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-137">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-138">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, <xref:System.Collections.Generic.Stack%601> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="b8edd-138">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="b8edd-139">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-139">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="b8edd-140">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-140">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="b8edd-141">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-141">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-142">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-142">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-143">Poniższy przykład kodu demonstruje ten konstruktor i kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="b8edd-143">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="b8edd-144">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-144">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-145">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-145">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-146"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-146">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-147"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-147">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-148"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-148">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-149">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-149">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-150">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-150">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-151"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-151">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-152"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-152">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="b8edd-153">Kolekcja, aby skopiować elementy z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-153">The collection to copy elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8edd-154">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> skopiowane klasę, która zawiera elementy kopiowane z określonej kolekcji i ma wystarczającej wydajności, aby obsłużyć liczbę elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-154">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-155">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, <xref:System.Collections.Generic.Stack%601> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="b8edd-155">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="b8edd-156">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-156">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="b8edd-157">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-157">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="b8edd-158">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-158">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-159">Elementy są kopiowane na <xref:System.Collections.Generic.Stack%601> w tej samej kolejności, które są odczytywane przez <xref:System.Collections.Generic.IEnumerator%601> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-159">The elements are copied onto the <xref:System.Collections.Generic.Stack%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="b8edd-160">Ten konstruktor jest O (`n`) operacji, gdzie `n` jest liczba elementów w `collection`.</span><span class="sxs-lookup"><span data-stu-id="b8edd-160">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-161">Poniższy przykład kodu demonstruje ten konstruktor i kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="b8edd-161">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="b8edd-162">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-162">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-163">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-163">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-164"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-164">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-165"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-165">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-166"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-166">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-167">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-167">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-168">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-168">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-169"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-169">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-170"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-170">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8edd-171">
            <paramref name="collection" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-171">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : int -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="b8edd-172">Początkowa liczba elementów, <see cref="T:System.Collections.Generic.Stack`1" /> może zawierać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-172">The initial number of elements that the <see cref="T:System.Collections.Generic.Stack`1" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8edd-173">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> klasę, która jest pusta i ma określony pojemność lub pojemność początkową domyślną, która kwota jest większa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-173">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-174">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, <xref:System.Collections.Generic.Stack%601> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="b8edd-174">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="b8edd-175">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-175">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="b8edd-176">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-176">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="b8edd-177">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-177">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-178">Ten konstruktor jest O (`n`) operacji, gdzie `n` jest `capacity`.</span><span class="sxs-lookup"><span data-stu-id="b8edd-178">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b8edd-179">
            <paramref name="capacity" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-179">
              <paramref name="capacity" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="stack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-180">Usuwa wszystkie obiekty z <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-180">Removes all objects from the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-181"><xref:System.Collections.Generic.Stack%601.Count%2A> jest równa zero i odwołania do innych obiektów z elementów kolekcji są również zwalniane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-181"><xref:System.Collections.Generic.Stack%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="b8edd-182">Pojemność pozostaje bez zmian.</span><span class="sxs-lookup"><span data-stu-id="b8edd-182">The capacity remains unchanged.</span></span> <span data-ttu-id="b8edd-183">Aby zresetować pojemność <xref:System.Collections.Generic.Stack%601>, wywołaj <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-183">To reset the capacity of the <xref:System.Collections.Generic.Stack%601>, call <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span> <span data-ttu-id="b8edd-184">Przycinanie pustą <xref:System.Collections.Generic.Stack%601> ustawia pojemność <xref:System.Collections.Generic.Stack%601> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="b8edd-184">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="b8edd-185">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-185">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-186">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Clear%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b8edd-186">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="b8edd-187">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-187">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-188">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-188">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-189"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-189">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-190"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-190">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-191"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-191">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-192">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-192">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-193">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-193">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-194"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-194">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-195"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-195">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="member this.Contains : 'T -&gt; bool" Usage="stack.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b8edd-196">Obiekt do zlokalizowania w <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-196">The object to locate in the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
          <span data-ttu-id="b8edd-197">Wartość może być <see langword="null" /> dla typów odwołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-197">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8edd-198">Określa, czy element jest <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-198">Determines whether an element is in the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8edd-199">
            <see langword="true" /> Jeśli <paramref name="item" /> znajduje się w <see cref="T:System.Collections.Generic.Stack`1" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-199">
              <see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Stack`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-200">Ta metoda określa równość za pomocą domyślny moduł porównujący równość <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> dla `T`, typ wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="b8edd-200">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="b8edd-201">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-201">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-202">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b8edd-202">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="b8edd-203">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-203">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-204">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-204">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-205"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-205">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-206"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-206">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-207"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-207">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-208">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-208">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-209">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-209">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-210"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-210">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-211"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-211">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="stack.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b8edd-212">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-212">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
          <span data-ttu-id="b8edd-213">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-213">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="b8edd-214">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-214">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8edd-215">Kopiuje <see cref="T:System.Collections.Generic.Stack`1" /> do istniejącej jednowymiarowej <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-215">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-216">Elementy są kopiowane na tablicy ostatni wejściu — pierwszy na wyjściu (LIFO) kolejno zbliżona do kolejności elementów zwróconych przez kolejne wywołania <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-216">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-217">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-217">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-218">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b8edd-218">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method.</span></span>  
  
 <span data-ttu-id="b8edd-219">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-219">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-220">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-220">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-221"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-221">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-222"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-222">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-223"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-223">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-224">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-224">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-225">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-225">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-226"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-226">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-227"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-227">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8edd-228">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-228">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b8edd-229">
            <paramref name="arrayIndex" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-229">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b8edd-230">Liczba elementów w źródle <see cref="T:System.Collections.Generic.Stack`1" /> jest większa niż dostępna ilość miejsca od <paramref name="arrayIndex" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-230">The number of elements in the source <see cref="T:System.Collections.Generic.Stack`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.Stack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-231">Pobiera liczbę elementów znajdujących się w <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-231">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8edd-232">Liczba elementów zawartych w słowniku <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-232">The number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-233">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, <xref:System.Collections.Generic.Stack%601> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-233">The capacity of the <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can store.</span></span> <span data-ttu-id="b8edd-234"><xref:System.Collections.Generic.Stack%601.Count%2A> jest to liczba elementów, które są rzeczywiście w <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-234"><xref:System.Collections.Generic.Stack%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="b8edd-235">Pojemność jest zawsze większa lub równa <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-235">The capacity is always greater than or equal to <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="b8edd-236">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> przekracza pojemność podczas dodawania elementów, pojemność jest zwiększana o automatycznie relokacja tablicy wewnętrznej przed skopiowaniem starymi elementami i dodawanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="b8edd-236">If <xref:System.Collections.Generic.Stack%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="b8edd-237">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-237">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-238">Poniższy przykład kodu pokazuje kilka właściwości i metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Count%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="b8edd-238">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="b8edd-239">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-239">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-240">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-240">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-241"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-241">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-242"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-242">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-243"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-243">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-244">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-244">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-245">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-245">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-246"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-246">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-247"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-247">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Stack&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Stack`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Stack(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Stack&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.Stack&lt;'T&gt;.Enumerator" Usage="stack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Stack&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-248">Zwraca moduł wyliczający dla <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-248">Returns an enumerator for the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8edd-249">
            <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> Dla <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-249">An <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-250">`foreach` Instrukcja języka C# (`for each` w języku C++, `For Each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="b8edd-250">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="b8edd-251">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="b8edd-251">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b8edd-252">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="b8edd-252">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b8edd-253">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-253">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b8edd-254">W tym miejscu <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-254">At this position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="b8edd-255">W związku z tym, należy wywołać <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-255">Therefore, you must call <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-256"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-256"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b8edd-257"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> Ustawia <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-257"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b8edd-258">Jeśli <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b8edd-258">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b8edd-259">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="b8edd-259">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b8edd-260">Jeśli ostatnie wywołanie <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-260">If the last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="b8edd-261">Nie można ustawić <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> do pierwszego elementu w kolekcji; należy utworzyć nowe wystąpienie modułu wyliczającego zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="b8edd-261">You cannot set <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="b8edd-262">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="b8edd-262">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b8edd-263">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie unieważnione, a następne wywołanie <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-263">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="b8edd-264">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="b8edd-264">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b8edd-265">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="b8edd-265">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b8edd-266">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-266">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b8edd-267">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-267">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="b8edd-268">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-268">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-269">Poniższy przykład kodu pokazuje, że <xref:System.Collections.Generic.Stack%601> klasy generycznej jest wyliczalna.</span><span class="sxs-lookup"><span data-stu-id="b8edd-269">The following code example demonstrates that the <xref:System.Collections.Generic.Stack%601> generic class is enumerable.</span></span> <span data-ttu-id="b8edd-270">`foreach` — Instrukcja (`For Each` w języku Visual Basic `for each` w języku C++) jest używany do wyliczenia kolejki.</span><span class="sxs-lookup"><span data-stu-id="b8edd-270">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="b8edd-271">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-271">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-272">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-272">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-273"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-273">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-274"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-274">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-275"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-275">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-276">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-276">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-277">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-277">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-278"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-278">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-279"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-279">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Stack`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; 'T" Usage="stack.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-280">Zwraca obiekt, w górnej części <see cref="T:System.Collections.Generic.Stack`1" /> bez usuwania go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-280">Returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8edd-281">Obiekt w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-281">The object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-282">Ta metoda jest podobna do <xref:System.Collections.Generic.Stack%601.Pop%2A> metody, ale <xref:System.Collections.Generic.Stack%601.Peek%2A> nie modyfikuje <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-282">This method is similar to the <xref:System.Collections.Generic.Stack%601.Pop%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="b8edd-283">Jeśli typ `T` jest typem referencyjnym `null` zostać wypchnięty na <xref:System.Collections.Generic.Stack%601> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="b8edd-283">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="b8edd-284">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-284">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-285">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Peek%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b8edd-285">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="b8edd-286">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-286">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-287">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-287">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-288"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-288">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-289"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-289">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-290"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-290">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-291">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-291">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-292">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-292">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-293"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-293">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-294"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-294">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b8edd-295">
            <see cref="T:System.Collections.Generic.Stack`1" /> Jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-295">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public T Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; 'T" Usage="stack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-296">Usuwa i zwraca obiekt, w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-296">Removes and returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8edd-297">Obiekt usunięty z góry <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-297">The object removed from the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-298">Ta metoda jest podobna do <xref:System.Collections.Generic.Stack%601.Peek%2A> metody, ale <xref:System.Collections.Generic.Stack%601.Peek%2A> nie modyfikuje <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-298">This method is similar to the <xref:System.Collections.Generic.Stack%601.Peek%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="b8edd-299">Jeśli typ `T` jest typem referencyjnym `null` zostać wypchnięty na <xref:System.Collections.Generic.Stack%601> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="b8edd-299">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="b8edd-300"><xref:System.Collections.Generic.Stack%601> jest implementowana jako tablica.</span><span class="sxs-lookup"><span data-stu-id="b8edd-300"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span> <span data-ttu-id="b8edd-301">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-301">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-302">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Pop%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b8edd-302">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Pop%2A> method.</span></span>  
  
 <span data-ttu-id="b8edd-303">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-303">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-304">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-304">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-305"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-305">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-306"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-306">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-307"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-307">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-308">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-308">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-309">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-309">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-310"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-310">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-311"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-311">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b8edd-312">
            <see cref="T:System.Collections.Generic.Stack`1" /> Jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-312">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="stack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b8edd-313">Obiekt do przekazania <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-313">The object to push onto the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
          <span data-ttu-id="b8edd-314">Wartość może być <see langword="null" /> dla typów odwołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-314">The value can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8edd-315">Wstawienie obiektu w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-315">Inserts an object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-316"><xref:System.Collections.Generic.Stack%601> jest implementowana jako tablica.</span><span class="sxs-lookup"><span data-stu-id="b8edd-316"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="b8edd-317">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest już równa pojemności pojemność <xref:System.Collections.Generic.Stack%601> jest zwiększana o automatyczne ponowne przydzielanie tablicy wewnętrznej i istniejące elementy są kopiowane do nowej tablicy, przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-317">If <xref:System.Collections.Generic.Stack%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Stack%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="b8edd-318">Jeśli typ `T` jest typem referencyjnym `null` zostać wypchnięty na <xref:System.Collections.Generic.Stack%601> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="b8edd-318">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span> <span data-ttu-id="b8edd-319">On zajmuje miejsce w stosie i jest traktowany jak inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-319">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="b8edd-320">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest mniejsza niż pojemność stosu, <xref:System.Collections.Generic.Stack%601.Push%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-320">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="b8edd-321">Jeśli pojemność musi zostać zwiększona, aby pomieścić nowy element <xref:System.Collections.Generic.Stack%601.Push%2A> staje się O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-321">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-322">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Push%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b8edd-322">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Push%2A> method.</span></span>  
  
 <span data-ttu-id="b8edd-323">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-323">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-324">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-324">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-325"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-325">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-326"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-326">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-327"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-327">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-328">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-328">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-329">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-329">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-330"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-330">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-331"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-331">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-332">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-332">Returns an enumerator that iterates through the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8edd-333">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> Który może służyć do iterowania po kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-333">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-334">`foreach` Instrukcja języka C# (`for each` w języku C++, `For Each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="b8edd-334">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="b8edd-335">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="b8edd-335">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b8edd-336">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="b8edd-336">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b8edd-337">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-337">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b8edd-338">W tym miejscu <xref:System.Collections.Generic.IEnumerator%601.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-338">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b8edd-339">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-339">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-340"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-340"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b8edd-341"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.Generic.IEnumerator%601.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-341"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b8edd-342">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b8edd-342">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b8edd-343">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="b8edd-343">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b8edd-344">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-344">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b8edd-345">Nie można ustawić <xref:System.Collections.Generic.IEnumerator%601.Current%2A> do pierwszego elementu w kolekcji; należy utworzyć nowe wystąpienie modułu wyliczającego zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="b8edd-345">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="b8edd-346">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="b8edd-346">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b8edd-347">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie unieważnione, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-347">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="b8edd-348">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="b8edd-348">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="b8edd-349">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="b8edd-349">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b8edd-350">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-350">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b8edd-351">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-351">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="b8edd-352">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-352">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="b8edd-353">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-353">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="b8edd-354">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-354">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="b8edd-355">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-355">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8edd-356">Kopiuje elementy ze <see cref="T:System.Collections.ICollection" /> do <see cref="T:System.Array" />, rozpoczynając od określonego <see cref="T:System.Array" /> indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-356">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="b8edd-357">Jeśli typ źródła <xref:System.Collections.ICollection> nie można automatycznie rzutować na typ docelowy `array`, implementacje nieogólnego <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, podczas gdy throw ogólnego implementacje <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-357">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="b8edd-358">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-358">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8edd-359">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-359">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b8edd-360">
            <paramref name="arrayIndex" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-360">
              <paramref name="arrayIndex" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b8edd-361">
            <paramref name="array" /> ma charakter wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-361">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="b8edd-362">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-362">-or-</span>
          </span>
          <span data-ttu-id="b8edd-363">
            <paramref name="array" /> nie ma indeksowania zaczynającego się od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-363">
              <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="b8edd-364">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-364">-or-</span>
          </span>
          <span data-ttu-id="b8edd-365">Liczba elementów w źródle <see cref="T:System.Collections.ICollection" /> jest większa niż dostępna ilość miejsca od <paramref name="arrayIndex" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-365">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="b8edd-366">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-366">-or-</span>
          </span>
          <span data-ttu-id="b8edd-367">Typ źródła <see cref="T:System.Collections.ICollection" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-367">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-368">Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-368">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8edd-369">
            <see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wątkowo); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-369">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="b8edd-370">W implementacji domyślnej <see cref="T:System.Collections.Generic.Stack`1" />, właściwość ta zwraca zawsze <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-370">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-371">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-371">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="b8edd-372">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="b8edd-372">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="b8edd-373">W rzadkich przypadkach, w którym wyliczenia będą konkurować o uzyskuje dostęp do zapisu można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="b8edd-373">In the rare case where enumerations contend with write accesses, you must lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b8edd-374">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-374">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b8edd-375"><xref:System.Collections.ICollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-375"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="b8edd-376">Synchronizacja jest efektywne tylko wtedy, gdy wszystkie wątki zablokowania obiektu przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-376">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="b8edd-377">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-377">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-378">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-378">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b8edd-379">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-379">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="b8edd-380">W implementacji domyślnej <see cref="T:System.Collections.Generic.Stack`1" />, właściwość ta zwraca zawsze bieżącego wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-380">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-381">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-381">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="b8edd-382">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="b8edd-382">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="b8edd-383">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="b8edd-383">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b8edd-384">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-384">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b8edd-385"><xref:System.Collections.ICollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-385"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="b8edd-386">Synchronizacja jest efektywne tylko wtedy, gdy wszystkie wątki zablokowania obiektu przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-386">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="b8edd-387">Poniższy kod przedstawia użycie <xref:System.Collections.ICollection.SyncRoot%2A> właściwość dla języka C#, C++ i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="b8edd-387">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="b8edd-388">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-388">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-389">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-389">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8edd-390">
            <see cref="T:System.Collections.IEnumerator" /> Który może służyć do iterowania po kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-390">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-391">`foreach` Instrukcja języka C# (`for each` w języku C++, `For Each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="b8edd-391">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="b8edd-392">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="b8edd-392">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="b8edd-393">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="b8edd-393">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="b8edd-394">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-394">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b8edd-395"><xref:System.Collections.IEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-395"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="b8edd-396">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-396">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="b8edd-397">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-397">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-398"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-398"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="b8edd-399"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-399"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="b8edd-400">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="b8edd-400">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b8edd-401">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="b8edd-401">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b8edd-402">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="b8edd-402">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="b8edd-403">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-403">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-404">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="b8edd-404">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b8edd-405">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie unieważnione, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-405">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="b8edd-406">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="b8edd-406">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="b8edd-407">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="b8edd-407">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="b8edd-408">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-408">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="b8edd-409">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-409">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="b8edd-410">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="b8edd-410">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="stack.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-411">Kopiuje <see cref="T:System.Collections.Generic.Stack`1" /> do nowej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-411">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8edd-412">Nową tablicę zawierającą kopiuje elementy <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-412">A new array containing copies of the elements of the <see cref="T:System.Collections.Generic.Stack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-413">Elementy są kopiowane na tablicy ostatni wejściu — pierwszy na wyjściu (LIFO) kolejno zbliżona do kolejności elementów zwróconych przez kolejne wywołania <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-413">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-414">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-414">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8edd-415">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.ToArray%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b8edd-415">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="b8edd-416">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="b8edd-416">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="b8edd-417">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-417">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="b8edd-418"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-418">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="b8edd-419"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="b8edd-419">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="b8edd-420"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="b8edd-420">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="b8edd-421">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="b8edd-421">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="b8edd-422">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="b8edd-422">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="b8edd-423"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="b8edd-423">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="b8edd-424"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="b8edd-424">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="stack.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8edd-425">Ustawia pojemność do rzeczywistej liczby elementów w <see cref="T:System.Collections.Generic.Stack`1" />, jeśli ta liczba jest bieżąca pojemność w mniej niż 90 procentach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8edd-425">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Stack`1" />, if that number is less than 90 percent of current capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8edd-426">Ta metoda może być używana aby zminimalizować obciążenie pamięci kolekcji, jeśli żadne nowe elementy, które zostaną dodane do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="b8edd-426">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="b8edd-427">Koszt ponowne przydzielanie i kopiowania dużych <xref:System.Collections.Generic.Stack%601> mogą być jednak znaczące, więc <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> metody nie robi nic, jeśli lista jest więcej niż 90 procent pojemność.</span><span class="sxs-lookup"><span data-stu-id="b8edd-427">The cost of reallocating and copying a large <xref:System.Collections.Generic.Stack%601> can be considerable, however, so the <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="b8edd-428">Pozwala to uniknąć ponoszenia koszt dużych ponownej alokacji dla niewielkich korzyści.</span><span class="sxs-lookup"><span data-stu-id="b8edd-428">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="b8edd-429">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="b8edd-429">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="b8edd-430">Aby zresetować <xref:System.Collections.Generic.Stack%601> do stanu początkowego wywołania <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda przed wywołaniem <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="b8edd-430">To reset a <xref:System.Collections.Generic.Stack%601> to its initial state, call the <xref:System.Collections.Generic.Stack%601.Clear%2A> method before calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="b8edd-431">Przycinanie pustą <xref:System.Collections.Generic.Stack%601> ustawia pojemność <xref:System.Collections.Generic.Stack%601> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="b8edd-431">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="stack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="stack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>