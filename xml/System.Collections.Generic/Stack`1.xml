<Type Name="Stack&lt;T&gt;" FullName="System.Collections.Generic.Stack&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f828fbb4019ba1166d7066ea1d80a31b43d533ab" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/14/2019" /><Meta Name="ms.locfileid" Value="57948224" /></Metadata><TypeSignature Language="C#" Value="public class Stack&lt;T&gt; : System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack`1&lt;T&gt; extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.Stack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack(Of T)&#xA;Implements ICollection, IEnumerable(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class Stack : System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Stack&lt;'T&gt; = class&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.System_StackDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="f86c8-101">Określa typ elementów w stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-101">Specifies the type of elements in the stack.</span></span></typeparam>
    <summary><span data-ttu-id="f86c8-102">Reprezentuje kolekcję zmiennym rozmiarze ostatni wejściu — pierwszy na wyjściu (LIFO) wystąpień tego samego określonego typu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-102">Represents a variable size last-in-first-out (LIFO) collection of instances of the same specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-103"><xref:System.Collections.Generic.Stack%601> jest implementowana jako tablica.</span><span class="sxs-lookup"><span data-stu-id="f86c8-103"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="f86c8-104">Stosów i kolejek są przydatne, gdy będziesz potrzebować informacji; magazynu tymczasowego oznacza to, kiedy warto odrzucić element po jego wartość.</span><span class="sxs-lookup"><span data-stu-id="f86c8-104">Stacks and queues are useful when you need temporary storage for information; that is, when you might want to discard an element after retrieving its value.</span></span> <span data-ttu-id="f86c8-105">Użyj <xref:System.Collections.Generic.Queue%601> muszą uzyskać dostęp do informacji w tej samej kolejności, że jest on przechowywany w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-105">Use <xref:System.Collections.Generic.Queue%601> if you need to access the information in the same order that it is stored in the collection.</span></span> <span data-ttu-id="f86c8-106">Użyj <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> Jeśli potrzebujesz dostępu do informacji w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="f86c8-106">Use <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> if you need to access the information in reverse order.</span></span>  
  
 <span data-ttu-id="f86c8-107">Użyj <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> i <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> typów, gdy trzeba uzyskać dostęp do kolekcji z wielu wątków jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-107">Use the <xref:System.Collections.Concurrent.ConcurrentStack%601?displayProperty=nameWithType> and <xref:System.Collections.Concurrent.ConcurrentQueue%601?displayProperty=nameWithType> types when you need to access the collection from multiple threads concurrently.</span></span>  
  
 <span data-ttu-id="f86c8-108">Typowym zastosowaniem dla <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> ma zachować stany zmiennej podczas wywołania do innych procedur.</span><span class="sxs-lookup"><span data-stu-id="f86c8-108">A common use for <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> is to preserve variable states during calls to other procedures.</span></span>  
  
 <span data-ttu-id="f86c8-109">Trzy główne operacje mogą być wykonywane na <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> i jego elementy:</span><span class="sxs-lookup"><span data-stu-id="f86c8-109">Three main operations can be performed on a <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType> and its elements:</span></span>  
  
-   <span data-ttu-id="f86c8-110"><xref:System.Collections.Generic.Stack%601.Push%2A> Wstawia element w górnej części <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-110"><xref:System.Collections.Generic.Stack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
-   <span data-ttu-id="f86c8-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> Usuwa element z góry <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-111"><xref:System.Collections.Generic.Stack%601.Pop%2A> removes an element from the top of the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
-   <span data-ttu-id="f86c8-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> Zwraca element, który znajduje się w górnej części <xref:System.Collections.Generic.Stack%601> , ale nie spowoduje usunięcia go z <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-112"><xref:System.Collections.Generic.Stack%601.Peek%2A> returns an element that is at the top of the <xref:System.Collections.Generic.Stack%601> but does not remove it from the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="f86c8-113">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, które <xref:System.Collections.Generic.Stack%601> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="f86c8-113">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="f86c8-114">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-114">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span> <span data-ttu-id="f86c8-115">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-115">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-116">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest mniejsza niż pojemność stosu, <xref:System.Collections.Generic.Stack%601.Push%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-116">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="f86c8-117">Jeśli pojemność musi zostać zwiększona, aby pomieścić nowy element <xref:System.Collections.Generic.Stack%601.Push%2A> staje się O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-117">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="f86c8-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-118"><xref:System.Collections.Generic.Stack%601.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="f86c8-119"><xref:System.Collections.Generic.Stack%601> akceptuje `null` prawidłową wartość dla odwołania do typów i pozwala zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-119"><xref:System.Collections.Generic.Stack%601> accepts `null` as a valid value for reference types and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-120">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="f86c8-120">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span> <span data-ttu-id="f86c8-121">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-121">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-122">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-122">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-123"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-123">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-124"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-124">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-125"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-125">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-126">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-126">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-127">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-127">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-128"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-128">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-129"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-129">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f86c8-130">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span><span class="sxs-lookup"><span data-stu-id="f86c8-130">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="f86c8-131">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="f86c8-131">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="f86c8-132">Element <see cref="T:System.Collections.Generic.Stack`1" /> może obsługiwać wielu elementów odczytujących współbieżnie, tak długo, jak długo Kolekcja nie jest modyfikowany.</span><span class="sxs-lookup"><span data-stu-id="f86c8-132">A <see cref="T:System.Collections.Generic.Stack`1" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span>  <span data-ttu-id="f86c8-133">Nawet w takim przypadku wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną.</span><span class="sxs-lookup"><span data-stu-id="f86c8-133">Even so, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f86c8-134">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f86c8-134">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f86c8-135">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="f86c8-136">Iteratory (C# i Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="f86c8-136">Iterators (C# and Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f86c8-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-137">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-138">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> klasę, która jest pusta i ma pojemność domyślna.</span><span class="sxs-lookup"><span data-stu-id="f86c8-138">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-139">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, <xref:System.Collections.Generic.Stack%601> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="f86c8-139">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="f86c8-140">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-140">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f86c8-141">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-141">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="f86c8-142">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-142">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-143">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-143">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-144">Poniższy przykład kodu demonstruje ten konstruktor i kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="f86c8-144">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="f86c8-145">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-145">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-146">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-146">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-147"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-147">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-148"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-148">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-149"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-149">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-150">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-150">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-151">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-151">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-152"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-152">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-153"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-153">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="f86c8-154">Kolekcja, aby skopiować elementy z.</span><span class="sxs-lookup"><span data-stu-id="f86c8-154">The collection to copy elements from.</span></span></param>
        <summary><span data-ttu-id="f86c8-155">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> skopiowane klasę, która zawiera elementy kopiowane z określonej kolekcji i ma wystarczającej wydajności, aby obsłużyć liczbę elementów.</span><span class="sxs-lookup"><span data-stu-id="f86c8-155">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-156">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, <xref:System.Collections.Generic.Stack%601> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="f86c8-156">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="f86c8-157">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-157">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f86c8-158">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-158">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="f86c8-159">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-159">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-160">Elementy są kopiowane na <xref:System.Collections.Generic.Stack%601> w tej samej kolejności, które są odczytywane przez <xref:System.Collections.Generic.IEnumerator%601> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-160">The elements are copied onto the <xref:System.Collections.Generic.Stack%601> in the same order they are read by the <xref:System.Collections.Generic.IEnumerator%601> of the collection.</span></span>  
  
 <span data-ttu-id="f86c8-161">Ten konstruktor jest O (`n`) operacji, gdzie `n` jest liczba elementów w `collection`.</span><span class="sxs-lookup"><span data-stu-id="f86c8-161">This constructor is an O(`n`) operation, where `n` is the number of elements in `collection`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-162">Poniższy przykład kodu demonstruje ten konstruktor i kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej.</span><span class="sxs-lookup"><span data-stu-id="f86c8-162">The following code example demonstrates this constructor and several methods of the <xref:System.Collections.Generic.Stack%601> generic class.</span></span>  
  
 <span data-ttu-id="f86c8-163">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-163">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-164">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-164">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-165"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-165">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-166"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-166">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-167"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-167">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-168">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-168">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-169">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-169">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-170"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-170">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-171"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-171">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f86c8-172"><paramref name="collection" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-172"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.Generic.ICollection`1" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Generic.Stack&lt;'T&gt; : int -&gt; System.Collections.Generic.Stack&lt;'T&gt;" Usage="new System.Collections.Generic.Stack&lt;'T&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="f86c8-173">Początkowa liczba elementów, <see cref="T:System.Collections.Generic.Stack`1" /> może zawierać.</span><span class="sxs-lookup"><span data-stu-id="f86c8-173">The initial number of elements that the <see cref="T:System.Collections.Generic.Stack`1" /> can contain.</span></span></param>
        <summary><span data-ttu-id="f86c8-174">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Generic.Stack`1" /> klasę, która jest pusta i ma określony pojemność lub pojemność początkową domyślną, która kwota jest większa.</span><span class="sxs-lookup"><span data-stu-id="f86c8-174">Initializes a new instance of the <see cref="T:System.Collections.Generic.Stack`1" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-175">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, <xref:System.Collections.Generic.Stack%601> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="f86c8-175">The capacity of a <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can hold.</span></span> <span data-ttu-id="f86c8-176">Gdy elementy są dodawane do <xref:System.Collections.Generic.Stack%601>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-176">As elements are added to a <xref:System.Collections.Generic.Stack%601>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="f86c8-177">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-177">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="f86c8-178">Można zmniejszyć pojemność przez wywołanie metody <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-178">The capacity can be decreased by calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-179">Ten konstruktor jest O (`n`) operacji, gdzie `n` jest `capacity`.</span><span class="sxs-lookup"><span data-stu-id="f86c8-179">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f86c8-180"><paramref name="capacity" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="f86c8-180"><paramref name="capacity" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="stack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-181">Usuwa wszystkie obiekty z <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-181">Removes all objects from the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-182"><xref:System.Collections.Generic.Stack%601.Count%2A> jest równa zero i odwołania do innych obiektów z elementów kolekcji są również zwalniane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-182"><xref:System.Collections.Generic.Stack%601.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="f86c8-183">Pojemność pozostaje bez zmian.</span><span class="sxs-lookup"><span data-stu-id="f86c8-183">The capacity remains unchanged.</span></span> <span data-ttu-id="f86c8-184">Aby zresetować pojemność <xref:System.Collections.Generic.Stack%601>, wywołaj <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-184">To reset the capacity of the <xref:System.Collections.Generic.Stack%601>, call <xref:System.Collections.Generic.Stack%601.TrimExcess%2A>.</span></span> <span data-ttu-id="f86c8-185">Przycinanie pustą <xref:System.Collections.Generic.Stack%601> ustawia pojemność <xref:System.Collections.Generic.Stack%601> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="f86c8-185">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 <span data-ttu-id="f86c8-186">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-186">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-187">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Clear%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f86c8-187">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Clear%2A> method.</span></span>  
  
 <span data-ttu-id="f86c8-188">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-188">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-189">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-189">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-190"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-190">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-191"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-191">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-192"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-192">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-193">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-193">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-194">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-194">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-195"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-195">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-196"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-196">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberSignature Language="F#" Value="member this.Contains : 'T -&gt; bool" Usage="stack.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f86c8-197">Obiekt do zlokalizowania w <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-197">The object to locate in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="f86c8-198">Wartość może być <see langword="null" /> dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f86c8-198">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="f86c8-199">Określa, czy element jest <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-199">Determines whether an element is in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="f86c8-200"><see langword="true" /> Jeśli <paramref name="item" /> znajduje się w <see cref="T:System.Collections.Generic.Stack`1" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-200"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.Stack`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-201">Ta metoda określa równość za pomocą domyślny moduł porównujący równość <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> dla `T`, typ wartości na liście.</span><span class="sxs-lookup"><span data-stu-id="f86c8-201">This method determines equality using the default equality comparer <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> for `T`, the type of values in the list.</span></span>  
  
 <span data-ttu-id="f86c8-202">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-202">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-203">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Contains%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f86c8-203">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="f86c8-204">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-204">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-205">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-205">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-206"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-206">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-207"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-207">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-208"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-208">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-209">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-209">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-210">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-210">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-211"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-211">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-212"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-212">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="f86c8-213">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="f86c8-213">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : 'T[] * int -&gt; unit" Usage="stack.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f86c8-214">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-214">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="f86c8-215"><see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span><span class="sxs-lookup"><span data-stu-id="f86c8-215">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="f86c8-216">Liczony od zera indeks w <paramref name="array" /> od rozpoczyna się kopiowanie które.</span><span class="sxs-lookup"><span data-stu-id="f86c8-216">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="f86c8-217">Kopiuje <see cref="T:System.Collections.Generic.Stack`1" /> do istniejącej jednowymiarowej <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-217">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-218">Elementy są kopiowane na tablicy ostatni wejściu — pierwszy na wyjściu (LIFO) kolejno zbliżona do kolejności elementów zwróconych przez kolejne wywołania <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-218">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-219">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-219">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-220">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f86c8-220">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method.</span></span>  
  
 <span data-ttu-id="f86c8-221">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-221">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-222">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-222">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-223"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-223">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-224"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-224">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-225"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-225">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-226">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-226">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-227">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-227">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-228"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-228">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-229"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-229">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f86c8-230"><paramref name="array" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-230"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f86c8-231"><paramref name="arrayIndex" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="f86c8-231"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f86c8-232">Liczba elementów w źródle <see cref="T:System.Collections.Generic.Stack`1" /> jest większa niż dostępna ilość miejsca od <paramref name="arrayIndex" /> do końca tablicy docelowej <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-232">The number of elements in the source <see cref="T:System.Collections.Generic.Stack`1" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Generic.Stack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86c8-233">Pobiera liczbę elementów znajdujących się w <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-233">Gets the number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <value><span data-ttu-id="f86c8-234">Liczba elementów zawartych w słowniku <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-234">The number of elements contained in the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-235">Pojemność <xref:System.Collections.Generic.Stack%601> jest liczba elementów, <xref:System.Collections.Generic.Stack%601> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-235">The capacity of the <xref:System.Collections.Generic.Stack%601> is the number of elements that the <xref:System.Collections.Generic.Stack%601> can store.</span></span> <span data-ttu-id="f86c8-236"><xref:System.Collections.Generic.Stack%601.Count%2A> jest to liczba elementów, które są rzeczywiście w <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-236"><xref:System.Collections.Generic.Stack%601.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="f86c8-237">Pojemność jest zawsze większa lub równa <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-237">The capacity is always greater than or equal to <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span> <span data-ttu-id="f86c8-238">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> przekracza pojemność podczas dodawania elementów, pojemność jest zwiększana o automatycznie relokacja tablicy wewnętrznej przed skopiowaniem starymi elementami i dodawanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="f86c8-238">If <xref:System.Collections.Generic.Stack%601.Count%2A> exceeds the capacity while adding elements, the capacity is increased by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="f86c8-239">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-239">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-240">Poniższy przykład kodu pokazuje kilka właściwości i metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Count%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="f86c8-240">The following code example demonstrates several properties and methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Count%2A> property.</span></span>  
  
 <span data-ttu-id="f86c8-241">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-241">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-242">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-242">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-243"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-243">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-244"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-244">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-245"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-245">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-246">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-246">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-247">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-247">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-248"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-248">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-249"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-249">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Stack&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Generic.Stack`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As Stack(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Stack&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.Generic.Stack&lt;'T&gt;.Enumerator" Usage="stack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Stack&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-250">Zwraca moduł wyliczający dla <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-250">Returns an enumerator for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="f86c8-251"><see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> Dla <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-251">An <see cref="T:System.Collections.Generic.Stack`1.Enumerator" /> for the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-252">`foreach` Instrukcja języka C# (`for each` w języku C++, `For Each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="f86c8-252">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f86c8-253">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="f86c8-253">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f86c8-254">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="f86c8-254">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f86c8-255">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-255">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f86c8-256">W tym miejscu <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-256">At this position, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f86c8-257">W związku z tym, należy wywołać <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-257">Therefore, you must call <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-258"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-258"><xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> returns the same object until <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="f86c8-259"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> Ustawia <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-259"><xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> sets <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f86c8-260">Jeśli <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="f86c8-260">If <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f86c8-261">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="f86c8-261">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f86c8-262">Jeśli ostatnie wywołanie <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-262">If the last call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f86c8-263">Nie można ustawić <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> do pierwszego elementu w kolekcji; należy utworzyć nowe wystąpienie modułu wyliczającego zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="f86c8-263">You cannot set <xref:System.Collections.Generic.Stack%601.Enumerator.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="f86c8-264">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="f86c8-264">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f86c8-265">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie unieważnione, a następne wywołanie <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> lub <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-265">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Generic.Stack%601.Enumerator.MoveNext%2A> or <xref:System.Collections.Generic.Stack%601.Enumerator.System%23Collections%23IEnumerator%23Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f86c8-266">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f86c8-266">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f86c8-267">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f86c8-267">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f86c8-268">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-268">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f86c8-269">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-269">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="f86c8-270">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-270">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-271">Poniższy przykład kodu pokazuje, że <xref:System.Collections.Generic.Stack%601> klasy generycznej jest wyliczalna.</span><span class="sxs-lookup"><span data-stu-id="f86c8-271">The following code example demonstrates that the <xref:System.Collections.Generic.Stack%601> generic class is enumerable.</span></span> <span data-ttu-id="f86c8-272">`foreach` — Instrukcja (`For Each` w języku Visual Basic `for each` w języku C++) jest używany do wyliczenia kolejki.</span><span class="sxs-lookup"><span data-stu-id="f86c8-272">The `foreach` statement (`For Each` in Visual Basic, `for each` in C++) is used to enumerate the queue.</span></span>  
  
 <span data-ttu-id="f86c8-273">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-273">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-274">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-274">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-275"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-275">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-276"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-276">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-277"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-277">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-278">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-278">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-279">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-279">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-280"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-280">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-281"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-281">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.Stack`1.Enumerator" />
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public T Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Function Peek () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Peek();" />
      <MemberSignature Language="F#" Value="member this.Peek : unit -&gt; 'T" Usage="stack.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-282">Zwraca obiekt, w górnej części <see cref="T:System.Collections.Generic.Stack`1" /> bez usuwania go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-282">Returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" /> without removing it.</span></span></summary>
        <returns><span data-ttu-id="f86c8-283">Obiekt w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-283">The object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-284">Ta metoda jest podobna do <xref:System.Collections.Generic.Stack%601.Pop%2A> metody, ale <xref:System.Collections.Generic.Stack%601.Peek%2A> nie modyfikuje <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-284">This method is similar to the <xref:System.Collections.Generic.Stack%601.Pop%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="f86c8-285">Jeśli typ `T` jest typem referencyjnym `null` zostać wypchnięty na <xref:System.Collections.Generic.Stack%601> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="f86c8-285">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="f86c8-286">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-286">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-287">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Peek%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f86c8-287">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Peek%2A> method.</span></span>  
  
 <span data-ttu-id="f86c8-288">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-288">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-289">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-289">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-290"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-290">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-291"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-291">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-292"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-292">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-293">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-293">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-294">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-294">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-295"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-295">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-296"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-296">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f86c8-297"><see cref="T:System.Collections.Generic.Stack`1" /> Jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-297">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public T Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; 'T" Usage="stack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-298">Usuwa i zwraca obiekt, w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-298">Removes and returns the object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <returns><span data-ttu-id="f86c8-299">Obiekt usunięty z góry <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-299">The object removed from the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-300">Ta metoda jest podobna do <xref:System.Collections.Generic.Stack%601.Peek%2A> metody, ale <xref:System.Collections.Generic.Stack%601.Peek%2A> nie modyfikuje <xref:System.Collections.Generic.Stack%601>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-300">This method is similar to the <xref:System.Collections.Generic.Stack%601.Peek%2A> method, but <xref:System.Collections.Generic.Stack%601.Peek%2A> does not modify the <xref:System.Collections.Generic.Stack%601>.</span></span>  
  
 <span data-ttu-id="f86c8-301">Jeśli typ `T` jest typem referencyjnym `null` zostać wypchnięty na <xref:System.Collections.Generic.Stack%601> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="f86c8-301">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span>  
  
 <span data-ttu-id="f86c8-302"><xref:System.Collections.Generic.Stack%601> jest implementowana jako tablica.</span><span class="sxs-lookup"><span data-stu-id="f86c8-302"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span> <span data-ttu-id="f86c8-303">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-303">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-304">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Pop%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f86c8-304">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Pop%2A> method.</span></span>  
  
 <span data-ttu-id="f86c8-305">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-305">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-306">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-306">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-307"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-307">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-308"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-308">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-309"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-309">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-310">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-310">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-311">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-311">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-312"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-312">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-313"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-313">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f86c8-314"><see cref="T:System.Collections.Generic.Stack`1" /> Jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-314">The <see cref="T:System.Collections.Generic.Stack`1" /> is empty.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Push(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="stack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f86c8-315">Obiekt do przekazania <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-315">The object to push onto the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span> <span data-ttu-id="f86c8-316">Wartość może być <see langword="null" /> dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f86c8-316">The value can be <see langword="null" /> for reference types.</span></span></param>
        <summary><span data-ttu-id="f86c8-317">Wstawienie obiektu w górnej części <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-317">Inserts an object at the top of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-318"><xref:System.Collections.Generic.Stack%601> jest implementowana jako tablica.</span><span class="sxs-lookup"><span data-stu-id="f86c8-318"><xref:System.Collections.Generic.Stack%601> is implemented as an array.</span></span>  
  
 <span data-ttu-id="f86c8-319">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest już równa pojemności pojemność <xref:System.Collections.Generic.Stack%601> jest zwiększana o automatyczne ponowne przydzielanie tablicy wewnętrznej i istniejące elementy są kopiowane do nowej tablicy, przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-319">If <xref:System.Collections.Generic.Stack%601.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Generic.Stack%601> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="f86c8-320">Jeśli typ `T` jest typem referencyjnym `null` zostać wypchnięty na <xref:System.Collections.Generic.Stack%601> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="f86c8-320">If type `T` is a reference type, `null` can be pushed onto the <xref:System.Collections.Generic.Stack%601> as a placeholder, if needed.</span></span> <span data-ttu-id="f86c8-321">On zajmuje miejsce w stosie i jest traktowany jak inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-321">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="f86c8-322">Jeśli <xref:System.Collections.Generic.Stack%601.Count%2A> jest mniejsza niż pojemność stosu, <xref:System.Collections.Generic.Stack%601.Push%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-322">If <xref:System.Collections.Generic.Stack%601.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Generic.Stack%601.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="f86c8-323">Jeśli pojemność musi zostać zwiększona, aby pomieścić nowy element <xref:System.Collections.Generic.Stack%601.Push%2A> staje się O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-323">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Generic.Stack%601.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-324">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.Push%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f86c8-324">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.Push%2A> method.</span></span>  
  
 <span data-ttu-id="f86c8-325">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-325">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-326">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-326">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-327"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-327">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-328"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-328">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-329"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-329">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-330">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-330">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-331">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-331">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-332"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-332">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-333"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-333">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Peek" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-334">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-334">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="f86c8-335"><see cref="T:System.Collections.Generic.IEnumerator`1" /> Który może służyć do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-335">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-336">`foreach` Instrukcja języka C# (`for each` w języku C++, `For Each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="f86c8-336">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f86c8-337">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="f86c8-337">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f86c8-338">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="f86c8-338">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f86c8-339">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-339">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f86c8-340">W tym miejscu <xref:System.Collections.Generic.IEnumerator%601.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-340">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="f86c8-341">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-341">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-342"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-342"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="f86c8-343"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.Generic.IEnumerator%601.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-343"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f86c8-344">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="f86c8-344">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f86c8-345">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="f86c8-345">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f86c8-346">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-346">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="f86c8-347">Nie można ustawić <xref:System.Collections.Generic.IEnumerator%601.Current%2A> do pierwszego elementu w kolekcji; należy utworzyć nowe wystąpienie modułu wyliczającego zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="f86c8-347">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  
  
 <span data-ttu-id="f86c8-348">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="f86c8-348">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f86c8-349">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie unieważnione, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-349">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f86c8-350">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f86c8-350">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f86c8-351">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f86c8-351">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f86c8-352">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-352">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f86c8-353">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-353">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="f86c8-354">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-354">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f86c8-355">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-355">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="f86c8-356"><see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span><span class="sxs-lookup"><span data-stu-id="f86c8-356">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="f86c8-357">Liczony od zera indeks w <paramref name="array" /> od rozpoczyna się kopiowanie które.</span><span class="sxs-lookup"><span data-stu-id="f86c8-357">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="f86c8-358">Kopiuje elementy ze <see cref="T:System.Collections.ICollection" /> do <see cref="T:System.Array" />, rozpoczynając od określonego <see cref="T:System.Array" /> indeksu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-358">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f86c8-359">Jeśli typ źródła <xref:System.Collections.ICollection> nie można automatycznie rzutować na typ docelowy `array`, implementacje nieogólnego <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, podczas gdy throw ogólnego implementacje <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-359">If the type of the source <xref:System.Collections.ICollection> cannot be cast automatically to the type of the destination `array`, the non-generic implementations of <xref:System.Collections.ICollection.CopyTo%2A?displayProperty=nameWithType> throw <xref:System.InvalidCastException>, whereas the generic implementations throw <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="f86c8-360">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-360">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f86c8-361"><paramref name="array" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-361"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f86c8-362"><paramref name="arrayIndex" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="f86c8-362"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f86c8-363"><paramref name="array" /> ma charakter wielowymiarowy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-363"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="f86c8-364">—lub—</span><span class="sxs-lookup"><span data-stu-id="f86c8-364">-or-</span></span> 
 <span data-ttu-id="f86c8-365"><paramref name="array" /> nie ma indeksowania zaczynającego się od zera.</span><span class="sxs-lookup"><span data-stu-id="f86c8-365"><paramref name="array" /> does not have zero-based indexing.</span></span>  
  
<span data-ttu-id="f86c8-366">—lub—</span><span class="sxs-lookup"><span data-stu-id="f86c8-366">-or-</span></span> 
<span data-ttu-id="f86c8-367">Liczba elementów w źródle <see cref="T:System.Collections.ICollection" /> jest większa niż dostępna ilość miejsca od <paramref name="arrayIndex" /> do końca tablicy docelowej <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-367">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span>  
  
<span data-ttu-id="f86c8-368">—lub—</span><span class="sxs-lookup"><span data-stu-id="f86c8-368">-or-</span></span> 
<span data-ttu-id="f86c8-369">Typ źródła <see cref="T:System.Collections.ICollection" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-369">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86c8-370">Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wątkowo).</span><span class="sxs-lookup"><span data-stu-id="f86c8-370">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="f86c8-371"><see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wątkowo); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-371"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="f86c8-372">W implementacji domyślnej <see cref="T:System.Collections.Generic.Stack`1" />, właściwość ta zwraca zawsze <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-372">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-373">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-373">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="f86c8-374">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f86c8-374">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f86c8-375">W rzadkich przypadkach, w którym wyliczenia będą konkurować o uzyskuje dostęp do zapisu można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f86c8-375">In the rare case where enumerations contend with write accesses, you must lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f86c8-376">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-376">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f86c8-377"><xref:System.Collections.ICollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-377"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="f86c8-378">Synchronizacja jest efektywne tylko wtedy, gdy wszystkie wątki zablokowania obiektu przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-378">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span>  
  
 <span data-ttu-id="f86c8-379">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-379">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f86c8-380">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-380">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="f86c8-381">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-381">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span>  <span data-ttu-id="f86c8-382">W implementacji domyślnej <see cref="T:System.Collections.Generic.Stack`1" />, właściwość ta zwraca zawsze bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="f86c8-382">In the default implementation of <see cref="T:System.Collections.Generic.Stack`1" />, this property always returns the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-383">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-383">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="f86c8-384">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f86c8-384">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f86c8-385">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f86c8-385">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f86c8-386">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-386">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f86c8-387"><xref:System.Collections.ICollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-387"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object that can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span> <span data-ttu-id="f86c8-388">Synchronizacja jest efektywne tylko wtedy, gdy wszystkie wątki zablokowania obiektu przed uzyskaniem dostępu do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-388">Synchronization is effective only if all threads lock this object before accessing the collection.</span></span> <span data-ttu-id="f86c8-389">Poniższy kod przedstawia użycie <xref:System.Collections.ICollection.SyncRoot%2A> właściwość dla języka C#, C++ i Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="f86c8-389">The following code shows the use of the <xref:System.Collections.ICollection.SyncRoot%2A> property for C#, C++, and Visual Basic.</span></span>  
  
```csharp  
ICollection ic = ...;  
lock (ic.SyncRoot) {  
   // Access the collection.  
}  
```  
  
```vb  
Dim ic As ICollection = ...  
SyncLock ic.SyncRoot  
   ' Access the collection.  
End SyncLock  
```  
  
```cpp#  
ICollection^ ic = ...;  
try {  
   Monitor::Enter(ic->SyncRoot);  
   // Access the collection.  
}  
finally {  
   Monitor::Exit(ic->SyncRoot);  
}  
```  
  
 <span data-ttu-id="f86c8-390">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-390">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-391">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-391">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="f86c8-392"><see cref="T:System.Collections.IEnumerator" /> Który może służyć do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-392">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-393">`foreach` Instrukcja języka C# (`for each` w języku C++, `For Each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="f86c8-393">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="f86c8-394">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="f86c8-394">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f86c8-395">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="f86c8-395">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f86c8-396">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-396">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f86c8-397"><xref:System.Collections.IEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-397"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="f86c8-398">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-398">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f86c8-399">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-399">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-400"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-400"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f86c8-401"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-401"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f86c8-402">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="f86c8-402">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f86c8-403">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="f86c8-403">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f86c8-404">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="f86c8-404">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f86c8-405">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-405">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-406">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="f86c8-406">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f86c8-407">Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest nieodwracalnie unieważnione, a następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> zgłasza <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-407">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="f86c8-408">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="f86c8-408">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="f86c8-409">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="f86c8-409">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f86c8-410">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-410">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f86c8-411">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-411">Default implementations of collections in <xref:System.Collections.Generic?displayProperty=nameWithType> are not synchronized.</span></span>  
  
 <span data-ttu-id="f86c8-412">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="f86c8-412">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.GetEnumerator" />
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="stack.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-413">Kopiuje <see cref="T:System.Collections.Generic.Stack`1" /> do nowej tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-413">Copies the <see cref="T:System.Collections.Generic.Stack`1" /> to a new array.</span></span></summary>
        <returns><span data-ttu-id="f86c8-414">Nową tablicę zawierającą kopiuje elementy <see cref="T:System.Collections.Generic.Stack`1" />.</span><span class="sxs-lookup"><span data-stu-id="f86c8-414">A new array containing copies of the elements of the <see cref="T:System.Collections.Generic.Stack`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-415">Elementy są kopiowane na tablicy ostatni wejściu — pierwszy na wyjściu (LIFO) kolejno zbliżona do kolejności elementów zwróconych przez kolejne wywołania <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-415">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Generic.Stack%601.Pop%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-416">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-416">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f86c8-417">Poniższy przykład kodu pokazuje kilka metod <xref:System.Collections.Generic.Stack%601> klasy ogólnej, w tym <xref:System.Collections.Generic.Stack%601.ToArray%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f86c8-417">The following code example demonstrates several methods of the <xref:System.Collections.Generic.Stack%601> generic class, including the <xref:System.Collections.Generic.Stack%601.ToArray%2A> method.</span></span>  
  
 <span data-ttu-id="f86c8-418">Przykład kodu tworzy stosu ciągów przy użyciu domyślnej pojemności i używa <xref:System.Collections.Generic.Stack%601.Push%2A> metodę, aby wypchnąć pięć ciągi na stosie.</span><span class="sxs-lookup"><span data-stu-id="f86c8-418">The code example creates a stack of strings with default capacity and uses the <xref:System.Collections.Generic.Stack%601.Push%2A> method to push five strings onto the stack.</span></span> <span data-ttu-id="f86c8-419">Elementy stosu są wyliczane nie zmienia stanu stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-419">The elements of the stack are enumerated, which does not change the state of the stack.</span></span> <span data-ttu-id="f86c8-420"><xref:System.Collections.Generic.Stack%601.Pop%2A> Metoda jest używana do pop pierwszy ciąg ze stosu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-420">The <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop the first string off the stack.</span></span> <span data-ttu-id="f86c8-421"><xref:System.Collections.Generic.Stack%601.Peek%2A> Metoda jest używana do wzięcia pod następnego elementu w stosie, a następnie <xref:System.Collections.Generic.Stack%601.Pop%2A> metoda jest używana do pop go.</span><span class="sxs-lookup"><span data-stu-id="f86c8-421">The <xref:System.Collections.Generic.Stack%601.Peek%2A> method is used to look at the next item on the stack, and then the <xref:System.Collections.Generic.Stack%601.Pop%2A> method is used to pop it off.</span></span>  
  
 <span data-ttu-id="f86c8-422"><xref:System.Collections.Generic.Stack%601.ToArray%2A> Metoda jest używana do utworzenia tablicy, a następnie skopiuj elementy stosu do niego, a następnie tablicy jest przekazywany do <xref:System.Collections.Generic.Stack%601.%23ctor%2A> konstruktora przyjmującego <xref:System.Collections.Generic.IEnumerable%601>, tworząc kopię stosu w kolejności elementów odwrócony.</span><span class="sxs-lookup"><span data-stu-id="f86c8-422">The <xref:System.Collections.Generic.Stack%601.ToArray%2A> method is used to create an array and copy the stack elements to it, then the array is passed to the <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor that takes <xref:System.Collections.Generic.IEnumerable%601>, creating a copy of the stack with the order of the elements reversed.</span></span> <span data-ttu-id="f86c8-423">Elementy kopii są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="f86c8-423">The elements of the copy are displayed.</span></span>  
  
 <span data-ttu-id="f86c8-424">Dwa razy rozmiar stosu jest tworzona macierz, a <xref:System.Collections.Generic.Stack%601.CopyTo%2A> metoda jest używana do skopiowania elementów tablicy, zaczynając od środka tablicy.</span><span class="sxs-lookup"><span data-stu-id="f86c8-424">An array twice the size of the stack is created, and the <xref:System.Collections.Generic.Stack%601.CopyTo%2A> method is used to copy the array elements beginning at the middle of the array.</span></span> <span data-ttu-id="f86c8-425"><xref:System.Collections.Generic.Stack%601.%23ctor%2A> Konstruktora jest używany ponownie utworzyć kopię stosu w kolejności elementów odwrócony; w związku z tym, trzy elementy o wartości null znajdują się na końcu.</span><span class="sxs-lookup"><span data-stu-id="f86c8-425">The <xref:System.Collections.Generic.Stack%601.%23ctor%2A> constructor is used again to create a copy of the stack with the order of elements reversed; thus, the three null elements are at the end.</span></span>  
  
 <span data-ttu-id="f86c8-426"><xref:System.Collections.Generic.Stack%601.Contains%2A> Metoda jest używana do pokazują, że ciąg "4" jest pierwsza kopia stosu, po którym <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda czyści kopii i <xref:System.Collections.Generic.Stack%601.Count%2A> właściwość pokazuje, że stos jest pusty.</span><span class="sxs-lookup"><span data-stu-id="f86c8-426">The <xref:System.Collections.Generic.Stack%601.Contains%2A> method is used to show that the string "four" is in the first copy of the stack, after which the <xref:System.Collections.Generic.Stack%601.Clear%2A> method clears the copy and the <xref:System.Collections.Generic.Stack%601.Count%2A> property shows that the stack is empty.</span></span>  
  
 [!code-csharp[Generic.Stack#1](~/samples/snippets/csharp/VS_Snippets_CLR/Generic.Stack/cs/source.cs#1)]
 [!code-vb[Generic.Stack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Generic.Stack/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)" />
        <altmember cref="M:System.Collections.Generic.Stack`1.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TrimExcess">
      <MemberSignature Language="C#" Value="public void TrimExcess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TrimExcess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TrimExcess" />
      <MemberSignature Language="VB.NET" Value="Public Sub TrimExcess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TrimExcess();" />
      <MemberSignature Language="F#" Value="member this.TrimExcess : unit -&gt; unit" Usage="stack.TrimExcess " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f86c8-427">Ustawia pojemność do rzeczywistej liczby elementów w <see cref="T:System.Collections.Generic.Stack`1" />, jeśli ta liczba jest bieżąca pojemność w mniej niż 90 procentach.</span><span class="sxs-lookup"><span data-stu-id="f86c8-427">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.Stack`1" />, if that number is less than 90 percent of current capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f86c8-428">Ta metoda może być używana aby zminimalizować obciążenie pamięci kolekcji, jeśli żadne nowe elementy, które zostaną dodane do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f86c8-428">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span> <span data-ttu-id="f86c8-429">Koszt ponowne przydzielanie i kopiowania dużych <xref:System.Collections.Generic.Stack%601> mogą być jednak znaczące, więc <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> metody nie robi nic, jeśli lista jest więcej niż 90 procent pojemność.</span><span class="sxs-lookup"><span data-stu-id="f86c8-429">The cost of reallocating and copying a large <xref:System.Collections.Generic.Stack%601> can be considerable, however, so the <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method does nothing if the list is at more than 90 percent of capacity.</span></span> <span data-ttu-id="f86c8-430">Pozwala to uniknąć ponoszenia koszt dużych ponownej alokacji dla niewielkich korzyści.</span><span class="sxs-lookup"><span data-stu-id="f86c8-430">This avoids incurring a large reallocation cost for a relatively small gain.</span></span>  
  
 <span data-ttu-id="f86c8-431">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Generic.Stack%601.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f86c8-431">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Generic.Stack%601.Count%2A>.</span></span>  
  
 <span data-ttu-id="f86c8-432">Aby zresetować <xref:System.Collections.Generic.Stack%601> do stanu początkowego wywołania <xref:System.Collections.Generic.Stack%601.Clear%2A> metoda przed wywołaniem <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="f86c8-432">To reset a <xref:System.Collections.Generic.Stack%601> to its initial state, call the <xref:System.Collections.Generic.Stack%601.Clear%2A> method before calling <xref:System.Collections.Generic.Stack%601.TrimExcess%2A> method.</span></span> <span data-ttu-id="f86c8-433">Przycinanie pustą <xref:System.Collections.Generic.Stack%601> ustawia pojemność <xref:System.Collections.Generic.Stack%601> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="f86c8-433">Trimming an empty <xref:System.Collections.Generic.Stack%601> sets the capacity of the <xref:System.Collections.Generic.Stack%601> to the default capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.Stack`1.Clear" />
        <altmember cref="P:System.Collections.Generic.Stack`1.Count" />
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="stack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.Stack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="stack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>