<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78f5f880c2576871a23da87bc920a24623252c3e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69335058" /></Metadata><TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ obiektów do porównania.</typeparam>
    <summary>Definiuje metody do obsługi porównania obiektów pod kątem równości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs umożliwia implementację dostosowanego porównania równości dla kolekcji. Oznacza to, że można utworzyć własną definicję równości dla typu `T`i określić, że ta definicja ma być używana z typem kolekcji <xref:System.Collections.Generic.IEqualityComparer%601> akceptującym interfejs ogólny. W .NET Framework konstruktory <xref:System.Collections.Generic.Dictionary%602> typu kolekcji ogólnej akceptują ten interfejs.  
  
 Domyślna implementacja tego interfejsu jest udostępniana przez <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> Właściwość <xref:System.Collections.Generic.EqualityComparer%601> klasy generycznej. Implementacja <xref:System.StringComparer> klasy<xref:System.Collections.Generic.IEqualityComparer%601> typu .<xref:System.String>  
  
 Ten interfejs obsługuje tylko porównania równości. Dostosowanie porównań do sortowania i porządkowania jest udostępniane przez <xref:System.Collections.Generic.IComparer%601> interfejs ogólny.  
  
 Firma Microsoft zaleca, aby dziedziczyć <xref:System.Collections.Generic.EqualityComparer%601> z klasy zamiast <xref:System.Collections.Generic.IEqualityComparer%601> implementować interfejs, ponieważ <xref:System.Collections.Generic.EqualityComparer%601> Klasa sprawdza równość przy użyciu <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> metody zamiast <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody. Jest to `Contains`zgodne z metodami `IndexOf` `LastIndexOf` ,,`Remove` i klasyiinnymikolekcjamiogólnymi.<xref:System.Collections.Generic.Dictionary%602>  
  
   
  
## Examples  
 Poniższy przykład dodaje obiekty niestandardowe `Box` do kolekcji słowników. `Box` Obiekty są uważane za równe, jeśli ich wymiary są takie same.  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">Pierwszy obiekt typu <paramref name="T" /> do porównania.</param>
        <param name="y">Drugi obiekt typu <paramref name="T" /> do porównania.</param>
        <summary>Określa, czy określone obiekty są równe.</summary>
        <returns><see langword="true" />Jeśli określone obiekty są równe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj tę metodę, aby zapewnić niestandardowe porównanie równości dla `T`typu.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Implementacje są wymagane do zapewnienia, że <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Jeśli metoda <see langword="true" /> zwraca dla dwóch <paramref name="x" /> obiektów <paramref name="y" /> <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> i, wówczas wartość zwracana przez metodę dla <paramref name="x" /> musi być równa wartości zwróconej dla <paramref name="y" />.  
  
<see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Metoda jest zwrotna, symetryczna i przechodnia. Oznacza to, że zwraca <see langword="true" /> , jeśli jest używany do porównywania obiektu z samym; <paramref name="x" /> dladwóch<paramref name="y" /> obiektów i jeśli jest <see langword="true" /> dla i;<paramref name="x" />oraz dladwóch<paramref name="x" /> obiektów i<paramref name="z" /> jeśli jest <see langword="true" /> dla <see langword="true" /> <paramref name="y" /> <see langword="true" /> <paramref name="x" /> a także<paramref name="y" /> dlai<paramref name="y" /> . <see langword="true" /> <paramref name="z" /></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">Wartość <see cref="T:System.Object" /> , dla której ma zostać zwrócony kod skrótu.</param>
        <summary>Zwraca kod skrótu dla określonego obiektu.</summary>
        <returns>Kod skrótu dla określonego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj tę metodę, aby podać dostosowany kod skrótu dla `T`typu, odpowiadający kryterium dostosowanego porównania <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> równości dostarczonego przez metodę.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Typ elementu <paramref name="obj" /> to typ referencyjny i <paramref name="obj" /> is <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Implementacje są wymagane do zapewnienia, że <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Jeśli metoda <see langword="true" /> zwraca dla dwóch <paramref name="x" /> obiektów <paramref name="y" /> <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> i, wówczas wartość zwracana przez metodę dla <paramref name="x" /> musi być równa wartości zwróconej dla <paramref name="y" />.</para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>
