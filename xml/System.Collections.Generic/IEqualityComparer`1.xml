<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5409aafaaeb1a45def93fc63cf77604f971545e0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36645569" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ obiektów do porównania.</typeparam>
    <summary>Definiuje metody służące do obsługi porównanie obiekty pod kątem równości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs umożliwia wykonania porównania równości dostosowane dla kolekcji. Oznacza to, można utworzyć własny definicji równości dla typu `T`i określ, czy ta definicja można używać z typem kolekcji, który akceptuje <xref:System.Collections.Generic.IEqualityComparer%601> interfejs generyczny. W programie .NET Framework, konstruktorów <xref:System.Collections.Generic.Dictionary%602> typu kolekcji ogólnej zaakceptować tego interfejsu.  
  
 Domyślną implementację tego interfejsu jest zapewniana przez <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> właściwość <xref:System.Collections.Generic.EqualityComparer%601> klasy ogólnej. <xref:System.StringComparer> Klasa implementuje <xref:System.Collections.Generic.IEqualityComparer%601> typu <xref:System.String>.  
  
 Ten interfejs obsługuje tylko porównywanie równości. Dostosowywanie porównywanie, sortowanie i kolejność są dostarczane przez <xref:System.Collections.Generic.IComparer%601> interfejs generyczny.  
  
 Zaleca się, że pochodzi od <xref:System.Collections.Generic.EqualityComparer%601> klasy zamiast wykonania <xref:System.Collections.Generic.IEqualityComparer%601> interfejsu, ponieważ <xref:System.Collections.Generic.EqualityComparer%601> testów dla równości przy użyciu klasy <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> zamiast metody <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody. Jest to zgodne z `Contains`, `IndexOf`, `LastIndexOf`, i `Remove` metody <xref:System.Collections.Generic.Dictionary%602> klasy i innych kolekcji.  
  
   
  
## Examples  
 Poniższy przykład umożliwia dodanie niestandardowych `Box` obiektów do słownika kolekcji. `Box` Obiekty są traktowane jako równe, jeśli ich wymiary są takie same.  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">Pierwszy obiekt typu <c>T</c> do porównania.</param>
        <param name="y">Drugi obiekt typu <c>T</c> do porównania.</param>
        <summary>Określa, czy podane obiekty są takie same.</summary>
        <returns>
          <see langword="true" /> Podane obiekty są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj tę metodę, aby zapewnić porównania równości dostosowane dla typu `T`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Implementacje są wymagane do zapewnienia, że jeśli <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> metoda zwraca <see langword="true" /> dla dwóch obiektów <c>x</c> i <c>y</c>, następnie wartość zwrócona przez <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> metoda <c>x</c> musi być równa wartości zwracane dla <c>y</c>.  <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Metoda jest zwrotnej, symetrycznego i przechodnie. That is, it returns <see langword="true" /> if used to compare an object with itself; <see langword="true" /> for two objects <c>x</c> and <c>y</c> if it is <see langword="true" /> for <c>y</c> and <c>x</c>; and <see langword="true" /> for two objects <c>x</c> and <c>z</c> if it is <see langword="true" /> for <c>x</c> and <c>y</c> and also <see langword="true" /> for <c>y</c> and <c>z</c>.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> Dla której ma zostać zwrócone skrótu.</param>
        <summary>Zwraca wartość skrótu dla określonego obiektu.</summary>
        <returns>Wartość skrótu dla określonego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj tę metodę, aby zapewnić dostosowane wartość skrótu dla typu `T`, odpowiadające porównania równości dostosowane podał <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Typ <paramref name="obj" /> jest typem referencyjnym i <paramref name="obj" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Implementacje są wymagane do zapewnienia, że jeśli <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> metoda zwraca <see langword="true" /> dla dwóch obiektów <c>x</c> i <c>y</c>, następnie wartość zwrócona przez <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> metoda <c>x</c> musi być równa wartości zwracane dla <c>y</c>.</para>
        </block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>