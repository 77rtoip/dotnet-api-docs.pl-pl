<Type Name="IEqualityComparer&lt;T&gt;" FullName="System.Collections.Generic.IEqualityComparer&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea29512abcf8fb15aa435e75f569d1fd308650f9" /><Meta Name="ms.sourcegitcommit" Value="6ee2e6b2c5d7c5bd66feeb362d29e65fdf858836" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/15/2018" /><Meta Name="ms.locfileid" Value="51691147" /></Metadata><TypeSignature Language="C#" Value="public interface IEqualityComparer&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEqualityComparer`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEqualityComparer`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEqualityComparer(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEqualityComparer" />
  <TypeSignature Language="F#" Value="type IEqualityComparer&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Typ obiektów do porównania.</typeparam>
    <summary>Definiuje metody służące do obsługi porównanie obiektów pod kątem równości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs umożliwia implementację dostosowane porównania dla kolekcji. Oznacza to, można utworzyć własne definicji równości dla typu `T`, a następnie określ, czy ta definicja używana z typem kolekcji, który akceptuje <xref:System.Collections.Generic.IEqualityComparer%601> ogólny interfejs. W .NET Framework, konstruktory <xref:System.Collections.Generic.Dictionary%602> typu kolekcji generycznej zaakceptować tego interfejsu.  
  
 Domyślna implementacja tego interfejsu są dostarczane przez <xref:System.Collections.Generic.EqualityComparer%601.Default%2A> właściwość <xref:System.Collections.Generic.EqualityComparer%601> klasy ogólnej. <xref:System.StringComparer> Klasy implementuje <xref:System.Collections.Generic.IEqualityComparer%601> typu <xref:System.String>.  
  
 Ten interfejs obsługuje tylko porównywanie równości. Dostosowywanie porównywanie, sortowanie i kolejność są dostarczane przez <xref:System.Collections.Generic.IComparer%601> interfejs generyczny.  
  
 Firma Microsoft zaleca wyprowadzenie z <xref:System.Collections.Generic.EqualityComparer%601> klasy, a nie Implementowanie <xref:System.Collections.Generic.IEqualityComparer%601> interfejsu, ponieważ <xref:System.Collections.Generic.EqualityComparer%601> klasy testy na równość za pomocą <xref:System.IEquatable%601.Equals%2A?displayProperty=nameWithType> zamiast metody <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody. Jest to zgodne z `Contains`, `IndexOf`, `LastIndexOf`, i `Remove` metody <xref:System.Collections.Generic.Dictionary%602> klasy i inne kolekcje ogólne.  
  
   
  
## Examples  
 W poniższym przykładzie dodano niestandardowy `Box` obiekty kolekcji słownika. `Box` Obiekty są traktowane jako równe, jeżeli ich wymiary są takie same.  
  
 [!code-csharp[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEqualityComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.iequalitycomparer/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.EqualityComparer`1" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="Overload:System.Collections.Generic.Dictionary`2.#ctor" />
    <altmember cref="T:System.Collections.Generic.IComparer`1" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(!T x, !T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : 'T * 'T -&gt; bool" Usage="iEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(T x, T y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <param name="x">Pierwszy obiekt typu <paramref name="T" /> do porównania.</param>
        <param name="y">Drugi obiekt typu <paramref name="T" /> do porównania.</param>
        <summary>Określa, czy określone obiekty są takie same.</summary>
        <returns><see langword="true" /> Jeśli określone obiekty są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementować tę metodę w celu zapewnienia dostosowane porównania dla typu `T`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Implementacje są wymagane do zapewnienia, że jeśli <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> metoda zwraca <see langword="true" /> dla dwóch obiektów <paramref name="x" /> i <paramref name="y" />, następnie wartość zwrócona przez obiekt <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> metodę <paramref name="x" /> musi być równa wartości zwracane dla <paramref name="y" />.  
  
<see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> Metodą jest zwrotną, symetryczny i przechodnie. Oznacza to, zwraca <see langword="true" /> Jeśli użyty do porównania obiektu z samym sobą; <see langword="true" /> dla dwóch obiektów <paramref name="x" /> i <paramref name="y" /> , gdy jest <see langword="true" /> dla <paramref name="y" /> i <paramref name="x" />; i <see langword="true" /> dla dwóch obiektów <paramref name="x" /> i <paramref name="z" /> , gdy jest <see langword="true" /> dla <paramref name="x" /> i <paramref name="y" /> , a także <see langword="true" /> dla <paramref name="y" /> i <paramref name="z" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (T obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(!T obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : 'T -&gt; int" Usage="iEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(T obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="T" />
      </Parameters>
      <Docs>
        <param name="obj"><see cref="T:System.Object" /> Dla której ma zostać zwrócone wartość skrótu.</param>
        <summary>Zwraca wartość skrótu dla określonego obiektu.</summary>
        <returns>Wartość skrótu dla określonego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementować tę metodę, aby zapewnić dostosowane wartość skrótu dla typu `T`, odpowiadające porównanie równości niestandardowe, udostępniane przez <xref:System.Collections.Generic.IEqualityComparer%601.Equals%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Typ <paramref name="obj" /> jest typem odwołania i <paramref name="obj" /> jest <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Implementacje są wymagane do zapewnienia, że jeśli <see cref="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)" /> metoda zwraca <see langword="true" /> dla dwóch obiektów <paramref name="x" /> i <paramref name="y" />, następnie wartość zwrócona przez obiekt <see cref="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)" /> metodę <paramref name="x" /> musi być równa wartości zwracane dla <paramref name="y" />.</para></block>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>