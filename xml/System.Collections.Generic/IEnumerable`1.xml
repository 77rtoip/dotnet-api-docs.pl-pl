<Type Name="IEnumerable&lt;T&gt;" FullName="System.Collections.Generic.IEnumerable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a15e40f8b5fcfba97f002f47821b6cc779cd08c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69334989" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerable&lt;out T&gt; : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable`1&lt;+ T&gt; implements class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IEnumerable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable(Of Out T)&#xA;Implements IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumerable : System::Collections::IEnumerable" />
  <TypeSignature Language="F#" Value="type seq&lt;'T&gt; = interface&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="758b8-101">Typ obiektów do wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="758b8-101">The type of objects to enumerate.</span></span></typeparam>
    <summary><span data-ttu-id="758b8-102">Uwidacznia moduł wyliczający, który obsługuje prostą iterację w kolekcji określonego typu.</span><span class="sxs-lookup"><span data-stu-id="758b8-102">Exposes the enumerator, which supports a simple iteration over a collection of a specified type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b8-103"><xref:System.Collections.Generic.IEnumerable%601>jest interfejsem podstawowym dla kolekcji w <xref:System.Collections.Generic> przestrzeni nazw, takich jak <xref:System.Collections.Generic.Dictionary%602> <xref:System.Collections.Generic.List%601>,, <xref:System.Collections.Generic.Stack%601> i innych kolekcji ogólnych, takich <xref:System.Collections.ObjectModel.ObservableCollection%601> jak <xref:System.Collections.Concurrent.ConcurrentStack%601>i.</span><span class="sxs-lookup"><span data-stu-id="758b8-103"><xref:System.Collections.Generic.IEnumerable%601> is the base interface for collections in the <xref:System.Collections.Generic> namespace such as <xref:System.Collections.Generic.List%601>, <xref:System.Collections.Generic.Dictionary%602>, and <xref:System.Collections.Generic.Stack%601> and other generic collections such as <xref:System.Collections.ObjectModel.ObservableCollection%601> and <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span> <span data-ttu-id="758b8-104">Kolekcje, które <xref:System.Collections.Generic.IEnumerable%601> implementują, można wyliczyć przy `foreach` użyciu instrukcji.</span><span class="sxs-lookup"><span data-stu-id="758b8-104">Collections that implement <xref:System.Collections.Generic.IEnumerable%601> can be enumerated by using the `foreach` statement.</span></span>  
  
 <span data-ttu-id="758b8-105">W przypadku nieogólnej wersji tego interfejsu, zobacz <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="758b8-105">For the non-generic version of this interface, see <xref:System.Collections.IEnumerable?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="758b8-106"><xref:System.Collections.Generic.IEnumerable%601>zawiera pojedynczą metodę, którą należy zaimplementować podczas implementowania tego interfejsu; <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, która<xref:System.Collections.Generic.IEnumerator%601> zwraca obiekt.</span><span class="sxs-lookup"><span data-stu-id="758b8-106"><xref:System.Collections.Generic.IEnumerable%601> contains a single method that you must implement when implementing this interface; <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>, which returns an <xref:System.Collections.Generic.IEnumerator%601> object.</span></span> <span data-ttu-id="758b8-107">Zwraca <xref:System.Collections.Generic.IEnumerator%601> możliwość wykonywania iteracji przez kolekcję przez <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ujawnienie właściwości.</span><span class="sxs-lookup"><span data-stu-id="758b8-107">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b8-108">W poniższym przykładzie pokazano, jak zaimplementować <xref:System.Collections.Generic.IEnumerable%601> interfejs i jak używać tej implementacji do tworzenia zapytania LINQ.</span><span class="sxs-lookup"><span data-stu-id="758b8-108">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and how to use that implementation to create a LINQ query.</span></span> <span data-ttu-id="758b8-109">Podczas implementowania <xref:System.Collections.Generic.IEnumerable%601>należy również zaimplementować <xref:System.Collections.Generic.IEnumerator%601> lub tylko dla C# , można użyć słowa kluczowego [Yield](~/docs/csharp/language-reference/keywords/yield.md) .</span><span class="sxs-lookup"><span data-stu-id="758b8-109">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="758b8-110">Implementacja <xref:System.Collections.Generic.IEnumerator%601> wymaga<xref:System.IDisposable> również implementacji, która będzie widoczna w tym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="758b8-110">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="758b8-111">Aby zapoznać C# się z innym przykładem, który <xref:System.Collections.Generic.IEnumerable%601> demonstruje sposób implementacji interfejsu, zobacz [przykład Generics](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span><span class="sxs-lookup"><span data-stu-id="758b8-111">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="758b8-112">Ten przykład używa `yield` słowa kluczowego zamiast implementowania <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="758b8-112">This sample uses the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="758b8-113">
        <see cref="T:System.Collections.Generic.IEnumerable\`1" />jest dołączony do parzystości z kolekcjami nieogólnymi; Implementacja <see cref="T:System.Collections.Generic.IEnumerable\`1" /> zezwala na przekazywanie kolekcji ogólnej do metody, która oczekuje <see cref="T:System.Collections.IEnumerable" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="758b8-113">
        <see cref="T:System.Collections.Generic.IEnumerable\`1" /> is included for parity with non-generic collections; implementing <see cref="T:System.Collections.Generic.IEnumerable\`1" /> allows a generic collection to be passed to a method that expects an <see cref="T:System.Collections.IEnumerable" /> object.</span></span></para></block>
    <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
    <altmember cref="N:System.Collections" />
    <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554"><span data-ttu-id="758b8-114">Przewodnik: Implementowanie interfejsu IEnumerable (Of T) w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="758b8-114">Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="758b8-115">Iteratory (C# i Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="758b8-115">Iterators (C# and Visual Basic)</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&amp;pathId=1364935593"><span data-ttu-id="758b8-116">Przykłady typów ogólnych</span><span class="sxs-lookup"><span data-stu-id="758b8-116">Generics Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;out T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of Out T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="seq.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="758b8-117">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="758b8-117">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="758b8-118">Moduł wyliczający, który może być używany do iteracji kolekcji.</span><span class="sxs-lookup"><span data-stu-id="758b8-118">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="758b8-119">Zwraca <xref:System.Collections.Generic.IEnumerator%601> możliwość wykonywania iteracji przez kolekcję przez <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ujawnienie właściwości. Moduł wyliczający służy do odczytywania danych w kolekcji, ale nie do modyfikowania kolekcji.</span><span class="sxs-lookup"><span data-stu-id="758b8-119">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property .You can use enumerators to read the data in a collection, but not to modify the collection.</span></span>  
  
 <span data-ttu-id="758b8-120">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="758b8-120">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="758b8-121">W tym miejscu <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="758b8-121">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="758b8-122">W związku z tym, należy <xref:System.Collections.IEnumerator.MoveNext%2A> wywołać metodę, aby wykonać przechodzenie modułu wyliczającego do pierwszego elementu kolekcji przed odczytem <xref:System.Collections.Generic.IEnumerator%601.Current%2A>wartości.</span><span class="sxs-lookup"><span data-stu-id="758b8-122">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>  
  
 <span data-ttu-id="758b8-123"><xref:System.Collections.Generic.IEnumerator%601.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu, aż <xref:System.Collections.IEnumerator.MoveNext%2A> zostanie <xref:System.Collections.Generic.IEnumerator%601.Current%2A> wywołany ponownie jako zestaw do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="758b8-123"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called again as <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="758b8-124">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="758b8-124">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="758b8-125">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="758b8-125">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="758b8-126">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="758b8-126">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="758b8-127">Nie można ponownie <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ustawić na pierwszy element kolekcji; zamiast tego należy utworzyć nowe wystąpienie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="758b8-127">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>  

 <span data-ttu-id="758b8-128">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodawanie, modyfikowanie lub usuwanie elementów, zachowanie modułu wyliczającego jest niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="758b8-128">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="758b8-129">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, więc moduł wyliczający pozostaje prawidłowy, dopóki kolekcja pozostanie niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="758b8-129">An enumerator does not have exclusive access to the collection so an enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="758b8-130">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest unieważniony, a użytkownik może uzyskać nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="758b8-130">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is invalidated and you may get unexpected results.</span></span> <span data-ttu-id="758b8-131">Ponadto Wyliczenie kolekcji nie jest procedurą bezpieczną wątkowo.</span><span class="sxs-lookup"><span data-stu-id="758b8-131">Also, enumerating a collection is not a thread-safe procedure.</span></span> <span data-ttu-id="758b8-132">Aby zagwarantować bezpieczeństwo wątków, należy zablokować kolekcję podczas wyliczania lub zaimplementować synchronizację w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="758b8-132">To guarantee thread-safety, you should lock the collection during enumerator or implement synchronization on the collection.</span></span>  
  
 <span data-ttu-id="758b8-133">Domyślne implementacje kolekcji w <xref:System.Collections.Generic?displayProperty=nameWithType> przestrzeni nazw nie są zsynchronizowane.</span><span class="sxs-lookup"><span data-stu-id="758b8-133">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace aren't synchronized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="758b8-134">Poniższy przykład ilustruje sposób implementacji <xref:System.Collections.Generic.IEnumerable%601> interfejsu i używa tej implementacji do tworzenia zapytania LINQ.</span><span class="sxs-lookup"><span data-stu-id="758b8-134">The following example demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface and uses that implementation to create a LINQ query.</span></span> <span data-ttu-id="758b8-135">Podczas implementowania <xref:System.Collections.Generic.IEnumerable%601>należy również zaimplementować <xref:System.Collections.Generic.IEnumerator%601> lub tylko dla C# , można użyć słowa kluczowego [Yield](~/docs/csharp/language-reference/keywords/yield.md) .</span><span class="sxs-lookup"><span data-stu-id="758b8-135">When you implement <xref:System.Collections.Generic.IEnumerable%601>, you must also implement <xref:System.Collections.Generic.IEnumerator%601> or, for C# only, you can use the [yield](~/docs/csharp/language-reference/keywords/yield.md) keyword.</span></span> <span data-ttu-id="758b8-136">Implementacja <xref:System.Collections.Generic.IEnumerator%601> wymaga<xref:System.IDisposable> również implementacji, która będzie widoczna w tym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="758b8-136">Implementing <xref:System.Collections.Generic.IEnumerator%601> also requires <xref:System.IDisposable> to be implemented, which you will see in this example.</span></span>  
  
 [!code-csharp[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/cs/program.cs#1)]
 [!code-vb[System.Collections.Generic.IEnumerableEx#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.generic.ienumerableex/vb/module1.vb#1)]  
  
 <span data-ttu-id="758b8-137">Aby zapoznać C# się z innym przykładem, który <xref:System.Collections.Generic.IEnumerable%601> demonstruje sposób implementacji interfejsu, zobacz [przykład Generics](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span><span class="sxs-lookup"><span data-stu-id="758b8-137">For another C# example that demonstrates how to implement the <xref:System.Collections.Generic.IEnumerable%601> interface, see the [Generics Sample](https://code.msdn.microsoft.com/Generics-Sample-C-9b41a192/sourcecode?fileId=46476&pathId=1364935593).</span></span> <span data-ttu-id="758b8-138">Ten przykład używa `yield` słowa kluczowego zamiast zaimplementowania <xref:System.Collections.Generic.IEnumerator%601>.</span><span class="sxs-lookup"><span data-stu-id="758b8-138">This sample uses of the `yield` keyword instead of implementing <xref:System.Collections.Generic.IEnumerator%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Generic.IEnumerator`1" />
        <related type="Article" href="https://msdn.microsoft.com/library/c60d7589-51f2-4463-a2d5-22506bbc1554"><span data-ttu-id="758b8-139">Przewodnik: Implementowanie interfejsu IEnumerable (Of T) w Visual Basic</span><span class="sxs-lookup"><span data-stu-id="758b8-139">Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="758b8-140">Iteratory (C# i Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="758b8-140">Iterators (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
