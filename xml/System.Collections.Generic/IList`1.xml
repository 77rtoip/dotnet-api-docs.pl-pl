<Type Name="IList&lt;T&gt;" FullName="System.Collections.Generic.IList&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14f147afc8b6daaf0fe66b0376bbe23dab410f43" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69352276" /></Metadata><TypeSignature Language="C#" Value="public interface IList&lt;T&gt; : System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IList`1&lt;T&gt; implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Generic.IList`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IList(Of T)&#xA;Implements ICollection(Of T), IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IList : System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type IList&lt;'T&gt; = interface&#xA;    interface ICollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="c256c-101">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="c256c-101">The type of elements in the list.</span></span></typeparam>
    <summary><span data-ttu-id="c256c-102">Reprezentuje kolekcję obiektów, do których można uzyskać dostęp indywidualnie przez indeks.</span><span class="sxs-lookup"><span data-stu-id="c256c-102">Represents a collection of objects that can be individually accessed by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c256c-103">Ogólny interfejs jest obiektem podrzędnym <xref:System.Collections.Generic.ICollection%601> interfejsu ogólnego i jest interfejsem podstawowym wszystkich list ogólnych. <xref:System.Collections.Generic.IList%601></span><span class="sxs-lookup"><span data-stu-id="c256c-103">The <xref:System.Collections.Generic.IList%601> generic interface is a descendant of the <xref:System.Collections.Generic.ICollection%601> generic interface and is the base interface of all generic lists.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="N:System.Collections" />
  </Docs>
  <Members>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IList`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int" Usage="iList.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="c256c-104">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="c256c-104">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <summary><span data-ttu-id="c256c-105">Określa indeks określonego elementu w <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="c256c-105">Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></summary>
        <returns><span data-ttu-id="c256c-106">Indeks elementu <paramref name="item" /> if znajduje się na liście; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="c256c-106">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c256c-107">Jeśli obiekt występuje wiele razy na liście, <xref:System.Collections.Generic.IList%601.IndexOf%2A> Metoda zawsze zwraca pierwsze znalezione wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="c256c-107">If an object occurs multiple times in the list, the <xref:System.Collections.Generic.IList%601.IndexOf%2A> method always returns the first instance found.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit" Usage="iList.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c256c-108">Indeks (liczony od zera), <paramref name="item" /> który powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="c256c-108">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="c256c-109">Obiekt, który ma zostać wstawiony <see cref="T:System.Collections.Generic.IList`1" />do.</span><span class="sxs-lookup"><span data-stu-id="c256c-109">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></param>
        <summary><span data-ttu-id="c256c-110">Wstawia element do <see cref="T:System.Collections.Generic.IList`1" /> obiektu o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="c256c-110">Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c256c-111">Jeśli `index` jest równa liczbie elementów <xref:System.Collections.Generic.IList%601>w, `item` zostanie dołączony do listy.</span><span class="sxs-lookup"><span data-stu-id="c256c-111">If `index` equals the number of items in the <xref:System.Collections.Generic.IList%601>, then `item` is appended to the list.</span></span>  
  
 <span data-ttu-id="c256c-112">W kolekcjach elementów sąsiadujących, takich jak listy, elementy umieszczone po punkcie wstawienia przesuwają się w dół, aby zwolnić miejsce na nowy element.</span><span class="sxs-lookup"><span data-stu-id="c256c-112">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="c256c-113">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="c256c-113">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c256c-114">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="c256c-114">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c256c-115"><paramref name="index" />nie jest prawidłowym indeksem w <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="c256c-115"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c256c-116">Jest <see cref="T:System.Collections.Generic.IList`1" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c256c-116">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Generic.IList`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Collections.Generic.IList&lt;'T&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c256c-117">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="c256c-117">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="c256c-118">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="c256c-118">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="c256c-119">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="c256c-119">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c256c-120">Ta właściwość zapewnia możliwość dostępu do określonego elementu w kolekcji przy użyciu następującej składni: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="c256c-120">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="c256c-121">C# Język używa słowa kluczowego do definiowania indeksatorów zamiast implementowania <xref:System.Collections.Generic.IList%601.Item%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c256c-121">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.IList%601.Item%2A> property.</span></span> <span data-ttu-id="c256c-122">Visual Basic implementuje <xref:System.Collections.Generic.IList%601.Item%2A> jako właściwość domyślną, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="c256c-122">Visual Basic implements <xref:System.Collections.Generic.IList%601.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c256c-123"><paramref name="index" />nie jest prawidłowym indeksem w <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="c256c-123"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c256c-124">Właściwość jest ustawiona i jest tylko <see cref="T:System.Collections.Generic.IList`1" /> do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c256c-124">The property is set and the <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c256c-125">Liczony od zera indeks elementu, który ma zostać usunięty.</span><span class="sxs-lookup"><span data-stu-id="c256c-125">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="c256c-126"><see cref="T:System.Collections.Generic.IList`1" /> Usuwa element o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="c256c-126">Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c256c-127">W kolekcjach elementów sąsiadujących, takich jak listy, elementy znajdujące się po usuniętym elemencie są przenoszone do opuszczone.</span><span class="sxs-lookup"><span data-stu-id="c256c-127">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c256c-128">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="c256c-128">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c256c-129">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="c256c-129">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c256c-130"><paramref name="index" />nie jest prawidłowym indeksem w <see cref="T:System.Collections.Generic.IList`1" />.</span><span class="sxs-lookup"><span data-stu-id="c256c-130"><paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c256c-131">Jest <see cref="T:System.Collections.Generic.IList`1" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="c256c-131">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>
