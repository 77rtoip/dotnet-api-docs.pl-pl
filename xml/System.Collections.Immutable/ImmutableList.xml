<Type Name="ImmutableList" FullName="System.Collections.Immutable.ImmutableList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8cc2ad85f9fcb3639c41b6a2c9047c25dbd201f4" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53447217" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableList" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableList abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f2d08-101">Udostępnia zestaw metod inicjowania dla wystąpienia elementu <see cref="T:System.Collections.Immutable.ImmutableList`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableList`1" /> class.</span></span>  
  
 <span data-ttu-id="f2d08-102">**Pakiet NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">o kolekcjach niezmienialnych oraz instrukcje dotyczące instalowania</see>)</span><span class="sxs-lookup"><span data-stu-id="f2d08-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="f2d08-103">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="f2d08-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-104">Typ elementów, które mają być przechowywane w.</span><span class="sxs-lookup"><span data-stu-id="f2d08-104">The type of items to be stored in the .</span></span></typeparam>
        <summary><span data-ttu-id="f2d08-105">Tworzy pustą listę niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-105">Creates an empty immutable list.</span></span></summary>
        <returns><span data-ttu-id="f2d08-106">Pusta lista niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-106">An empty immutable list.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-107">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-107">The type of items in the .</span></span></typeparam>
        <param name="item"><span data-ttu-id="f2d08-108">Element, aby wstępnie wypełnić listę.</span><span class="sxs-lookup"><span data-stu-id="f2d08-108">The item to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="f2d08-109">Tworzy nową listę niezmienne, który zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="f2d08-109">Creates a new immutable list that contains the specified item.</span></span></summary>
        <returns><span data-ttu-id="f2d08-110">New, który zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="f2d08-110">A new  that contains the specified item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-111">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-111">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="f2d08-112">Tablica, która zawiera elementy, aby wstępnie wypełnić listę.</span><span class="sxs-lookup"><span data-stu-id="f2d08-112">An array that contains the items to prepopulate the list with.</span></span></param>
        <summary><span data-ttu-id="f2d08-113">Tworzy nową listę niezmienne, zawierający określoną tablicę elementów.</span><span class="sxs-lookup"><span data-stu-id="f2d08-113">Creates a new immutable list that contains the specified array of items.</span></span></summary>
        <returns><span data-ttu-id="f2d08-114">Nowa lista niezmienne zawiera określone elementy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-114">A new immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableList(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableList.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-115">Elementy przechowywane w kolekcji tego typu.</span><span class="sxs-lookup"><span data-stu-id="f2d08-115">The type of items stored by the collection.</span></span></typeparam>
        <summary><span data-ttu-id="f2d08-116">Tworzy nowego Konstruktora niezmienne listy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-116">Creates a new immutable list builder.</span></span></summary>
        <returns><span data-ttu-id="f2d08-117">Konstruktor kolekcji niezmienialnych.</span><span class="sxs-lookup"><span data-stu-id="f2d08-117">The immutable collection builder.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableList&lt;T&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-118">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-118">The type of items in the .</span></span></typeparam>
        <param name="items"><span data-ttu-id="f2d08-119">Elementy do dodania do listy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-119">The items to add to the list.</span></span></param>
        <summary><span data-ttu-id="f2d08-120">Tworzy nową listę niezmienne, która zawiera określone elementy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-120">Creates a new immutable list that contains the specified items.</span></span></summary>
        <returns><span data-ttu-id="f2d08-121">Lista niezmienne, która zawiera określone elementy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-121">An immutable list that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-122">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-122">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-123">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-123">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="f2d08-124">Obiekt do zlokalizowania na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-124">The object to locate in the list.</span></span> <span data-ttu-id="f2d08-125">Wartość może mieć wartości null dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f2d08-125">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="f2d08-126">Wyszukuje określonego obiektu i zwraca liczony od zera indeks pierwszego wystąpienia w obrębie listy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-126">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="f2d08-127">Liczony od zera indeks pierwszego wystąpienia elementu w zakresie elementów na liście, który rozciąga się od indeksu do ostatniego elementu, jeśli znaleziono; w przeciwnym razie, wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f2d08-127">The zero-based index of the first occurrence of item within the range of elements in the list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-128">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-128">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-129">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-129">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="f2d08-130">Obiekt do zlokalizowania liście niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-130">The object to locate in the Immutable list.</span></span> <span data-ttu-id="f2d08-131">Wartość może mieć wartości null dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f2d08-131">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="f2d08-132">Moduł porównujący równość służące do wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-132">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="f2d08-133">Wyszukuje określonego obiektu i zwraca liczony od zera indeks pierwszego wystąpienia w obrębie listy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-133">Searches for the specified object and returns the zero-based index of the first occurrence within the list.</span></span></summary>
        <returns><span data-ttu-id="f2d08-134">Liczony od zera indeks pierwszego wystąpienia elementu w zakresie elementów na liście niezmienne, który rozciąga się od indeksu do ostatniego elementu, jeśli znaleziono; w przeciwnym razie, wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f2d08-134">The zero-based index of the first occurrence of item within the range of elements in the immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-135">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-135">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-136">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-136">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="f2d08-137">Obiekt do zlokalizowania liście niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-137">The object to locate in the Immutable list.</span></span> <span data-ttu-id="f2d08-138">Wartość może mieć wartości null dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f2d08-138">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="f2d08-139">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-139">The zero-based starting index of the search.</span></span> <span data-ttu-id="f2d08-140">0 (zero) jest prawidłowa w pustej listy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-140">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="f2d08-141">Wyszukuje określonego obiektu i zwraca liczony od zera indeks pierwszego wystąpienia w zakresie elementów na liście niezmienne, który rozciąga się od określonego indeksu do ostatniego elementu.</span><span class="sxs-lookup"><span data-stu-id="f2d08-141">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="f2d08-142">Liczony od zera indeks pierwszego wystąpienia elementu w zakresie elementów na liście niezmienne, który rozciąga się od indeksu do ostatniego elementu, jeśli znaleziono; w przeciwnym razie, wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f2d08-142">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.IndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-143">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-143">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-144">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-144">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="f2d08-145">Obiekt do zlokalizowania liście niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-145">The object to locate in the Immutable list.</span></span> <span data-ttu-id="f2d08-146">Wartość może mieć wartości null dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f2d08-146">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="f2d08-147">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-147">The zero-based starting index of the search.</span></span> <span data-ttu-id="f2d08-148">0 (zero) jest prawidłowa w pustej listy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-148">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="f2d08-149">Liczba elementów w sekcji do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-149">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="f2d08-150">Wyszukuje określonego obiektu i zwraca liczony od zera indeks pierwszego wystąpienia w zakresie elementów na liście niezmienne, który rozciąga się od określonego indeksu do ostatniego elementu.</span><span class="sxs-lookup"><span data-stu-id="f2d08-150">Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the immutable list that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="f2d08-151">Liczony od zera indeks pierwszego wystąpienia elementu w zakresie elementów na liście niezmienne, który rozciąga się od indeksu do ostatniego elementu, jeśli znaleziono; w przeciwnym razie, wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f2d08-151">The zero-based index of the first occurrence of item within the range of elements in the Immutable list that extends from index to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-152">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-152">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-153">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-153">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="f2d08-154">Obiekt do zlokalizowania liście niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-154">The object to locate in the Immutable list.</span></span> <span data-ttu-id="f2d08-155">Wartość może mieć wartości null dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f2d08-155">The value can be null for reference types.</span></span></param>
        <summary><span data-ttu-id="f2d08-156">Wyszukuje określonego obiektu i zwraca liczony od zera indeks ostatniego wystąpienia w obrębie całej listy niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-156">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="f2d08-157">Liczony od zera indeks ostatniego wystąpienia elementu w obrębie całego klasa Immutable listy, jeśli znaleziono; w przeciwnym razie, wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f2d08-157">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, System.Collections.Generic.IEqualityComparer&lt;T&gt; equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, class System.Collections.Generic.IEqualityComparer`1&lt;!!T&gt; equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, System::Collections::Generic::IEqualityComparer&lt;T&gt; ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * System.Collections.Generic.IEqualityComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, equalityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="equalityComparer" Type="System.Collections.Generic.IEqualityComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-158">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-158">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-159">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-159">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="f2d08-160">Obiekt do zlokalizowania liście niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-160">The object to locate in the Immutable list.</span></span> <span data-ttu-id="f2d08-161">Wartość może mieć wartości null dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f2d08-161">The value can be null for reference types.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="f2d08-162">Moduł porównujący równość służące do wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-162">The equality comparer to use in the search.</span></span></param>
        <summary><span data-ttu-id="f2d08-163">Wyszukuje określonego obiektu i zwraca liczony od zera indeks ostatniego wystąpienia w obrębie całej listy niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-163">Searches for the specified object and returns the zero-based index of the last occurrence within the entire immutable list.</span></span></summary>
        <returns><span data-ttu-id="f2d08-164">Liczony od zera indeks ostatniego wystąpienia elementu w obrębie całego klasa Immutable listy, jeśli znaleziono; w przeciwnym razie, wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f2d08-164">The zero-based index of the last occurrence of item within the entire the Immutable list, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-165">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-165">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-166">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-166">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="f2d08-167">Obiekt do zlokalizowania liście niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-167">The object to locate in the Immutable list.</span></span> <span data-ttu-id="f2d08-168">Wartość może mieć wartości null dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f2d08-168">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="f2d08-169">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span><span class="sxs-lookup"><span data-stu-id="f2d08-169">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="f2d08-170">Wyszukuje określonego obiektu i zwraca liczony od zera indeks ostatniego wystąpienia w zakresie elementów na liście niezmienne, który rozciąga się od pierwszego elementu przez określony indeks.</span><span class="sxs-lookup"><span data-stu-id="f2d08-170">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="f2d08-171">Liczony od zera indeks ostatniego wystąpienia elementu w zakresie elementów na liście niezmienne, który rozciąga się od pierwszego elementu do indeksu, jeśli znaleziono; w przeciwnym razie, wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f2d08-171">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T item, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T item, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastIndexOf(Of T) (list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int LastIndexOf(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T item, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * int * int -&gt; int" Usage="System.Collections.Immutable.ImmutableList.LastIndexOf (list, item, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="item" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-172">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-172">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-173">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-173">The list to search.</span></span></param>
        <param name="item"><span data-ttu-id="f2d08-174">Obiekt do zlokalizowania liście niezmienne.</span><span class="sxs-lookup"><span data-stu-id="f2d08-174">The object to locate in the Immutable list.</span></span> <span data-ttu-id="f2d08-175">Wartość może mieć wartości null dla typów odwołań.</span><span class="sxs-lookup"><span data-stu-id="f2d08-175">The value can be null for reference types.</span></span></param>
        <param name="startIndex"><span data-ttu-id="f2d08-176">Wartość początkowa indeksu zaczynającego się od zera dla wyszukiwania wstecznego.</span><span class="sxs-lookup"><span data-stu-id="f2d08-176">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="f2d08-177">Liczba elementów w sekcji do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-177">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="f2d08-178">Wyszukuje określonego obiektu i zwraca liczony od zera indeks ostatniego wystąpienia w zakresie elementów na liście niezmienne, który rozciąga się od pierwszego elementu przez określony indeks.</span><span class="sxs-lookup"><span data-stu-id="f2d08-178">Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the immutable list that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="f2d08-179">Liczony od zera indeks ostatniego wystąpienia elementu w zakresie elementów na liście niezmienne, który rozciąga się od pierwszego elementu do indeksu, jeśli znaleziono; w przeciwnym razie, wartość -1.</span><span class="sxs-lookup"><span data-stu-id="f2d08-179">The zero-based index of the last occurrence of item within the range of elements in the Immutable list that extends from the first element to index, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Remove&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Remove&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Remove(Of T) (list As IImmutableList(Of T), value As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Remove(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T value);" />
      <MemberSignature Language="F#" Value="static member Remove : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Remove (list, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-180">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-180">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-181">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-181">The list to search.</span></span></param>
        <param name="value"><span data-ttu-id="f2d08-182">Wartość do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="f2d08-182">The value to remove.</span></span></param>
        <summary><span data-ttu-id="f2d08-183">Usuwa określoną wartość z tej listy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-183">Removes the specified value from this list.</span></span></summary>
        <returns><span data-ttu-id="f2d08-184">Nowa lista niezmienne z elementem, który został usunięty lub tej listy, jeśli element nie znajduje się na tej liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-184">A new immutable list with the element removed, or this list if the element is not in this list.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; RemoveRange&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; RemoveRange&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveRange(Of T) (list As IImmutableList(Of T), items As IEnumerable(Of T)) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ RemoveRange(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member RemoveRange : System.Collections.Immutable.IImmutableList&lt;'T&gt; * seq&lt;'T&gt; -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.RemoveRange (list, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-185">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-185">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-186">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-186">The list to search.</span></span></param>
        <param name="items"><span data-ttu-id="f2d08-187">Elementów, które chcesz usunąć, jeśli znaleziono dopasowań na tej liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-187">The items to remove if matches are found in this list.</span></span></param>
        <summary><span data-ttu-id="f2d08-188">Usuwa określone wartości z tej listy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-188">Removes the specified values from this list.</span></span></summary>
        <returns><span data-ttu-id="f2d08-189">Nowa lista niezmienne z usunięte elementy.</span><span class="sxs-lookup"><span data-stu-id="f2d08-189">A new immutable list with the elements removed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.IImmutableList&lt;T&gt; Replace&lt;T&gt; (this System.Collections.Immutable.IImmutableList&lt;T&gt; list, T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; Replace&lt;T&gt;(class System.Collections.Immutable.IImmutableList`1&lt;!!T&gt; list, !!T oldValue, !!T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace(Of T) (list As IImmutableList(Of T), oldValue As T, newValue As T) As IImmutableList(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::IImmutableList&lt;T&gt; ^ Replace(System::Collections::Immutable::IImmutableList&lt;T&gt; ^ list, T oldValue, T newValue);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Collections.Immutable.IImmutableList&lt;'T&gt; * 'T * 'T -&gt; System.Collections.Immutable.IImmutableList&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableList.Replace (list, oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.IImmutableList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Immutable.IImmutableList&lt;T&gt;" RefType="this" />
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="f2d08-190">Typ elementów na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-190">The type of items in the list.</span></span></typeparam>
        <param name="list"><span data-ttu-id="f2d08-191">Lista wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="f2d08-191">The list to search.</span></span></param>
        <param name="oldValue"><span data-ttu-id="f2d08-192">Element, aby zastąpić.</span><span class="sxs-lookup"><span data-stu-id="f2d08-192">The element to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="f2d08-193">Element, aby zastąpić stary element z.</span><span class="sxs-lookup"><span data-stu-id="f2d08-193">The element to replace the old element with.</span></span></param>
        <summary><span data-ttu-id="f2d08-194">Zamienia określony element równy pierwszy element na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-194">Replaces the first equal element in the list with the specified element.</span></span></summary>
        <returns><span data-ttu-id="f2d08-195">Nowa lista — nawet wtedy, gdy jest zastępowany przez wartość jest równa nową wartość dla tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="f2d08-195">The new list -- even if the value being replaced is equal to the new value for that position.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f2d08-196">Element zgłaszany, gdy stara wartość nie istnieje na liście.</span><span class="sxs-lookup"><span data-stu-id="f2d08-196">Thrown when the old value does not exist in the list.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableList&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableList&lt;TSource&gt; ToImmutableList&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableList`1&lt;!!TSource&gt; ToImmutableList&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableList(Of TSource) (source As IEnumerable(Of TSource)) As ImmutableList(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableList&lt;TSource&gt; ^ ToImmutableList(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableList : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableList&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableList.ToImmutableList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableList&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="f2d08-197">Typ elementów w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="f2d08-197">The type of the elements in the sequence.</span></span></typeparam>
        <param name="source"><span data-ttu-id="f2d08-198">Sekwencja do wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="f2d08-198">The sequence to enumerate.</span></span></param>
        <summary><span data-ttu-id="f2d08-199">Wylicza sekwencji i tworzy niezmienne listę jego zawartość.</span><span class="sxs-lookup"><span data-stu-id="f2d08-199">Enumerates a sequence and produces an immutable list of its contents.</span></span></summary>
        <returns><span data-ttu-id="f2d08-200">Lista niezmienne, zawierający elementy w określonej sekwencji.</span><span class="sxs-lookup"><span data-stu-id="f2d08-200">An immutable list that contains the items in the specified sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>