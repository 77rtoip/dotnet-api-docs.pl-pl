<Type Name="ImmutableArray" FullName="System.Collections.Immutable.ImmutableArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1208bb5d705153aa266e8a932bb8edd94e4b6ac7" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65002550" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableArray" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArray extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArray" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArray abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArray = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="35851-101">Udostępnia metody do tworzenia tablicy, który jest niezmienny; czyli nie można zmienić po jego utworzeniu.</span><span class="sxs-lookup"><span data-stu-id="35851-101">Provides methods for creating an array that is immutable; meaning it cannot be changed once it is created.</span></span>  
  
 <span data-ttu-id="35851-102">**Pakiet NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">o kolekcjach niezmienialnych oraz instrukcje dotyczące instalowania</see>)</span><span class="sxs-lookup"><span data-stu-id="35851-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="35851-103">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="35851-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-104">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-104">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="35851-105">Posortowaną tablicę do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="35851-105">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="35851-106">Obiekt, który trzeba wyszukać.</span><span class="sxs-lookup"><span data-stu-id="35851-106">The object to search for.</span></span></param>
        <summary><span data-ttu-id="35851-107">Wyszukuje posortowaną tablicę niezmienne dla określonego elementu przy użyciu domyślny moduł porównujący i zwraca liczony od zera indeks elementu, jeśli zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="35851-107">Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="35851-108">Liczony od zera indeks elementu w tablicy, jeśli element zostanie znaleziony; w przeciwnym razie to liczba ujemna, czyli uzupełnienie bitowe indeks elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnego elementu większych uzupełnienie bitowe <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="35851-108">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="35851-109"><paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotka element, który nie implementuje <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="35851-109"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-110">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-110">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="35851-111">Posortowaną tablicę do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="35851-111">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="35851-112">Obiekt, który trzeba wyszukać.</span><span class="sxs-lookup"><span data-stu-id="35851-112">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="35851-113">Implementacja porównania do użycia podczas porównywania elementów lub użycie domyślny moduł porównujący wartości null.</span><span class="sxs-lookup"><span data-stu-id="35851-113">The comparer implementation to use when comparing elements, or null to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="35851-114">Wyszukuje posortowaną tablicę niezmienne, dla określonego elementu i zwraca liczony od zera indeks elementu, jeśli zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="35851-114">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="35851-115">Liczony od zera indeks elementu w tablicy, jeśli element zostanie znaleziony; w przeciwnym razie to liczba ujemna, czyli uzupełnienie bitowe indeks elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnego elementu większych uzupełnienie bitowe <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="35851-115">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="35851-116"><paramref name="comparer" /> ma wartość null i <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotka element, który nie implementuje <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="35851-116"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-117">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-117">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="35851-118">Posortowaną tablicę do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="35851-118">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="35851-119">Indeks początkowy zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="35851-119">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="35851-120">Długość zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="35851-120">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="35851-121">Obiekt, który trzeba wyszukać.</span><span class="sxs-lookup"><span data-stu-id="35851-121">The object to search for.</span></span></param>
        <summary><span data-ttu-id="35851-122">Wyszukuje posortowaną tablicę niezmienne, dla określonego elementu i zwraca liczony od zera indeks elementu, jeśli zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="35851-122">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="35851-123">Liczony od zera indeks elementu w tablicy, jeśli element zostanie znaleziony; w przeciwnym razie to liczba ujemna, czyli uzupełnienie bitowe indeks elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnego elementu większych uzupełnienie bitowe <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="35851-123">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="35851-124"><paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotka element, który nie implementuje <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="35851-124"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="35851-125"><paramref name="index" /> i <paramref name="length" /> nie określono prawidłowego zakresu <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="35851-125"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="35851-126"><paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="35851-126"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>
        
<span data-ttu-id="35851-127">—lub—</span><span class="sxs-lookup"><span data-stu-id="35851-127">-or-</span></span>

<span data-ttu-id="35851-128"><paramref name="length" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="35851-128"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-129">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-129">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="35851-130">Posortowaną tablicę do wyszukania.</span><span class="sxs-lookup"><span data-stu-id="35851-130">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="35851-131">Indeks początkowy zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="35851-131">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="35851-132">Długość zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="35851-132">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="35851-133">Obiekt, który trzeba wyszukać.</span><span class="sxs-lookup"><span data-stu-id="35851-133">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="35851-134">Modułu porównującego do użycia podczas porównywania elementów dla równości lub <see langword="null" /> używać domyślna funkcja porównująca.</span><span class="sxs-lookup"><span data-stu-id="35851-134">The comparer to use when comparing elements for equality or <see langword="null" /> to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="35851-135">Wyszukuje posortowaną tablicę niezmienne, dla określonego elementu i zwraca liczony od zera indeks elementu.</span><span class="sxs-lookup"><span data-stu-id="35851-135">Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="35851-136">Liczony od zera indeks elementu w tablicy, jeśli element zostanie znaleziony; w przeciwnym razie to liczba ujemna, czyli uzupełnienie bitowe indeks elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnego elementu większych uzupełnienie bitowe <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="35851-136">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="35851-137"><paramref name="comparer" /> ma wartość null i <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotka element, który nie implementuje <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="35851-137"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="35851-138"><paramref name="index" /> i <paramref name="length" /> nie określono prawidłowego zakresu <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="35851-138"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>
        
<span data-ttu-id="35851-139">—lub—</span><span class="sxs-lookup"><span data-stu-id="35851-139">-or-</span></span>

<span data-ttu-id="35851-140"><paramref name="comparer" /> jest <see langword="null" />, i <paramref name="value" /> typu, który nie jest zgodny z elementami <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="35851-140"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="35851-141"><paramref name="index" /> jest mniejsza niż dolna granica <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="35851-141"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>

<span data-ttu-id="35851-142">—lub—</span><span class="sxs-lookup"><span data-stu-id="35851-142">-or-</span></span>

<span data-ttu-id="35851-143"><paramref name="length" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="35851-143"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-144">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-144">The type of elements stored in the array.</span></span></typeparam>
        <summary><span data-ttu-id="35851-145">Tworzy pustą tablicę niezmienne.</span><span class="sxs-lookup"><span data-stu-id="35851-145">Creates an empty immutable array.</span></span></summary>
        <returns><span data-ttu-id="35851-146">Pusta tablica niezmienne.</span><span class="sxs-lookup"><span data-stu-id="35851-146">An empty immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-147">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-147">The type of elements stored in the array.</span></span></typeparam>
        <param name="item"><span data-ttu-id="35851-148">Obiekt, który ma być przechowywany w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-148">The object to store in the array.</span></span></param>
        <summary><span data-ttu-id="35851-149">Tworzy tablicę niezmienne, który zawiera dany obiekt.</span><span class="sxs-lookup"><span data-stu-id="35851-149">Creates an immutable array that contains the specified object.</span></span></summary>
        <returns><span data-ttu-id="35851-150">Tablica niezmienne, zawierający określony obiekt.</span><span class="sxs-lookup"><span data-stu-id="35851-150">An immutable array that contains the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-151">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-151">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="35851-152">Tablica obiektów do wypełnienia tablicy za pomocą.</span><span class="sxs-lookup"><span data-stu-id="35851-152">The array of objects to populate the array with.</span></span></param>
        <summary><span data-ttu-id="35851-153">Tworzy tablicę niezmienne z określonej tablicy obiektów.</span><span class="sxs-lookup"><span data-stu-id="35851-153">Creates an immutable array from the specified array of objects.</span></span></summary>
        <returns><span data-ttu-id="35851-154">Tablica niezmienne, która zawiera tablicę elementów.</span><span class="sxs-lookup"><span data-stu-id="35851-154">An immutable array that contains the array of items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-155">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-155">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="35851-156">Pierwszy obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-156">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="35851-157">Drugi obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-157">The second object to store in the array.</span></span></param>
        <summary><span data-ttu-id="35851-158">Tworzy tablicę niezmienne, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="35851-158">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="35851-159">Tablica niezmienne, zawierający określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="35851-159">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-160">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-160">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="35851-161">Tablica źródłowa obiektów.</span><span class="sxs-lookup"><span data-stu-id="35851-161">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="35851-162">Indeks pierwszego elementu do skopiowania <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="35851-162">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="35851-163">Liczba elementów od <paramref name="items" /> do uwzględnienia w tej tablicy niezmienne.</span><span class="sxs-lookup"><span data-stu-id="35851-163">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="35851-164">Tworzy tablicę niezmienne przy użyciu określonych obiektów z innej tablicy niezmienne.</span><span class="sxs-lookup"><span data-stu-id="35851-164">Creates an immutable array with the specified objects from another immutable array.</span></span></summary>
        <returns><span data-ttu-id="35851-165">Tablica niezmienne, zawierający określone obiekty z tablica źródłowa.</span><span class="sxs-lookup"><span data-stu-id="35851-165">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-166">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-166">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="35851-167">Pierwszy obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-167">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="35851-168">Drugi obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-168">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="35851-169">Trzeci obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-169">The third object to store in the array.</span></span></param>
        <summary><span data-ttu-id="35851-170">Tworzy tablicę niezmienne, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="35851-170">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="35851-171">Tablica niezmienne, zawierający określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="35851-171">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T[] items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(cli::array &lt;T&gt; ^ items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-172">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-172">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="35851-173">Tablica źródłowa obiektów.</span><span class="sxs-lookup"><span data-stu-id="35851-173">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="35851-174">Indeks pierwszego elementu do skopiowania <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="35851-174">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="35851-175">Liczba elementów od <paramref name="items" /> do uwzględnienia w tej tablicy niezmienne.</span><span class="sxs-lookup"><span data-stu-id="35851-175">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="35851-176">Tworzy tablicę niezmienne przy użyciu określonych obiektów z innej tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-176">Creates an immutable array with specified objects from another array.</span></span></summary>
        <returns><span data-ttu-id="35851-177">Tablica niezmienne, zawierający określone obiekty z tablica źródłowa.</span><span class="sxs-lookup"><span data-stu-id="35851-177">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3, !!T item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3, item4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
        <Parameter Name="item4" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-178">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-178">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="35851-179">Pierwszy obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-179">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="35851-180">Drugi obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-180">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="35851-181">Trzeci obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-181">The third object to store in the array.</span></span></param>
        <param name="item4"><span data-ttu-id="35851-182">Czwarty obiekt do przechowywania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-182">The fourth object to store in the array.</span></span></param>
        <summary><span data-ttu-id="35851-183">Tworzy tablicę niezmienne, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="35851-183">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="35851-184">Tablica niezmienne, zawierający określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="35851-184">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-185">Typ elementów przechowywanych w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="35851-185">The type of elements stored in the builder.</span></span></typeparam>
        <summary><span data-ttu-id="35851-186">Tworzy modyfikowalną tablicę, która może zostać przekonwertowany na <see cref="T:System.Collections.Immutable.ImmutableArray" /> bez przydziału nowych pamięci.</span><span class="sxs-lookup"><span data-stu-id="35851-186">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="35851-187">Modyfikowalne tablicę określonego typu, który może zostać przekonwertowany efektywnie do tablicy niezmienne.</span><span class="sxs-lookup"><span data-stu-id="35851-187">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (initialCapacity As Integer) As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder(int initialCapacity);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder initialCapacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-188">Typ elementów przechowywanych w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="35851-188">The type of elements stored in the builder.</span></span></typeparam>
        <param name="initialCapacity"><span data-ttu-id="35851-189">Pojemność w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="35851-189">The initial capacity of the builder.</span></span></param>
        <summary><span data-ttu-id="35851-190">Tworzy modyfikowalną tablicę, która może zostać przekonwertowany na <see cref="T:System.Collections.Immutable.ImmutableArray" /> bez przydziału nowych pamięci.</span><span class="sxs-lookup"><span data-stu-id="35851-190">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="35851-191">Modyfikowalne tablicę określonego typu, który może zostać przekonwertowany efektywnie do tablicy niezmienne.</span><span class="sxs-lookup"><span data-stu-id="35851-191">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="35851-192">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-192">The type of element stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="35851-193">Elementy do dodania do tablicy.</span><span class="sxs-lookup"><span data-stu-id="35851-193">The elements to add to the array.</span></span></param>
        <summary><span data-ttu-id="35851-194">Tworzy nową <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> wypełniane przy użyciu określonych elementów.</span><span class="sxs-lookup"><span data-stu-id="35851-194">Creates a new <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> populated with the specified items.</span></span></summary>
        <returns><span data-ttu-id="35851-195">Niezmienne tablica, która zawiera określone elementy.</span><span class="sxs-lookup"><span data-stu-id="35851-195">An immutable array that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="35851-196">Tablica źródłowa zainicjować tablicą wynikową przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="35851-196">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="35851-197">Funkcja do stosowania do każdego elementu w tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="35851-197">The function to apply to each element from the source array.</span></span></param>
        <summary><span data-ttu-id="35851-198">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="35851-198">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35851-199">To przeciążenie umożliwia wydajne tworzenie <xref:System.Collections.Immutable.ImmutableArray%601> oparty na istniejącym <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcji mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="35851-199">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="35851-200">Tablica źródłowa zainicjować tablicą wynikową przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="35851-200">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="35851-201">Indeks pierwszego elementu w tablicy źródłowej, które mają zostać objęte tablicą wynikową.</span><span class="sxs-lookup"><span data-stu-id="35851-201">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="35851-202">Liczba elementów w tablicy źródłowej, które mają zostać objęte tablicą wynikową.</span><span class="sxs-lookup"><span data-stu-id="35851-202">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="35851-203">Funkcja do stosowania do każdego elementu z tablicy źródłowej objęte tablicą wynikową.</span><span class="sxs-lookup"><span data-stu-id="35851-203">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <summary><span data-ttu-id="35851-204">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="35851-204">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35851-205">To przeciążenie umożliwia wydajne tworzenie <xref:System.Collections.Immutable.ImmutableArray%601> oparte na wycinek istniejącego <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcji mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej objęte tablicą wynikową.</span><span class="sxs-lookup"><span data-stu-id="35851-205">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="35851-206">Tablica źródłowa zainicjować tablicą wynikową przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="35851-206">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="35851-207">Funkcja do stosowania do każdego elementu w tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="35851-207">The function to apply to each element from the source array.</span></span></param>
        <param name="arg"><span data-ttu-id="35851-208">Argument do przekazania do funkcji mapowania selektora.</span><span class="sxs-lookup"><span data-stu-id="35851-208">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="35851-209">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="35851-209">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35851-210">To przeciążenie umożliwia wydajne tworzenie <xref:System.Collections.Immutable.ImmutableArray%601> oparty na istniejącym <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcji mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="35851-210">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="35851-211">Tablica źródłowa zainicjować tablicą wynikową przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="35851-211">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="35851-212">Indeks pierwszego elementu w tablicy źródłowej, które mają zostać objęte tablicą wynikową.</span><span class="sxs-lookup"><span data-stu-id="35851-212">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="35851-213">Liczba elementów w tablicy źródłowej, które mają zostać objęte tablicą wynikową.</span><span class="sxs-lookup"><span data-stu-id="35851-213">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="35851-214">Funkcja do stosowania do każdego elementu z tablicy źródłowej objęte tablicą wynikową.</span><span class="sxs-lookup"><span data-stu-id="35851-214">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <param name="arg"><span data-ttu-id="35851-215">Argument do przekazania do funkcji mapowania selektora.</span><span class="sxs-lookup"><span data-stu-id="35851-215">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="35851-216">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="35851-216">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35851-217">To przeciążenie umożliwia wydajne tworzenie <xref:System.Collections.Immutable.ImmutableArray%601> oparte na wycinek istniejącego <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcji mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej objęte tablicą wynikową.</span><span class="sxs-lookup"><span data-stu-id="35851-217">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="35851-218">Typ elementów zawartych w słowniku <paramref name="items" />.</span><span class="sxs-lookup"><span data-stu-id="35851-218">The type of elements contained in <paramref name="items" />.</span></span></typeparam>
        <param name="items"><span data-ttu-id="35851-219">Kolekcja obiektów, które można skopiować do tablicy niezmienne.</span><span class="sxs-lookup"><span data-stu-id="35851-219">The collection of objects to copy to the immutable array.</span></span></param>
        <summary><span data-ttu-id="35851-220">Tworzy tablicę niezmienne z określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="35851-220">Creates an immutable array from the specified collection.</span></span></summary>
        <returns><span data-ttu-id="35851-221">Tablica niezmienne, która zawiera określonej kolekcji obiektów.</span><span class="sxs-lookup"><span data-stu-id="35851-221">An immutable array that contains the specified collection of objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!TSource&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Immutable::ImmutableArray&lt;TSource&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : System.Collections.Immutable.ImmutableArray&lt;'Source&gt;.Builder -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;+Builder" RefType="this" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>