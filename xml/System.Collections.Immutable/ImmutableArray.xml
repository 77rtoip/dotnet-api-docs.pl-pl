<Type Name="ImmutableArray" FullName="System.Collections.Immutable.ImmutableArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7dd99f3f8cbb028de77309df9826e68f7429fd16" /><Meta Name="ms.sourcegitcommit" Value="0959d8d88abd48debd487e54e54df29d51634f7f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/02/2019" /><Meta Name="ms.locfileid" Value="68731493" /></Metadata><TypeSignature Language="C#" Value="public static class ImmutableArray" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArray extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArray" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArray abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArray = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.1.37.0</AssemblyVersion>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
    <AssemblyVersion>1.2.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d5bf-101">Zapewnia metody tworzenia tablicy, która jest niezmienna; oznacza to, że nie można go zmienić po utworzeniu.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-101">Provides methods for creating an array that is immutable; meaning it cannot be changed once it is created.</span></span>  
  
 <span data-ttu-id="2d5bf-102">**Pakiet NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System. Collections. unzmienny</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">Informacje o niemodyfikowalnych kolekcjach i sposobie instalacji</see>)</span><span class="sxs-lookup"><span data-stu-id="2d5bf-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="2d5bf-103">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-103">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-104">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-104">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="2d5bf-105">Posortowana tablica do przeszukania.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-105">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="2d5bf-106">Obiekt, który trzeba wyszukać.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-106">The object to search for.</span></span></param>
        <summary><span data-ttu-id="2d5bf-107">Przeszukuje posortowaną niemodyfikowalną tablicę dla określonego elementu przy użyciu domyślnej funkcji porównującej i zwraca indeks (liczony od zera) elementu, jeśli został znaleziony.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-107">Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-108">Indeks (liczony od zera) elementu w tablicy, jeśli element zostanie znaleziony. w przeciwnym razie liczba ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnego większego elementu, jest to wartość bitowa. <see cref="P:System.Collections.Generic.ICollection`1.Count" /></span><span class="sxs-lookup"><span data-stu-id="2d5bf-108">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d5bf-109"><paramref name="value" />nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotka element, który nie implementuje <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-109"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-110">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-110">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="2d5bf-111">Posortowana tablica do przeszukania.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-111">The sorted array to search.</span></span></param>
        <param name="value"><span data-ttu-id="2d5bf-112">Obiekt, który trzeba wyszukać.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-112">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="2d5bf-113">Implementacja programu porównującego do użycia podczas porównywania elementów lub wartości null, aby użyć domyślnej opcji porównującej.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-113">The comparer implementation to use when comparing elements, or null to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="2d5bf-114">Przeszukuje posortowaną niezmienna tablicę dla określonego elementu i zwraca indeks (liczony od zera) elementu, jeśli został znaleziony.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-114">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-115">Indeks (liczony od zera) elementu w tablicy, jeśli element zostanie znaleziony. w przeciwnym razie liczba ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnego większego elementu, jest to wartość bitowa. <see cref="P:System.Collections.Generic.ICollection`1.Count" /></span><span class="sxs-lookup"><span data-stu-id="2d5bf-115">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d5bf-116"><paramref name="comparer" />ma wartość null <paramref name="value" /> i nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotyka element, który nie jest zaimplementowany <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-116"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-117">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-117">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="2d5bf-118">Posortowana tablica do przeszukania.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-118">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="2d5bf-119">Indeks początkowy zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-119">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="2d5bf-120">Długość zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-120">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="2d5bf-121">Obiekt, który trzeba wyszukać.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-121">The object to search for.</span></span></param>
        <summary><span data-ttu-id="2d5bf-122">Przeszukuje posortowaną niezmienna tablicę dla określonego elementu i zwraca indeks (liczony od zera) elementu, jeśli został znaleziony.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-122">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it's found.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-123">Indeks (liczony od zera) elementu w tablicy, jeśli element zostanie znaleziony. w przeciwnym razie liczba ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnego większego elementu, jest to wartość bitowa. <see cref="P:System.Collections.Generic.ICollection`1.Count" /></span><span class="sxs-lookup"><span data-stu-id="2d5bf-123">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d5bf-124"><paramref name="value" />nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotka element, który nie implementuje <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-124"><paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d5bf-125"><paramref name="index" />i <paramref name="length" /> nie określaj prawidłowego zakresu w <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-125"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2d5bf-126"><paramref name="index" />jest mniejsza niż Dolna granica <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-126"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>
        
<span data-ttu-id="2d5bf-127">—lub—</span><span class="sxs-lookup"><span data-stu-id="2d5bf-127">-or-</span></span>

<span data-ttu-id="2d5bf-128"><paramref name="length" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-128"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-129">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-129">The type of element stored in the array.</span></span></typeparam>
        <param name="array"><span data-ttu-id="2d5bf-130">Posortowana tablica do przeszukania.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-130">The sorted array to search.</span></span></param>
        <param name="index"><span data-ttu-id="2d5bf-131">Indeks początkowy zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-131">The starting index of the range to search.</span></span></param>
        <param name="length"><span data-ttu-id="2d5bf-132">Długość zakresu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-132">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="2d5bf-133">Obiekt, który trzeba wyszukać.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-133">The object to search for.</span></span></param>
        <param name="comparer"><span data-ttu-id="2d5bf-134">Moduł porównujący do użycia podczas porównywania elementów dla <see langword="null" /> równości lub do użycia domyślnego programu porównującego.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-134">The comparer to use when comparing elements for equality or <see langword="null" /> to use the default comparer.</span></span></param>
        <summary><span data-ttu-id="2d5bf-135">Przeszukuje posortowaną niezmienna tablicę dla określonego elementu i zwraca indeks (liczony od zera) elementu.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-135">Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-136">Indeks (liczony od zera) elementu w tablicy, jeśli element zostanie znaleziony. w przeciwnym razie liczba ujemna, która jest odwrotnym uzupełnieniem indeksu następnego elementu, który jest większy niż <paramref name="value" /> lub, jeśli nie ma żadnego większego elementu, jest to wartość bitowa. <see cref="P:System.Collections.Generic.ICollection`1.Count" /></span><span class="sxs-lookup"><span data-stu-id="2d5bf-136">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2d5bf-137"><paramref name="comparer" />ma wartość null <paramref name="value" /> i nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotyka element, który nie jest zaimplementowany <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-137"><paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d5bf-138"><paramref name="index" />i <paramref name="length" /> nie określaj prawidłowego zakresu w <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-138"><paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span></span>
        
<span data-ttu-id="2d5bf-139">—lub—</span><span class="sxs-lookup"><span data-stu-id="2d5bf-139">-or-</span></span>

<span data-ttu-id="2d5bf-140"><paramref name="comparer" />is <see langword="null" /> <paramref name="array" />i <paramref name="value" /> jest typu, który nie jest zgodny z elementami.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-140"><paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2d5bf-141"><paramref name="index" />jest mniejsza niż Dolna granica <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-141"><paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span></span>

<span data-ttu-id="2d5bf-142">—lub—</span><span class="sxs-lookup"><span data-stu-id="2d5bf-142">-or-</span></span>

<span data-ttu-id="2d5bf-143"><paramref name="length" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-143"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-144">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-144">The type of elements stored in the array.</span></span></typeparam>
        <summary><span data-ttu-id="2d5bf-145">Tworzy pustą niemodyfikowalną tablicę.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-145">Creates an empty immutable array.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-146">Pusta niezmienna tablica.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-146">An empty immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-147">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-147">The type of elements stored in the array.</span></span></typeparam>
        <param name="item"><span data-ttu-id="2d5bf-148">Obiekt, który ma być przechowywany w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-148">The object to store in the array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-149">Tworzy niemodyfikowalną tablicę, która zawiera określony obiekt.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-149">Creates an immutable array that contains the specified object.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-150">Niezmienna tablica, która zawiera określony obiekt.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-150">An immutable array that contains the specified object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-151">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-151">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="2d5bf-152">Tablica obiektów do wypełnienia tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-152">The array of objects to populate the array with.</span></span></param>
        <summary><span data-ttu-id="2d5bf-153">Tworzy niemodyfikowalną tablicę z określonej tablicy obiektów.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-153">Creates an immutable array from the specified array of objects.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-154">Niezmienna tablica, która zawiera tablicę elementów.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-154">An immutable array that contains the array of items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-155">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-155">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="2d5bf-156">Pierwszy obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-156">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="2d5bf-157">Drugi obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-157">The second object to store in the array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-158">Tworzy niemodyfikowalną tablicę, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-158">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-159">Niezmienna tablica, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-159">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-160">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-160">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="2d5bf-161">Źródłowa tablica obiektów.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-161">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="2d5bf-162">Indeks pierwszego elementu, z <paramref name="items" />którego ma zostać skopiowane.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-162">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="2d5bf-163">Liczba elementów <paramref name="items" /> , które mają zostać uwzględnione w tej niezmiennej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-163">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-164">Tworzy niemodyfikowalną tablicę z określonymi obiektami z innej niezmiennej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-164">Creates an immutable array with the specified objects from another immutable array.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-165">Niezmienna tablica, która zawiera określone obiekty z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-165">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
<span data-ttu-id="2d5bf-166">To Przeciążenie pozwala metodom pomocnika lub klasom niestandardowego konstruktora skutecznie uniknąć płacenia nadmiarowego podatku na potrzeby kopiowania tablicy, gdy nowa tablica jest segmentem istniejącej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-166">This overload allows helper methods or custom builder classes to efficiently avoid paying a redundant tax for copying an array when the new array is a segment of an existing array.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-167">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-167">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="2d5bf-168">Pierwszy obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-168">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="2d5bf-169">Drugi obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-169">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="2d5bf-170">Trzeci obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-170">The third object to store in the array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-171">Tworzy niemodyfikowalną tablicę, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-171">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-172">Niezmienna tablica, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-172">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T[] items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(cli::array &lt;T&gt; ^ items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-173">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-173">The type of elements stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="2d5bf-174">Źródłowa tablica obiektów.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-174">The source array of objects.</span></span></param>
        <param name="start"><span data-ttu-id="2d5bf-175">Indeks pierwszego elementu, z <paramref name="items" />którego ma zostać skopiowane.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-175">The index of the first element to copy from <paramref name="items" />.</span></span></param>
        <param name="length"><span data-ttu-id="2d5bf-176">Liczba elementów <paramref name="items" /> , które mają zostać uwzględnione w tej niezmiennej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-176">The number of elements from <paramref name="items" /> to include in this immutable array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-177">Tworzy niemodyfikowalną tablicę z określonymi obiektami z innej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-177">Creates an immutable array with specified objects from another array.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-178">Niezmienna tablica, która zawiera określone obiekty z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-178">An immutable array that contains the specified objects from the source array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
<span data-ttu-id="2d5bf-179">To Przeciążenie pozwala metodom pomocnika lub klasom niestandardowego konstruktora skutecznie uniknąć płacenia nadmiarowego podatku na potrzeby kopiowania tablicy, gdy nowa tablica jest segmentem istniejącej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-179">This overload allows helper methods or custom builder classes to efficiently avoid paying a redundant tax for copying an array when the new array is a segment of an existing array.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3, !!T item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3, item4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
        <Parameter Name="item4" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-180">Typ elementów przechowywanych w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-180">The type of elements stored in the array.</span></span></typeparam>
        <param name="item1"><span data-ttu-id="2d5bf-181">Pierwszy obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-181">The first object to store in the array.</span></span></param>
        <param name="item2"><span data-ttu-id="2d5bf-182">Drugi obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-182">The second object to store in the array.</span></span></param>
        <param name="item3"><span data-ttu-id="2d5bf-183">Trzeci obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-183">The third object to store in the array.</span></span></param>
        <param name="item4"><span data-ttu-id="2d5bf-184">Czwarty obiekt do zapisania w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-184">The fourth object to store in the array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-185">Tworzy niemodyfikowalną tablicę, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-185">Creates an immutable array that contains the specified objects.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-186">Niezmienna tablica, która zawiera określone obiekty.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-186">An immutable array that contains the specified objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-187">Typ elementów przechowywanych w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-187">The type of elements stored in the builder.</span></span></typeparam>
        <summary><span data-ttu-id="2d5bf-188">Tworzy niemodyfikowalną tablicę, która może zostać <see cref="T:System.Collections.Immutable.ImmutableArray" /> przekonwertowana na bez przydziału nowej pamięci.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-188">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-189">Modyfikowalna tablica określonego typu, który może być efektywnie konwertowany do niezmiennej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-189">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (initialCapacity As Integer) As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder(int initialCapacity);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder initialCapacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-190">Typ elementów przechowywanych w konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-190">The type of elements stored in the builder.</span></span></typeparam>
        <param name="initialCapacity"><span data-ttu-id="2d5bf-191">Początkowa pojemność konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-191">The initial capacity of the builder.</span></span></param>
        <summary><span data-ttu-id="2d5bf-192">Tworzy niemodyfikowalną tablicę, która może zostać <see cref="T:System.Collections.Immutable.ImmutableArray" /> przekonwertowana na bez przydziału nowej pamięci.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-192">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-193">Modyfikowalna tablica określonego typu, który może być efektywnie konwertowany do niezmiennej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-193">A mutable array of the specified type that can be efficiently converted to an immutable array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d5bf-194">Typ elementu przechowywanego w tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-194">The type of element stored in the array.</span></span></typeparam>
        <param name="items"><span data-ttu-id="2d5bf-195">Elementy, które mają zostać dodane do tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-195">The elements to add to the array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-196">Tworzy nowe <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> wypełnione z określonymi elementami.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-196">Creates a new <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> populated with the specified items.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-197">Niezmienna tablica, która zawiera określone elementy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-197">An immutable array that contains the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="2d5bf-198">Tablica źródłowa, w której ma zostać zainicjowana Tablica wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-198">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="2d5bf-199">Funkcja do zastosowania do każdego elementu z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-199">The function to apply to each element from the source array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-200">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-200">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5bf-201">To przeciążenie umożliwia wydajne tworzenie <xref:System.Collections.Immutable.ImmutableArray%601> w oparciu o istniejące <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcja mapowania wymaga zastosowania do każdego elementu z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-201">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="2d5bf-202">Tablica źródłowa, w której ma zostać zainicjowana Tablica wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-202">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="2d5bf-203">Indeks pierwszego elementu w tablicy źródłowej, który ma zostać uwzględniony w tablicy wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-203">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="2d5bf-204">Liczba elementów z tablicy źródłowej do uwzględnienia w wyniku tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-204">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="2d5bf-205">Funkcja do zastosowania do każdego elementu z tablicy źródłowej zawartej w tablicy wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-205">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-206">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-206">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5bf-207">To przeciążenie umożliwia wydajne tworzenie <xref:System.Collections.Immutable.ImmutableArray%601> na podstawie wycinka istniejącej <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcja mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej zawartej w tablicy wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-207">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="2d5bf-208">Tablica źródłowa, w której ma zostać zainicjowana Tablica wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-208">The source array to initialize the resulting array with.</span></span></param>
        <param name="selector"><span data-ttu-id="2d5bf-209">Funkcja do zastosowania do każdego elementu z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-209">The function to apply to each element from the source array.</span></span></param>
        <param name="arg"><span data-ttu-id="2d5bf-210">Argument, który ma zostać przesłany do funkcji mapowania selektora.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-210">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="2d5bf-211">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-211">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5bf-212">To przeciążenie umożliwia wydajne tworzenie <xref:System.Collections.Immutable.ImmutableArray%601> w oparciu o istniejące <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcja mapowania wymaga zastosowania do każdego elementu z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-212">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items"><span data-ttu-id="2d5bf-213">Tablica źródłowa, w której ma zostać zainicjowana Tablica wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-213">The source array to initialize the resulting array with.</span></span></param>
        <param name="start"><span data-ttu-id="2d5bf-214">Indeks pierwszego elementu w tablicy źródłowej, który ma zostać uwzględniony w tablicy wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-214">The index of the first element in the source array to include in the resulting array.</span></span></param>
        <param name="length"><span data-ttu-id="2d5bf-215">Liczba elementów z tablicy źródłowej do uwzględnienia w wyniku tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-215">The number of elements from the source array to include in the resulting array.</span></span></param>
        <param name="selector"><span data-ttu-id="2d5bf-216">Funkcja do zastosowania do każdego elementu z tablicy źródłowej zawartej w tablicy wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-216">The function to apply to each element from the source array included in the resulting array.</span></span></param>
        <param name="arg"><span data-ttu-id="2d5bf-217">Argument, który ma zostać przesłany do funkcji mapowania selektora.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-217">An argument to be passed to the selector mapping function.</span></span></param>
        <summary><span data-ttu-id="2d5bf-218">Inicjuje nowe wystąpienie <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-218">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2d5bf-219">To przeciążenie umożliwia wydajne tworzenie <xref:System.Collections.Immutable.ImmutableArray%601> na podstawie wycinka istniejącej <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcja mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej zawartej w tablicy wyników.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-219">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.1.37.0</AssemblyVersion>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="2d5bf-220">Typ elementów zawartych w <paramref name="items" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-220">The type of elements contained in <paramref name="items" />.</span></span></typeparam>
        <param name="items"><span data-ttu-id="2d5bf-221">Kolekcja obiektów do skopiowania do niezmiennej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-221">The collection of objects to copy to the immutable array.</span></span></param>
        <summary><span data-ttu-id="2d5bf-222">Tworzy niemodyfikowalną tablicę z określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-222">Creates an immutable array from the specified collection.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-223">Niezmienna tablica zawierająca określoną kolekcję obiektów.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-223">An immutable array that contains the specified collection of objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!TSource&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Immutable::ImmutableArray&lt;TSource&gt;::Builder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : System.Collections.Immutable.ImmutableArray&lt;'Source&gt;.Builder -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;+Builder" RefType="this" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="2d5bf-224">Typ elementów zawartych w niezmiennej tablicy.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-224">The type of elements contained in the immutable array.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="2d5bf-225">Konstruktor, z którego ma zostać utworzona niezmienna tablica.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-225">The builder to create the immutable array from.</span></span></param>
        <summary><span data-ttu-id="2d5bf-226">Tworzy niemodyfikowalną tablicę z bieżącej zawartości tablicy konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-226">Creates an immutable array from the current contents of the builder's array.</span></span></summary>
        <returns><span data-ttu-id="2d5bf-227">Niezmienna tablica, która zawiera bieżącą zawartość tablicy konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2d5bf-227">An immutable array that contains the current contents of the builder's array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
