<Type Name="ImmutableArray" FullName="System.Collections.Immutable.ImmutableArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="846d04a237b8588f0155f2f80b8e286c23a45952" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36644909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableArray" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArray extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableArray" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArray" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArray abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableArray = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ac929-101">Udostępnia metody do tworzenia tablicy jest niezmienialny; czyli nie można zmienić po jego utworzeniu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac929-101">Provides methods for creating an array that is immutable; meaning it cannot be changed once it is created.</span>
      </span>
      <span data-ttu-id="ac929-102">** Pakiet NuGet **: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">o kolekcjach niezmienialnych oraz instrukcje dotyczące instalowania</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac929-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="ac929-103">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ac929-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-104">Typ elementu przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-104">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="ac929-105">Tablica posortowane do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-105">The sorted array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ac929-106">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-106">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-107">Wyszukuje posortowane tablicy niezmienne dla określonego elementu przy użyciu domyślna funkcja porównująca i zwraca liczony od zera indeks elementu, jeśli został znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-107">Searches the sorted immutable array for a specified element using the default comparer and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-108">Liczony od zera indeks elementu w tablicy, gdy element zostanie odnaleziony; w przeciwnym razie wartość ujemna oznacza to numer dopełnienia bitowego indeksu elementu, który jest większy niż <paramref name="value" /> lub, jeśli jest nie większy element dopełnienia bitowego z <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-108">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ac929-109">
            <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotkał element, który nie implementuje <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-109">
              <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-110">Typ elementu przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-110">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="ac929-111">Tablica posortowane do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-111">The sorted array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ac929-112">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-112">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="ac929-113">Moduł porównujący implementacja do używania przy porównywaniu elementy lub wartość null, aby użyć domyślna funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-113">The comparer implementation to use when comparing elements, or null to use the default comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-114">Wyszukuje posortowana tablica niezmienne dla określonego elementu i zwraca liczony od zera indeks elementu, jeśli został znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-114">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-115">Liczony od zera indeks elementu w tablicy, gdy element zostanie odnaleziony; w przeciwnym razie wartość ujemna oznacza to numer dopełnienia bitowego indeksu elementu, który jest większy niż <paramref name="value" /> lub, jeśli jest nie większy element dopełnienia bitowego z <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-115">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ac929-116">
            <paramref name="comparer" /> ma wartość null i <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotkał element, który nie implementuje <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-116">
              <paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-117">Typ elementu przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-117">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="ac929-118">Tablica posortowane do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-118">The sorted array to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ac929-119">Indeks początkowy zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-119">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="ac929-120">Długość zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-120">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ac929-121">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-121">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-122">Wyszukuje posortowana tablica niezmienne dla określonego elementu i zwraca liczony od zera indeks elementu, jeśli został znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-122">Searches a sorted immutable array for a specified element and returns the zero-based index of the element, if it’s found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-123">Liczony od zera indeks elementu w tablicy, gdy element zostanie odnaleziony; w przeciwnym razie wartość ujemna oznacza to numer dopełnienia bitowego indeksu elementu, który jest większy niż <paramref name="value" /> lub, jeśli jest nie większy element dopełnienia bitowego z <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-123">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ac929-124">
            <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotkał element, który nie implementuje <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-124">
              <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BinarySearch(Of T) (array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int BinarySearch(System::Collections::Immutable::ImmutableArray&lt;T&gt; array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Collections.Immutable.ImmutableArray.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-125">Typ elementu przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-125">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="ac929-126">Tablica posortowane do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-126">The sorted array to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="ac929-127">Indeks początkowy zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-127">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="ac929-128">Długość zakresu wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-128">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ac929-129">Obiekt, który trzeba wyszukać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-129">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="ac929-130">Moduł porównujący do używania przy porównywaniu elementy równości lub <see langword="null" /> do użycia domyślna funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-130">The comparer to use when comparing elements for equality or <see langword="null" /> to use the default comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-131">Wyszukuje posortowana tablica niezmienne dla określonego elementu i zwraca liczony od zera indeks elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-131">Searches a sorted immutable array for a specified element and returns the zero-based index of the element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-132">Liczony od zera indeks elementu w tablicy, gdy element zostanie odnaleziony; w przeciwnym razie wartość ujemna oznacza to numer dopełnienia bitowego indeksu elementu, który jest większy niż <paramref name="value" /> lub, jeśli jest nie większy element dopełnienia bitowego z <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-132">The zero-based index of the item in the array, if item is found; otherwise, a negative number that is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.Generic.ICollection`1.Count" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ac929-133">
            <paramref name="comparer" /> ma wartość null i <paramref name="value" /> nie implementuje <see cref="T:System.IComparable" /> lub wyszukiwanie napotkał element, który nie implementuje <see cref="T:System.IComparable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-133">
              <paramref name="comparer" /> is null and <paramref name="value" /> does not implement <see cref="T:System.IComparable" /> or the search encounters an element that does not implement <see cref="T:System.IComparable" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) () As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-134">Typ elementy przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-134">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="ac929-135">Tworzy pustą tablicę niezmienialny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-135">Creates an empty immutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-136">Pusta tablica niezmienialny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-136">An empty immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item);" />
      <MemberSignature Language="F#" Value="static member Create : 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-137">Typ elementy przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-137">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item">
          <span data-ttu-id="ac929-138">Obiekt do przechowywania w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-138">The object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-139">Tworzy tablicę niezmienne, która zawiera określony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-139">Creates an immutable array that contains the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-140">Zwraca tablicę niezmienne, która zawiera określony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-140">Returns an immutable array that contains the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (params T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (ParamArray items As T()) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(... cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-141">Typ elementy przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-141">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="ac929-142">Tablica obiektów, aby wypełnić tablicy z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-142">The array of objects to populate the array with.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-143">Tworzy tablicę niezmienialny od określonej tablicy obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-143">Creates an immutable array from the specified array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-144">Niezmienne tablica, która zawiera tablicę elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-144">An immutable array that contains the array of items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-145">Typ elementy przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-145">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="ac929-146">Pierwszy obiekt do przechowywania w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-146">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="ac929-147">Drugi obiekt do przechowywania w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-147">The second object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-148">Tworzy tablicę niezmienne, która zawiera określonych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-148">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-149">Zwraca tablicę niezmienne zawierający określonych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-149">Returns an immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (System.Collections.Immutable.ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(System::Collections::Immutable::ImmutableArray&lt;T&gt; items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Immutable.ImmutableArray&lt;'T&gt; * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-150">Typ elementy przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-150">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="ac929-151">Źródłowa Tablica obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-151">The source array of objects.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="ac929-152">Indeks pierwszego elementu do skopiowania <c>elementów</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-152">The index of the first element to copy from <c>items</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="ac929-153">Liczba elementów od <c>elementów</c> do uwzględnienia w tym niezmienne tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-153">The number of elements from <c>items</c> to include in this immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-154">Tworzy tablicę niezmienne z określonych obiektów z innej tablicy niezmienialny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-154">Creates an immutable array with the specified objects from another immutable array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-155">Tablica niezmienne zawiera określonych obiektów z tablicy źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-155">An immutable array that contains the specified objects from the source array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-156">Typ elementy przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-156">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="ac929-157">Pierwszy obiekt do przechowywania w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-157">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="ac929-158">Drugi obiekt do przechowywania w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-158">The second object to store in the array.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="ac929-159">Trzeci obiektów mają być przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-159">The third object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-160">Tworzy tablicę niezmienne, która zawiera określonych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-160">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-161">Tablica niezmienne zawiera określonych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-161">An immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T[] items, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T[] items, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(cli::array &lt;T&gt; ^ items, int start, int length);" />
      <MemberSignature Language="F#" Value="static member Create : 'T[] * int * int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (items, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-162">Typ elementy przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-162">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="ac929-163">Źródłowa Tablica obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-163">The source array of objects.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="ac929-164">Indeks pierwszego elementu do skopiowania <c>elementów</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-164">The index of the first element to copy from <c>items</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="ac929-165">Liczba elementów od <c>elementów</c> do uwzględnienia w tym niezmienne tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-165">The number of elements from <c>items</c> to include in this immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-166">Tworzy tablicę niezmienne z określonych obiektów z innej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-166">Creates an immutable array with specified objects from another array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-167">Tablica niezmienne zawiera określonych obiektów z tablicy źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-167">An immutable array that contains the specified objects from the source array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; Create&lt;T&gt; (T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; Create&lt;T&gt;(!!T item1, !!T item2, !!T item3, !!T item4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of T) (item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; Create(T item1, T item2, T item3, T item4);" />
      <MemberSignature Language="F#" Value="static member Create : 'T * 'T * 'T * 'T -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.Create (item1, item2, item3, item4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="item1" Type="T" />
        <Parameter Name="item2" Type="T" />
        <Parameter Name="item3" Type="T" />
        <Parameter Name="item4" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-168">Typ elementy przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-168">The type of elements stored in the array.</span>
          </span>
        </typeparam>
        <param name="item1">
          <span data-ttu-id="ac929-169">Pierwszy obiekt do przechowywania w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-169">The first object to store in the array.</span>
          </span>
        </param>
        <param name="item2">
          <span data-ttu-id="ac929-170">Drugi obiekt do przechowywania w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-170">The second object to store in the array.</span>
          </span>
        </param>
        <param name="item3">
          <span data-ttu-id="ac929-171">Trzeci obiektów mają być przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-171">The third object to store in the array.</span>
          </span>
        </param>
        <param name="item4">
          <span data-ttu-id="ac929-172">Obiekt czwarty mają być przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-172">The fourth object to store in the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-173">Tworzy tablicę niezmienne, która zawiera określonych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-173">Creates an immutable array that contains the specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-174">Tablica niezmienne zawiera określonych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-174">An immutable array that contains the specified objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) () As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-175">Typ elementy przechowywane w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-175">The type of elements stored in the builder.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="ac929-176">Tworzy modyfikowalną tablicy, która może być konwertowana na <see cref="T:System.Collections.Immutable.ImmutableArray" /> bez przydziału nowych pamięci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-176">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-177">Modyfikowalne tablicę określonego typu, który może zostać przekonwertowany wydajnie na tablicę niezmienialny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-177">A mutable array of the specified type that can be efficiently converted to an immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder CreateBuilder&lt;T&gt; (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; CreateBuilder&lt;T&gt;(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of T) (initialCapacity As Integer) As ImmutableArray(Of T).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ CreateBuilder(int initialCapacity);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : int -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;.Builder" Usage="System.Collections.Immutable.ImmutableArray.CreateBuilder initialCapacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-178">Typ elementy przechowywane w konstruktorze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-178">The type of elements stored in the builder.</span>
          </span>
        </typeparam>
        <param name="initialCapacity">
          <span data-ttu-id="ac929-179">Początkowa pojemność konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-179">The initial capacity of the builder.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-180">Tworzy modyfikowalną tablicy, która może być konwertowana na <see cref="T:System.Collections.Immutable.ImmutableArray" /> bez przydziału nowych pamięci.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-180">Creates a mutable array that can be converted to an <see cref="T:System.Collections.Immutable.ImmutableArray" /> without allocating new memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-181">Modyfikowalne tablicę określonego typu, który może zostać przekonwertowany wydajnie na tablicę niezmienialny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-181">A mutable array of the specified type that can be efficiently converted to an immutable array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;T&gt; CreateRange&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; CreateRange&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of T) (items As IEnumerable(Of T)) As ImmutableArray(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;T&gt; CreateRange(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;'T&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'T&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ac929-182">Typ elementu przechowywane w tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-182">The type of element stored in the array.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="ac929-183">Elementy do dodania do tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-183">The elements to add to the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-184">Tworzy nową <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> wypełniane przy użyciu określonych elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-184">Creates a new <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> populated with the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-185">Niezmienne tablicy, która zawiera określone elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-185">An immutable array that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="ac929-186">Tablica źródłowa do zainicjowania tablicy wynikowej z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-186">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="ac929-187">Funkcję, która ma zastosowanie do każdego elementu z tablicy źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-187">The function to apply to each element from the source array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-188">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-188">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac929-189">To przeciążenie umożliwia tworzenie wydajnych <xref:System.Collections.Immutable.ImmutableArray%601> oparte na istniejącym <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcja mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="ac929-189">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`2&lt;!!TSource, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TResult&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Result&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="ac929-190">Tablica źródłowa do zainicjowania tablicy wynikowej z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-190">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="ac929-191">Indeks pierwszego elementu w tablicy źródłowej do uwzględnienia w tablicy wynikowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-191">The index of the first element in the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="ac929-192">Liczba elementów w tablicy źródłowej do uwzględnienia w tablicy wynikowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-192">The number of elements from the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="ac929-193">Funkcję, która ma zastosowanie do każdego elementu z tablicy źródłowej zawarte w tablicy wynikowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-193">The function to apply to each element from the source array included in the resulting array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-194">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-194">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac929-195">To przeciążenie umożliwia tworzenie wydajnych <xref:System.Collections.Immutable.ImmutableArray%601> oparte na wycinek istniejącego <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcji mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej zawarte w tablicy wynikowej.</span><span class="sxs-lookup"><span data-stu-id="ac929-195">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="ac929-196">Tablica źródłowa do zainicjowania tablicy wynikowej z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-196">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="ac929-197">Funkcję, która ma zastosowanie do każdego elementu z tablicy źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-197">The function to apply to each element from the source array.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ac929-198">Argument przekazywany do funkcji mapowania selektora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-198">An argument to be passed to the selector mapping function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-199">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-199">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac929-200">To przeciążenie umożliwia tworzenie wydajnych <xref:System.Collections.Immutable.ImmutableArray%601> oparte na istniejącym <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcja mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej.</span><span class="sxs-lookup"><span data-stu-id="ac929-200">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from             the source array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TSource,TArg,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TResult&gt; CreateRange&lt;TSource,TArg,TResult&gt; (System.Collections.Immutable.ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource,TArg,TResult&gt; selector, TArg arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TResult&gt; CreateRange&lt;TSource, TArg, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; items, int32 start, int32 length, class System.Func`3&lt;!!TSource, !!TArg, !!TResult&gt; selector, !!TArg arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TSource, TArg, TResult) (items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TArg, typename TResult&gt;&#xA; static System::Collections::Immutable::ImmutableArray&lt;TResult&gt; CreateRange(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; items, int start, int length, Func&lt;TSource, TArg, TResult&gt; ^ selector, TArg arg);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Immutable.ImmutableArray&lt;'Source&gt; * int * int * Func&lt;'Source, 'Arg, 'Result&gt; * 'Arg -&gt; System.Collections.Immutable.ImmutableArray&lt;'Result&gt;" Usage="System.Collections.Immutable.ImmutableArray.CreateRange (items, start, length, selector, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TArg" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="selector" Type="System.Func&lt;TSource,TArg,TResult&gt;" />
        <Parameter Name="arg" Type="TArg" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TArg">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="items">
          <span data-ttu-id="ac929-201">Tablica źródłowa do zainicjowania tablicy wynikowej z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-201">The source array to initialize the resulting array with.</span>
          </span>
        </param>
        <param name="start">
          <span data-ttu-id="ac929-202">Indeks pierwszego elementu w tablicy źródłowej do uwzględnienia w tablicy wynikowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-202">The index of the first element in the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="ac929-203">Liczba elementów w tablicy źródłowej do uwzględnienia w tablicy wynikowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-203">The number of elements from the source array to include in the resulting array.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="ac929-204">Funkcję, która ma zastosowanie do każdego elementu z tablicy źródłowej zawarte w tablicy wynikowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-204">The function to apply to each element from the source array included in the resulting array.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="ac929-205">Argument przekazywany do funkcji mapowania selektora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-205">An argument to be passed to the selector mapping function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-206">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-206">Initializes a new instance of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> struct.</span>
          </span>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ac929-207">To przeciążenie umożliwia tworzenie wydajnych <xref:System.Collections.Immutable.ImmutableArray%601> oparte na wycinek istniejącego <xref:System.Collections.Immutable.ImmutableArray%601>, gdzie funkcji mapowania musi zostać zastosowana do każdego elementu z tablicy źródłowej zawarte w tablicy wynikowej.</span><span class="sxs-lookup"><span data-stu-id="ac929-207">This overload allows efficient creation of an <xref:System.Collections.Immutable.ImmutableArray%601> based on a slice of an existing             <xref:System.Collections.Immutable.ImmutableArray%601>, where a mapping function needs to be applied to each element from the source array             included in the resulting array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableArray&lt;TSource&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;TSource&gt; ToImmutableArray&lt;TSource&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; ToImmutableArray&lt;TSource&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableArray(Of TSource) (items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableArray&lt;TSource&gt; ToImmutableArray(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member ToImmutableArray : seq&lt;'Source&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;'Source&gt;" Usage="System.Collections.Immutable.ImmutableArray.ToImmutableArray items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="ac929-208">Typ elementów zawartych w <c>elementów</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-208">The type of elements contained in <c>items</c>.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="ac929-209">Kolekcja obiektów można skopiować do tablicy niezmienialny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-209">The collection of objects to copy to the immutable array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ac929-210">Tworzy tablicę niezmienne z określonej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-210">Creates an immutable array from the specified collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ac929-211">Tablica niezmienne zawiera określonej kolekcji obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ac929-211">An immutable array that contains the specified collection of objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>