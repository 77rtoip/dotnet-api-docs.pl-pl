<Type Name="ImmutableDictionary" FullName="System.Collections.Immutable.ImmutableDictionary">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66a7f339c2bd338938bbd71ce4888f9ec7e85142" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36645078" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class ImmutableDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableDictionary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Immutable.ImmutableDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableDictionary abstract sealed" />
  <TypeSignature Language="F#" Value="type ImmutableDictionary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c600a-101">Udostępnia zestaw metod inicjowania dla wystąpienia elementu <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> klasy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c600a-101">Provides a set of initialization methods for instances of the <see cref="T:System.Collections.Immutable.ImmutableDictionary`2" /> class.</span>
      </span>
      <span data-ttu-id="c600a-102">**Pakiet NuGet**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">o kolekcjach niezmienialnych oraz instrukcje dotyczące instalowania</see>)</span>
      <span class="sxs-lookup">
        <span data-stu-id="c600a-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <threadsafe>
      <span data-ttu-id="c600a-103">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c600a-103">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Contains&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static bool Contains&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; map, TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Contains&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; map, !!TKey key, !!TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Contains``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains(Of TKey, TValue) (map As IImmutableDictionary(Of TKey, TValue), key As TKey, value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Contains(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ map, TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; bool" Usage="System.Collections.Immutable.ImmutableDictionary.Contains (map, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="map" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-104">Typ kluczy w słowniku niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-104">The type of the keys in the immutable dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-105">Typ wartości w słowniku niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-105">The type of the values in the immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="map">
          <span data-ttu-id="c600a-106">Niezmienne słownik do wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-106">The immutable dictionary to search.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c600a-107">Klucz do zlokalizowania w słowniku niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-107">The key to locate in the immutable dictionary.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c600a-108">Wartość do zlokalizowania przy użyciu określonego klucza, jeśli klucz zostanie znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-108">The value to locate on the specified key, if the key is found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-109">Określa, czy określonego słownika niezmienne zawiera parę określonego klucza i wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-109">Determines whether the specified immutable dictionary contains the specified key/value pair.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-110">
            <see langword="true" /> Jeśli ta mapa zawiera określony klucz/wartość pary; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-110">
              <see langword="true" /> if this map contains the specified key/value pair; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-111">Typ kluczy przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-111">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-112">Typ wartości przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-112">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="c600a-113">Tworzy pusty słownik niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-113">Creates an empty immutable dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-114">Pusty słownik niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-114">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-115">Typ kluczy przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-115">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-116">Typ wartości przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-116">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="c600a-117">Implementacja służące do określenia równości kluczy w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-117">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-118">Tworzy pusty słownik niezmienne, który używa określona funkcja porównująca klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-118">Creates an empty immutable dictionary that uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-119">Pusty słownik niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-119">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; Create&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; Create&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.Create``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function Create(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ Create(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.Create (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-120">Typ kluczy przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-120">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-121">Typ wartości przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-121">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="c600a-122">Implementacja służące do określenia równości kluczy w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-122">The implementation to use to determine the equality of keys in the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="c600a-123">Implementacja służące do określenia równość wartości w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-123">The implementation to use to determine the equality of values in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-124">Tworzy pusty słownik niezmienne, który używa określonego porównywanie klucza i wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-124">Creates an empty immutable dictionary that uses the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-125">Pusty słownik niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-125">An empty immutable dictionary.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) () As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder();" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : unit -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-126">Typ kluczy przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-126">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-127">Typ wartości przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-127">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="c600a-128">Tworzy nowego Konstruktora niezmienne słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-128">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-129">Nowy Konstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-129">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder keyComparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-130">Typ kluczy przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-130">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-131">Typ wartości przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-131">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="c600a-132">Porównania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-132">The key comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-133">Tworzy nowego Konstruktora niezmienne słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-133">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-134">Nowy Konstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-134">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBuilder&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;.Builder CreateBuilder&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2/Builder&lt;!!TKey, !!TValue&gt; CreateBuilder&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateBuilder``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBuilder(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue).Builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt;::Builder ^ CreateBuilder(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member CreateBuilder : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;.Builder" Usage="System.Collections.Immutable.ImmutableDictionary.CreateBuilder (keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;+Builder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-135">Typ kluczy przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-135">The type of keys stored by the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-136">Typ wartości przechowywanych w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-136">The type of values stored by the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="c600a-137">Porównania klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-137">The key comparer.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="c600a-138">Porównania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-138">The value comparer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-139">Tworzy nowego Konstruktora niezmienne słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-139">Creates a new immutable dictionary builder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-140">Nowy Konstruktor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-140">The new builder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-141">Typ kluczy w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-141">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-142">Typ wartości w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-142">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="items">
          <span data-ttu-id="c600a-143">Elementy, używanych do wypełniania słownika, zanim zostanie niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-143">The items used to populate the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-144">Tworzy nowy słownik niezmienne, która zawiera określone elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-144">Creates a new immutable dictionary that contains the specified items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-145">Nowy słownik niezmienne zawiera określone elementy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-145">A new immutable dictionary that contains the specified items.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-146">Typ kluczy w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-146">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-147">Typ wartości w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-147">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="c600a-148">Implementacja porównania do użycia do porównywania kluczy pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-148">The comparer implementation to use to compare keys for equality.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="c600a-149">Elementy do dodania do słownika, zanim zostanie niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-149">The items to add to the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-150">Tworzy nowy słownik niezmienne, który zawiera określone elementy i używa określona funkcja porównująca klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-150">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-151">Nowego słownika niezmienne, który zawiera określone elementy i używa określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-151">A new immutable dictionary that contains the specified items and uses the specified comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRange&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; CreateRange&lt;TKey,TValue&gt; (System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; CreateRange&lt;TKey, TValue&gt;(class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.CreateRange``2(System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRange(Of TKey, TValue) (keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ CreateRange(System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member CreateRange : System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.CreateRange (keyComparer, valueComparer, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-152">Typ kluczy w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-152">The type of keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-153">Typ wartości w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-153">The type of values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="keyComparer">
          <span data-ttu-id="c600a-154">Implementacja porównania do użycia do porównywania kluczy pod kątem równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-154">The comparer implementation to use to compare keys for equality.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="c600a-155">Implementacja porównania do służy do porównywania wartości dla równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-155">The comparer implementation to use to compare values for equality.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="c600a-156">Elementy do dodania do słownika, zanim zostanie niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-156">The items to add to the dictionary before it’s immutable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-157">Tworzy nowy słownik niezmienne, który zawiera określone elementy i używa określona funkcja porównująca klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-157">Creates a new immutable dictionary that contains the specified items and uses the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-158">Nowego słownika niezmienne, który zawiera określone elementy i używa określona funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-158">A new immutable dictionary that contains the specified items and uses the specified comparer.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-159">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-159">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-160">Typ wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-160">The type of the value.</span>
          </span>
        </typeparam>
        <param name="dictionary">
          <span data-ttu-id="c600a-161">Słownik, który można pobrać wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-161">The dictionary to retrieve the value from.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c600a-162">Klucz do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-162">The key to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-163">Pobiera wartość dla danego klucza, jeśli dopasowany klucz istnieje w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-163">Gets the value for a given key if a matching key exists in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-164">Wartość dla klucza, lub <c>default(TValue)</c> Jeśli nie dopasowany klucz został znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-164">The value for the key, or <c>default(TValue)</c> if no matching key was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueOrDefault&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue GetValueOrDefault&lt;TKey,TValue&gt; (this System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt; dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue GetValueOrDefault&lt;TKey, TValue&gt;(class System.Collections.Immutable.IImmutableDictionary`2&lt;!!TKey, !!TValue&gt; dictionary, !!TKey key, !!TValue defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault``2(System.Collections.Immutable.IImmutableDictionary{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValueOrDefault(Of TKey, TValue) (dictionary As IImmutableDictionary(Of TKey, TValue), key As TKey, defaultValue As TValue) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TValue GetValueOrDefault(System::Collections::Immutable::IImmutableDictionary&lt;TKey, TValue&gt; ^ dictionary, TKey key, TValue defaultValue);" />
      <MemberSignature Language="F#" Value="static member GetValueOrDefault : System.Collections.Immutable.IImmutableDictionary&lt;'Key, 'Value&gt; * 'Key * 'Value -&gt; 'Value" Usage="System.Collections.Immutable.ImmutableDictionary.GetValueOrDefault (dictionary, key, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Immutable.IImmutableDictionary&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="defaultValue" Type="TValue" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-165">Typ klucza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-165">The type of the key.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-166">Typ wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-166">The type of the value.</span>
          </span>
        </typeparam>
        <param name="dictionary">
          <span data-ttu-id="c600a-167">Słownik, który można pobrać wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-167">The dictionary to retrieve the value from.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c600a-168">Klucz do wyszukania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-168">The key to search for.</span>
          </span>
        </param>
        <param name="defaultValue">
          <span data-ttu-id="c600a-169">Domyślna wartość do zwrócenia, jeśli nie dopasowany klucz zostanie znaleziony w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-169">The default value to return if no matching key is found in the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-170">Pobiera wartość dla danego klucza, jeśli dopasowany klucz istnieje w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-170">Gets the value for a given key if a matching key exists in the dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-171">Wartość dla klucza, lub <paramref name="defaultValue" /> Jeśli nie dopasowany klucz został znaleziony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-171">The value for the key, or <paramref name="defaultValue" /> if no matching key was found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-172">Typ kluczy w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-172">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-173">Typ wartości w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-173">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c600a-174">Sekwencja pary klucz/wartość do wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-174">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-175">Wylicza sekwencji par klucz/wartość i tworzy słownika niezmienne jego zawartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-175">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-176">Niezmienne słownik, który zawiera pary klucz/wartość w określonej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-176">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-177">Typ kluczy w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-177">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-178">Typ wartości w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-178">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c600a-179">Sekwencja pary klucz/wartość do wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-179">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="c600a-180">Moduł porównujący klucza do użycia podczas tworzenia niezmienne słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-180">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-181">Wylicza sekwencji par klucz/wartość i tworzy słownika niezmienne jej zawartość przy użyciu określonego klucza funkcja porównująca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-181">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-182">Niezmienne słownik, który zawiera pary klucz/wartość w określonej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-182">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; source, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!!TKey, !!TValue&gt;&gt; source, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TKey, TValue) (source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ source, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;System.Collections.Generic.KeyValuePair&lt;'Key, 'Value&gt;&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;" RefType="this" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-183">Typ kluczy w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-183">The type of the keys in the dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-184">Typ wartości w słowniku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-184">The type of the values in the dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c600a-185">Sekwencja pary klucz/wartość do wyliczenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-185">The sequence of key/value pairs to enumerate.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="c600a-186">Moduł porównujący klucza do użycia podczas tworzenia niezmienne słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-186">The key comparer to use when building the immutable dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="c600a-187">Porównania wartości do użycia słownika niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-187">The value comparer to use for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-188">Wylicza sekwencji par klucz/wartość i tworzy słownika niezmienne jej zawartość przy użyciu określonego klucza i wartości porównywanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-188">Enumerates a sequence of key/value pairs and produces an immutable dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-189">Niezmienne słownik, który zawiera pary klucz/wartość w określonej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-189">An immutable dictionary that contains the key/value pairs in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c600a-190">Typ elementu w kolekcji źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-190">The type of element in the source collection.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-191">Typ klucza w słowniku niezmienne wynikowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-191">The type of key in the resulting immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c600a-192">Kolekcja źródłowa służącego do generowania niezmienne słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-192">The source collection used to generate the immutable dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="c600a-193">Funkcja używana do przekształcania klucze słownika niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-193">The function used to transform keys for the immutable dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-194">Tworzy słownika niezmienne z istniejącą kolekcję elementów, stosując funkcję przekształcenia do kluczy źródła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-194">Constructs an immutable dictionary from an existing collection of elements, applying a transformation function to the source keys.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-195">Niezmienne słownik, który zawiera elementy z <paramref name="source" />, za pomocą kluczy przekształcone, stosując <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-195">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt; ToImmutableDictionary&lt;TSource,TKey&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TSource&gt; ToImmutableDictionary&lt;TSource, TKey&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TSource&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Source&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TSource&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c600a-196">Typ elementu w kolekcji źródłowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-196">The type of element in the source collection.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-197">Typ klucza w słowniku niezmienne wynikowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-197">The type of key in the resulting immutable dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c600a-198">Kolekcja źródłowa służącego do generowania niezmienne słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-198">The source collection used to generate the immutable dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="c600a-199">Funkcja używana do przekształcania klucze słownika niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-199">The function used to transform keys for the immutable dictionary.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="c600a-200">Moduł porównujący klucza do użycia słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-200">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-201">Tworzy słownika niezmienne oparte na niektórych transformacji sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-201">Constructs an immutable dictionary based on some transformation of a sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-202">Niezmienne słownik, który zawiera elementy z <paramref name="source" />, za pomocą kluczy przekształcone, stosując <paramref name="keySelector" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-202">The immutable dictionary that contains elements from <paramref name="source" />, with keys transformed by applying <paramref name="keySelector" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c600a-203">Typ elementów w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-203">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-204">Typ kluczy w słowniku wynikowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-204">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-205">Typ wartości w słowniku wynikowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-205">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c600a-206">Kolejność wyliczania, można wygenerować słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-206">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="c600a-207">Funkcja, która powoduje wygenerowanie klucza dla słownika od każdego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-207">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="c600a-208">Funkcja, która generuje wartość słownika od każdego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-208">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-209">Wylicza i przekształca sekwencji i tworzy słownika niezmienne jego zawartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-209">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-210">Niezmienne słownik zawierający elementy w określonej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-210">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c600a-211">Typ elementów w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-211">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-212">Typ kluczy w słowniku wynikowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-212">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-213">Typ wartości w słowniku wynikowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-213">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c600a-214">Kolejność wyliczania, można wygenerować słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-214">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="c600a-215">Funkcja, która powoduje wygenerowanie klucza dla słownika od każdego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-215">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="c600a-216">Funkcja, która generuje wartość słownika od każdego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-216">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="c600a-217">Moduł porównujący klucza do użycia słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-217">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-218">Wylicza i przekształca sekwencji i tworzy słownika niezmienne jego zawartość przy użyciu określonego klucza modułu porównującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-218">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key comparer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-219">Niezmienne słownik zawierający elementy w określonej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-219">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToImmutableDictionary&lt;TSource,TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt; ToImmutableDictionary&lt;TSource,TKey,TValue&gt; (this System.Collections.Generic.IEnumerable&lt;TSource&gt; source, Func&lt;TSource,TKey&gt; keySelector, Func&lt;TSource,TValue&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; keyComparer, System.Collections.Generic.IEqualityComparer&lt;TValue&gt; valueComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Immutable.ImmutableDictionary`2&lt;!!TKey, !!TValue&gt; ToImmutableDictionary&lt;TSource, TKey, TValue&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!TSource&gt; source, class System.Func`2&lt;!!TSource, !!TKey&gt; keySelector, class System.Func`2&lt;!!TSource, !!TValue&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; keyComparer, class System.Collections.Generic.IEqualityComparer`1&lt;!!TValue&gt; valueComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToImmutableDictionary(Of TSource, TKey, TValue) (source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IEqualityComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableDictionary(Of TKey, TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TKey, typename TValue&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Immutable::ImmutableDictionary&lt;TKey, TValue&gt; ^ ToImmutableDictionary(System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ source, Func&lt;TSource, TKey&gt; ^ keySelector, Func&lt;TSource, TValue&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ keyComparer, System::Collections::Generic::IEqualityComparer&lt;TValue&gt; ^ valueComparer);" />
      <MemberSignature Language="F#" Value="static member ToImmutableDictionary : seq&lt;'Source&gt; * Func&lt;'Source, 'Key&gt; * Func&lt;'Source, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;'Key&gt; * System.Collections.Generic.IEqualityComparer&lt;'Value&gt; -&gt; System.Collections.Immutable.ImmutableDictionary&lt;'Key, 'Value&gt;" Usage="System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary (source, keySelector, elementSelector, keyComparer, valueComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;TKey,TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;TSource&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TSource,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;TSource,TValue&gt;" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
        <Parameter Name="valueComparer" Type="System.Collections.Generic.IEqualityComparer&lt;TValue&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">
          <span data-ttu-id="c600a-220">Typ elementów w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-220">The type of the elements in the sequence.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="c600a-221">Typ kluczy w słowniku wynikowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-221">The type of the keys in the resulting dictionary.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="c600a-222">Typ wartości w słowniku wynikowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-222">The type of the values in the resulting dictionary.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="c600a-223">Kolejność wyliczania, można wygenerować słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-223">The sequence to enumerate to generate the dictionary.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="c600a-224">Funkcja, która powoduje wygenerowanie klucza dla słownika od każdego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-224">The function that will produce the key for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="elementSelector">
          <span data-ttu-id="c600a-225">Funkcja, która generuje wartość słownika od każdego elementu w sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-225">The function that will produce the value for the dictionary from each sequence element.</span>
          </span>
        </param>
        <param name="keyComparer">
          <span data-ttu-id="c600a-226">Moduł porównujący klucza do użycia słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-226">The key comparer to use for the dictionary.</span>
          </span>
        </param>
        <param name="valueComparer">
          <span data-ttu-id="c600a-227">Porównania wartości do użycia słownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-227">The value comparer to use for the dictionary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c600a-228">Wylicza i przekształca sekwencji i tworzy słownika niezmienne jej zawartość przy użyciu określonego klucza i porównywanie wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-228">Enumerates and transforms a sequence, and produces an immutable dictionary of its contents by using the specified key and value comparers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c600a-229">Niezmienne słownik zawierający elementy w określonej sekwencji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c600a-229">An immutable dictionary that contains the items in the specified sequence.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>