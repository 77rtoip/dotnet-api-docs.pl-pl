<Type Name="TcpClientChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aeee96253df66e881b33ee50b98538d48888a1c3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30567208" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClientChannel : System.Runtime.Remoting.Channels.IChannel, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClientChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClientChannel&#xA;Implements IChannel, IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClientChannel : System::Runtime::Remoting::Channels::IChannel, System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Implementuje kanału klienta, który korzysta z protokołu TCP do przekazywania wiadomości dla wywołań zdalnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kanały transportu wiadomości w zdalnych granicach (na przykład komputerów lub domen aplikacji). <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> Klasy transportu wiadomości przy użyciu protokołu TCP.  
  
 Kanały są używane przez infrastrukturę komunikacji zdalnej programu .NET Framework do transportu wywołań zdalnych. Gdy klient wysyła wywołania do obiektu zdalnego, wywołanie jest serializowany do wiadomości wysyłane przez kanał klienta i odbierany przez kanał serwera. Następnie deserializacji i jest przetwarzane. Wartości zwracane są wysyłane przez kanał serwera i odbierane przez kanału klienta.  
  
 Do wykonania dodatkowych, przetwarzanie wiadomości po stronie klienta można określić implementację <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interfejsu za pomocą których wszystkie komunikaty przetwarzane przez <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> są przekazywane.  
  
 Domyślnie <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> klasy używa binarne elementu formatującego do serializacji wszystkie komunikaty.  
  
 A <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> właściwości konfiguracyjne, które można ustawić na ma skojarzony obiekt czas wykonywania, albo w pliku konfiguracji (za pomocą statycznych <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> metody) lub programowo (przez przekazanie <xref:System.Collections.IDictionary> kolekcji do <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A> Konstruktor). Aby uzyskać listę tych właściwości konfiguracji, zobacz dokumentację dla <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> klasy do wywołania typu zdalnego.  
  
 [!code-cpp[Remoting_TcpInfo#20](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#20)]
 [!code-csharp[Remoting_TcpInfo#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#20)]  
  
 Typ zdalnego o nazwie w powyższym przykładzie zdefiniowano następującym kodem.  
  
 [!code-cpp[Remoting_TcpInfo#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/remotable.cpp#10)]
 [!code-csharp[Remoting_TcpInfo#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/remotable.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClientChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClientChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości konfiguracji <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> zwróconych przez ten konstruktor wystąpienia są ustawione na wartości domyślne.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia tego konstruktora.  
  
 [!code-cpp[Remoting_TcpInfo#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#21)]
 [!code-csharp[Remoting_TcpInfo#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClientChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">A <see cref="T:System.Collections.IDictionary" /> kolekcji, która określa wartości właściwości konfiguracji, który będzie używany przez kanał.</param>
        <param name="sinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> Wdrożenia ma być używany przez kanał.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> klasy przy użyciu określonej konfiguracji właściwości i odbioru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat właściwości konfiguracji kanału, zobacz [kanału i programu formatującego właściwości konfiguracji](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
 Jeśli nie jest wymagane funkcje zbiornika, ustaw `sinkProvider` parametr `null`.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia tego konstruktora w celu utworzenia <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> obiektu z określonej konfiguracji właściwości.  
  
 [!code-cpp[Remoting_TcpAuth#31](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpAuth/CPP/client.cpp#31)]
 [!code-csharp[Remoting_TcpAuth#31](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpAuth/CS/client.cs#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Właściwości konfiguracji jest nieprawidłowo sformatowana.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClientChannel(System::String ^ name, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa kanału.</param>
        <param name="sinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> Wdrożenia ma być używany przez kanał.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> z określoną nazwą i odbioru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ustawia <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName%2A> właściwości przy użyciu `name` parametru. Jeśli chcesz zarejestrować więcej niż jeden kanał, każdy kanał musi mieć unikatową nazwę.  
  
 Jeśli nie jest wymagane funkcje zbiornika, ustaw `sinkProvider` parametr `null`.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób tworzenia <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#31](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CPP/client.cpp#31)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#31](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CS/client.cs#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę bieżącego kanału.</summary>
        <value>A <see cref="T:System.String" /> wystąpienia, które zawiera nazwę kanału.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy zarejestrowany kanału ma unikatową nazwę. Nazwa jest używana do pobrania określonego kanału podczas wywoływania metody <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia tej właściwości.  
  
 [!code-cpp[Remoting_TcpInfo#22](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#22)]
 [!code-csharp[Remoting_TcpInfo#22](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera priorytet ten kanał.</summary>
        <value>Liczba całkowita, która reprezentuje priorytetu przypisanego do kanału.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Priorytet określa kolejność, w którym konkurencyjnych klienci łączą się z danego punktu końcowego; przed niższy priorytet kanały Połącz wyższy priorytet kanałów. Domyślnie priorytet wynosi 1; ujemna priorytetów są dozwolone.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia tej właściwości.  
  
 [!code-cpp[Remoting_TcpInfo#22](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#22)]
 [!code-csharp[Remoting_TcpInfo#22](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">Adres URL, do którego nowy obiekt sink dostarcza wiadomości. Może być <see langword="null" />.</param>
        <param name="remoteChannelData">Obiekt danych kanału zdalnego hosta, do którego nowy obiekt sink będzie dostarczać komunikatów. Może być <see langword="null" />.</param>
        <param name="objectURI">Gdy metoda zwróci wartość, zawiera identyfikator URI nowe zbiornik kanału wiadomości, polegającego na dostarczaniu wiadomości do określonego adresu URL lub kanału danych obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Zwraca komunikat w zbiorniku kanału polegającego na dostarczaniu wiadomości do określonego adresu URL lub kanału obiektu danych.</summary>
        <returns>Komunikat w zbiorniku kanału polegającego na dostarczaniu wiadomości do określonego adresu URL lub kanału obiektu danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink%2A> Metoda zwraca komunikat w zbiorniku kanału polegającego na dostarczaniu wiadomości do określonego adresu URL lub obiekt kanału danych. Jeśli `uri` parametr jest `null`, `remoteChannelData` jest używany jako obiekt docelowy dla obiekt sink. Albo `url` lub `remoteChannelData` parametry mogą być `null`, ale nie oba.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia tej metody.  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#32](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CPP/client.cpp#32)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#32](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CS/client.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość Boolean wskazującą, czy bieżący kanał jest bezpieczne</summary>
        <value>Wartość logiczna wskazująca, czy bieżące wystąpienie jest bezpieczne.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">Adres URL, z którego mają zostać wyodrębnione identyfikatory URI.</param>
        <param name="objectURI">Po powrocie z tej metody zawiera <see cref="T:System.String" /> wystąpienie, które zawiera identyfikator URI dobrze znanego obiektu zdalnego. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Pobiera identyfikator URI kanału i zdalnego obiektu dobrze znany identyfikator URI z określonym adresem URL.</summary>
        <returns>Identyfikator URI kanału.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia tej metody.  
  
 System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#33  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>