<Type Name="ComponentGuaranteesAttribute" FullName="System.Runtime.Versioning.ComponentGuaranteesAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b50b7dac2911a22c0edce0c9bed4359055cbf54b" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67247317" /></Metadata><TypeSignature Language="C#" Value="public sealed class ComponentGuaranteesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ComponentGuaranteesAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ComponentGuaranteesAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentGuaranteesAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ComponentGuaranteesAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Module | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Constructor | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Module | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje gwarancji zgodności tego składnika, typ lub składowa typu, który może obejmować wiele wersji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> Jest używany przez deweloperów, składniki i biblioteki klas do wskazania poziom zgodności, który konsumentów bibliotek można oczekiwać, że w wielu wersjach. Wskazuje poziom gwarancji w przyszłych wersjach programu Biblioteka lub składnik nie będę powodować istniejącego klienta. Klienci mogą następnie korzystać <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> jako pomoc w projektowanie własnych interfejsów, aby zapewnić trwałość między wersjami.  
  
> [!NOTE]
>  Środowisko uruchomieniowe języka wspólnego (CLR) nie używa tego atrybutu w dowolny sposób. Wartość znajduje się w oficjalnie dokumentowanie celem autora składnika. Narzędzia kompilacji umożliwia również te deklaracje wykrywać błędy kompilacji, które w przeciwnym razie zaburzyłaby zadeklarowane gwarancji.  
  
## <a name="levels-of-compatibility"></a>Poziomy zgodności  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> Obsługuje następujące poziomy zgodności, które są reprezentowane przez członków <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> wyliczenia:  
  
-   Nie zgodności wersji na wersję (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType>). Klienta można oczekiwać, że przyszłych wersji spowoduje uszkodzenie istniejących klientów. Aby uzyskać więcej informacji, zobacz [zgodności nie](#None) w dalszej części tego tematu.  
  
-   Zgodność wersji na wersję Side-by-side (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType>). Składnik został przetestowany w przypadku więcej niż jedna wersja zestaw jest ładowany w tej samej domenie aplikacji. Ogólnie rzecz biorąc przyszłych wersji może przerwać zgodności. Jednak gdy przełomowe zmiany zostaną wprowadzone, stara wersja nie jest modyfikowany, ale istnieje wraz z nowej wersji. Wykonanie Side-by-side jest oczekiwany sposobem utworzenia istniejących klientów, które działają, gdy przełomowe zmiany zostały wprowadzone. Aby uzyskać więcej informacji, zobacz [zgodności Side-by-Side](#SideBySide) w dalszej części tego tematu.  
  
-   Czasu trwania stanu stabilnego zgodność wersji na wersję (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType>). Przyszłe wersje powinna nie mogą przerwać działania klienta, a wykonanie side-by-side powinna być niepotrzebne. Jednak jeśli klient jest nieodwracalnie uszkodzony, może być możliwe wykonanie side-by-side Aby rozwiązać ten problem. Aby uzyskać więcej informacji, zobacz [stabilne zgodności](#Standard) sekcji.  
  
-   Zgodność wersji do wersji programu Exchange (<xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType>). Nadzwyczajne jest uważać, aby upewnić się, czy w przyszłych wersjach nie będę powodować klienta. Klienta należy używać tylko te typy w podpisie interfejsów, które są używane do komunikacji z innych zestawów, które są wdrażane niezależnie od siebie nawzajem. Tylko jedną wersję tych typów powinien znajdować się w domenie danej aplikacji, co oznacza, że klient przerywa, wykonanie side-by-side nie może rozwiązać problem ze zgodnością. Aby uzyskać więcej informacji, zobacz [zgodność z typem Exchange](#Exchange) sekcji.  
  
 W poniższych sekcjach omówiono każdy poziom gwarancji bardziej szczegółowo.  
  
<a name="None"></a>   
### <a name="no-compatibility"></a>Nie zgodności  
 Oznaczanie składnika jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None?displayProperty=nameWithType> wskazuje, że dostawca nie udziela żadnych gwarancji dotyczących zgodności. Klientów należy unikać tworzenia wszelkie zależności interfejsów. Ten poziom zgodności jest przydatne w przypadku typów, które są eksperymentalne lub które są publicznie widoczne, ale są przeznaczone tylko dla składników, które zawsze są aktualizowane w tym samym czasie. <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> jawnie wskazuje, że ten składnik nie powinny być używane przez składniki zewnętrzne.  
  
<a name="SideBySide"></a>   
### <a name="side-by-side-compatibility"></a>Side-by-Side zgodności  
 Oznaczanie składnika jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide?displayProperty=nameWithType> wskazuje, że składnik został przetestowany w przypadku więcej niż jedna wersja zestaw jest ładowany do tej samej domenie aplikacji. Powodująca niezgodność zmiany są dozwolone tak długo, jak zostały wprowadzone do zestawu, który ma większy numer wersji. Składniki, które są powiązane z starą wersję zestawu powinny nadal powiązać ze starej wersji i inne składniki można powiązać z nowej wersji. Użytkownik może również zaktualizować składnik, który został zadeklarowany jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide> utraty danych, zmieniając starą wersję.  
  
<a name="Standard"></a>   
### <a name="stable-compatibility"></a>Stabilna zgodności  
 Oznaczanie typu jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable?displayProperty=nameWithType> wskazuje, że typ powinny być trwałe między wersjami. Jednak może również być możliwe w przypadku wersji side-by-side stabilne typu istnieje w tej samej domenie aplikacji.  
  
 Typy stabilne obsługa wysokiej kompatybilności binarnego. W związku z tym dostawców należy unikać wprowadzania istotnych zmian typom stabilne. Akceptowane są następujące rodzaje zmian:  
  
-   Dodawanie pól wystąpieniem prywatnym do lub usuwanie pól z typu, tak długo, jak to nie mogą przerwać działania format serializacji.  
  
-   Zmiana typu nieprzeznaczone do serializacji typu. (Jednak serializacji nie można zmienić typu do typu nie można serializować.)  
  
-   Zgłaszanie nowe, bardziej pochodnego wyjątków z metody.  
  
-   Zwiększanie wydajności metody.  
  
-   Tak długo, jak zmiana nie wpływa na większości klientów, należy zmienić zakres wartości zwracanych.  
  
-   Naprawianie poważnych usterek, jeśli uzasadnienie biznesowe jest wysokie, a liczba niekorzystnie klienci jest niska.  
  
 Ponieważ nowe wersje składników stabilne najprawdopodobniej nie można przerwać istniejących klientów, zazwyczaj w domenie aplikacji jest potrzebny tylko jedną wersję stabilną składnika. Jednak to nie jest to wymagane, ponieważ stabilne typy nie są używane jako typy dobrze znanych programu exchange, które uzgodnić wszystkich składników. W związku z tym jeśli nowa wersja stabilna składnika przypadkowo uszkodzić niektórych składników i inne składniki muszą się nowej wersji, może być możliwe rozwiązać ten problem, ładując zarówno starego i nowego składnika.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> daje gwarancję zgodności wersji silniejsza niż <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>. To typowe domyślne dla wielu wersji składników.  
  
 <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> może być łączone z <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.SideBySide>, którym Stany nie będę powodować zgodności składnika, ale jest testowana w przypadku więcej niż jedna wersja jest ładowany do domeny w danej aplikacji.  
  
 Po typ lub metoda jest oznaczona jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>, mogą być uaktualniane do <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>. Jednak nie można obniżyć do <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
<a name="Exchange"></a>   
### <a name="exchange-type-compatibility"></a>Zgodność z typem programu Exchange  
 Oznaczanie typu jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange?displayProperty=nameWithType> daje gwarancję zgodności wersji silniejsza niż <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>i powinny być stosowane do najbardziej stabilny wszystkich typów. Te typy są przeznaczone do użycia dla wymiany między składnikami niezależnie utworzone przez wszystkie granice składnika w czasie zarówno (dowolna wersja środowiska CLR) lub dowolnej wersji składnika lub aplikacji i miejsca (między procesami, cross-CLR w jednym procesie domeny międzyaplikacyjnej w jednym środowisku CLR). Jeśli typ programu exchange jest istotną zmianę, jest niemożliwe rozwiązać ten problem, ładując wielu wersji tego typu.  
  
 Typy Exchange należy zmienić tylko wtedy, gdy problem jest bardzo poważne (takie jak poważny problem) lub prawdopodobieństwo złamania jest bardzo niskie (to znaczy, jeśli zachowanie już został uszkodzony w sposób losowy kod może nie wielkiego miały zależności na). Typ programu exchange, można wprowadzić następujące rodzaje zmian:  
  
-   Dodaj dziedziczenie nowych definicji interfejsu.  
  
-   Dodaj nowe metody prywatne, które implementują metody definicje nowo dziedziczony interfejs.  
  
-   Dodaj nowe pola statyczne.  
  
-   Dodaj nowych metod statycznych.  
  
-   Dodaj nowe metody niewirtualnej wystąpienia.  
  
 Poniżej są uznawane za istotne zmiany i nie są dozwolone dla typów pierwotnych:  
  
-   Zmienianie formatów serializacji. Serializacja z tolerancją wersji jest wymagana.  
  
-   Dodawanie lub usuwanie pola prywatne wystąpienia. To zagrożenie, zmieniając format serializacji typu i istotne kod klienta, który używa odbicia.  
  
-   Zmiana uszeregowieniem typu. Nie można serializować typu nie mogą być składane serializacji i na odwrót.  
  
-   Zgłaszanie różnych wyjątków z metody.  
  
-   Zmiana zakresu wartości zwracane metody, chyba że definicji elementu członkowskiego zgłasza tej możliwości i jasno nie wskazuje sposób obsługi wartości nieznanych klientów.  
  
-   Naprawia błędy większość. Konsumenci typu będą polegają na istniejące zachowanie.  
  
 Po składnika, typ lub element członkowski jest oznaczona za pomocą <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> zagwarantować, nie można zmienić celu <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> lub <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None>.  
  
 Zwykle typy programu exchange są typy podstawowe (takie jak <xref:System.Int32> i <xref:System.String> w .NET Framework) i interfejsy (takie jak <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.IEnumerable%601>, i <xref:System.IComparable%601>) są często używane w publicznych interfejsach.  
  
 Typy Exchange uwidoczniają publicznie innych typów, które również są oznaczone przez <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange> zgodności. Ponadto typy programu exchange nie może zależeć na zachowanie interfejsów API Windows, które są podatne na zmiany.  
  
## <a name="component-guarantees-a-summary"></a>Gwarancje składników: Podsumowanie  
 Poniższa tabela wskazuje, właściwości i użycie składnika wpływu na jego gwarancji zgodności.  
  
|Właściwości składnika|Program Exchange|Stable|Side-by-Side|Brak|  
|-------------------------------|--------------|------------|--------------------|----------|  
|Może być używany w interfejsie między składnikami tej wersji, niezależnie od siebie.|T|N|N|N|  
|Mogą być używane (prywatnie) przez zestaw tej wersji niezależnie.|T|T|T|N|  
|Może mieć wiele wersji w domenie pojedynczej aplikacji.|N|T|T|T|  
|Można wprowadzić zmiany powodujące niezgodność|N|N|T|T|  
|Należy przetestować, aby upewnić się, że wiele wersji zestawu, które mogą być ładowane razem.|N|N|T|N|  
|Można wprowadzić przełomowe zmiany w miejscu.|N|N|N|T|  
|Może być bardzo bezpieczne nierozdzielające, obsługi zmian w miejscu.|T|T|T|T|  
  
## <a name="applying-the-attribute"></a>Stosowanie atrybutu  
 Można zastosować <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> do zestawu, typu lub składowej typu. Swojej aplikacji, są hierarchiczne. Oznacza to, że domyślnie gwarancji definicją <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> właściwość atrybutu na poziomie zestawu definiuje gwarancji wszystkich typów w zestawie i wszystkich członków z tych typów. Podobnie jeśli firmy Microsoft jest stosowany do typu, domyślnie ma również zastosowanie do każdego członka typu.  
  
 Odziedziczone gwarancji, może zostać przesłonięta przez zastosowanie <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> do poszczególnych typów i elementów członkowskich typu. Jednak gwarancji, które zastępują domyślne tylko może obniżyć poziom gwarancji. Nie można ich zwiększanie. Na przykład, jeśli zestaw jest oznaczony za pomocą <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> zagwarantować, typów i członków nie ma żadnej gwarancji, zgodności i innych gwarancji, która jest stosowana do typów ani elementów członkowskich w zestawie jest ignorowana.  
  
## <a name="testing-the-guarantee"></a>Badania firmy Microsoft  
 <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> Właściwość zwraca element członkowski <xref:System.Runtime.Versioning.ComponentGuaranteesOptions> wyliczenia, która jest oznaczona za pomocą <xref:System.FlagsAttribute> atrybutu. Oznacza to, że należy przetestować flagi, które są zainteresowani maskując away potencjalnie nieznaną flagę. Na przykład, następujący przykład sprawdza, czy typ jest oznaczony jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#1)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#1)]  
  
 Następujący przykład sprawdza, czy typ jest oznaczony jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> lub <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>.  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#2)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#2)]  
  
 Następujące przykładowe testy Określa typ jest oznaczony jako <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.None> (oznacza to, że żadna <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Stable> ani <xref:System.Runtime.Versioning.ComponentGuaranteesOptions.Exchange>).  
  
 [!code-csharp[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/cs/apply1.cs#3)]
 [!code-vb[System.Runtime.Versioning.ComponentGuaranteesAttribute.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.versioning.componentguaranteesattribute.class/vb/apply1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Versioning.ComponentGuaranteesOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentGuaranteesAttribute (System.Runtime.Versioning.ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Versioning.ComponentGuaranteesOptions guarantees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Versioning.ComponentGuaranteesAttribute.#ctor(System.Runtime.Versioning.ComponentGuaranteesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (guarantees As ComponentGuaranteesOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentGuaranteesAttribute(System::Runtime::Versioning::ComponentGuaranteesOptions guarantees);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Versioning.ComponentGuaranteesAttribute : System.Runtime.Versioning.ComponentGuaranteesOptions -&gt; System.Runtime.Versioning.ComponentGuaranteesAttribute" Usage="new System.Runtime.Versioning.ComponentGuaranteesAttribute guarantees" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      </Parameters>
      <Docs>
        <param name="guarantees">Jedna z wartości wyliczenia, które określa poziom zgodności, który gwarantuje w wielu wersjach.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.Versioning.ComponentGuaranteesAttribute" /> klasie z atrybutem wartość, która wskazuje biblioteki, typu lub elementu członkowskiego gwarantowane poziom zgodności w wielu wersjach.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute> tworzenia wystąpienia klasy wartości `guarantees` parametr jest przypisany do <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Guarantees">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Versioning.ComponentGuaranteesOptions Guarantees" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Guarantees As ComponentGuaranteesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Versioning::ComponentGuaranteesOptions Guarantees { System::Runtime::Versioning::ComponentGuaranteesOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Guarantees : System.Runtime.Versioning.ComponentGuaranteesOptions" Usage="System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.ComponentGuaranteesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą gwarantowanym poziomem zgodności biblioteki, typu lub składowej typu, która obejmuje wiele wersji.</summary>
        <value>Jedna z wartości wyliczenia, które określa poziom zgodności, który gwarantuje w wielu wersjach.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.Guarantees%2A> właściwość odpowiada `guarantees` parametru <xref:System.Runtime.Versioning.ComponentGuaranteesAttribute.%23ctor%2A> konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>