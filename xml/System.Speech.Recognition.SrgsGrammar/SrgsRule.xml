<Type Name="SrgsRule" FullName="System.Speech.Recognition.SrgsGrammar.SrgsRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8eb47f395f129989b12a0a3a4d44bba433ec536" />
    <Meta Name="ms.sourcegitcommit" Value="84c54c0c7d64827a5637d1f05e74e1f0598606a1" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/27/2018" />
    <Meta Name="ms.locfileid" Value="42961756" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SrgsRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsRule" />
  <TypeSignature Language="F#" Value="type SrgsRule = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Rule={_id.ToString()} Scope={_scope.ToString()}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsRule/SrgsRuleDebugDisplay))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje regułę poprawności gramatycznej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> klasy, aby utworzyć nową regułę w czasie wykonywania lub zmodyfikować reguły w pliku lub istniejącego strumienia gramatyki w czasie wykonywania.  
  
 Słów i fraz, określony przez <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> obiekty zdefiniowane przez gramatyki <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> wystąpień ograniczyć prowadzone danych wejściowych, które aparat rozpoznawania musi mieć możliwość identyfikowania.  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Obiekt określa kolejność, w których wyrazy i frazy musi mówiony przez porządkowania obiektów, zawierające je. Wyrazy i frazy w obrębie reguły są reprezentowane przez obiekty takie jak <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, i <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> elementów. Użyj <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A> właściwość, aby uzyskać dostęp do kolekcji podrzędnej obiekty, które <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> zawiera obiekt.  
  
 Możesz określić, czy <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> można określić w odwołaniu reguły z reguły w gramatyce zewnętrznych, ustawiając jego <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A> właściwości.  
  
 Nie jest dozwolone w celu zdefiniowania <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> oznacza to pusty lub zawiera tylko znak odstępu.  
  
 Ta klasa reprezentuje `rule` element, który jest zdefiniowany w sieci World Wide Web Consortium (W3C) [mowy rozpoznawania gramatyki specyfikacji (SRGS) w wersji 1.0](http://go.microsoft.com/fwlink/?LinkId=201761). Aby uzyskać informacje o SRGS `rule` elementu i szczegółowe informacje dotyczące jej obsługi przez System.Speech, zobacz [reguły elementu](http://msdn.microsoft.com/library/da67b4aa-0545-426a-a02f-1417b968021e).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRule : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRule" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRule id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identyfikator reguły.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> klasy i określa identyfikator dla tej reguły.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> Konstruktor inicjuje <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> właściwości. Identyfikator musi być unikatowa w obrębie danej gramatyki.  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> Konstruktor wyrzuca <xref:System.FormatException> w następujących okolicznościach:  
  
-   `id` nie jest prawidłową nazwą XML, zgodnie z definicją w [języka XML (Extensible Markup) 1.0 (w wersji piątym)](https://www.w3.org/TR/REC-xml/). Aby paraphrase tej definicji, prawidłową nazwą XML musi rozpoczynać się od litery, znaku podkreślenia (_) lub średnikiem (":") i może następować zero lub więcej znaków NameChar (także zdefiniowana w specyfikacji XML).  
  
-   `id` to "NULL" lub "VOID" lub "ODZYSKIWANIE".  
  
-   `id` zawiera co najmniej jeden znak w identyfikatorze nieprawidłową zasadę. Te znaki są: "?", "*", "+", "&#124;", "(',')," ^ ", '$', '/', ';', '.", "=" "\<", ">", "[", "]", "{", "} ','\\\\','", "\t", '\r' i '\n'.  
  
   
  
## Examples  
 Poniższy przykład tworzy gramatyki, który rozpoznaje frazę "kraj, który wygrała świata w piłce nożnej" następuje nazwa kraju, która została wybrana świata w piłce nożnej. W przykładzie jest tworzony <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> obiektu o nazwie `winnerRule` i przekazuje w identyfikatorze `WorldCupWinner` jako <xref:System.String>. <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> Obiekt składa się z szereg nowych <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem> obiektów zawierających alternatywy doceniona przez regułę.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="id" /> jest pusty.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="id" /> nie jest identyfikatorem odpowiednie reguły.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id, params System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, ParamArray elements As SrgsElement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id, ... cli::array &lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsRule : string * System.Speech.Recognition.SrgsGrammar.SrgsElement[] -&gt; System.Speech.Recognition.SrgsGrammar.SrgsRule" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsRule (id, elements)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="elements" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">Identyfikator reguły.</param>
        <param name="elements">Tablica <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> elementów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> klasy przy użyciu tablicy <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> Konstruktor inicjuje <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> właściwości. Identyfikator musi być unikatowa w obrębie danej gramatyki.  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A> Konstruktor wyrzuca <xref:System.FormatException> w następujących okolicznościach:  
  
-   `id` nie jest prawidłową nazwą XML, zgodnie z definicją w [języka XML (Extensible Markup) 1.0 (w wersji piątym)](https://www.w3.org/TR/REC-xml/). Aby paraphrase tej definicji, prawidłową nazwą XML musi rozpoczynać się od litery, znaku podkreślenia (_) lub średnikiem (":") i może następować zero lub więcej znaków NameChar (także zdefiniowana w specyfikacji XML).  
  
-   `id` to "NULL" lub "VOID" lub "ODZYSKIWANIE".  
  
-   `id` zawiera co najmniej jeden znak w identyfikatorze nieprawidłową zasadę. Te znaki są: "?", "*", "+", "&#124;", "(',')," ^ ", '$', '/', ';', '.", "=" "\<", ">", "[", "]", "{", "} ','\\\\','", "\t", '\r' i '\n'.  
  
   
  
## Examples  
 Poniższy przykład tworzy gramatyki, który rozpoznaje frazę "kraj, który wygrała świata w piłce nożnej" następuje nazwa kraju, która została wybrana świata w piłce nożnej. W przykładzie jest tworzony publiczny reguły o nazwie `WorldCupWinner`. Przykład tworzy następnie dwóch <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> obiektów `ruleEurope` i `ruleSAmerica`, przekazując <xref:System.String> dla identyfikatora reguły i <xref:System.Speech.Recognition.SrgsGrammar.SrgsElement> tablica zawierająca <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> obiektu. Następnie w przykładzie dodano reguły odniesienia do `ruleEurope` i `ruleSAmerica` z reguły `WorldCupWinner`.  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  // Create a grammar from an SRGSDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument srgsGrammar = new SrgsDocument ();  
  SrgsRule winnerRule = new SrgsRule ("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add (new SrgsItem ("A nation that has won the world cup is"));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the grammar and make winnerRule  
  // the root rule of the grammar.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  srgsGrammar.Root = winnerRule;  
}  
```  
  
 Utworzono gramatyki ma następującą postać.  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England </item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> jest <see langword="null" />.  
  
 <paramref name="elements" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="id" /> jest pusty.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="id" /> nie jest identyfikatorem odpowiednie reguły.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Speech.Recognition.SrgsGrammar.SrgsElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.SrgsGrammar.SrgsElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Speech::Recognition::SrgsGrammar::SrgsElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Speech.Recognition.SrgsGrammar.SrgsElement -&gt; unit" Usage="srgsRule.Add element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement" />
      </Parameters>
      <Docs>
        <param name="element">Obiekt, który dziedziczy z <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> i określa, jakie mogą być rozpoznawane.</param>
        <summary>Dodaje <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> do <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typowe dodatki do <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> obejmują obiektu <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, i <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> obiekty, które określają, co powiedzieć głośników. Element prawidłowa reguła musi zawierać co najmniej jeden fragment tekstu rozpoznawalnych lub jedno odwołanie do reguły. Zobacz [tworzenie SrgsGrammar przy użyciu Gramatyk](http://msdn.microsoft.com/library/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906) Aby uzyskać więcej informacji.  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> Obiektu może również zawierać <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag> i <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> obiektów, które dodać semantyki wartości i kluczy semantycznego reguły. Aparat rozpoznawania mowy zwróci informacji semantycznych, a także frazy rozpoznawanym po rozpoznaniu frazę. Zobacz [semantycznego znaczników interpretacji](http://msdn.microsoft.com/library/2e115391-73b3-4666-8fd1-540c529de3b0) Aby uzyskać więcej informacji.  
  
   
  
## Examples  
 Poniższy przykład tworzy gramatyki, który rozpoznaje frazę "kraj, który wygrała świata w piłce nożnej" następuje nazwa kraju, która została wybrana świata w piłce nożnej. Po utworzeniu <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> obiektu `winnerRule` i identyfikator ciągu `WorldCupWinner`, w przykładzie użyto <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A> metody Dołącz ciąg "kraj, który wygrała świata w piłce nożnej is" do reguły. Przykład tworzy następnie dwie dodatkowe reguły, `ruleEurope` i `ruleSAmerica`. Ponownie, używając <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A> metoda, przykład dołącza <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf> obiekt `WorldCupWinner` regułę, która zawiera odwołania do reguły do `ruleEurope` i `ruleSAmerica`.  
  
```csharp  
// Create an SrgsDocument, create a new rule  
// and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseClass">
      <MemberSignature Language="C#" Value="public string BaseClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseClass" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseClass : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest obecnie obsługiwane.</summary>
        <value>Nieobsługiwane.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Collection(Of SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ Elements { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt;" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> obiekty w <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> wystąpienia.</summary>
        <value>Kolekcja elementów w regule.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy w <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> obiektu może składać się z <xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>, <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>, i <xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag> obiektów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator dla tej reguły.</summary>
        <value>Identyfikator reguły.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator reguły jest ciąg zawierający nazwę reguły.  
  
 Wartość używana do ustawiania <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A> muszą być zgodne z następującymi zasadami:  
  
-   Wartość musi być prawidłową nazwą XML, zgodnie z definicją w [języka XML (Extensible Markup) 1.0 (w wersji piątym)](https://www.w3.org/TR/REC-xml/). Aby paraphrase tej definicji, prawidłową nazwą XML musi rozpoczynać się od litery, znaku podkreślenia (_) lub średnikiem (":") i może następować zero lub więcej znaków NameChar (także zdefiniowana w specyfikacji XML).  
  
-   Wartość może być "wartości NULL" lub "VOID" lub "ODZYSKIWANIE".  
  
-   Wartość nie może zawierać dowolny znak w identyfikatorze nieprawidłową zasadę. Te znaki są: "?", "*", "+", "&#124;", "(',')," ^ ", '$', '/', ';', '.", "=" "\<", ">", "[", "]", "{", "} ','\\\\','", "\t", '\r' i '\n'.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">Aby ustawić zostanie podjęta próba <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" /> na nieprawidłową wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public string OnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnError" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
      <MemberSignature Language="VB.NET" Value="Public Property OnError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnError : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest obecnie obsługiwane.</summary>
        <value>Nieobsługiwane.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="public string OnInit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnInit" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
      <MemberSignature Language="VB.NET" Value="Public Property OnInit As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnInit { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnInit : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest obecnie obsługiwane.</summary>
        <value>Nieobsługiwane.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="public string OnParse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnParse" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
      <MemberSignature Language="VB.NET" Value="Public Property OnParse As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnParse { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnParse : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest obecnie obsługiwane.</summary>
        <value>Nieobsługiwane.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRecognition">
      <MemberSignature Language="C#" Value="public string OnRecognition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnRecognition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
      <MemberSignature Language="VB.NET" Value="Public Property OnRecognition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnRecognition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnRecognition : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest obecnie obsługiwane.</summary>
        <value>Nieobsługiwane.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As SrgsRuleScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRuleScope Scope { System::Speech::Recognition::SrgsGrammar::SrgsRuleScope get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsRuleScope value); };" />
      <MemberSignature Language="F#" Value="member this.Scope : System.Speech.Recognition.SrgsGrammar.SrgsRuleScope with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informację, czy reguły można aktywować rozpoznawania i reguły mogą być przywoływane przez inne zasady.</summary>
        <value>A wartość zestawy zakres dla tej reguły.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość domyślna dla zakresu to `Private`. Reguła prywatnej można uaktywniać tylko rozpoznawania przez odwołanie reguły z reguły głównego w jego zawierającego gramatyki lub inną regułę, która odwołuje się do reguły głównego. Prywatne reguły nie może odwoływać się zewnętrznych gramatykę, chyba że prywatnej reguły jest zadeklarowany jako reguły głównego jego zawierającego gramatyki.  
  
 Jeśli ustawiono zakres `Public`, <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule> obiektu można aktywować rozpoznawania odwołania z <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef> obiektu w gramatyce zawierającego lub przy użyciu reguły w gramatyce zewnętrznych.  
  
   
  
## Examples  
 Poniższy przykład tworzy gramatyki, który rozpoznaje frazę "kraj, który wygrała świata w piłce nożnej" następuje nazwa kraju, która została wybrana świata w piłce nożnej. Tworzy regułę publicznego o nazwie `WorldCupWinner` i ustawia zakres tej reguły na wartość publiczne.  
  
```csharp  
// Create an SrgsDocument, create a new rule and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope)), new SrgsItem(new SrgsRuleRef(ruleSAmerica)})));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 Utworzono gramatyki ma następującą postać.  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England< /item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Script { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Script : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ta właściwość nie jest obecnie obsługiwane.</summary>
        <value>Nieobsługiwane.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>