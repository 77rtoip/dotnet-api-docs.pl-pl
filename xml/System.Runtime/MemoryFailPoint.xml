<Type Name="MemoryFailPoint" FullName="System.Runtime.MemoryFailPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61e44bc871caa29f826e0555271beb6a45d2de1c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MemoryFailPoint : System.Runtime.ConstrainedExecution.CriticalFinalizerObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemoryFailPoint extends System.Runtime.ConstrainedExecution.CriticalFinalizerObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.MemoryFailPoint" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemoryFailPoint&#xA;Inherits CriticalFinalizerObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryFailPoint sealed : System::Runtime::ConstrainedExecution::CriticalFinalizerObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.ConstrainedExecution.CriticalFinalizerObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ff696-101">Sprawdza, czy wystarczające zasoby pamięci przed wykonaniem operacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff696-101">Checks for sufficient memory resources before executing an operation.</span>
      </span>
      <span data-ttu-id="ff696-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff696-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ff696-103">Ta klasa jest przeznaczony do użycia w zaawansowanych programowanie.</span><span class="sxs-lookup"><span data-stu-id="ff696-103">This class is intended for use in advanced development.</span></span>  
  
 <span data-ttu-id="ff696-104">Utworzenie wystąpienia <xref:System.Runtime.MemoryFailPoint> klasy tworzy bramę pamięci.</span><span class="sxs-lookup"><span data-stu-id="ff696-104">Creating an instance of the <xref:System.Runtime.MemoryFailPoint> class creates a memory gate.</span></span> <span data-ttu-id="ff696-105">Brama pamięci sprawdza wystarczających zasobów przed zainicjowaniem działanie, które wymaga dużej ilości pamięci.</span><span class="sxs-lookup"><span data-stu-id="ff696-105">A memory gate checks for sufficient resources before initiating an activity that requires a large amount of memory.</span></span> <span data-ttu-id="ff696-106">Niepowodzenie sprawdzania powoduje <xref:System.InsufficientMemoryException> zgłaszanego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ff696-106">Failing the check results in an <xref:System.InsufficientMemoryException> exception being thrown.</span></span> <span data-ttu-id="ff696-107">Ten wyjątek uniemożliwia uruchomienie operacji i zmniejsza prawdopodobieństwo wystąpienia błędu powodu braku zasobów.</span><span class="sxs-lookup"><span data-stu-id="ff696-107">This exception prevents an operation from being started and reduces the possibility of failure due to lack of resources.</span></span> <span data-ttu-id="ff696-108">Umożliwia to zmniejszyć wydajność, aby uniknąć <xref:System.OutOfMemoryException> wyjątku i ewentualne uszkodzenia stanu, które mogą wynikać z nieprawidłowej obsługi wyjątków w dowolnej lokalizacji w kodzie.</span><span class="sxs-lookup"><span data-stu-id="ff696-108">This enables you decrease performance to avoid an <xref:System.OutOfMemoryException> exception and any state corruption that may result from improper handling of the exception in arbitrary locations in your code.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ff696-109">Ten typ implementuje <xref:System.IDisposable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="ff696-109">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="ff696-110">Po zakończeniu przy użyciu typu bezpośrednio lub pośrednio należy usunąć z niego.</span><span class="sxs-lookup"><span data-stu-id="ff696-110">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="ff696-111">Do usuwania tego typu, należy wywołać jej <xref:System.IDisposable.Dispose%2A> metody w `try` / `catch` bloku.</span><span class="sxs-lookup"><span data-stu-id="ff696-111">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="ff696-112">Do usunięcia ich pośrednio, użyj konstrukcji języka takiego jak `using` (w języku C#) lub `Using` (w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ff696-112">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="ff696-113">Aby uzyskać więcej informacji, zobacz sekcję "Przy użyciu obiektu który implementuje interfejs IDisposable" w <xref:System.IDisposable> interfejsu tematu.</span><span class="sxs-lookup"><span data-stu-id="ff696-113">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="ff696-114">Przez zgłaszanie <xref:System.InsufficientMemoryException> wyjątek, aplikację można rozróżnić szacunkową operacji nie będzie mógł ukończyć i częściowo ukończoną operację, która może spowodować uszkodzenie stanu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="ff696-114">By throwing an <xref:System.InsufficientMemoryException> exception, an application can distinguish between an estimate that an operation will not be able to complete and  a partially completed operation that may have corrupted the application state.</span></span> <span data-ttu-id="ff696-115">Umożliwia to aplikacji zmniejszyć częstotliwość zasady eskalacji pesymistyczne, które mogą wymagać zwalnianie bieżącego <xref:System.AppDomain> lub odtwarzania procesu.</span><span class="sxs-lookup"><span data-stu-id="ff696-115">This allows an application to reduce the frequency of a pessimistic escalation policy, which may require unloading the current <xref:System.AppDomain> or recycling the process.</span></span>  
  
 <span data-ttu-id="ff696-116"><xref:System.Runtime.MemoryFailPoint> sprawdza, czy są dostępne w wszystkich pamięci sterty wystarczającą ilość pamięci i kolejnych wirtualnej przestrzeni adresowej, a może zwiększyć rozmiar pliku wymiany.</span><span class="sxs-lookup"><span data-stu-id="ff696-116"><xref:System.Runtime.MemoryFailPoint> checks to see whether sufficient memory and consecutive virtual address space are available in all garbage collection heaps, and may increase the size of the swap file.</span></span>  <span data-ttu-id="ff696-117"><xref:System.Runtime.MemoryFailPoint> sprawia, że nie gwarancje dostępności długoterminowych pamięć przez cały okres istnienia bramy, ale wywołań zawsze należy używać <xref:System.Runtime.MemoryFailPoint.Dispose%2A> metody, aby upewnić się, że zasoby skojarzone z <xref:System.Runtime.MemoryFailPoint> są wydawane.</span><span class="sxs-lookup"><span data-stu-id="ff696-117"><xref:System.Runtime.MemoryFailPoint> makes no guarantees regarding the long-term availability of the memory during the lifetime of the gate, but callers should always use the <xref:System.Runtime.MemoryFailPoint.Dispose%2A> method to ensure that resources associated with <xref:System.Runtime.MemoryFailPoint> are released.</span></span>  
  
 <span data-ttu-id="ff696-118">Aby użyć bramy pamięci, należy utworzyć <xref:System.Runtime.MemoryFailPoint> obiektu i określ liczbę megabajtów (MB) pamięci oczekiwanej do użycia w następnej operacji.</span><span class="sxs-lookup"><span data-stu-id="ff696-118">To use a memory gate, you must create a <xref:System.Runtime.MemoryFailPoint> object and specify the number of megabytes (MB) of memory that the next operation is expected to use.</span></span> <span data-ttu-id="ff696-119">Jeśli nie jest dostępna wystarczająca ilość pamięci <xref:System.InsufficientMemoryException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ff696-119">If enough memory is not available, an <xref:System.InsufficientMemoryException> exception is thrown.</span></span>  
  
 <span data-ttu-id="ff696-120">Parametr konstruktora musi być dodatnią liczbą całkowitą.</span><span class="sxs-lookup"><span data-stu-id="ff696-120">The parameter of the constructor must be a positive integer.</span></span> <span data-ttu-id="ff696-121">Wartość ujemna powoduje <xref:System.ArgumentOutOfRangeException> wyjątku.</span><span class="sxs-lookup"><span data-stu-id="ff696-121">A negative value raises an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
 <span data-ttu-id="ff696-122"><xref:System.Runtime.MemoryFailPoint> operuje na poziom szczegółowości 16 MB.</span><span class="sxs-lookup"><span data-stu-id="ff696-122"><xref:System.Runtime.MemoryFailPoint> operates at a granularity of 16 MB.</span></span> <span data-ttu-id="ff696-123">Wszystkie wartości mniejszej niż 16 MB są traktowane jako 16 MB, a inne wartości są traktowane jako największy dalej wielokrotnością 16 MB.</span><span class="sxs-lookup"><span data-stu-id="ff696-123">Any values smaller than 16 MB are treated as 16 MB, and other values are treated as the next largest multiple of 16 MB.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff696-124"><xref:System.Runtime.MemoryFailPoint> umożliwia aplikacji powolna, aby uniknąć brakiem pamięci w sposób błędny.</span><span class="sxs-lookup"><span data-stu-id="ff696-124"><xref:System.Runtime.MemoryFailPoint> enables an application to slow itself to avoid running out of memory in a corrupting manner.</span></span>  <span data-ttu-id="ff696-125">Powinien być używany w zakresie leksykalne.</span><span class="sxs-lookup"><span data-stu-id="ff696-125">It should be used within a lexical scope.</span></span>  <span data-ttu-id="ff696-126">Poniższy przykład powoduje uruchomienie wątków przetwarzania elementów w kolejce pracy.</span><span class="sxs-lookup"><span data-stu-id="ff696-126">The following example launches threads to process items in a work queue.</span></span>  <span data-ttu-id="ff696-127">Przed każdy wątek jest uruchomiony, dostępne zasoby pamięci są zaznaczone, przy użyciu <xref:System.Runtime.MemoryFailPoint>.</span><span class="sxs-lookup"><span data-stu-id="ff696-127">Before each thread is launched, the available memory resources are checked using <xref:System.Runtime.MemoryFailPoint>.</span></span>  <span data-ttu-id="ff696-128">Jeśli wyjątek głównej metody oczekuje, aż przed uruchomieniem następnego wątku jest dostępnej pamięci.</span><span class="sxs-lookup"><span data-stu-id="ff696-128">If an exception is thrown, the main method waits until memory is available before launching the next thread.</span></span>  
  
 [!code-csharp[MemoryFailPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR/MemoryFailPoint/CS/program.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="ff696-129">Wywoływanie niezarządzanego kodu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff696-129">for calling unmanaged code.</span>
      </span>
      <span data-ttu-id="ff696-130">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff696-130">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
      </span>
      <span data-ttu-id="ff696-131">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="ff696-131">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryFailPoint (int sizeInMegabytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 sizeInMegabytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.MemoryFailPoint.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sizeInMegabytes As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryFailPoint(int sizeInMegabytes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sizeInMegabytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeInMegabytes">
          <span data-ttu-id="ff696-132">Rozmiar wymaganej pamięci w megabajtach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-132">The required memory size, in megabytes.</span>
          </span>
          <span data-ttu-id="ff696-133">To musi być wartością dodatnią.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-133">This must be a positive value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff696-134">Inicjuje nowe wystąpienie klasy <see cref="T:System.Runtime.MemoryFailPoint" /> klasy określania ilości pamięci wymaganej do pomyślnego wykonania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-134">Initializes a new instance of the <see cref="T:System.Runtime.MemoryFailPoint" /> class, specifying the amount of memory required for successful execution.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff696-135">Empirycznie można określić ilość pamięci używany przez aplikację do przetworzenia elementu roboczego.</span><span class="sxs-lookup"><span data-stu-id="ff696-135">The amount of memory used by your application to process a work item can be determined empirically.</span></span>  <span data-ttu-id="ff696-136">Aby oszacować ilość pamięci tę aplikację do przetwarzania żądań, należy rozważyć użycie <xref:System.GC.GetTotalMemory%2A?displayProperty=nameWithType> metodę, aby określić ilość pamięci dostępnej przed i po wywołaniu metody, która przetwarza elementu roboczego.</span><span class="sxs-lookup"><span data-stu-id="ff696-136">To estimate the amount of memory your application needs to process a request, consider using the <xref:System.GC.GetTotalMemory%2A?displayProperty=nameWithType> method to determine the amount of memory available before and after calling the method that processes the work item.</span></span> <span data-ttu-id="ff696-137">Zobacz <xref:System.Runtime.MemoryFailPoint> klasy dla przykładowego kodu, który dynamicznie określa wartość `sizeInMegabytes` parametru.</span><span class="sxs-lookup"><span data-stu-id="ff696-137">See the <xref:System.Runtime.MemoryFailPoint> class for a code example that dynamically determines the value for the `sizeInMegabytes` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff696-138">W poniższym przykładzie pokazano sposób określania ilości pamięci, który wymaga metody podczas wykonywania.</span><span class="sxs-lookup"><span data-stu-id="ff696-138">The following example demonstrates how to determine the amount of memory a method requires when executing.</span></span> <span data-ttu-id="ff696-139">Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Runtime.MemoryFailPoint> klasy.</span><span class="sxs-lookup"><span data-stu-id="ff696-139">This code example is part of a larger example provided for the <xref:System.Runtime.MemoryFailPoint> class.</span></span>  
  
 [!code-csharp[MemoryFailPoint#2](~/samples/snippets/csharp/VS_Snippets_CLR/MemoryFailPoint/CS/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ff696-140">Określony rozmiar pamięci jest ujemna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-140">The specified memory size is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.InsufficientMemoryException">
          <span data-ttu-id="ff696-141">Jest za mało pamięci, aby rozpocząć wykonywanie kodu chronione przez bramę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-141">There is insufficient memory to begin execution of the code protected by the gate.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="ff696-142">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-142">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="ff696-143">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-143">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.MemoryFailPoint.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff696-144">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Runtime.MemoryFailPoint" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-144">Releases all resources used by the <see cref="T:System.Runtime.MemoryFailPoint" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff696-145">Wywołanie <xref:System.Runtime.MemoryFailPoint.Dispose%2A> po zakończeniu przy użyciu <xref:System.Runtime.MemoryFailPoint>.</span><span class="sxs-lookup"><span data-stu-id="ff696-145">Call <xref:System.Runtime.MemoryFailPoint.Dispose%2A> when you are finished using the <xref:System.Runtime.MemoryFailPoint>.</span></span> <span data-ttu-id="ff696-146"><xref:System.Runtime.MemoryFailPoint.Dispose%2A> Pozostawia metody <xref:System.Runtime.MemoryFailPoint> w stanie uniemożliwiającym jego używanie.</span><span class="sxs-lookup"><span data-stu-id="ff696-146">The <xref:System.Runtime.MemoryFailPoint.Dispose%2A> method leaves the <xref:System.Runtime.MemoryFailPoint> in an unusable state.</span></span> <span data-ttu-id="ff696-147">Po wywołaniu <xref:System.Runtime.MemoryFailPoint>, konieczne jest zwolnienie wszystkich odwołań do <xref:System.Runtime.MemoryFailPoint> , moduł zbierający elementy bezużyteczne mógł odzyskać pamięć który <xref:System.Runtime.MemoryFailPoint> klasy.</span><span class="sxs-lookup"><span data-stu-id="ff696-147">After calling <xref:System.Runtime.MemoryFailPoint>, you must release all references to the <xref:System.Runtime.MemoryFailPoint> so the garbage collector can reclaim the memory that the <xref:System.Runtime.MemoryFailPoint> was occupying.</span></span> <span data-ttu-id="ff696-148">Aby uzyskać więcej informacji, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="ff696-148">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ff696-149">Wywoływanie zawsze <xref:System.Runtime.MemoryFailPoint.Dispose%2A> przed zwolnieniem ostatniego odwołania do <xref:System.Runtime.MemoryFailPoint>.</span><span class="sxs-lookup"><span data-stu-id="ff696-149">Always call <xref:System.Runtime.MemoryFailPoint.Dispose%2A> before you release your last reference to the <xref:System.Runtime.MemoryFailPoint>.</span></span> <span data-ttu-id="ff696-150">W przeciwnym razie używa zasobów nie zostanie zwolniona do wywołania modułu zbierającego elementy bezużyteczne <xref:System.Runtime.MemoryFailPoint> obiektu `Finalize` metody.</span><span class="sxs-lookup"><span data-stu-id="ff696-150">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Runtime.MemoryFailPoint> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MemoryFailPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.MemoryFailPoint.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!MemoryFailPoint ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff696-151">Gwarantuje, że zasoby są zwalniane i inne operacje oczyszczania są wykonywane, gdy moduł garbage collector zwraca <see cref="T:System.Runtime.MemoryFailPoint" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff696-151">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.MemoryFailPoint" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff696-152">Wywołania modułu zbierającego elementy bezużyteczne <xref:System.Runtime.MemoryFailPoint.Finalize%2A> metody, gdy bieżący obiekt jest gotowy do przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="ff696-152">The garbage collector calls the <xref:System.Runtime.MemoryFailPoint.Finalize%2A> method when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
  </Members>
</Type>