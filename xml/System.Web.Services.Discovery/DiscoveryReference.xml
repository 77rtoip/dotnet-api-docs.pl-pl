<Type Name="DiscoveryReference" FullName="System.Web.Services.Discovery.DiscoveryReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8279268ed01ba0882ffcc2b90eeda2b6dadb98ca" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37543264" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DiscoveryReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DiscoveryReference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Discovery.DiscoveryReference" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DiscoveryReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiscoveryReference abstract" />
  <TypeSignature Language="F#" Value="type DiscoveryReference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Klasa bazowa wykrywalny odwołań, za pomocą odnajdywania usług sieci Web XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Discovery.ContractReference>, <xref:System.Web.Services.Discovery.SchemaReference>, i <xref:System.Web.Services.Discovery.DiscoveryDocumentReference> dziedziczyć wszystkie <xref:System.Web.Services.Discovery.DiscoveryReference>i przedstawiają trzech typów dokumentów, które są odnajdowane odnajdywania usług sieci Web XML: opisy usług, schematy definicji schematu XML (XSD) i Odkryj dokumenty odpowiednio.  
  
   
  
## Examples  
 [!code-cpp[DiscoveryReference1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference1/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference1/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference1/VB/discoveryreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Discovery.ContractReference" />
    <altmember cref="T:System.Web.Services.Discovery.SchemaReference" />
    <altmember cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DiscoveryReference ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DiscoveryReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientProtocol">
      <MemberSignature Language="C#" Value="public System.Web.Services.Discovery.DiscoveryClientProtocol ClientProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Discovery.DiscoveryClientProtocol ClientProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientProtocol As DiscoveryClientProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Discovery::DiscoveryClientProtocol ^ ClientProtocol { System::Web::Services::Discovery::DiscoveryClientProtocol ^ get(); void set(System::Web::Services::Discovery::DiscoveryClientProtocol ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientProtocol : System.Web.Services.Discovery.DiscoveryClientProtocol with get, set" Usage="System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Discovery.DiscoveryClientProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wystąpienie <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> używane w procesie odnajdowania.</summary>
        <value>Wystąpienie <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> używane w procesie odnajdowania</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFilename">
      <MemberSignature Language="C#" Value="public virtual string DefaultFilename { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFilename" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryReference.DefaultFilename" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultFilename As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultFilename { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFilename : string" Usage="System.Web.Services.Discovery.DiscoveryReference.DefaultFilename" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę domyślnego pliku do użycia podczas zapisywania dokumentu odkrywania odwołania, schematu XSD lub opisu usługi.</summary>
        <value>Nazwa pliku domyślny do użycia podczas zapisywania dokumentu odwołania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilenameFromUrl">
      <MemberSignature Language="C#" Value="public static string FilenameFromUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FilenameFromUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FilenameFromUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ FilenameFromUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member FilenameFromUrl : string -&gt; string" Usage="System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Adres URL, na którym opiera się nazwę pliku.</param>
        <summary>Zwraca nazwę pliku, na podstawie przekazanych adresu URL.</summary>
        <returns>Nazwa pliku, na podstawie przekazanych adresu URL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadDocument">
      <MemberSignature Language="C#" Value="public abstract object ReadDocument (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadDocument(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.ReadDocument(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ReadDocument(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ReadDocument : System.IO.Stream -&gt; obj" Usage="discoveryReference.ReadDocument stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> zawierającego w dokumencie referencyjnym.</param>
        <summary>Odczytuje przekazany <see cref="T:System.IO.Stream" /> i zwraca wystąpienie klasy reprezentujący typ dokumentu, której dotyczy odwołanie.</summary>
        <returns>
          <see cref="T:System.Object" /> z typu podstawowego, dopasowanie typu odwołania dokumentu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana jest zawsze <xref:System.Object>. Jednak bazowego typu różni się w zależności od typu przywoływanego dokumentu. Na przykład <xref:System.IO.Stream> przekazany do <xref:System.Web.Services.Discovery.SchemaReference.ReadDocument%2A?displayProperty=nameWithType> Zwraca wystąpienie <xref:System.Xml.Schema.XmlSchema>.  
  
   
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Usuwa, czy odwołania dokumentu jest nieprawidłowy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public void Resolve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resolve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.Resolve" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resolve ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resolve();" />
      <MemberSignature Language="F#" Value="member this.Resolve : unit -&gt; unit" Usage="discoveryReference.Resolve " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pliki do pobrania odwołania dokumentu w <see cref="P:System.Web.Services.Discovery.DiscoveryReference.Url" /> rozpoznać, czy odwołania dokumentu jest nieprawidłowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pliki do pobrania odwołania dokumentu, a następnie wywołuje przeciążone <xref:System.Web.Services.Discovery.DiscoveryReference.Resolve%2A> elementu członkowskiego, która przyjmuje typ MIME i <xref:System.IO.Stream>. Jeśli typ MIME i zawartość `stream` odpowiadają oczekiwano typu odwołania, a następnie zawartość `stream` są dodawane do <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> i <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> właściwości <xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A>.  
  
   
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> Właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="protected internal abstract void Resolve (string contentType, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Resolve(string contentType, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.Resolve(System.String,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void Resolve(System::String ^ contentType, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : string * System.IO.Stream -&gt; unit" Usage="discoveryReference.Resolve (contentType, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="contentType">Typ MIME <c>strumienia</c>.</param>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> Zawierający odwołania dokumentu.</param>
        <summary>Usuwa, czy odwołania dokumentu jest nieprawidłowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli typ MIME i zawartość `stream` odpowiadają oczekiwano typu odwołania, a następnie zawartość `stream` są dodawane do <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.References%2A> i <xref:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents%2A> właściwości <xref:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Discovery.DiscoveryReference.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Services.Discovery.DiscoveryReference.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia adres URL dokumentu, której dotyczy odwołanie.</summary>
        <value>Adres URL dokumentu, której dotyczy odwołanie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[DiscoveryReference#1](~/samples/snippets/cpp/VS_Snippets_Remoting/DiscoveryReference/CPP/discoveryreference.cpp#1)]
 [!code-csharp[DiscoveryReference#1](~/samples/snippets/csharp/VS_Snippets_Remoting/DiscoveryReference/CS/discoveryreference.cs#1)]
 [!code-vb[DiscoveryReference#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/DiscoveryReference/VB/discoveryreference.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteDocument (object document, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocument(object document, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Discovery.DiscoveryReference.WriteDocument(System.Object,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocument(System::Object ^ document, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocument : obj * System.IO.Stream -&gt; unit" Usage="discoveryReference.WriteDocument (document, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="document">Dokument do zapisu do <see cref="T:System.IO.Stream" />.</param>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> Do którego <c>dokumentu</c> są zapisywane.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje dokument <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 DiscoveryReference nr 1  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>