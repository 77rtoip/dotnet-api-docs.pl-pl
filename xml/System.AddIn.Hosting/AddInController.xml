<Type Name="AddInController" FullName="System.AddIn.Hosting.AddInController">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d735f2594e7f97845b6afcb7adffa3a7240b7eb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69337329" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInController" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AddInController extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInController" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInController sealed" />
  <TypeSignature Language="F#" Value="type AddInController = class" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dostęp do dodatku dla różnych zadań.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej klasy, aby wykonać następujące zadania:  
  
-   Użyj właściwości <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> , aby <xref:System.AddIn.Hosting.AddInEnvironment> uzyskać obiekt dla dodatku. Następnie użyj tego obiektu, aby aktywować inne dodatki w tej samej domenie aplikacji i proces jako oryginalny dodatek.  
  
-   Użyj właściwości <xref:System.AddIn.Hosting.AddInController.AppDomain%2A> , aby <xref:System.AppDomain> uzyskać obiekt dla dodatku. Następnie użyj tego obiektu, aby aktywować inne dodatki w tej samej domenie aplikacji co oryginalny dodatek. Należy pamiętać, że ze względu na ograniczenia dotyczące komunikacji zdalnej między procesami, ten scenariusz nie będzie działał z dodatkami, które są aktywowane w osobnym procesie.  
  
-   Użyj właściwości, aby uzyskać obiekt, który reprezentuje dodatek. <xref:System.AddIn.Hosting.AddInToken> <xref:System.AddIn.Hosting.AddInController.Token%2A>  
  
-   Zamknij dodatek przy użyciu <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> metody.  
  
 Aby uzyskać kontroler dla dodatku, należy wywołać <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A> metodę i przekazać wystąpienie dodatku jako parametr.  
  
   
  
## Examples  
 Poniższy przykład aktywuje dodatek w tym samym środowisku co wcześniej aktywowany dodatek przy użyciu <xref:System.AddIn.Hosting.AddInController> obiektu.  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddInEnvironment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInEnvironment AddInEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInEnvironment As AddInEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInEnvironment ^ AddInEnvironment { System::AddIn::Hosting::AddInEnvironment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInEnvironment : System.AddIn.Hosting.AddInEnvironment" Usage="System.AddIn.Hosting.AddInController.AddInEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.AddIn.Hosting.AddInEnvironment" /> Pobiera obiekt.</summary>
        <value>Obiekt, który może służyć do uaktywniania innych dodatków w tym samym środowisku co oryginalny dodatek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby pobrać <xref:System.AddIn.Hosting.AddInEnvironment> obiekt dla dodatku. Następnie użyj tego obiektu, aby aktywować inne dodatki w tej samej domenie aplikacji i proces jako oryginalny dodatek.  
  
   
  
## Examples  
 Poniższy przykład aktywuje drugi dodatek w tym samym środowisku co pierwszy dodatek.  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomain">
      <MemberSignature Language="C#" Value="public AppDomain AppDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomain AppDomain" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppDomain As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomain ^ AppDomain { AppDomain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppDomain : AppDomain" Usage="System.AddIn.Hosting.AddInController.AppDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera domenę aplikacji, która zawiera dodatek.</summary>
        <value>Domena aplikacji dodatku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj tej właściwości, aby uzyskać <xref:System.AppDomain> obiekt dodatku i aktywować inne dodatki w tej samej domenie aplikacji.  
  
   
  
## Examples  
 Poniższy przykład aktywuje drugi dodatek w tej samej domenie aplikacji co pierwszy dodatek.  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddInController">
      <MemberSignature Language="C#" Value="public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.AddIn.Hosting.AddInController GetAddInController(object addIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.GetAddInController(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAddInController (addIn As Object) As AddInController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::AddIn::Hosting::AddInController ^ GetAddInController(System::Object ^ addIn);" />
      <MemberSignature Language="F#" Value="static member GetAddInController : obj -&gt; System.AddIn.Hosting.AddInController" Usage="System.AddIn.Hosting.AddInController.GetAddInController addIn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addIn" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addIn">Widok hosta dodatku.</param>
        <summary>Uzyskuje kontroler dla dodatku.</summary>
        <returns>Kontroler dla dodatku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AddIn.Hosting.AddInToken.Activate%2A> Metody zwracają obiekt, który reprezentuje widok hosta dodatku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInController.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="member this.Shutdown : unit -&gt; unit" Usage="addInController.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyłącza dodatek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przerywa potok komunikacji między dodatkiem a jego hostem. Jeśli dodatek został aktywowany w automatycznie generowanej domenie aplikacji przy użyciu <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29> metod lub <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> , <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> metoda zwalnia także domenę aplikacji.  
  
 Jeśli dodatek został załadowany do własnej domeny aplikacji, <xref:System.AddIn.Hosting.AddInController.Shutdown%2A> metoda zwalnia także domenę aplikacji.  
  
 Jeśli dodatek został załadowany do istniejącej domeny aplikacji, segmenty i potoki potoku nie będą już miały odwołań do tego dodatku. W takim przypadku dodatek będzie uprawniony do odzyskiwania przez wyrzucanie elementów bezużytecznych.  
  
 Można również użyć tej klasy, aby zamknąć dodatek, który jest aktywowany w procesie zewnętrznym.  
  
   
  
## Examples  
 Poniższy przykład pobiera <xref:System.AddIn.Hosting.AddInController> obiekt dla widoku hosta o nazwie `manager` , a następnie zamyka dodatek.  
  
 [!code-csharp[AddInCollectionPipelineHost#6](~/samples/snippets/csharp/VS_Snippets_CLR/AddInCollectionPipelineHost/cs/Program.cs#6)]
 [!code-vb[AddInCollectionPipelineHost#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/AddInCollectionPipelineHost/vb/Program.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AddIn.Hosting.AddInToken Token" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInController.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As AddInToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInToken ^ Token { System::AddIn::Hosting::AddInToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.AddIn.Hosting.AddInToken" Usage="System.AddIn.Hosting.AddInController.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera token, który reprezentuje dodatek.</summary>
        <value>Obiekt, który reprezentuje dodatek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj ta właściwość służy do uzyskania tokenu umożliwiającego aktywację dodatku w późniejszym czasie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
