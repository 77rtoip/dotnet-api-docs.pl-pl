<Type Name="QualificationDataItem" FullName="System.AddIn.Hosting.QualificationDataItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d30dbf5d56e01233c6bbe93b8cf5bb5cbd684f58" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48706039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct QualificationDataItem" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit QualificationDataItem extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.QualificationDataItem" />
  <TypeSignature Language="VB.NET" Value="Public Structure QualificationDataItem" />
  <TypeSignature Language="C++ CLI" Value="public value class QualificationDataItem" />
  <TypeSignature Language="F#" Value="type QualificationDataItem = struct" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje informacje podane przez dewelopera segment potoku do użytku przez hosta.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy element danych kwalifikacji składa się z pary nazwa/wartość, która została zastosowana do segmentów potoku przy użyciu <xref:System.AddIn.Pipeline.QualificationDataAttribute> atrybutu, aby zapewnić informacje, które spełnia warunki użytkowania segmentu (na przykład zalecany poziom izolacji segmentu). <xref:System.AddIn.Hosting.QualificationDataItem> Struktura zawiera pary nazwa/wartość jednego i typ segmentu potoku zostało zastosowane.  
  
 Użyj <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A?displayProperty=nameWithType> właściwości do pobrania zestaw zagnieżdżonych słowników, który zawiera <xref:System.AddIn.Hosting.QualificationDataItem> struktury segmenty potoku skojarzone z <xref:System.AddIn.Hosting.AddInToken>.  
  
 Można również użyć <xref:System.AddIn.Hosting.AddInToken.GetEnumerator%2A?displayProperty=nameWithType> metodę, aby uzyskać moduł wyliczający <xref:System.AddIn.Hosting.QualificationDataItem> struktury segmenty potoku skojarzone z tokenem lub po prostu użyj `foreach` — instrukcja (`For Each` w języku Visual Basic `for each` w programie Visual C++) do Traktuj token tak, jakby był to zbiór <xref:System.AddIn.Hosting.QualificationDataItem> struktury.  
  
   
  
## Examples  
 Poniższy przykład wyświetla listę danych kwalifikacji segmentów potoku związany z każdą <xref:System.AddIn.Hosting.AddInToken> w kolekcji tokenów.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="qualificationDataItem.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania.</param>
        <summary>Określa, czy określony obiekt jest taki sam, z aktualnym elementem danych kwalifikacji.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="obj" /> jest taki sam jak bieżące wystąpienie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="qualificationDataItem.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość skrótu dla tego elementu danych kwalifikacji.</summary>
        <returns>Kod skrótu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.AddIn.Hosting.QualificationDataItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę elementu danych kwalifikacji.</summary>
        <value>Nazwa elementu danych kwalifikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy element danych kwalifikacji składa się z pary nazwa/wartość, która została zastosowana do segmentów potoku przy użyciu <xref:System.AddIn.Pipeline.QualificationDataAttribute> atrybutu do dostarczania informacji klientów dodatku. <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> Właściwości pobiera nazwę. Użyj <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> właściwości, aby uzyskać wartość.  
  
   
  
## Examples  
 Poniższy przykład wyświetla listę danych kwalifikacji segmentów potoku związany z każdą <xref:System.AddIn.Hosting.AddInToken> w kolekcji tokenów. <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> Właściwość jest używana do wyświetlania nazwy każdego elementu.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.AddIn.Hosting.QualificationDataItem item1, valuetype System.AddIn.Hosting.QualificationDataItem item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.op_Equality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (item1 As QualificationDataItem, item2 As QualificationDataItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::AddIn::Hosting::QualificationDataItem item1, System::AddIn::Hosting::QualificationDataItem item2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.AddIn.Hosting.QualificationDataItem * System.AddIn.Hosting.QualificationDataItem -&gt; bool" Usage="item1 = item2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item1" Type="System.AddIn.Hosting.QualificationDataItem" />
        <Parameter Name="item2" Type="System.AddIn.Hosting.QualificationDataItem" />
      </Parameters>
      <Docs>
        <param name="item1">Pierwszy <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> do porównania.</param>
        <param name="item2">Drugi <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> do porównania.</param>
        <summary>Określa, czy dwa <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> struktury są takie same.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="item1" /> i <paramref name="item2" /> są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.AddIn.Hosting.QualificationDataItem item1, System.AddIn.Hosting.QualificationDataItem item2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.AddIn.Hosting.QualificationDataItem item1, valuetype System.AddIn.Hosting.QualificationDataItem item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.QualificationDataItem.op_Inequality(System.AddIn.Hosting.QualificationDataItem,System.AddIn.Hosting.QualificationDataItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (item1 As QualificationDataItem, item2 As QualificationDataItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::AddIn::Hosting::QualificationDataItem item1, System::AddIn::Hosting::QualificationDataItem item2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.AddIn.Hosting.QualificationDataItem * System.AddIn.Hosting.QualificationDataItem -&gt; bool" Usage="System.AddIn.Hosting.QualificationDataItem.op_Inequality (item1, item2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item1" Type="System.AddIn.Hosting.QualificationDataItem" />
        <Parameter Name="item2" Type="System.AddIn.Hosting.QualificationDataItem" />
      </Parameters>
      <Docs>
        <param name="item1">Pierwszy <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> do porównania.</param>
        <param name="item2">Drugi <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> do porównania.</param>
        <summary>Określa, czy dwa <see cref="T:System.AddIn.Hosting.QualificationDataItem" /> struktury są różne.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="item1" /> i <paramref name="item2" /> nie są równe; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Segment">
      <MemberSignature Language="C#" Value="public System.AddIn.Hosting.AddInSegmentType Segment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AddIn.Hosting.AddInSegmentType Segment" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Segment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Segment As AddInSegmentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::AddIn::Hosting::AddInSegmentType Segment { System::AddIn::Hosting::AddInSegmentType get(); };" />
      <MemberSignature Language="F#" Value="member this.Segment : System.AddIn.Hosting.AddInSegmentType" Usage="System.AddIn.Hosting.QualificationDataItem.Segment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AddIn.Hosting.AddInSegmentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która określa segment potoku kwalifikacji, które element danych został zastosowany do.</summary>
        <value>Rodzaj segmentu potoku, w którym element danych został zastosowany do.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wyliczania dane kwalifikacji, należy użyć tej właściwości można zidentyfikować dane kwalifikacji, który należy do określonego segmentu potoku.  
  
> [!NOTE]
>  Model dodatku nie korzysta z danych kwalifikacji, która jest stosowana do widoku hosta dodatku. W rezultacie podczas wyliczania dane kwalifikacji, nie będą dostępne dowolne elementy którego <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> właściwość <xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn>.  
  
   
  
## Examples  
 Poniższy przykład wyświetla listę danych kwalifikacji segmentów potoku związany z każdą <xref:System.AddIn.Hosting.AddInToken> w kolekcji tokenów. <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> Właściwość jest używana do wyświetlania rodzaj segmentu.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.QualificationDataItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.AddIn.Hosting.QualificationDataItem.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość elementu danych kwalifikacji.</summary>
        <value>Wartość elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy element danych kwalifikacji składa się z pary nazwa/wartość, która została zastosowana do segmentów potoku przy użyciu <xref:System.AddIn.Pipeline.QualificationDataAttribute> atrybutu do dostarczania informacji klientów dodatku. <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> Właściwości pobiera wartość. Użyj <xref:System.AddIn.Hosting.QualificationDataItem.Name%2A> właściwości można odczytać nazwy.  
  
   
  
## Examples  
 Poniższy przykład wyświetla listę danych kwalifikacji segmentów potoku związany z każdą <xref:System.AddIn.Hosting.AddInToken> w kolekcji tokenów. <xref:System.AddIn.Hosting.QualificationDataItem.Value%2A> Właściwość jest używana do wyświetlania wartości elementu.  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>