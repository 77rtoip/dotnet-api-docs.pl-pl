<Type Name="IArgumentProvider" FullName="System.Linq.Expressions.IArgumentProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="978f18032b1aec687a3f90531a776cb2a47a2705" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67244478" /></Metadata><TypeSignature Language="C#" Value="public interface IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IArgumentProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="25207-101">Interfejs wewnętrzny do uzyskiwania dostępu do argumentów wiele węzłów drzewa (DynamicExpression ElementInit, MethodCallExpression, InvocationExpression, NewExpression i IndexExpression).</span><span class="sxs-lookup"><span data-stu-id="25207-101">Provides an internal interface for accessing the arguments of multiple tree nodes (DynamicExpression, ElementInit, MethodCallExpression, InvocationExpression, NewExpression, and IndexExpression).</span></span>  <span data-ttu-id="25207-102">Ten interfejs API jest tylko do użytku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="25207-102">This API is for internal use only.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
      
## Remarks

<span data-ttu-id="25207-103">Nie należy używać tego interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="25207-103">You should not use this API.</span></span>  <span data-ttu-id="25207-104">Nie jest publiczny wyłącznie z powodu zestawu refaktoryzacji, a istnieje tylko w przypadku optymalizacji wydajności wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="25207-104">It is public only due to assembly refactoring, and it exists only for internal performance optimizations.</span></span> <span data-ttu-id="25207-105">Umożliwia ona dwóch optymalizacje, które zmniejszają rozmiar drzewa:</span><span class="sxs-lookup"><span data-stu-id="25207-105">It enables two optimizations that reduce the size of the trees:</span></span>
  
1. <span data-ttu-id="25207-106">Umożliwia ona węzły, które mają być przechowywane <xref:System.Collections.Generic.IList%601> zamiast <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="25207-106">It enables the nodes to hold onto an <xref:System.Collections.Generic.IList%601> instead of a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  <span data-ttu-id="25207-107">Spowoduje to zapisanie koszt przydzielanie kolekcji tylko do odczytu dla każdego węzła.</span><span class="sxs-lookup"><span data-stu-id="25207-107">This saves the cost of allocating the read-only collection for each node.</span></span>
  
2. <span data-ttu-id="25207-108">Umożliwia ona wyspecjalizowane podklasy ma zostać utworzony na blokady do określonej liczby argumentów (na przykład `Block2`, `Block2`, `Block4`).</span><span class="sxs-lookup"><span data-stu-id="25207-108">It enables specialized subclasses to be created that hold on to a specific number of arguments (for example, `Block2`, `Block2`, `Block4`).</span></span>  <span data-ttu-id="25207-109">Dlatego te węzły unikać zarówno <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> i Tablica do przechowywania elementów w związku z tym zapisywanie 32 bajtów w każdym węźle.</span><span class="sxs-lookup"><span data-stu-id="25207-109">Therefore, these nodes avoid allocating both a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> and an array for storing their elements, thus saving 32 bytes per node.</span></span>  <span data-ttu-id="25207-110">Ta technika jest używana przez różnych węzłów, w tym <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, i <xref:System.Linq.Expressions.MethodCallExpression>.</span><span class="sxs-lookup"><span data-stu-id="25207-110">This technique is used by various nodes, including <xref:System.Linq.Expressions.BlockExpression>, <xref:System.Linq.Expressions.InvocationExpression>, and <xref:System.Linq.Expressions.MethodCallExpression>.</span></span>
            
<span data-ttu-id="25207-111">Węzły drzewa wyrażeń w dalszym ciągu udostępnianie oryginalne właściwości LINQ <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> obiektów.</span><span class="sxs-lookup"><span data-stu-id="25207-111">The expression tree nodes continue to expose the original LINQ properties of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> objects.</span></span> <span data-ttu-id="25207-112">Mogą to zrobić dzięki ponownemu wykorzystaniu pole do przechowywania zarówno tablicy lub element, który normalnie powinny być przechowywane w tablicy.</span><span class="sxs-lookup"><span data-stu-id="25207-112">They do this by reusing a field for storing both the array or an element that would normally be stored in the array.</span></span>
            
<span data-ttu-id="25207-113">W przypadku tablicy jest wpisany kolekcji <xref:System.Collections.Generic.IList%601> zamiast <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="25207-113">For the array case, the collection is typed to <xref:System.Collections.Generic.IList%601> instead of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="25207-114">Gdy węzeł początkowo jest konstruowany, jest tablicą.</span><span class="sxs-lookup"><span data-stu-id="25207-114">When the node is initially constructed, it is an array.</span></span>  <span data-ttu-id="25207-115">Kompilator lub narzędzi w tej bibliotece uzyskać dostęp do elementów za pomocą tego interfejsu.</span><span class="sxs-lookup"><span data-stu-id="25207-115">The compiler or utilities in this library access the elements through this interface.</span></span> <span data-ttu-id="25207-116">Uzyskiwanie dostępu do elementów tablicy promuje macierzy <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="25207-116">Accessing array elements promotes the array to a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="25207-117">W przypadku obiektu pierwszy argument jest przechowywany w wpisane w polu <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="25207-117">For the object case, the first argument is stored in a field typed to <xref:System.Object>.</span></span> <span data-ttu-id="25207-118">Gdy węzeł początkowo jest konstruowany, to pole zawiera <xref:System.Linq.Expressions.Expression> pierwszego argumentu.</span><span class="sxs-lookup"><span data-stu-id="25207-118">When the node is initially constructed, this field holds the <xref:System.Linq.Expressions.Expression> of the first argument.</span></span>  <span data-ttu-id="25207-119">Kompilator i narzędzia w tej bibliotece dostęp do argumentów, ponownie użyć tego interfejsu, gdy metody dostępu dla pierwszego argumentu używa wewnętrznego `Expression.ReturnObject<T>(System.Object)` metody pomocnika, aby zwrócić obiekt, który obsługuje <xref:System.Linq.Expressions.Expression> lub <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> przypadek.</span><span class="sxs-lookup"><span data-stu-id="25207-119">When the compiler and utilities in this library access the arguments, they again use this interface, and the accessor for the first argument uses the internal `Expression.ReturnObject<T>(System.Object)` helper method to return the object that handles the <xref:System.Linq.Expressions.Expression> or <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> case.</span></span> <span data-ttu-id="25207-120">Gdy użytkownik uzyskuje dostęp do <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, pole Obiekt jest aktualizowany do przechowywania bezpośrednio na <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="25207-120">When the user accesses the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>, the object field is updated to hold directly onto the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>
            
<span data-ttu-id="25207-121">Ważne jest, że <xref:System.Linq.Expressions.Expression> właściwości stale zwracają takie same <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="25207-121">It is important that <xref:System.Linq.Expressions.Expression> properties consistently return the same <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span> <span data-ttu-id="25207-122">W przeciwnym razie walker drzewa dysków, które są używane przez osoby odwiedzające wyrażenia spowoduje awarię.</span><span class="sxs-lookup"><span data-stu-id="25207-122">Otherwise, the rewriter tree walker used by expression visitors will break.</span></span> <span data-ttu-id="25207-123">Jest istotną zmianę z LINQ w wersji 1, aby zwracać różne <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> z tej samej <xref:System.Linq.Expressions.Expression> węzła.</span><span class="sxs-lookup"><span data-stu-id="25207-123">It is a breaking change from LINQ v1 to return different <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> from the same <xref:System.Linq.Expressions.Expression> node.</span></span> <span data-ttu-id="25207-124">Obecnie użytkownicy polegać na tożsamość obiektu, aby sprawdzić, czy węzeł został zmieniony.</span><span class="sxs-lookup"><span data-stu-id="25207-124">Currently, users can rely on object identity to tell if the node has changed.</span></span>  <span data-ttu-id="25207-125">Przechowywanie <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> pola jest przeciążona zarówno zmniejsza użycie pamięci i zachowuje zgodność z publicznego interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="25207-125">Storing the <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> in an overloaded field both reduces memory usage and maintains compatibility for the public API.</span></span>

      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentCount">
      <MemberSignature Language="C#" Value="public int ArgumentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArgumentCount" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArgumentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentCount : int" Usage="System.Linq.Expressions.IArgumentProvider.ArgumentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25207-126">Zwraca liczbę argumentów do węzła drzewa wyrażeń.</span><span class="sxs-lookup"><span data-stu-id="25207-126">Returns the number of arguments to the expression tree node.</span></span> <span data-ttu-id="25207-127">Ten interfejs API jest tylko do użytku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="25207-127">This API is for internal use only.</span></span></summary>
        <value><span data-ttu-id="25207-128">Liczba argumentów dla węzła drzewa wyrażeń jako <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="25207-128">The number of arguments to the expression tree node as <see cref="T:System.Int32" />.</span></span></value>
        <remarks><span data-ttu-id="25207-129">Nie należy używać tego interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="25207-129">You should not use this API.</span></span> <span data-ttu-id="25207-130">Nie jest publiczny wyłącznie z powodu zestawu refaktoryzacji i jest używana wewnętrznie do optymalizacji wydajności.</span><span class="sxs-lookup"><span data-stu-id="25207-130">It is public only due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgument">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetArgument (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetArgument(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IArgumentProvider.GetArgument(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgument (index As Integer) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetArgument(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetArgument : int -&gt; System.Linq.Expressions.Expression" Usage="iArgumentProvider.GetArgument index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="25207-131">Indeks argumentu.</span><span class="sxs-lookup"><span data-stu-id="25207-131">The index of the argument.</span></span></param>
        <summary><span data-ttu-id="25207-132">Zwraca wartość argumentu w <paramref name="index" />, zgłaszanie przypadku <paramref name="index" /> jest poza zakresem.</span><span class="sxs-lookup"><span data-stu-id="25207-132">Returns the argument at <paramref name="index" />, throwing if <paramref name="index" /> is out of bounds.</span></span> <span data-ttu-id="25207-133">Ten interfejs API jest tylko do użytku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="25207-133">This API is for internal use only.</span></span></summary>
        <returns><span data-ttu-id="25207-134">Argument w indeksie.</span><span class="sxs-lookup"><span data-stu-id="25207-134">The argument at index.</span></span></returns>
        <remarks><span data-ttu-id="25207-135">Nie należy używać tego interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="25207-135">You should not use this API.</span></span>  <span data-ttu-id="25207-136">Nie jest tylko publiczny z powodu zestawu refaktoryzacji i jest używana wewnętrznie do optymalizacji wydajności.</span><span class="sxs-lookup"><span data-stu-id="25207-136">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span></span></remarks>
      </Docs>
    </Member>
  </Members>
</Type>