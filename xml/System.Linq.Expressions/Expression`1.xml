<Type Name="Expression&lt;TDelegate&gt;" FullName="System.Linq.Expressions.Expression&lt;TDelegate&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67ceb631bef73bf2cafc31c57e4bedd25546eaac" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69278415" /></Metadata><TypeSignature Language="C#" Value="public sealed class Expression&lt;TDelegate&gt; : System.Linq.Expressions.LambdaExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Expression`1&lt;TDelegate&gt; extends System.Linq.Expressions.LambdaExpression" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.Expression`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Expression(Of TDelegate)&#xA;Inherits LambdaExpression" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TDelegate&gt;&#xA;public ref class Expression sealed : System::Linq::Expressions::LambdaExpression" />
  <TypeSignature Language="F#" Value="type Expression&lt;'Delegate&gt; = class&#xA;    inherit LambdaExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TDelegate" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Linq.Expressions.LambdaExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TDelegate"><span data-ttu-id="9748a-101">Typ delegata, który <see cref="T:System.Linq.Expressions.Expression`1" /> reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="9748a-101">The type of the delegate that the <see cref="T:System.Linq.Expressions.Expression`1" /> represents.</span></span></typeparam>
    <summary><span data-ttu-id="9748a-102">Reprezentuje silnie wpisane wyrażenie lambda jako strukturę danych w postaci drzewa wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="9748a-102">Represents a strongly typed lambda expression as a data structure in the form of an expression tree.</span></span> <span data-ttu-id="9748a-103">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="9748a-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9748a-104">Gdy wyrażenie lambda jest przypisane do zmiennej, pola lub parametru, którego typem jest <xref:System.Linq.Expressions.Expression%601>, kompilator emituje instrukcje w celu skompilowania drzewa wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="9748a-104">When a lambda expression is assigned to a variable, field, or parameter whose type is <xref:System.Linq.Expressions.Expression%601>, the compiler emits instructions to build an expression tree.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9748a-105">Konwersja z wyrażenia lambda do typu `Expression<D>` (`Expression(Of D)` w Visual Basic) istnieje, jeśli konwersja z wyrażenia lambda do delegata typu `D` istnieje.</span><span class="sxs-lookup"><span data-stu-id="9748a-105">A conversion from a lambda expression to type `Expression<D>` (`Expression(Of D)` in Visual Basic) exists if a conversion from the lambda expression to a delegate of type `D` exists.</span></span> <span data-ttu-id="9748a-106">Jednak Konwersja może się nie powieść, na przykład jeśli treść wyrażenia lambda jest blokiem.</span><span class="sxs-lookup"><span data-stu-id="9748a-106">However, the conversion may fail, for example, if the body of the lambda expression is a block.</span></span> <span data-ttu-id="9748a-107">Oznacza to, że Delegaty i drzewa wyrażeń zachowują się podobnie w odniesieniu do rozdzielczości przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="9748a-107">This means that delegates and expression trees behave similarly with regard to overload resolution.</span></span>  
  
 <span data-ttu-id="9748a-108">Drzewo wyrażenia jest reprezentacją danych w pamięci wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="9748a-108">The expression tree is an in-memory data representation of the lambda expression.</span></span> <span data-ttu-id="9748a-109">Drzewo wyrażenia powoduje, że struktura wyrażenia lambda jest przezroczysta i jawna.</span><span class="sxs-lookup"><span data-stu-id="9748a-109">The expression tree makes the structure of the lambda expression transparent and explicit.</span></span> <span data-ttu-id="9748a-110">Można korzystać z danych w drzewie wyrażenia tak samo jak w przypadku każdej innej struktury danych.</span><span class="sxs-lookup"><span data-stu-id="9748a-110">You can interact with the data in the expression tree just as you can with any other data structure.</span></span>  
  
 <span data-ttu-id="9748a-111">Możliwość traktowania wyrażeń jako struktur danych umożliwia interfejsom API otrzymywanie kodu użytkownika w formacie, który może być sprawdzany, przekształcony i przetwarzany w sposób niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="9748a-111">The ability to treat expressions as data structures enables APIs to receive user code in a format that can be inspected, transformed, and processed in a custom manner.</span></span> <span data-ttu-id="9748a-112">Na przykład [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] implementacja dostępu do danych używa tej funkcji do tłumaczenia drzew wyrażeń na instrukcje języka Transact-SQL, które mogą być oceniane przez bazę danych.</span><span class="sxs-lookup"><span data-stu-id="9748a-112">For example, the [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)] data access implementation uses this facility to translate expression trees to Transact-SQL statements that can be evaluated by the database.</span></span>  
  
 <span data-ttu-id="9748a-113">Wiele standardowych operatorów zapytań zdefiniowanych w <xref:System.Linq.Queryable> klasie ma jeden lub więcej parametrów typu. <xref:System.Linq.Expressions.Expression%601></span><span class="sxs-lookup"><span data-stu-id="9748a-113">Many standard query operators defined in the <xref:System.Linq.Queryable> class have one or more parameters of type <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="9748a-114"><xref:System.Linq.Expressions.Expression.NodeType%2A> Jest to<xref:System.Linq.Expressions.ExpressionType.Lambda>. <xref:System.Linq.Expressions.Expression%601></span><span class="sxs-lookup"><span data-stu-id="9748a-114">The <xref:System.Linq.Expressions.Expression.NodeType%2A> of an <xref:System.Linq.Expressions.Expression%601> is <xref:System.Linq.Expressions.ExpressionType.Lambda>.</span></span>  
  
 <span data-ttu-id="9748a-115">Użyj metody <xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.ParameterExpression%5B%5D%29> <xref:System.Linq.Expressions.Expression%601> lub, aby utworzyć obiekt. <xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.ParameterExpression%7D%29></span><span class="sxs-lookup"><span data-stu-id="9748a-115">Use the <xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.ParameterExpression%7D%29> or <xref:System.Linq.Expressions.Expression.Lambda%60%601%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.ParameterExpression%5B%5D%29> method to create an <xref:System.Linq.Expressions.Expression%601> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9748a-116">Poniższy przykład kodu demonstruje, jak reprezentować wyrażenie lambda zarówno jako kod wykonywalny w formie delegata, jak i jako dane w postaci drzewa wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="9748a-116">The following code example demonstrates how to represent a lambda expression both as executable code in the form of a delegate and as data in the form of an expression tree.</span></span> <span data-ttu-id="9748a-117">Pokazano również, jak przekształcić drzewo wyrażeń z powrotem do kodu wykonywalnego za pomocą <xref:System.Linq.Expressions.Expression%601.Compile%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9748a-117">It also demonstrates how to turn the expression tree back into executable code by using the <xref:System.Linq.Expressions.Expression%601.Compile%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionT#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.ExpressionT/CS/ExpressionT.cs#1)]
 [!code-vb[System.Linq.Expressions.ExpressionT#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.ExpressionT/VB/ExpressionT.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md"><span data-ttu-id="9748a-118">Wyrażenia lambda (Przewodnik programowania w języku C#)</span><span class="sxs-lookup"><span data-stu-id="9748a-118">Lambda Expressions (C# Programming Guide)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/fb1d3ed8-d5b0-4211-a71f-dd271529294b"><span data-ttu-id="9748a-119">Drzewa wyrażeń</span><span class="sxs-lookup"><span data-stu-id="9748a-119">Expression Trees</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected internal override System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Linq.Expressions.Expression Accept(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression`1.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function Accept (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Linq::Expressions::Expression ^ Accept(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="expression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="visitor"><span data-ttu-id="9748a-120">Odwiedzający, aby odwiedzić ten węzeł przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="9748a-120">The visitor to visit this node with.</span></span></param>
        <summary><span data-ttu-id="9748a-121">Wysyła do określonej metody odwiedzin dla tego typu węzła.</span><span class="sxs-lookup"><span data-stu-id="9748a-121">Dispatches to the specific visit method for this node type.</span></span></summary>
        <returns><span data-ttu-id="9748a-122">Wynik odwiedzania tego węzła.</span><span class="sxs-lookup"><span data-stu-id="9748a-122">The result of visiting this node.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public TDelegate Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TDelegate Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression`1.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile () As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TDelegate Compile();" />
      <MemberSignature Language="F#" Value="override this.Compile : unit -&gt; 'Delegate" Usage="expression.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9748a-123">Kompiluje wyrażenie lambda opisane przez drzewo wyrażenia do kodu wykonywalnego i tworzy delegata reprezentujący wyrażenie lambda.</span><span class="sxs-lookup"><span data-stu-id="9748a-123">Compiles the lambda expression described by the expression tree into executable code and produces a delegate that represents the lambda expression.</span></span></summary>
        <returns><span data-ttu-id="9748a-124">Delegat typu <paramref name="TDelegate" /> reprezentujący skompilowane wyrażenie lambda opisane <see cref="T:System.Linq.Expressions.Expression`1" />przez.</span><span class="sxs-lookup"><span data-stu-id="9748a-124">A delegate of type <paramref name="TDelegate" /> that represents the compiled lambda expression described by the <see cref="T:System.Linq.Expressions.Expression`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9748a-125">Metoda tworzy delegata typu `TDelegate` w czasie wykonywania. <xref:System.Linq.Expressions.Expression%601.Compile%2A></span><span class="sxs-lookup"><span data-stu-id="9748a-125">The <xref:System.Linq.Expressions.Expression%601.Compile%2A> method produces a delegate of type `TDelegate` at runtime.</span></span> <span data-ttu-id="9748a-126">Gdy ten delegat jest wykonywany, ma zachowanie opisane przez semantykę <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="9748a-126">When that delegate is executed, it has the behavior described by the semantics of the <xref:System.Linq.Expressions.Expression%601>.</span></span>  
  
 <span data-ttu-id="9748a-127"><xref:System.Linq.Expressions.Expression%601.Compile%2A> Metoda może służyć do uzyskania wartości dowolnego drzewa wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="9748a-127">The <xref:System.Linq.Expressions.Expression%601.Compile%2A> method can be used to obtain the value of any expression tree.</span></span> <span data-ttu-id="9748a-128">Najpierw utwórz wyrażenie lambda, które ma wyrażenie jako treść przy użyciu <xref:System.Linq.Expressions.Expression.Lambda%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9748a-128">First, create a lambda expression that has the expression as its body by using the <xref:System.Linq.Expressions.Expression.Lambda%2A> method.</span></span> <span data-ttu-id="9748a-129">Następnie Wywołaj <xref:System.Linq.Expressions.Expression%601.Compile%2A> , aby uzyskać delegata, i wykonaj delegata, aby uzyskać wartość wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="9748a-129">Then call <xref:System.Linq.Expressions.Expression%601.Compile%2A> to obtain a delegate, and execute the delegate to obtain the value of the expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9748a-130">Poniższy przykład kodu demonstruje, jak <xref:System.Linq.Expressions.Expression%601.Compile%2A> jest używany do wykonywania drzewa wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="9748a-130">The following code example demonstrates how <xref:System.Linq.Expressions.Expression%601.Compile%2A> is used to execute an expression tree.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionT#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.ExpressionT/CS/ExpressionT.cs#2)]
 [!code-vb[System.Linq.Expressions.ExpressionT#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.ExpressionT/VB/ExpressionT.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public TDelegate Compile (bool preferInterpretation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TDelegate Compile(bool preferInterpretation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression`1.Compile(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compile (preferInterpretation As Boolean) As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TDelegate Compile(bool preferInterpretation);" />
      <MemberSignature Language="F#" Value="override this.Compile : bool -&gt; 'Delegate" Usage="expression.Compile preferInterpretation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preferInterpretation" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="preferInterpretation"><span data-ttu-id="9748a-131"><see langword="true" />Aby wskazać, że wyrażenie powinno być kompilowane do postaci interpretowanej, jeśli jest dostępne; <see langword="false" /> w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="9748a-131"><see langword="true" /> to indicate that the expression should be compiled to an interpreted form, if it is available; <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="9748a-132">Kompiluje wyrażenie lambda opisane przez drzewo wyrażenia w kodzie interpretowanym lub skompilowanym i tworzy delegata reprezentujący wyrażenie lambda.</span><span class="sxs-lookup"><span data-stu-id="9748a-132">Compiles the lambda expression described by the expression tree into interpreted or compiled code and produces a delegate that represents the lambda expression.</span></span></summary>
        <returns><span data-ttu-id="9748a-133">Delegat reprezentujący skompilowane wyrażenie lambda opisane przez <see cref="T:System.Linq.Expressions.Expression`1" />.</span><span class="sxs-lookup"><span data-stu-id="9748a-133">A delegate that represents the compiled lambda expression described by the <see cref="T:System.Linq.Expressions.Expression`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public TDelegate Compile (System.Runtime.CompilerServices.DebugInfoGenerator debugInfoGenerator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TDelegate Compile(class System.Runtime.CompilerServices.DebugInfoGenerator debugInfoGenerator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression`1.Compile(System.Runtime.CompilerServices.DebugInfoGenerator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TDelegate Compile(System::Runtime::CompilerServices::DebugInfoGenerator ^ debugInfoGenerator);" />
      <MemberSignature Language="F#" Value="override this.Compile : System.Runtime.CompilerServices.DebugInfoGenerator -&gt; 'Delegate" Usage="expression.Compile debugInfoGenerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="debugInfoGenerator" Type="System.Runtime.CompilerServices.DebugInfoGenerator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="debugInfoGenerator"><span data-ttu-id="9748a-134">Generator informacji debugowania używany przez kompilator do oznaczania punktów sekwencji i dodawania adnotacji do zmiennych lokalnych.</span><span class="sxs-lookup"><span data-stu-id="9748a-134">Debugging information generator used by the compiler to mark sequence points and annotate local variables.</span></span></param>
        <summary><span data-ttu-id="9748a-135">Tworzy delegata, który reprezentuje wyrażenie lambda.</span><span class="sxs-lookup"><span data-stu-id="9748a-135">Produces a delegate that represents the lambda expression.</span></span></summary>
        <returns><span data-ttu-id="9748a-136">Delegat zawierający skompilowaną wersję wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="9748a-136">A delegate containing the compiled version of the lambda.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression&lt;TDelegate&gt; Update (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression`1&lt;!TDelegate&gt; Update(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression`1.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (body As Expression, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Update(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Update : System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.Expression&lt;'Delegate&gt;" Usage="expression.Update (body, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="9748a-137"><see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> Właściwość wyniku.</span><span class="sxs-lookup"><span data-stu-id="9748a-137">The <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property of the result.</span></span></param>
        <param name="parameters"><span data-ttu-id="9748a-138"><see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> Właściwość wyniku.</span><span class="sxs-lookup"><span data-stu-id="9748a-138">The <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> property of the result.</span></span></param>
        <summary><span data-ttu-id="9748a-139">Tworzy nowe wyrażenie, które jest podobne do tego, ale przy użyciu podanych elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="9748a-139">Creates a new expression that is like this one, but using the supplied children.</span></span> <span data-ttu-id="9748a-140">Jeśli wszystkie elementy podrzędne są takie same, zwróci wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="9748a-140">If all of the children are the same, it will return this expression.</span></span></summary>
        <returns><span data-ttu-id="9748a-141">To wyrażenie, jeśli żadne elementy podrzędne nie są zmieniane lub wyrażenie ze zaktualizowanymi elementami podrzędnymi.</span><span class="sxs-lookup"><span data-stu-id="9748a-141">This expression if no children are changed or an expression with the updated children.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
