<Type Name="Expression" FullName="System.Linq.Expressions.Expression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0971025e96a96fe9dd01fb4474fa27260c00135" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69118369" /></Metadata><TypeSignature Language="C#" Value="public abstract class Expression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Expression extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.Expression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Expression" />
  <TypeSignature Language="C++ CLI" Value="public ref class Expression abstract" />
  <TypeSignature Language="F#" Value="type Expression = class" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eb4ed-101">Dostarcza klasę bazową, z której są wyprowadzane klasy, które reprezentują węzły drzewa wyrażeń.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-101">Provides the base class from which the classes that represent expression tree nodes are derived.</span></span> <span data-ttu-id="eb4ed-102">Zawiera <see langword="static" /> również metody fabryki<see langword="Shared" /> (w Visual Basic) do tworzenia różnych typów węzłów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-102">It also contains <see langword="static" /> (<see langword="Shared" /> in Visual Basic) factory methods to create the various node types.</span></span> <span data-ttu-id="eb4ed-103">Jest <see langword="abstract" /> to Klasa.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-103">This is an <see langword="abstract" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-104">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-104">The following code example shows how to create a block expression.</span></span> <span data-ttu-id="eb4ed-105">Wyrażenie bloku składa się z <xref:System.Linq.Expressions.MethodCallExpression> dwóch obiektów i <xref:System.Linq.Expressions.ConstantExpression> jednego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-105">The block expression consists of two <xref:System.Linq.Expressions.MethodCallExpression> objects and one <xref:System.Linq.Expressions.ConstantExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#13)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-106">Tworzy nowe wystąpienie <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-106">Constructs a new instance of <see cref="T:System.Linq.Expressions.Expression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Expression ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Expression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb4ed-107">Tworzy nowe wystąpienie <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-107">Constructs a new instance of <see cref="T:System.Linq.Expressions.Expression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Expression (System.Linq.Expressions.ExpressionType nodeType, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Linq.Expressions.ExpressionType nodeType, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Expression(System::Linq::Expressions::ExpressionType nodeType, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Linq.Expressions.Expression : System.Linq.Expressions.ExpressionType * Type -&gt; System.Linq.Expressions.Expression" Usage="new System.Linq.Expressions.Expression (nodeType, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("use a different constructor that does not take ExpressionType. Then override NodeType and Type properties to provide the values that would be specified to this constructor.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="nodeType" Type="System.Linq.Expressions.ExpressionType" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="nodeType"><span data-ttu-id="eb4ed-108"><see cref="T:System.Linq.Expressions.ExpressionType" /> Do ustawienia jako typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-108">The <see cref="T:System.Linq.Expressions.ExpressionType" /> to set as the node type.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-109">W <see cref="P:System.Linq.Expressions.Expression.Type" /> tym<see cref="T:System.Linq.Expressions.Expression" />celu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-109">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of this <see cref="T:System.Linq.Expressions.Expression" />.</span></span></param>
        <summary><span data-ttu-id="eb4ed-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Linq.Expressions.Expression" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-110">Initializes a new instance of the <see cref="T:System.Linq.Expressions.Expression" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-111">Ten konstruktor jest wywoływany z konstruktorów w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-111">This constructor is called from constructors in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected internal virtual System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Linq.Expressions.Expression Accept(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function Accept (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Linq::Expressions::Expression ^ Accept(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="abstract member Accept : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression&#xA;override this.Accept : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="expression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="visitor"><span data-ttu-id="eb4ed-112">Odwiedzający, aby odwiedzić ten węzeł przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-112">The visitor to visit this node with.</span></span></param>
        <summary><span data-ttu-id="eb4ed-113">Wysyła do określonej metody odwiedzin dla tego typu węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-113">Dispatches to the specific visit method for this node type.</span></span> <span data-ttu-id="eb4ed-114">Na przykład program <see cref="T:System.Linq.Expressions.MethodCallExpression" /> <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />wywołuje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-114">For example, <see cref="T:System.Linq.Expressions.MethodCallExpression" /> calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-115">Wynik odwiedzania tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-115">The result of visiting this node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-116">Ta domyślna implementacja dla <xref:System.Linq.Expressions.ExpressionType.Extension> węzłów wywołuje <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-116">This default implementation for <xref:System.Linq.Expressions.ExpressionType.Extension> nodes calls <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span> <span data-ttu-id="eb4ed-117">Zastąp tę metodę, aby wywołać bardziej konkretną metodę na pochodnej klasie <xref:System.Linq.Expressions.ExpressionVisitor> odwiedzającej klasy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-117">Override this method to call into a more specific method on a derived visitor class of the <xref:System.Linq.Expressions.ExpressionVisitor> class.</span></span> <span data-ttu-id="eb4ed-118">Jednak nadal powinien obsługiwać nieznanych odwiedzających przez wywoływanie <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-118">However, it should still support unknown visitors by calling <xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-119">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dodawania arytmetycznego, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-119">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Add(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Add(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Add : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Add (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-120">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-120">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-121">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-121">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-122">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dodawania arytmetycznego, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-122">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-123"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-123">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-124">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-124">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-125"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-125">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-126">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-126">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-127">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-127">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-128"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-128">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-129">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-129">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-130">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-130">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-131">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-131">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-132"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub reprezentuje`right` Typzdefiniowanyprzezużytkownika,któryprzeciążaoperatordodawania,reprezentujeon<xref:System.Reflection.MethodInfo> metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-132">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-133">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-133">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-134">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-134">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-135">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-135">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-136">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-136">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-137">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-137">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-138">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-138">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-139">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-139">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-140">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-140">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-141">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-141">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-142">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-142">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-143">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora dodawania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-143">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-144">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-144">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-145">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora dodawania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-145">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-146">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które dodaje dwie liczby całkowite.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-146">The following code example shows how to create an expression that adds two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#1)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-147"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-147"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-148">Operator dodawania nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-148">The addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Add(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Add(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Add : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Add (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-149">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-149">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-150">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-150">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-151">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-151">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-152">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dodawania arytmetycznego, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-152">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that does not have overflow checking.</span></span> <span data-ttu-id="eb4ed-153">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-153">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-154">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> , który ma <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i, oraz właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-154">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Add" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-155">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-155">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-156"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-156">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-157">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-157">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-158">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-158">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-159"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-159">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-160">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-160">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-161">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-161">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-162">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-162">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-163">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-163">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-164">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator dodawania, to <xref:System.Reflection.MethodInfo> oznacza metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-164">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-165">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-165">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-166">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-166">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-167">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-167">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-168">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-168">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-169">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-169">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-170">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-170">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-171">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-171">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-172">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-172">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-173">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-173">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-174">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-174">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-175">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora dodawania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-175">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-176">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-176">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-177">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora dodawania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-177">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-178"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-178"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-179"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-179"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-180"><paramref name="method" />is <see langword="null" /> i operator dodawania nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-180"><paramref name="method" /> is <see langword="null" /> and the addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-181">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-181">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member AddAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AddAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-182"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-182">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-183"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-183">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-184">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-184">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-185"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-185">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-186">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które dodaje wartość do zmiennej liczb całkowitych, a następnie przypisuje wynik operacji do zmiennej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-186">The following code example shows how to create an expression that adds a value to an integer variable and then assigns the result of the operation to the variable.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#18)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member AddAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AddAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-187"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-187">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-188"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-188">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-189">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-189">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-190">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-190">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-191">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-191">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member AddAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AddAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-192"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-192">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-193"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-193">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-194">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-194">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-195">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-195">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-196">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-196">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-197">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-197">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-198">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania, która jest w trakcie sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-198">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member AddAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AddAssignChecked (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-199"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-199">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-200"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-200">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-201">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania, która jest w trakcie sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-201">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-202"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-202">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member AddAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AddAssignChecked (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-203"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-203">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-204"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-204">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-205">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-205">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-206">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania, która jest w trakcie sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-206">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-207">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-207">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member AddAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AddAssignChecked (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-208"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-208">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-209"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-209">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-210">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-210">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-211">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-211">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-212">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania, która jest w trakcie sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-212">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an addition assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-213">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-213">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-214">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dodawania arytmetycznego, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-214">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member AddChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AddChecked (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-215">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-215">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-216">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-216">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-217">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dodawania arytmetycznego, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-217">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-218"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-218">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-219">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-219">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-220"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-220">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-221">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-221">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-222">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-222">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-223"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-223">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-224">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-224">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-225">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-225">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-226">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-226">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-227"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub reprezentuje`right` Typzdefiniowanyprzezużytkownika,któryprzeciążaoperatordodawania,reprezentujeon<xref:System.Reflection.MethodInfo> metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-227">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-228">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-228">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-229">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-229">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-230">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-230">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-231">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-231">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-232">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-232">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-233">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-233">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-234">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-234">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-235">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-235">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-236">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-236">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-237">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-237">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-238">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora dodawania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-238">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-239">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-239">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-240">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora dodawania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-240">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-241"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-241"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-242">Operator dodawania nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-242">The addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AddChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AddChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member AddChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AddChecked (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-243">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-243">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-244">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-244">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-245">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-245">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-246">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dodawania arytmetycznego, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-246">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic addition operation that has overflow checking.</span></span> <span data-ttu-id="eb4ed-247">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-247">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-248">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> , który ma <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i, oraz właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-248">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AddChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-249">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-249">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-250"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-250">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-251">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-251">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-252">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-252">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-253"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-253">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-254">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-254">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-255">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-255">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-256">Metoda implementująca dla operacji jest wybierana na podstawie następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-256">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="eb4ed-257">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-257">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-258">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator dodawania, to <xref:System.Reflection.MethodInfo> oznacza metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-258">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the addition operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-259">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-259">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-260">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-260">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-261">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-261">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-262">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-262">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-263">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-263">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-264">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-264">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-265">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-265">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-266">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-266">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-267">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-267">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-268">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-268">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-269">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora dodawania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-269">The type of the node is the result type of the predefined addition operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-270">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-270">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-271">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora dodawania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-271">The type of the node is the nullable type that corresponds to the result type of the predefined addition operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-272"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-272"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-273"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-273"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-274"><paramref name="method" />is <see langword="null" /> i operator dodawania nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-274"><paramref name="method" /> is <see langword="null" /> and the addition operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="And">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-275">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="AND" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-275">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression And(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ And(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member And : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.And (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-276">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-276">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-277">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-277">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-278">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="AND" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-278">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-279"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.And" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-279">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.And" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-280">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-280">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-281"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-281">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-282">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-282">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-283">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-283">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-284"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-284">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-285">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-285">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-286">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-286">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-287">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-287">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-288"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `AND` reprezentuje<xref:System.Reflection.MethodInfo>Typ zdefiniowany przez użytkownika, który przeciąża operator bitowy, to oznacza, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-288">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-289">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy całkowite lub logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-289">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-290">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-290">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-291">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-291">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-292">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-292">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-293">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-293">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-294">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-294">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-295">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-295">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-296">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-296">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-297">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-297">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-298">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-298">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-299">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora bitowego `AND` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-299">The type of the node is the result type of the predefined bitwise `AND` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-300">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-300">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-301">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego `AND` operatora bitowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-301">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `AND` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-302">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące logiczną i operację na dwóch wartościach logicznych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-302">The following code example shows how to create an expression that represents a logical AND operation on two Boolean values.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#2)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-303"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-303"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-304">Nie zdefiniowano operatora bitowego <see langword="AND" /> dla elementu. <paramref name="left" /> Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-304">The bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression And(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function And (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ And(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member And : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.And (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-305"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-305">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-306"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-306">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-307">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-307">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-308">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="AND" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-308">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="AND" /> operation.</span></span> <span data-ttu-id="eb4ed-309">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-309">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-310">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.And" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-310">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.And" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-311">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-311">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-312"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-312">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-313">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-313">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-314">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-314">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-315"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-315">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-316">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-316">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-317">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-317">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-318">Metoda implementująca dla operacji jest wybierana na podstawie następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-318">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="eb4ed-319">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-319">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-320">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` `AND` reprezentuje<xref:System.Reflection.MethodInfo> typ zdefiniowany przez użytkownika, który przeciąża operator bitowy, to oznacza metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-320">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-321">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy całkowite lub logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-321">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-322">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-322">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-323">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-323">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-324">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-324">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-325">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-325">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-326">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-326">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-327">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-327">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-328">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-328">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-329">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-329">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-330">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-330">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-331">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora bitowego `AND` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-331">The type of the node is the result type of the predefined bitwise `AND` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-332">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-332">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-333">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego `AND` operatora bitowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-333">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-334"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-334"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-335"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-335"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-336"><paramref name="method" />jest <see langword="null" /> i operatorem <see langword="AND" /> bitowym nie jest zdefiniowany <paramref name="left" />dla. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-336"><paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AndAlso">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-337">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację warunkową <see langword="AND" /> , która oblicza drugi operand tylko wtedy, gdy <see langword="true" />pierwszy operand zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-337">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AndAlso">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAlso(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAlso (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAlso(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member AndAlso : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AndAlso (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-338">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-338">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-339">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-339">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-340">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację warunkową <see langword="AND" /> , która oblicza drugi operand tylko wtedy, gdy <see langword="true" />pierwszy operand zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-340">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-341"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-341">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-342">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-342">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-343"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-343">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-344">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-344">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-345">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-345">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-346"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-346">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-347">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-347">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-348">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-348">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-349">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-349">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-350"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `AND` reprezentuje<xref:System.Reflection.MethodInfo>Typ zdefiniowany przez użytkownika, który przeciąża operator bitowy, to oznacza, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-350">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="eb4ed-351">Operator warunkowy `AND` nie może być przeciążony w C# ani Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-351">The conditional `AND` operator cannot be overloaded in C# or Visual Basic.</span></span> <span data-ttu-id="eb4ed-352">Operator warunkowy `AND` jest jednak oceniany przy użyciu operatora bitowego `AND` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-352">However, the conditional `AND` operator is evaluated by using the bitwise `AND` operator.</span></span> <span data-ttu-id="eb4ed-353">W ten sposób zdefiniowane przez użytkownika Przeciążenie operatora bitowego `AND` może być metodą implementującą dla tego typu węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-353">Thus, a user-defined overload of the bitwise `AND` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="eb4ed-354">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-354">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-355">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-355">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-356">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-356">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-357">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-357">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-358">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-358">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-359">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-359">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-360">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-360">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-361">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-361">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-362">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-362">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-363">`left`. Wpisz i `right`. Typ jest tym samym typem Boolean.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-363">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="eb4ed-364">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-364">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-365">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora warunkowego `AND` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-365">The type of the node is the result type of the predefined conditional `AND` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-366">Jeśli `left`. Wpisz i `right`. Typ dopuszcza wartość null, węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-366">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-367">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego `AND` operatora warunkowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-367">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `AND` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-368">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które wykonuje operacje logiczne i dla dwóch operandów tylko wtedy, gdy pierwszy operand jest wynikiem `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-368">The following code example shows how to create an expression that performs a logical AND operation on its two operands only if the first operand evaluates to `true`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#19)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-369"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-369"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-370">Nie zdefiniowano operatora bitowego <see langword="AND" /> dla elementu. <paramref name="left" /> Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-370">The bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-371">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-371">-or-</span></span> 
 <span data-ttu-id="eb4ed-372"><paramref name="left" />. Wpisz i <paramref name="right" />. Typ nie jest tym samym typem Boolean.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-372"><paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AndAlso">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAlso(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAlso (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAlso(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member AndAlso : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AndAlso (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-373">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-373">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-374">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-374">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-375">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-375">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-376">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację warunkową <see langword="AND" /> , która oblicza drugi operand tylko wtedy, gdy pierwszy operand jest rozpoznawany jako true.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-376">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="AND" /> operation that evaluates the second operand only if the first operand is resolved to true.</span></span> <span data-ttu-id="eb4ed-377">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-377">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-378">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-378">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAlso" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-379">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-379">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-380"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-380">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-381">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-381">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-382">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-382">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-383"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-383">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-384">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-384">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-385">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-385">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-386">Metoda implementująca dla operacji jest wybierana na podstawie następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-386">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="eb4ed-387">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-387">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-388">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` `AND` reprezentuje<xref:System.Reflection.MethodInfo> typ zdefiniowany przez użytkownika, który przeciąża operator bitowy, to oznacza metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-388">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `AND` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="eb4ed-389">Operator warunkowy `AND` nie może być przeciążony w C# ani Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-389">The conditional `AND` operator cannot be overloaded in C# or Visual Basic.</span></span> <span data-ttu-id="eb4ed-390">Operator warunkowy `AND` jest jednak oceniany przy użyciu operatora bitowego `AND` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-390">However, the conditional `AND` operator is evaluated by using the bitwise `AND` operator.</span></span> <span data-ttu-id="eb4ed-391">W ten sposób zdefiniowane przez użytkownika Przeciążenie operatora bitowego `AND` może być metodą implementującą dla tego typu węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-391">Thus, a user-defined overload of the bitwise `AND` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="eb4ed-392">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-392">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-393">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-393">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-394">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-394">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-395">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-395">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-396">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-396">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-397">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-397">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-398">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-398">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-399">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-399">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-400">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-400">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-401">`left`. Wpisz i `right`. Typ jest tym samym typem Boolean.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-401">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="eb4ed-402">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-402">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-403">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora warunkowego `AND` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-403">The type of the node is the result type of the predefined conditional `AND` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-404">Jeśli `left`. Wpisz i `right`. Typ dopuszcza wartość null, węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-404">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-405">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego `AND` operatora warunkowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-405">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-406"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-406"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-407"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-407"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-408"><paramref name="method" />jest <see langword="null" /> i operatorem <see langword="AND" /> bitowym nie jest zdefiniowany <paramref name="left" />dla. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-408"><paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="AND" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-409">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-409">-or-</span></span> 
 <span data-ttu-id="eb4ed-410"><paramref name="method" />jest <see langword="null" /> i <paramref name="left" />. Wpisz i <paramref name="right" />. Typ nie jest tym samym typem Boolean.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-410"><paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AndAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-411">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową i przypisanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-411">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member AndAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AndAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-412"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-412">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-413"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-413">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-414">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową i przypisanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-414">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-415"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-415">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member AndAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AndAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-416"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-416">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-417"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-417">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-418">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-418">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-419">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową i przypisanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-419">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-420">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-420">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AndAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression AndAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ AndAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member AndAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.AndAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-421"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-421">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-422"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-422">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-423">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-423">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-424">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-424">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-425">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową i przypisanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-425">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise AND assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-426">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-426">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.AndAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrayAccess">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-427">Tworzy dostęp <see cref="T:System.Linq.Expressions.IndexExpression" /> do tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-427">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access an array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrayAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression ArrayAccess(class System.Linq.Expressions.Expression array, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayAccess (array As Expression, indexes As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ ArrayAccess(System::Linq::Expressions::Expression ^ array, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberSignature Language="F#" Value="static member ArrayAccess : System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.IndexExpression" Usage="System.Linq.Expressions.Expression.ArrayAccess (array, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indexes" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eb4ed-428">Wyrażenie reprezentujące tablicę wielowymiarową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-428">An expression that represents the multidimensional array.</span></span></param>
        <param name="indexes"><span data-ttu-id="eb4ed-429"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Zawierające wyrażenia służące do indeksowania tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-429">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing expressions used to index the array.</span></span></param>
        <summary><span data-ttu-id="eb4ed-430">Tworzy dostęp <see cref="T:System.Linq.Expressions.IndexExpression" /> do tablicy wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-430">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access a multidimensional array.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-431">Utworzony <see cref="T:System.Linq.Expressions.IndexExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-431">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-432">Wyrażenie reprezentujące tablicę można uzyskać za pomocą <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> metody lub przez <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> lub <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-432">The expression that represents the array can be obtained by using the <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> method, or through <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> or <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-433">Poniższy przykład kodu pokazuje, jak zmienić wartość elementu w tablicy wielowymiarowej przy użyciu `ArrayAccess` metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-433">The following code example shows how to change the value of an element in a multidimensional array by using the `ArrayAccess` method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#21)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, params System.Linq.Expressions.Expression[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression ArrayAccess(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayAccess (array As Expression, ParamArray indexes As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ ArrayAccess(System::Linq::Expressions::Expression ^ array, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberSignature Language="F#" Value="static member ArrayAccess : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.IndexExpression" Usage="System.Linq.Expressions.Expression.ArrayAccess (array, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indexes" Type="System.Linq.Expressions.Expression[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eb4ed-434">Wyrażenie reprezentujące tablicę do indeksowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-434">An expression representing the array to index.</span></span></param>
        <param name="indexes"><span data-ttu-id="eb4ed-435">Tablica zawierająca wyrażenia używane do indeksowania tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-435">An array that contains expressions used to index the array.</span></span></param>
        <summary><span data-ttu-id="eb4ed-436">Tworzy dostęp <see cref="T:System.Linq.Expressions.IndexExpression" /> do tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-436">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> to access an array.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-437">Utworzony <see cref="T:System.Linq.Expressions.IndexExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-437">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-438">Wyrażenie reprezentujące tablicę można uzyskać za pomocą <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> metody lub przez <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> lub <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-438">The expression that represents the array can be obtained by using the <xref:System.Linq.Expressions.Expression.MakeMemberAccess%2A> method, or through <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> or <xref:System.Linq.Expressions.Expression.NewArrayInit%2A>.</span></span>  
  
 <span data-ttu-id="eb4ed-439">W przypadku tablic wielowymiarowych Użyj <xref:System.Linq.Expressions.Expression.ArrayAccess%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-439">For multidimensional arrays, use the <xref:System.Linq.Expressions.Expression.ArrayAccess%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-440">Poniższy przykład kodu pokazuje, jak zmienić wartość elementu tablicy przy użyciu `ArrayAccess` metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-440">The following code example shows how to change a value of an array element by using the `ArrayAccess` method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#20)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrayIndex">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-441">Tworzy element <see cref="T:System.Linq.Expressions.Expression" /> reprezentujący zastosowanie operatora indeksu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-441">Creates an <see cref="T:System.Linq.Expressions.Expression" /> that represents applying an array index operator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, indexes As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberSignature Language="F#" Value="static member ArrayIndex : System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.ArrayIndex (array, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eb4ed-442"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-442">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to.</span></span></param>
        <param name="indexes"><span data-ttu-id="eb4ed-443">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-443">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-444">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący zastosowanie operatora indeksu tablicy do tablicy rangi więcej niż jeden.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-444">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents applying an array index operator to an array of rank more than one.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-445"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-445">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-446">Każdy element elementu `indexes` musi mieć <xref:System.Linq.Expressions.Expression.Type%2A> równą <xref:System.Int32>wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-446">Each element of `indexes` must have <xref:System.Linq.Expressions.Expression.Type%2A> equal to <xref:System.Int32>.</span></span> <span data-ttu-id="eb4ed-447">Właściwość musi reprezentować typ tablicy, której ranga pasuje do liczby elementów w `indexes`. <xref:System.Linq.Expressions.Expression.Type%2A> `array`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-447">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type whose rank matches the number of elements in `indexes`.</span></span>  
  
 <span data-ttu-id="eb4ed-448">Jeśli ranga `array`. Typ to 1, ta metoda zwraca <xref:System.Linq.Expressions.BinaryExpression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-448">If the rank of `array`.Type is 1, this method returns a <xref:System.Linq.Expressions.BinaryExpression>.</span></span> <span data-ttu-id="eb4ed-449">Właściwość jest ustawiona na `array` , <xref:System.Linq.Expressions.BinaryExpression.Right%2A> a`indexes`właściwość jest ustawiana na pojedynczy element. <xref:System.Linq.Expressions.BinaryExpression.Left%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-449">The <xref:System.Linq.Expressions.BinaryExpression.Left%2A> property is set to `array` and the <xref:System.Linq.Expressions.BinaryExpression.Right%2A> property is set to the single element of `indexes`.</span></span> <span data-ttu-id="eb4ed-450"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość<xref:System.Linq.Expressions.BinaryExpression>reprezentujetyp elementu .`array` Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-450">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the <xref:System.Linq.Expressions.BinaryExpression> represents the element type of `array`.Type.</span></span>  
  
 <span data-ttu-id="eb4ed-451">Jeśli ranga `array`. Typ jest więcej niż jeden, ta metoda zwraca <xref:System.Linq.Expressions.MethodCallExpression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-451">If the rank of `array`.Type is more than one, this method returns a <xref:System.Linq.Expressions.MethodCallExpression>.</span></span> <span data-ttu-id="eb4ed-452"><xref:System.Reflection.MethodInfo> `Get` <xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na, która opisuje metodę wystąpienia publicznego `array`dla typu reprezentowanego przez właściwość. <xref:System.Linq.Expressions.MethodCallExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-452">The <xref:System.Linq.Expressions.MethodCallExpression.Method%2A> property is set to the <xref:System.Reflection.MethodInfo> that describes the public instance method `Get` on the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-453">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> metody w celu <xref:System.Linq.Expressions.MethodCallExpression> utworzenia, która reprezentuje indeksowanie do dwuwymiarowej tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-453">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create a <xref:System.Linq.Expressions.MethodCallExpression> that represents indexing into a two-dimensional array.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#3)]
 [!code-vb[System.Linq.Expressions.Expression#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-454"><paramref name="array" />lub <paramref name="indexes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-454"><paramref name="array" /> or <paramref name="indexes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-455"><paramref name="array" />. Typ nie reprezentuje typu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-455"><paramref name="array" />.Type does not represent an array type.</span></span>  
  
<span data-ttu-id="eb4ed-456">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-456">-or-</span></span> 
<span data-ttu-id="eb4ed-457">Ranga <paramref name="array" />. Typ nie jest zgodny z liczbą elementów w <paramref name="indexes" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-457">The rank of <paramref name="array" />.Type does not match the number of elements in <paramref name="indexes" />.</span></span>  
  
<span data-ttu-id="eb4ed-458">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-458">-or-</span></span> 
<span data-ttu-id="eb4ed-459">Właściwość co najmniej jednego <paramref name="indexes" /> elementu nie reprezentuje <see cref="T:System.Int32" /> typu. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-459">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="indexes" /> does not represent the <see cref="T:System.Int32" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, index As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, System::Linq::Expressions::Expression ^ index);" />
      <MemberSignature Language="F#" Value="static member ArrayIndex : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ArrayIndex (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="index" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eb4ed-460">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-460">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="index"><span data-ttu-id="eb4ed-461">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-461">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-462">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący zastosowanie operatora indeksu tablicy do tablicy rangi 1.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-462">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents applying an array index operator to an array of rank one.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-463"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ArrayIndex" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-463">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ArrayIndex" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-464">`index`musi reprezentować indeks typu <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-464">`index` must represent an index of type <xref:System.Int32>.</span></span>  
  
 <span data-ttu-id="eb4ed-465"><xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> Właściwośćbędąca`false`wynikiem `null`jest równa i jestustawianana.<xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> <xref:System.Linq.Expressions.BinaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-465">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null`, and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span> <span data-ttu-id="eb4ed-466">Właściwość jest równa `array`typowi elementu. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-466">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the element type of `array`.Type.</span></span> <span data-ttu-id="eb4ed-467"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-467">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-468"><paramref name="array" />lub <paramref name="index" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-468"><paramref name="array" /> or <paramref name="index" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-469"><paramref name="array" />. Typ nie reprezentuje typu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-469"><paramref name="array" />.Type does not represent an array type.</span></span>  
  
<span data-ttu-id="eb4ed-470">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-470">-or-</span></span> 
 <span data-ttu-id="eb4ed-471"><paramref name="array" />. Typ reprezentuje typ tablicy, której ranga nie jest 1.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-471"><paramref name="array" />.Type represents an array type whose rank is not 1.</span></span>  
  
<span data-ttu-id="eb4ed-472">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-472">-or-</span></span> 
 <span data-ttu-id="eb4ed-473"><paramref name="index" />. Typ nie reprezentuje <see cref="T:System.Int32" /> typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-473"><paramref name="index" />.Type does not represent the <see cref="T:System.Int32" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, params System.Linq.Expressions.Expression[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression ArrayIndex(class System.Linq.Expressions.Expression array, class System.Linq.Expressions.Expression[] indexes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayIndex (array As Expression, ParamArray indexes As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ ArrayIndex(System::Linq::Expressions::Expression ^ array, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ indexes);" />
      <MemberSignature Language="F#" Value="static member ArrayIndex : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.ArrayIndex (array, indexes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="indexes" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eb4ed-474">Tablica <see cref="T:System.Linq.Expressions.Expression" /> wystąpień — indeksy dla operacji indeksu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-474">An array of <see cref="T:System.Linq.Expressions.Expression" /> instances - indexes for the array index operation.</span></span></param>
        <param name="indexes"><span data-ttu-id="eb4ed-475">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-475">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-476">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący zastosowanie operatora indeksu tablicy do tablicy wielowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-476">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents applying an array index operator to a multidimensional array.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-477"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-477">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-478">Każdy element elementu `indexes` musi mieć <xref:System.Linq.Expressions.Expression.Type%2A> równą <xref:System.Int32>wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-478">Each element of `indexes` must have <xref:System.Linq.Expressions.Expression.Type%2A> equal to <xref:System.Int32>.</span></span> <span data-ttu-id="eb4ed-479">Właściwość musi reprezentować typ tablicy, której ranga pasuje do liczby elementów w `indexes`. <xref:System.Linq.Expressions.Expression.Type%2A> `array`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-479">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type whose rank matches the number of elements in `indexes`.</span></span>  
  
 <span data-ttu-id="eb4ed-480">Jeśli ranga `array`. Typ to 1, ta metoda zwraca <xref:System.Linq.Expressions.BinaryExpression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-480">If the rank of `array`.Type is 1, this method returns a <xref:System.Linq.Expressions.BinaryExpression>.</span></span> <span data-ttu-id="eb4ed-481">Właściwość jest ustawiona na `array` , <xref:System.Linq.Expressions.BinaryExpression.Right%2A> a`indexes`właściwość jest ustawiana na pojedynczy element. <xref:System.Linq.Expressions.BinaryExpression.Left%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-481">The <xref:System.Linq.Expressions.BinaryExpression.Left%2A> property is set to `array` and the <xref:System.Linq.Expressions.BinaryExpression.Right%2A> property is set to the single element of `indexes`.</span></span> <span data-ttu-id="eb4ed-482"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość<xref:System.Linq.Expressions.BinaryExpression>reprezentujetyp elementu .`array` Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-482">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the <xref:System.Linq.Expressions.BinaryExpression> represents the element type of `array`.Type.</span></span>  
  
 <span data-ttu-id="eb4ed-483">Jeśli ranga `array`. Typ jest więcej niż jeden, ta metoda zwraca <xref:System.Linq.Expressions.MethodCallExpression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-483">If the rank of `array`.Type is more than one, this method returns a <xref:System.Linq.Expressions.MethodCallExpression>.</span></span> <span data-ttu-id="eb4ed-484"><xref:System.Reflection.MethodInfo> `Get` <xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na, która opisuje metodę wystąpienia publicznego `array`dla typu reprezentowanego przez właściwość. <xref:System.Linq.Expressions.MethodCallExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-484">The <xref:System.Linq.Expressions.MethodCallExpression.Method%2A> property is set to the <xref:System.Reflection.MethodInfo> that describes the public instance method `Get` on the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-485">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> metody w celu <xref:System.Linq.Expressions.MethodCallExpression> utworzenia, która reprezentuje indeksowanie do dwuwymiarowej tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-485">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ArrayIndex%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create a <xref:System.Linq.Expressions.MethodCallExpression> that represents indexing into a two-dimensional array.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#3)]
 [!code-vb[System.Linq.Expressions.Expression#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-486"><paramref name="array" />lub <paramref name="indexes" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-486"><paramref name="array" /> or <paramref name="indexes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-487"><paramref name="array" />. Typ nie reprezentuje typu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-487"><paramref name="array" />.Type does not represent an array type.</span></span>  
  
<span data-ttu-id="eb4ed-488">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-488">-or-</span></span> 
<span data-ttu-id="eb4ed-489">Ranga <paramref name="array" />. Typ nie jest zgodny z liczbą elementów w <paramref name="indexes" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-489">The rank of <paramref name="array" />.Type does not match the number of elements in <paramref name="indexes" />.</span></span>  
  
<span data-ttu-id="eb4ed-490">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-490">-or-</span></span> 
<span data-ttu-id="eb4ed-491">Właściwość co najmniej jednego <paramref name="indexes" /> elementu nie reprezentuje <see cref="T:System.Int32" /> typu. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-491">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="indexes" /> does not represent the <see cref="T:System.Int32" /> type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ArrayLength">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ArrayLength (System.Linq.Expressions.Expression array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ArrayLength(class System.Linq.Expressions.Expression array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ArrayLength (array As Expression) As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ArrayLength(System::Linq::Expressions::Expression ^ array);" />
      <MemberSignature Language="F#" Value="static member ArrayLength : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.ArrayLength array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eb4ed-492"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-492">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-493">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący wyrażenie służące do uzyskania długości tablicy jednowymiarowej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-493">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an expression for obtaining the length of a one-dimensional array.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-494">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.ArrayLength" /> <paramref name="array" />Właściwość równą i Właściwość równa. <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-494">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ArrayLength" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to <paramref name="array" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-495"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwośćmusireprezentować`array` typ tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-495">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `array` must represent an array type.</span></span>  
  
 <span data-ttu-id="eb4ed-496">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest równa <xref:System.Int32>. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-496">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is equal to <xref:System.Int32>.</span></span> <span data-ttu-id="eb4ed-497">Właściwośćjest`null` ima`false`ustawioną wartość. <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> <xref:System.Linq.Expressions.UnaryExpression.Method%2A> <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-497">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property is `null`, and both <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-498"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-498"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-499"><paramref name="array" />. Typ nie reprezentuje typu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-499"><paramref name="array" />.Type does not represent an array type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Assign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Assign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Assign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Assign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Assign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Assign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-500"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-500">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-501"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-501">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-502">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-502">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-503"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Assign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-503">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Assign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-504">`Assign` Wyrażenie kopiuje wartość dla typów wartości i kopiuje odwołanie do typów referencyjnych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-504">The `Assign` expression copies a value for value types, and it copies a reference for reference types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-505">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące operację przypisywania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-505">The following code example shows how to create an expression that represents an assignment operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#12)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Bind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-506"><see cref="T:System.Linq.Expressions.MemberAssignment" /> Tworzy element reprezentujący inicjalizację elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-506">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MemberInfo member, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberAssignment Bind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberAssignment ^ Bind(System::Reflection::MemberInfo ^ member, System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Bind : System.Reflection.MemberInfo * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MemberAssignment" Usage="System.Linq.Expressions.Expression.Bind (member, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="eb4ed-507">A <see cref="T:System.Reflection.MemberInfo" /> , aby <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-507">A <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span></span></param>
        <param name="expression"><span data-ttu-id="eb4ed-508"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-508">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-509">Tworzy element <see cref="T:System.Linq.Expressions.MemberAssignment" /> reprezentujący inicjalizację pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-509">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a field or property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-510"><see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" /> A, który ma równe, i <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> i <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> właściwości i, ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberAssignment" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-510">A <see cref="T:System.Linq.Expressions.MemberAssignment" /> that has <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> equal to <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-511"><xref:System.Reflection.PropertyInfo.PropertyType%2A> `member` <xref:System.Reflection.FieldInfo.FieldType%2A> Właściwość musi być możliwa do przypisania do typu reprezentowanego przez właściwość lub. `expression` <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-511">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `expression` must be assignable to the type represented by the <xref:System.Reflection.FieldInfo.FieldType%2A> or <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of `member`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-512"><paramref name="member" />lub <paramref name="expression" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-512"><paramref name="member" /> or <paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-513"><paramref name="member" />nie reprezentuje pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-513"><paramref name="member" /> does not represent a field or property.</span></span>  
  
<span data-ttu-id="eb4ed-514">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-514">-or-</span></span> 
<span data-ttu-id="eb4ed-515">Właściwość reprezentowana przez <paramref name="member" /> nie <see langword="set" /> ma metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-515">The property represented by <paramref name="member" /> does not have a <see langword="set" /> accessor.</span></span>  
  
<span data-ttu-id="eb4ed-516">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-516">-or-</span></span> 
 <span data-ttu-id="eb4ed-517"><paramref name="expression" />. Nie można przypisać typu do typu pola lub właściwości <paramref name="member" /> reprezentowanej przez.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-517"><paramref name="expression" />.Type is not assignable to the type of the field or property that <paramref name="member" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberAssignment Bind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberAssignment ^ Bind(System::Reflection::MethodInfo ^ propertyAccessor, System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Bind : System.Reflection.MethodInfo * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MemberAssignment" Usage="System.Linq.Expressions.Expression.Bind (propertyAccessor, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberAssignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor"><span data-ttu-id="eb4ed-518"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-518">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span></span></param>
        <param name="expression"><span data-ttu-id="eb4ed-519"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-519">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-520"><see cref="T:System.Linq.Expressions.MemberAssignment" /> Tworzy element reprezentujący inicjalizację elementu członkowskiego przy użyciu metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-520">Creates a <see cref="T:System.Linq.Expressions.MemberAssignment" /> that represents the initialization of a member by using a property accessor method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-521">A <see cref="T:System.Linq.Expressions.MemberAssignment" /> , który <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> ma <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" /> <see cref="T:System.Reflection.PropertyInfo" /> <paramref name="propertyAccessor" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> , <paramref name="expression" />Właściwość ustawiona na, która reprezentuje właściwość, do której uzyskano dostęp w, i Właściwość ustawioną na. <see cref="P:System.Linq.Expressions.MemberBinding.Member" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-521">A <see cref="T:System.Linq.Expressions.MemberAssignment" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.Assignment" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and the <see cref="P:System.Linq.Expressions.MemberAssignment.Expression" /> property set to <paramref name="expression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-522">Właściwość musi być możliwa do przypisania do typu reprezentowanego przez <xref:System.Reflection.PropertyInfo.PropertyType%2A> Właściwość właściwości, do której uzyskuje się `propertyAccessor`dostęp w. `expression` <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-522">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `expression` must be assignable to the type represented by the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of the property accessed in `propertyAccessor`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-523"><paramref name="propertyAccessor" />lub <paramref name="expression" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-523"><paramref name="propertyAccessor" /> or <paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-524"><paramref name="propertyAccessor" />nie reprezentuje metody akcesora właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-524"><paramref name="propertyAccessor" /> does not represent a property accessor method.</span></span>  
  
<span data-ttu-id="eb4ed-525">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-525">-or-</span></span> 
<span data-ttu-id="eb4ed-526">Właściwość, do której <paramref name="propertyAccessor" /> uzyskuje dostęp, <see langword="set" /> nie ma metody dostępu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-526">The property accessed by <paramref name="propertyAccessor" /> does not have a <see langword="set" /> accessor.</span></span>  
  
<span data-ttu-id="eb4ed-527">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-527">-or-</span></span> 
 <span data-ttu-id="eb4ed-528"><paramref name="expression" />. Nie można przypisać typu do typu pola lub właściwości <paramref name="member" /> reprezentowanej przez.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-528"><paramref name="expression" />.Type is not assignable to the type of the field or property that <paramref name="member" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Block">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-529"><see cref="T:System.Linq.Expressions.BlockExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-529">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (expressions As IEnumerable(Of Expression)) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="static member Block : seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block expressions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expressions"><span data-ttu-id="eb4ed-530">Wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-530">The expressions in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-531">Tworzy obiekt <see cref="T:System.Linq.Expressions.BlockExpression" /> , który zawiera podane wyrażenia i nie ma zmiennych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-531">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions and has no variables.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-532">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-532">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-533">Gdy wyrażenie bloku jest wykonywane, zwraca wartość ostatniego wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-533">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (ParamArray expressions As Expression()) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="static member Block : System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block expressions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="expressions"><span data-ttu-id="eb4ed-534">Wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-534">The expressions in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-535">Tworzy obiekt <see cref="T:System.Linq.Expressions.BlockExpression" /> , który zawiera podane wyrażenia i nie ma zmiennych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-535">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions and has no variables.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-536">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-536">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-537">Gdy wyrażenie bloku jest wykonywane, zwraca wartość ostatniego wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-537">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-538">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-538">The following code example shows how to create a block expression.</span></span> <span data-ttu-id="eb4ed-539">Wyrażenie bloku składa się z <xref:System.Linq.Expressions.MethodCallExpression> dwóch obiektów i <xref:System.Linq.Expressions.ConstantExpression> jednego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-539">The block expression consists of two <xref:System.Linq.Expressions.MethodCallExpression> objects and one <xref:System.Linq.Expressions.ConstantExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#13)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (variables As IEnumerable(Of ParameterExpression), expressions As IEnumerable(Of Expression)) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="static member Block : seq&lt;System.Linq.Expressions.ParameterExpression&gt; * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (variables, expressions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variables"><span data-ttu-id="eb4ed-540">Zmienne w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-540">The variables in the block.</span></span></param>
        <param name="expressions"><span data-ttu-id="eb4ed-541">Wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-541">The expressions in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-542">Tworzy element <see cref="T:System.Linq.Expressions.BlockExpression" /> zawierający podane zmienne i wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-542">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-543">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-543">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-544">Gdy wyrażenie bloku jest wykonywane, zwraca wartość ostatniego wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-544">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-545">Poniższy przykład kodu pokazuje, jak przekazać parametr do wyrażenia bloku i przetworzyć ten parametr w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-545">The following code example shows how to pass a parameter to a block expression and process this parameter within a block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#14)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (variables As IEnumerable(Of ParameterExpression), ParamArray expressions As Expression()) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="static member Block : seq&lt;System.Linq.Expressions.ParameterExpression&gt; * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (variables, expressions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="variables"><span data-ttu-id="eb4ed-546">Zmienne w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-546">The variables in the block.</span></span></param>
        <param name="expressions"><span data-ttu-id="eb4ed-547">Wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-547">The expressions in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-548">Tworzy element <see cref="T:System.Linq.Expressions.BlockExpression" /> zawierający podane zmienne i wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-548">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-549">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-549">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-550">Gdy wyrażenie bloku jest wykonywane, zwraca wartość ostatniego wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-550">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Block : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="arg0"><span data-ttu-id="eb4ed-551">Pierwsze wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-551">The first expression in the block.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-552">Drugie wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-552">The second expression in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-553">Tworzy element <see cref="T:System.Linq.Expressions.BlockExpression" /> zawierający dwa wyrażenia i nie ma zmiennych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-553">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains two expressions and has no variables.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-554">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-554">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-555">Gdy wyrażenie bloku jest wykonywane, zwraca wartość ostatniego wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-555">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="static member Block : Type * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (type, expressions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-556">Typ wyniku bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-556">The result type of the block.</span></span></param>
        <param name="expressions"><span data-ttu-id="eb4ed-557">Wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-557">The expressions in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-558">Tworzy obiekt <see cref="T:System.Linq.Expressions.BlockExpression" /> , który zawiera dane wyrażenia, nie ma zmiennych i ma określony typ wyniku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-558">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions, has no variables and has specific result type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-559">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-559">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="static member Block : Type * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (type, expressions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-560">Typ wyniku bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-560">The result type of the block.</span></span></param>
        <param name="expressions"><span data-ttu-id="eb4ed-561">Wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-561">The expressions in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-562">Tworzy obiekt <see cref="T:System.Linq.Expressions.BlockExpression" /> , który zawiera dane wyrażenia, nie ma zmiennych i ma określony typ wyniku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-562">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given expressions, has no variables and has specific result type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-563">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-563">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Block : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="arg0"><span data-ttu-id="eb4ed-564">Pierwsze wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-564">The first expression in the block.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-565">Drugie wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-565">The second expression in the block.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-566">Trzecie wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-566">The third expression in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-567"><see cref="T:System.Linq.Expressions.BlockExpression" /> Tworzy, który zawiera trzy wyrażenia i nie ma zmiennych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-567">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains three expressions and has no variables.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-568">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-568">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-569">Gdy wyrażenie bloku jest wykonywane, zwraca wartość ostatniego wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-569">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="static member Block : Type * seq&lt;System.Linq.Expressions.ParameterExpression&gt; * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (type, variables, expressions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="expressions" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-570">Typ wyniku bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-570">The result type of the block.</span></span></param>
        <param name="variables"><span data-ttu-id="eb4ed-571">Zmienne w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-571">The variables in the block.</span></span></param>
        <param name="expressions"><span data-ttu-id="eb4ed-572">Wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-572">The expressions in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-573">Tworzy element <see cref="T:System.Linq.Expressions.BlockExpression" /> zawierający podane zmienne i wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-573">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-574">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-574">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables, params System.Linq.Expressions.Expression[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables, class System.Linq.Expressions.Expression[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ expressions);" />
      <MemberSignature Language="F#" Value="static member Block : Type * seq&lt;System.Linq.Expressions.ParameterExpression&gt; * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (type, variables, expressions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression[]" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-575">Typ wyniku bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-575">The result type of the block.</span></span></param>
        <param name="variables"><span data-ttu-id="eb4ed-576">Zmienne w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-576">The variables in the block.</span></span></param>
        <param name="expressions"><span data-ttu-id="eb4ed-577">Wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-577">The expressions in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-578">Tworzy element <see cref="T:System.Linq.Expressions.BlockExpression" /> zawierający podane zmienne i wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-578">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains the given variables and expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-579">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-579">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Block : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="arg0"><span data-ttu-id="eb4ed-580">Pierwsze wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-580">The first expression in the block.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-581">Drugie wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-581">The second expression in the block.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-582">Trzecie wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-582">The third expression in the block.</span></span></param>
        <param name="arg3"><span data-ttu-id="eb4ed-583">Czwarte wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-583">The fourth expression in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-584"><see cref="T:System.Linq.Expressions.BlockExpression" /> Tworzy, który zawiera cztery wyrażenia i nie ma zmiennych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-584">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains four expressions and has no variables.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-585">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-585">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-586">Gdy wyrażenie bloku jest wykonywane, zwraca wartość ostatniego wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-586">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BlockExpression Block(class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3, class System.Linq.Expressions.Expression arg4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Block (arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression, arg4 As Expression) As BlockExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BlockExpression ^ Block(System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3, System::Linq::Expressions::Expression ^ arg4);" />
      <MemberSignature Language="F#" Value="static member Block : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BlockExpression" Usage="System.Linq.Expressions.Expression.Block (arg0, arg1, arg2, arg3, arg4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BlockExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg4" Type="System.Linq.Expressions.Expression" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="arg0"><span data-ttu-id="eb4ed-587">Pierwsze wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-587">The first expression in the block.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-588">Drugie wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-588">The second expression in the block.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-589">Trzecie wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-589">The third expression in the block.</span></span></param>
        <param name="arg3"><span data-ttu-id="eb4ed-590">Czwarte wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-590">The fourth expression in the block.</span></span></param>
        <param name="arg4"><span data-ttu-id="eb4ed-591">Piąte wyrażenie w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-591">The fifth expression in the block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-592">Tworzy element <see cref="T:System.Linq.Expressions.BlockExpression" /> zawierający pięć wyrażeń i nie ma zmiennych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-592">Creates a <see cref="T:System.Linq.Expressions.BlockExpression" /> that contains five expressions and has no variables.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-593">Utworzony <see cref="T:System.Linq.Expressions.BlockExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-593">The created <see cref="T:System.Linq.Expressions.BlockExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-594">Gdy wyrażenie bloku jest wykonywane, zwraca wartość ostatniego wyrażenia w bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-594">When the block expression is executed, it returns the value of the last expression in the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Break">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-595">Tworzy instrukcję <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentującą wartość Break.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-595">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Break (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberSignature Language="F#" Value="static member Break : System.Linq.Expressions.LabelTarget -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Break target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-596"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-596">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-597">Tworzy instrukcję <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentującą wartość Break.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-597">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-598">A <see cref="T:System.Linq.Expressions.GotoExpression" /> o <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> wartości równejBreak<paramref name="target" />, Właściwośćustawionanaiwartośćnulldoprzesłaniadoetykietydocelowejpoprzejściu.<see cref="P:System.Linq.Expressions.GotoExpression.Target" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-598">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-599">Poniższy przykład pokazuje, jak utworzyć wyrażenie, które zawiera <xref:System.Linq.Expressions.LoopExpression> obiekt, który <xref:System.Linq.Expressions.Expression.Break%2A> używa metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-599">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.LoopExpression> object that uses the <xref:System.Linq.Expressions.Expression.Break%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Break (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberSignature Language="F#" Value="static member Break : System.Linq.Expressions.LabelTarget * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Break (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-600"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-600">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="value"><span data-ttu-id="eb4ed-601">Wartość, która zostanie przeniesiona do skojarzonej etykiety po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-601">The value that will be passed to the associated label upon jumping.</span></span></param>
        <summary><span data-ttu-id="eb4ed-602">Tworzy instrukcję <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentującą wartość Break.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-602">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement.</span></span> <span data-ttu-id="eb4ed-603">Wartość przeskoczy do etykiety po przejściu można określić.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-603">The value passed to the label upon jumping can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-604">A <see cref="T:System.Linq.Expressions.GotoExpression" /> o <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> wartościrównej<paramref name="value" /> Break, <paramref name="target" />Właściwość ustawiona na i do przesłania do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.GotoExpression.Target" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-604">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Break : System.Linq.Expressions.LabelTarget * Type -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Break (target, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-605"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-605">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-606"><see cref="T:System.Type" /> Aby<see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-606">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-607">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję Break o określonym typie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-607">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement with the specified type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-608">A <see cref="T:System.Linq.Expressions.GotoExpression" /> o <paramref name="target" /> <see cref="P:System.Linq.Expressions.Expression.Type" /> <paramref name="type" />wartości równej Break, WłaściwośćustawionanaiWłaściwośćustawionena.<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-608">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Break(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Break(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Break : System.Linq.Expressions.LabelTarget * System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Break (target, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-609"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-609">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="value"><span data-ttu-id="eb4ed-610">Wartość, która zostanie przeniesiona do skojarzonej etykiety po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-610">The value that will be passed to the associated label upon jumping.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-611"><see cref="T:System.Type" /> Aby<see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-611">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-612">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję Break o określonym typie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-612">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a break statement with the specified type.</span></span> <span data-ttu-id="eb4ed-613">Wartość przeskoczy do etykiety po przejściu można określić.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-613">The value passed to the label upon jumping can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-614">A <see cref="T:System.Linq.Expressions.GotoExpression" /> o <paramref name="target" /> <paramref name="type" /> <see cref="P:System.Linq.Expressions.Expression.Type" /> <paramref name="value" /> wartości równej Break, Właściwośćustawionana,właściwośćustawionanaidoprzesłaniadoetykietydocelowejpoprzejściu.<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-614">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Break, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Call">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-615"><see cref="T:System.Linq.Expressions.MethodCallExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-615">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Call : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (instance, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-616">Element <see cref="T:System.Linq.Expressions.Expression" /> określający wystąpienie wywołania metody wystąpienia <see langword="null" /> ( <see langword="static" /> <see langword="Shared" /> Metoda w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-616">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance method call (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-617">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-617">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-618">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody, która nie przyjmuje argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-618">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes no arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-619"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-619">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-620">Aby reprezentować wywołanie `static` metody (`Shared` w Visual Basic) `instance` , należy przekazać parametr `null` w przypadku wywołania tej metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-620">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method.</span></span>  
  
 <span data-ttu-id="eb4ed-621">Jeśli `method` reprezentuje metodę wystąpienia <xref:System.Linq.Expressions.Expression.Type%2A> , właściwość `instance` musi być możliwa do przypisania do typu deklarującego metody reprezentowanej przez `method`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-621">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="eb4ed-622">Właściwość będąca wynikiem <xref:System.Linq.Expressions.MethodCallExpression> jest pusta. <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-622">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty.</span></span> <span data-ttu-id="eb4ed-623">Właściwość jest równa zwracanym typem metody reprezentowanej przez `method`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-623">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the return type of the method represented by `method`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-624">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które wywołuje metodę bez argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-624">The following code example shows how to create an expression that calls a method without arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#15)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-625"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-625"><paramref name="method" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-626">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-626">-or-</span></span> 
 <span data-ttu-id="eb4ed-627"><paramref name="instance" />is <see langword="null" /> i<paramref name="method" /> reprezentuje metodę wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-627"><paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-628"><paramref name="instance" />. Nie można przypisać typu do typu deklarującego metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-628"><paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arguments As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Call : System.Reflection.MethodInfo * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (method, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="eb4ed-629"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę docelową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-629">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-630">Kolekcja <see cref="T:System.Linq.Expressions.Expression" /> , która reprezentuje argumenty wywołań.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-630">A collection of <see cref="T:System.Linq.Expressions.Expression" /> that represents the call arguments.</span></span></param>
        <summary><span data-ttu-id="eb4ed-631">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody statycznej (Shared w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-631">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static (Shared in Visual Basic) method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-632"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-632">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Call : System.Reflection.MethodInfo * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (method, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="eb4ed-633">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-633">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-634"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje pierwszy argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-634">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span></span></param>
        <summary><span data-ttu-id="eb4ed-635">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie <see langword="static" /> metody (<see langword="Shared" /> w Visual Basic), która przyjmuje jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-635">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method that takes one argument.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-636"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-636">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-637">W poniższym przykładzie pokazano, jak utworzyć wyrażenie, które wywołuje `static` metodę (`Shared` w Visual Basic), która przyjmuje jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-637">The following example demonstrates how to create an expression that calls a `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#16)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-638"><paramref name="method" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-638"><paramref name="method" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Call : System.Reflection.MethodInfo * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (method, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="eb4ed-639">Reprezentuje metodę <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> (w<see langword="Shared" /> Visual Basic) ,abyustawić<see cref="T:System.Reflection.MethodInfo" />Właściwość <see langword="static" /> równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-639">A <see cref="T:System.Reflection.MethodInfo" /> that represents a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-640">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-640">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-641">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie <see langword="static" /> metody (<see langword="Shared" /> w Visual Basic), która ma argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-641">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method that has arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-642"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-642">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-643">Jeśli `arguments` `method`nie `null`jest, musi mieć taką samą liczbę elementów jak liczba parametrów dla metody reprezentowanej przez.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-643">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="eb4ed-644">Każdy element w `arguments` nie może być `null` i musi być możliwy \*\* `method`do przypisania do odpowiadającego mu parametru, prawdopodobnie po utworzeniu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-644">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-645">Element zostanie umieszczony w cudzysłowie, jeśli odpowiedni parametr metody jest typu <xref:System.Linq.Expressions.Expression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-645">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-646">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-646">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-647">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`arguments`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-647">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="eb4ed-648">Właściwość <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> będąca <xref:System.Linq.Expressions.MethodCallExpression> wynikiem jest pusta, jeśli `arguments` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-648">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="eb4ed-649">W przeciwnym razie zawiera te same elementy `arguments`, które mogą być ujęte w cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-649">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="eb4ed-650">Właściwość wynikowa <xref:System.Linq.Expressions.MethodCallExpression> jest równa zwracanym typem metody reprezentowanej przez `method`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-650">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span> <span data-ttu-id="eb4ed-651"><xref:System.Linq.Expressions.MethodCallExpression.Object%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-651">The <xref:System.Linq.Expressions.MethodCallExpression.Object%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-652"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-652"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-653">Liczba elementów w <paramref name="arguments" /> nie jest równa liczbie parametrów dla metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-653">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span></span>  
  
<span data-ttu-id="eb4ed-654">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-654">-or-</span></span> 
<span data-ttu-id="eb4ed-655">Co najmniej jednego elementu elementu nie można przypisać do odpowiadającego mu parametru metody reprezentowanej przez <paramref name="method" />. <paramref name="arguments" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-655">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arguments As IEnumerable(Of Expression)) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Call : System.Linq.Expressions.Expression * System.Reflection.MethodInfo * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (instance, method, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-656"><see cref="T:System.Linq.Expressions.Expression" /> Aby ustawić<see langword="null" /> Właściwość równą (<see langword="static" /> w Visual Basic) metodę.<see langword="Shared" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-656">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-657">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-657">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-658">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-658">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-659">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody, która przyjmuje argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-659">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-660">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-660">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-661">Aby reprezentować wywołanie `static` metody (`Shared` w Visual Basic) `instance` , należy przekazać parametr `null` w przypadku wywołania tej metody lub wywołać <xref:System.Linq.Expressions.Expression.Call%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-661">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method, or call <xref:System.Linq.Expressions.Expression.Call%2A> instead.</span></span>  
  
 <span data-ttu-id="eb4ed-662">Jeśli `method` reprezentuje metodę wystąpienia <xref:System.Linq.Expressions.Expression.Type%2A> , właściwość `instance` musi być możliwa do przypisania do typu deklarującego metody reprezentowanej przez `method`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-662">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="eb4ed-663">Jeśli `arguments` `method`nie `null`jest, musi mieć taką samą liczbę elementów jak liczba parametrów dla metody reprezentowanej przez.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-663">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="eb4ed-664">Każdy element w `arguments` nie może być `null` i musi być możliwy \*\* `method`do przypisania do odpowiadającego mu parametru, prawdopodobnie po utworzeniu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-664">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-665">Element zostanie umieszczony w cudzysłowie, jeśli odpowiedni parametr metody jest typu <xref:System.Linq.Expressions.Expression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-665">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-666">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-666">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-667">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`arguments`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-667">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="eb4ed-668">Właściwość <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> będąca <xref:System.Linq.Expressions.MethodCallExpression> wynikiem jest pusta, jeśli `arguments` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-668">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="eb4ed-669">W przeciwnym razie zawiera te same elementy `arguments`, które mogą być ujęte w cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-669">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="eb4ed-670">Właściwość wynikowa <xref:System.Linq.Expressions.MethodCallExpression> jest równa zwracanym typem metody reprezentowanej przez `method`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-670">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-671"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-671"><paramref name="method" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-672">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-672">-or-</span></span> 
 <span data-ttu-id="eb4ed-673"><paramref name="instance" />is <see langword="null" /> i<paramref name="method" /> reprezentuje metodę wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-673"><paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-674"><paramref name="instance" />. Nie można przypisać typu do typu deklarującego metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-674"><paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span></span>  
  
<span data-ttu-id="eb4ed-675">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-675">-or-</span></span> 
<span data-ttu-id="eb4ed-676">Liczba elementów w <paramref name="arguments" /> nie jest równa liczbie parametrów dla metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-676">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span></span>  
  
<span data-ttu-id="eb4ed-677">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-677">-or-</span></span> 
<span data-ttu-id="eb4ed-678">Co najmniej jednego elementu elementu nie można przypisać do odpowiadającego mu parametru metody reprezentowanej przez <paramref name="method" />. <paramref name="arguments" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-678">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Call : System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (instance, method, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-679">Element <see cref="T:System.Linq.Expressions.Expression" /> określający wystąpienie wywołania metody wystąpienia <see langword="null" /> ( <see langword="static" /> <see langword="Shared" /> Metoda w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-679">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance method call (pass <see langword="null" /> for a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method).</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-680">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-680">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-681">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-681">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-682">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody, która przyjmuje argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-682">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-683">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-683">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" />, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-684">Aby reprezentować wywołanie `static` metody (`Shared` w Visual Basic) `instance` , należy przekazać parametr `null` w przypadku wywołania tej metody lub wywołać <xref:System.Linq.Expressions.Expression.Call%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-684">To represent a call to a `static` (`Shared` in Visual Basic) method, pass in `null` for the `instance` parameter when you call this method, or call <xref:System.Linq.Expressions.Expression.Call%2A> instead.</span></span>  
  
 <span data-ttu-id="eb4ed-685">Jeśli `method` reprezentuje metodę wystąpienia <xref:System.Linq.Expressions.Expression.Type%2A> , właściwość `instance` musi być możliwa do przypisania do typu deklarującego metody reprezentowanej przez `method`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-685">If `method` represents an instance method, the <xref:System.Linq.Expressions.Expression.Type%2A> property of `instance` must be assignable to the declaring type of the method represented by `method`.</span></span>  
  
 <span data-ttu-id="eb4ed-686">Jeśli `arguments` `method`nie `null`jest, musi mieć taką samą liczbę elementów jak liczba parametrów dla metody reprezentowanej przez.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-686">If `arguments` is not `null`, it must have the same number of elements as the number of parameters for the method represented by `method`.</span></span> <span data-ttu-id="eb4ed-687">Każdy element w `arguments` nie może być `null` i musi być możliwy \*\* `method`do przypisania do odpowiadającego mu parametru, prawdopodobnie po utworzeniu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-687">Each element in `arguments` must not be `null` and must be assignable to the corresponding parameter of `method`, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-688">Element zostanie umieszczony w cudzysłowie, jeśli odpowiedni parametr metody jest typu <xref:System.Linq.Expressions.Expression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-688">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-689">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-689">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-690">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`arguments`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-690">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
 <span data-ttu-id="eb4ed-691">Właściwość <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> będąca <xref:System.Linq.Expressions.MethodCallExpression> wynikiem jest pusta, jeśli `arguments` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-691">The <xref:System.Linq.Expressions.MethodCallExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="eb4ed-692">W przeciwnym razie zawiera te same elementy `arguments`, które mogą być ujęte w cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-692">Otherwise, it contains the same elements as `arguments`, some of which may be quoted.</span></span>  
  
 <span data-ttu-id="eb4ed-693">Właściwość wynikowa <xref:System.Linq.Expressions.MethodCallExpression> jest równa zwracanym typem metody reprezentowanej przez `method`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-693">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method represented by `method`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-694"><paramref name="method" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-694"><paramref name="method" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-695">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-695">-or-</span></span> 
 <span data-ttu-id="eb4ed-696"><paramref name="instance" />is <see langword="null" /> i<paramref name="method" /> reprezentuje metodę wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-696"><paramref name="instance" /> is <see langword="null" /> and <paramref name="method" /> represents an instance method.</span></span>  
  
<span data-ttu-id="eb4ed-697">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-697">-or-</span></span> 
 <span data-ttu-id="eb4ed-698"><paramref name="arguments" />nie <see langword="null" /> jest i co najmniej jeden z jego elementów jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-698"><paramref name="arguments" /> is not <see langword="null" /> and one or more of its elements is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-699"><paramref name="instance" />. Nie można przypisać typu do typu deklarującego metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-699"><paramref name="instance" />.Type is not assignable to the declaring type of the method represented by <paramref name="method" />.</span></span>  
  
<span data-ttu-id="eb4ed-700">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-700">-or-</span></span> 
<span data-ttu-id="eb4ed-701">Liczba elementów w <paramref name="arguments" /> nie jest równa liczbie parametrów dla metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-701">The number of elements in <paramref name="arguments" /> does not equal the number of parameters for the method represented by <paramref name="method" />.</span></span>  
  
<span data-ttu-id="eb4ed-702">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-702">-or-</span></span> 
<span data-ttu-id="eb4ed-703">Co najmniej jednego elementu elementu nie można przypisać do odpowiadającego mu parametru metody reprezentowanej przez <paramref name="method" />. <paramref name="arguments" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-703">One or more of the elements of <paramref name="arguments" /> is not assignable to the corresponding parameter for the method represented by <paramref name="method" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Call : System.Reflection.MethodInfo * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (method, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="eb4ed-704">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-704">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-705"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje pierwszy argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-705">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-706"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-706">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span></span></param>
        <summary><span data-ttu-id="eb4ed-707">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody statycznej, która przyjmuje dwa argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-707">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes two arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-708"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-708">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-709"><paramref name="method" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-709"><paramref name="method" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arg0 As Expression, arg1 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Call : System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (instance, method, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-710"><see cref="T:System.Linq.Expressions.Expression" /> Określa wystąpienie dla wywołania wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-710">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance call.</span></span> <span data-ttu-id="eb4ed-711">(Przekaż wartość null dla statycznej metody udostępnionej w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-711">(pass null for a static (Shared in Visual Basic) method).</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-712"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę docelową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-712">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-713"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje pierwszy argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-713">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-714"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-714">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span></span></param>
        <summary><span data-ttu-id="eb4ed-715">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody, która przyjmuje dwa argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-715">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes two arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-716"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-716">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-717">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które wywołuje metodę wystąpienia, która ma dwa argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-717">The following code example shows how to create an expression that calls an instance method that has two arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#17)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, string methodName, Type[] typeArguments, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, string methodName, class System.Type[] typeArguments, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, methodName As String, typeArguments As Type(), ParamArray arguments As Expression()) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::String ^ methodName, cli::array &lt;Type ^&gt; ^ typeArguments, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Call : System.Linq.Expressions.Expression * string * Type[] * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (instance, methodName, typeArguments, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Type[]" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-718">, <see cref="T:System.Linq.Expressions.Expression" /> Której<see cref="P:System.Linq.Expressions.Expression.Type" /> wartość właściwości będzie przeszukiwana dla określonej metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-718">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> property value will be searched for a specific method.</span></span></param>
        <param name="methodName"><span data-ttu-id="eb4ed-719">Nazwa metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-719">The name of the method.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="eb4ed-720">Tablica <see cref="T:System.Type" /> obiektów, które określają parametry typu metody ogólnej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-720">An array of <see cref="T:System.Type" /> objects that specify the type parameters of the generic method.</span></span> <span data-ttu-id="eb4ed-721">Ten argument powinien mieć wartość null, gdy methodName określa metodę nierodzajową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-721">This argument should be null when methodName specifies a non-generic method.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-722">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów, która reprezentuje argumenty metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-722">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represents the arguments to the method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-723">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody przez wywołanie odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-723">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method by calling the appropriate factory method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-724">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> , która <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> <see cref="T:System.Reflection.MethodInfo" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> Właściwość równą <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, <paramref name="instance" />Właściwość równa, ustawiana na, która reprezentuje określoną metodę wystąpienia i ustawiona na <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> określone argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-724">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> property equal to <paramref name="instance" />, <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> set to the <see cref="T:System.Reflection.MethodInfo" /> that represents the specified instance method, and <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> set to the specified arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-725">Właściwość wynikowa <xref:System.Linq.Expressions.MethodCallExpression> jest równa zwracanym typowi metody oznaczonej przez `methodName`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-725">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method denoted by `methodName`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-726"><paramref name="instance" />lub <paramref name="methodName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-726"><paramref name="instance" /> or <paramref name="methodName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-727">Nie ma metody, której <paramref name="methodName" />nazwa jest zgodna <paramref name="typeArguments" />z parametrami typu i którego <paramref name="instance" />typy parametrów <paramref name="arguments" /> są zgodne. Typ lub jego typy podstawowe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-727">No method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="instance" />.Type or its base types.</span></span>  
  
<span data-ttu-id="eb4ed-728">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-728">-or-</span></span> 
<span data-ttu-id="eb4ed-729">Więcej niż jedna metoda, której nazwa <paramref name="methodName" />to, których parametry typu <paramref name="typeArguments" />są zgodne, <paramref name="arguments" /> a których typy parametrów są zgodne <paramref name="instance" />, znajdują się w. Typ lub jego typy podstawowe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-729">More than one method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="instance" />.Type or its base types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Call : System.Reflection.MethodInfo * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (method, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="eb4ed-730">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-730">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-731"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje pierwszy argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-731">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-732"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-732">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-733"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje trzeci argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-733">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span></span></param>
        <summary><span data-ttu-id="eb4ed-734">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody statycznej, która przyjmuje trzy argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-734">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes three arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-735"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-735">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-736"><paramref name="method" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-736"><paramref name="method" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (Type type, string methodName, Type[] typeArguments, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Type type, string methodName, class System.Type[] typeArguments, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(Type ^ type, System::String ^ methodName, cli::array &lt;Type ^&gt; ^ typeArguments, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Call : Type * string * Type[] * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (type, methodName, typeArguments, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Type[]" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-737">Typ, który zawiera określoną <see langword="static" /> metodę (<see langword="Shared" /> w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-737">The type that contains the specified <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method.</span></span></param>
        <param name="methodName"><span data-ttu-id="eb4ed-738">Nazwa metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-738">The name of the method.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="eb4ed-739">Tablica <see cref="T:System.Type" /> obiektów, które określają parametry typu metody ogólnej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-739">An array of <see cref="T:System.Type" /> objects that specify the type parameters of the generic method.</span></span> <span data-ttu-id="eb4ed-740">Ten argument powinien mieć wartość null, gdy methodName określa metodę nierodzajową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-740">This argument should be null when methodName specifies a non-generic method.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-741">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów, która reprezentuje argumenty metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-741">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments to the method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-742">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie <see langword="static" /> metody (<see langword="Shared" /> w Visual Basic) przez wywołanie odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-742">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method by calling the appropriate factory method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-743">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="T:System.Reflection.MethodInfo" /> <see langword="Shared" /> <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> <see langword="static" /> Właściwość równą <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, Właściwośćustawionana,którareprezentujeokreślonąmetodę(wVisualBasic),i<see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> Właściwość ustawiona do określonych argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-743">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" />, the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property set to the <see cref="T:System.Reflection.MethodInfo" /> that represents the specified <see langword="static" /> (<see langword="Shared" /> in Visual Basic) method, and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Arguments" /> property set to the specified arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-744">Właściwość wynikowa <xref:System.Linq.Expressions.MethodCallExpression> jest równa zwracanym typowi metody oznaczonej przez `methodName`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-744">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MethodCallExpression> is equal to the return type of the method denoted by `methodName`.</span></span> <span data-ttu-id="eb4ed-745"><xref:System.Linq.Expressions.MethodCallExpression.Object%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-745">The <xref:System.Linq.Expressions.MethodCallExpression.Object%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-746"><paramref name="type" />lub <paramref name="methodName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-746"><paramref name="type" /> or <paramref name="methodName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-747">Nie ma metody, której <paramref name="methodName" />nazwa jest zgodna <paramref name="typeArguments" />z parametrami typu i którego typy parametrów <paramref name="arguments" /> są zgodne, <paramref name="type" /> w lub jego typach podstawowych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-747">No method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="type" /> or its base types.</span></span>  
  
<span data-ttu-id="eb4ed-748">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-748">-or-</span></span> 
<span data-ttu-id="eb4ed-749">Więcej niż jedna metoda, której nazwa <paramref name="methodName" />to, których parametry typu <paramref name="typeArguments" />są zgodne, <paramref name="arguments" /> a których typy parametrów są zgodne <paramref name="type" /> , znajdują się w lub w jego typach podstawowych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-749">More than one method whose name is <paramref name="methodName" />, whose type parameters match <paramref name="typeArguments" />, and whose parameter types match <paramref name="arguments" /> is found in <paramref name="type" /> or its base types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Linq.Expressions.Expression instance, class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (instance As Expression, method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Linq::Expressions::Expression ^ instance, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Call : System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (instance, method, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-750"><see cref="T:System.Linq.Expressions.Expression" /> Określa wystąpienie dla wywołania wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-750">An <see cref="T:System.Linq.Expressions.Expression" /> that specifies the instance for an instance call.</span></span> <span data-ttu-id="eb4ed-751">(Przekaż wartość null dla statycznej metody udostępnionej w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-751">(pass null for a static (Shared in Visual Basic) method).</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-752"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę docelową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-752">The <see cref="T:System.Reflection.MethodInfo" /> that represents the target method.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-753"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje pierwszy argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-753">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-754"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-754">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-755"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje trzeci argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-755">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span></span></param>
        <summary><span data-ttu-id="eb4ed-756">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody, która przyjmuje trzy argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-756">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a method that takes three arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-757"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-757">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Call : System.Reflection.MethodInfo * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (method, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="eb4ed-758">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-758">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-759"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje pierwszy argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-759">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-760"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-760">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-761"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje trzeci argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-761">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span></span></param>
        <param name="arg3"><span data-ttu-id="eb4ed-762"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje czwarty argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-762">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fourth argument.</span></span></param>
        <summary><span data-ttu-id="eb4ed-763">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody statycznej, która przyjmuje cztery argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-763">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes four arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-764"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-764">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-765"><paramref name="method" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-765"><paramref name="method" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Call">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MethodCallExpression Call(class System.Reflection.MethodInfo method, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3, class System.Linq.Expressions.Expression arg4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Call (method As MethodInfo, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression, arg4 As Expression) As MethodCallExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MethodCallExpression ^ Call(System::Reflection::MethodInfo ^ method, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3, System::Linq::Expressions::Expression ^ arg4);" />
      <MemberSignature Language="F#" Value="static member Call : System.Reflection.MethodInfo * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.MethodCallExpression" Usage="System.Linq.Expressions.Expression.Call (method, arg0, arg1, arg2, arg3, arg4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MethodCallExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg4" Type="System.Linq.Expressions.Expression" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="eb4ed-766">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-766">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> property equal to.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-767"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje pierwszy argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-767">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the first argument.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-768"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-768">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the second argument.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-769"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje trzeci argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-769">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the third argument.</span></span></param>
        <param name="arg3"><span data-ttu-id="eb4ed-770"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje czwarty argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-770">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fourth argument.</span></span></param>
        <param name="arg4"><span data-ttu-id="eb4ed-771"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje piąty argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-771">The <see cref="T:System.Linq.Expressions.Expression" /> that represents the fifth argument.</span></span></param>
        <summary><span data-ttu-id="eb4ed-772">Tworzy element <see cref="T:System.Linq.Expressions.MethodCallExpression" /> reprezentujący wywołanie metody statycznej przyjmującej pięć argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-772">Creates a <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that represents a call to a static method that takes five arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-773"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> A, który <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> ma<see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MethodCallExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-773">A <see cref="T:System.Linq.Expressions.MethodCallExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Call" /> and the <see cref="P:System.Linq.Expressions.MethodCallExpression.Object" /> and <see cref="P:System.Linq.Expressions.MethodCallExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-774"><paramref name="method" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-774"><paramref name="method" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReduce">
      <MemberSignature Language="C#" Value="public virtual bool CanReduce { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReduce" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.CanReduce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReduce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReduce { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReduce : bool" Usage="System.Linq.Expressions.Expression.CanReduce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb4ed-775">Wskazuje, że węzeł można zmniejszyć do prostszego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-775">Indicates that the node can be reduced to a simpler node.</span></span> <span data-ttu-id="eb4ed-776">Jeśli zwraca wartość true, funkcja Zmniejsz () może zostać wywołana w celu utworzenia zredukowanego formularza.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-776">If this returns true, Reduce() can be called to produce the reduced form.</span></span></summary>
        <value><span data-ttu-id="eb4ed-777"><see langword="true" />Jeśli węzeł można zmniejszyć; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-777"><see langword="true" /> if the node can be reduced; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Catch">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-778">Tworzy element <see cref="T:System.Linq.Expressions.CatchBlock" /> reprezentujący instrukcję catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-778">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Catch (variable As ParameterExpression, body As Expression) As CatchBlock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body);" />
      <MemberSignature Language="F#" Value="static member Catch : System.Linq.Expressions.ParameterExpression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.CatchBlock" Usage="System.Linq.Expressions.Expression.Catch (variable, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="eb4ed-779"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Reprezentuje odwołanie<see cref="T:System.Exception" /> do obiektu przechwytywanego przez ten program obsługi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-779">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-780">Treść instrukcji catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-780">The body of the catch statement.</span></span></param>
        <summary><span data-ttu-id="eb4ed-781">Tworzy element <see cref="T:System.Linq.Expressions.CatchBlock" /> reprezentujący instrukcję catch z odwołaniem do przechwyconego <see cref="T:System.Exception" /> obiektu do użycia w treści procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-781">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with a reference to the caught <see cref="T:System.Exception" /> object for use in the handler body.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-782">Utworzony <see cref="T:System.Linq.Expressions.CatchBlock" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-782">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Type type, class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(Type ^ type, System::Linq::Expressions::Expression ^ body);" />
      <MemberSignature Language="F#" Value="static member Catch : Type * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.CatchBlock" Usage="System.Linq.Expressions.Expression.Catch (type, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-783">Ta wartość zostanie<see cref="P:System.Linq.Expressions.Expression.Type" />obsłużyć. <see cref="T:System.Exception" /> <see cref="T:System.Linq.Expressions.CatchBlock" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-783">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-784">Treść instrukcji catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-784">The body of the catch statement.</span></span></param>
        <summary><span data-ttu-id="eb4ed-785">Tworzy element <see cref="T:System.Linq.Expressions.CatchBlock" /> reprezentujący instrukcję catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-785">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-786">Utworzony <see cref="T:System.Linq.Expressions.CatchBlock" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-786">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-787">Można określić, <xref:System.Linq.Expressions.Expression.Type%2A> <xref:System.Exception> <xref:System.Linq.Expressions.CatchBlock>aby można było przechwycić, ale nie będzie można użyć odwołania do tego obiektu w obiekcie. <xref:System.Exception></span><span class="sxs-lookup"><span data-stu-id="eb4ed-787">The <xref:System.Linq.Expressions.Expression.Type%2A> of <xref:System.Exception> to be caught can be specified but no reference to the <xref:System.Exception> object will be available for use in the <xref:System.Linq.Expressions.CatchBlock>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Catch (variable As ParameterExpression, body As Expression, filter As Expression) As CatchBlock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberSignature Language="F#" Value="static member Catch : System.Linq.Expressions.ParameterExpression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.CatchBlock" Usage="System.Linq.Expressions.Expression.Catch (variable, body, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="eb4ed-788"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Reprezentuje odwołanie<see cref="T:System.Exception" /> do obiektu przechwytywanego przez ten program obsługi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-788">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-789">Treść instrukcji catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-789">The body of the catch statement.</span></span></param>
        <param name="filter"><span data-ttu-id="eb4ed-790">Treść <see cref="T:System.Exception" /> filtru.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-790">The body of the <see cref="T:System.Exception" /> filter.</span></span></param>
        <summary><span data-ttu-id="eb4ed-791">Tworzy element <see cref="T:System.Linq.Expressions.CatchBlock" /> reprezentujący instrukcję Catch <see cref="T:System.Exception" /> z filtrem i odwołaniem do przechwyconego <see cref="T:System.Exception" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-791">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with an <see cref="T:System.Exception" /> filter and a reference to the caught <see cref="T:System.Exception" /> object.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-792">Utworzony <see cref="T:System.Linq.Expressions.CatchBlock" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-792">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Catch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock Catch(class System.Type type, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ Catch(Type ^ type, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberSignature Language="F#" Value="static member Catch : Type * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.CatchBlock" Usage="System.Linq.Expressions.Expression.Catch (type, body, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-793">Ta wartość zostanie<see cref="P:System.Linq.Expressions.Expression.Type" />obsłużyć. <see cref="T:System.Exception" /> <see cref="T:System.Linq.Expressions.CatchBlock" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-793">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-794">Treść instrukcji catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-794">The body of the catch statement.</span></span></param>
        <param name="filter"><span data-ttu-id="eb4ed-795">Treść <see cref="T:System.Exception" /> filtru.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-795">The body of the <see cref="T:System.Exception" /> filter.</span></span></param>
        <summary><span data-ttu-id="eb4ed-796">Tworzy element <see cref="T:System.Linq.Expressions.CatchBlock" /> reprezentujący instrukcję Catch <see cref="T:System.Exception" /> z filtrem, ale bez odwołania do przechwyconego <see cref="T:System.Exception" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-796">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with an <see cref="T:System.Exception" /> filter but no reference to the caught <see cref="T:System.Exception" /> object.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-797">Utworzony <see cref="T:System.Linq.Expressions.CatchBlock" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-797">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDebugInfo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DebugInfoExpression ClearDebugInfo (System.Linq.Expressions.SymbolDocumentInfo document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DebugInfoExpression ClearDebugInfo(class System.Linq.Expressions.SymbolDocumentInfo document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClearDebugInfo (document As SymbolDocumentInfo) As DebugInfoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DebugInfoExpression ^ ClearDebugInfo(System::Linq::Expressions::SymbolDocumentInfo ^ document);" />
      <MemberSignature Language="F#" Value="static member ClearDebugInfo : System.Linq.Expressions.SymbolDocumentInfo -&gt; System.Linq.Expressions.DebugInfoExpression" Usage="System.Linq.Expressions.Expression.ClearDebugInfo document" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DebugInfoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Linq.Expressions.SymbolDocumentInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="eb4ed-798"><see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> Reprezentuje plik źródłowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-798">The <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that represents the source file.</span></span></param>
        <summary><span data-ttu-id="eb4ed-799"><see cref="T:System.Linq.Expressions.DebugInfoExpression" /> Tworzy do czyszczenia punkt sekwencji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-799">Creates a <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> for clearing a sequence point.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-800">Wystąpienie <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> do czyszczenia punktu sekwencji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-800">An instance of <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> for clearing a sequence point.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Coalesce">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-801">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację łączenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-801">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Coalesce">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Coalesce(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Coalesce (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Coalesce(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Coalesce : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Coalesce (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-802"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-802">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-803"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-803">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-804">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację łączenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-804">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-805"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-805">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-806"><xref:System.Linq.Expressions.BinaryExpression> Właściwośćbędąca`null` wynikiem jest i<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> maustawioną`false`wartość. <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> <xref:System.Linq.Expressions.BinaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-806">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null` and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span> <span data-ttu-id="eb4ed-807"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest równa typowi wyniku operacji łączenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-807">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to the result type of the coalescing operation.</span></span> <span data-ttu-id="eb4ed-808"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-808">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
#### <a name="result-type"></a><span data-ttu-id="eb4ed-809">Typ wyniku</span><span class="sxs-lookup"><span data-stu-id="eb4ed-809">Result Type</span></span>  
 <span data-ttu-id="eb4ed-810">Następujące reguły określają typ wyniku:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-810">The following rules determine the result type:</span></span>  
  
-   <span data-ttu-id="eb4ed-811">Jeśli `left`. Typ reprezentuje typ dopuszczający wartość `right`null i. Typ jest niejawnie konwertowany na odpowiedni typ niedopuszczający wartości null, typ wyniku to niedopuszczający wartości null `left`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-811">If `left`.Type represents a nullable type and `right`.Type is implicitly convertible to the corresponding non-nullable type, the result type is the non-nullable equivalent of `left`.Type.</span></span>  
  
-   <span data-ttu-id="eb4ed-812">W przeciwnym razie `right`, jeśli. Typ jest niejawnie konwertowany `left`na. Typ wynik to `left`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-812">Otherwise, if `right`.Type is implicitly convertible to `left`.Type, the result type is `left`.Type.</span></span>  
  
-   <span data-ttu-id="eb4ed-813">W przeciwnym razie, Jeśli odpowiednik `left`nie dopuszcza wartości null. Typ jest niejawnie konwertowany `right`na. Typ wynik to `right`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-813">Otherwise, if the non-nullable equivalent of `left`.Type is implicitly convertible to `right`.Type, the result type is `right`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-814"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-814"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-815"><see cref="P:System.Linq.Expressions.Expression.Type" /> Właściwośćniereprezentujetypureferencyjnego<paramref name="left" /> lub typu wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-815">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> does not represent a reference type or a nullable value type.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-816"><paramref name="left" />. Wpisz i <paramref name="right" />. Typ nie jest konwertowany na siebie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-816"><paramref name="left" />.Type and <paramref name="right" />.Type are not convertible to each other.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/088b1f0d-c1af-4fe1-b4b8-196fd5ea9132"><span data-ttu-id="eb4ed-817">??</span><span class="sxs-lookup"><span data-stu-id="eb4ed-817">??</span></span> <span data-ttu-id="eb4ed-818">Operator (C# odwołanie)</span><span class="sxs-lookup"><span data-stu-id="eb4ed-818">Operator (C# Reference)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Coalesce">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Coalesce(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Coalesce (left As Expression, right As Expression, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Coalesce(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member Coalesce : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Coalesce (left, right, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-819"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-819">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-820"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-820">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-821">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-821">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-822">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację łączenia przy użyciu funkcji konwersji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-822">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a coalescing operation, given a conversion function.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-823">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> , który ma <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> Właściwość równą i, oraz właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-823">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-824"><xref:System.Linq.Expressions.BinaryExpression> Właściwośćbędąca`null` wynikiem jest i<xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> maustawioną`false`wartość. <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> <xref:System.Linq.Expressions.BinaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-824">The <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is `null` and both <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> are set to `false`.</span></span>  
  
 <span data-ttu-id="eb4ed-825">Właściwość wynikowa <xref:System.Linq.Expressions.BinaryExpression> jest równa typowi wyniku operacji łączenia. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-825">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.BinaryExpression> is equal to the result type of the coalescing operation.</span></span>  
  
 <span data-ttu-id="eb4ed-826">Następujące reguły określają typ wyniku:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-826">The following rules determine the result type:</span></span>  
  
-   <span data-ttu-id="eb4ed-827">Jeśli `left`. Typ reprezentuje typ dopuszczający wartość `right`null i. Typ jest niejawnie konwertowany na odpowiedni typ niedopuszczający wartości null, typ wyniku to niedopuszczający wartości null `left`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-827">If `left`.Type represents a nullable type and `right`.Type is implicitly convertible to the corresponding non-nullable type, the result type is the non-nullable equivalent of `left`.Type.</span></span>  
  
-   <span data-ttu-id="eb4ed-828">W przeciwnym razie `right`, jeśli. Typ jest niejawnie konwertowany `left`na. Typ wynik to `left`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-828">Otherwise, if `right`.Type is implicitly convertible to `left`.Type, the result type is `left`.Type.</span></span>  
  
-   <span data-ttu-id="eb4ed-829">W przeciwnym razie, Jeśli odpowiednik `left`nie dopuszcza wartości null. Typ jest niejawnie konwertowany `right`na. Typ wynik to `right`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-829">Otherwise, if the non-nullable equivalent of `left`.Type is implicitly convertible to `right`.Type, the result type is `right`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-830"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-830"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-831"><paramref name="left" />. Wpisz i <paramref name="right" />. Typ nie jest konwertowany na siebie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-831"><paramref name="left" />.Type and <paramref name="right" />.Type are not convertible to each other.</span></span>  
  
<span data-ttu-id="eb4ed-832">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-832">-or-</span></span> 
 <span data-ttu-id="eb4ed-833"><paramref name="conversion" />nie <see langword="null" /> jest i <paramref name="conversion" />. Typ jest typem delegata, który nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-833"><paramref name="conversion" /> is not <see langword="null" /> and <paramref name="conversion" />.Type is a delegate type that does not take exactly one argument.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-834"><see cref="P:System.Linq.Expressions.Expression.Type" /> Właściwośćniereprezentujetypureferencyjnego<paramref name="left" /> lub typu wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-834">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> does not represent a reference type or a nullable value type.</span></span>  
  
<span data-ttu-id="eb4ed-835">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-835">-or-</span></span> 
<span data-ttu-id="eb4ed-836">Właściwość reprezentuje typ, którego nie można przypisać do typu parametru typu <paramref name="conversion" />delegata. <paramref name="left" /> <see cref="P:System.Linq.Expressions.Expression.Type" /> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-836">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="left" /> represents a type that is not assignable to the parameter type of the delegate type <paramref name="conversion" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-837">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-837">-or-</span></span> 
<span data-ttu-id="eb4ed-838">Właściwość nie jest równa zwracanego typu typu <paramref name="conversion" />delegata. <paramref name="right" /> <see cref="P:System.Linq.Expressions.Expression.Type" /> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-838">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of <paramref name="right" /> is not equal to the return type of the delegate type <paramref name="conversion" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Condition">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-839">Tworzy element <see cref="T:System.Linq.Expressions.ConditionalExpression" /> reprezentujący instrukcję warunkową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-839">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression Condition(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Condition (test As Expression, ifTrue As Expression, ifFalse As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ Condition(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse);" />
      <MemberSignature Language="F#" Value="static member Condition : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.ConditionalExpression" Usage="System.Linq.Expressions.Expression.Condition (test, ifTrue, ifFalse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="test"><span data-ttu-id="eb4ed-840"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-840">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span></span></param>
        <param name="ifTrue"><span data-ttu-id="eb4ed-841"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-841">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span></span></param>
        <param name="ifFalse"><span data-ttu-id="eb4ed-842"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-842">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-843">Tworzy element <see cref="T:System.Linq.Expressions.ConditionalExpression" /> reprezentujący instrukcję warunkową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-843">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-844">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-844">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-845">Właściwość będąca wynikiem <xref:System.Linq.Expressions.ConditionalExpression> <xref:System.Linq.Expressions.Expression.Type%2A> jest`ifTrue`równawłaściwości. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-845">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ConditionalExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `ifTrue`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-846">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które reprezentuje instrukcję warunkową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-846">The following code example shows how to create an expression that represents a conditional statement.</span></span> <span data-ttu-id="eb4ed-847">Jeśli pierwszy argument jest obliczany `true`przez, drugi argument jest wykonywany; w przeciwnym razie trzeci argument jest wykonywany.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-847">If the first argument evaluates to `true`, the second argument is executed; otherwise, the third argument is executed.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#3)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-848"><paramref name="test" />or <paramref name="ifTrue" /> lub <paramref name="ifFalse" /> is .<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-848"><paramref name="test" /> or <paramref name="ifTrue" /> or <paramref name="ifFalse" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-849"><paramref name="test" />. Typ nie <see cref="T:System.Boolean" />jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-849"><paramref name="test" />.Type is not <see cref="T:System.Boolean" />.</span></span>  
  
<span data-ttu-id="eb4ed-850">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-850">-or-</span></span> 
 <span data-ttu-id="eb4ed-851"><paramref name="ifTrue" />. Typ nie jest równy <paramref name="ifFalse" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-851"><paramref name="ifTrue" />.Type is not equal to <paramref name="ifFalse" />.Type.</span></span></exception>
        <altmember cref="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
        <altmember cref="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression Condition(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ Condition(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Condition : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.ConditionalExpression" Usage="System.Linq.Expressions.Expression.Condition (test, ifTrue, ifFalse, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="test"><span data-ttu-id="eb4ed-852"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-852">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span></span></param>
        <param name="ifTrue"><span data-ttu-id="eb4ed-853"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-853">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span></span></param>
        <param name="ifFalse"><span data-ttu-id="eb4ed-854"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-854">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-855">A <see cref="P:System.Linq.Expressions.Expression.Type" /> , aby <see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-855">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-856">Tworzy element <see cref="T:System.Linq.Expressions.ConditionalExpression" /> reprezentujący instrukcję warunkową.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-856">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional statement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-857">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-857">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-858">Ta metoda umożliwia jawne ujednolicenie typu wyniku wyrażenia warunkowego w przypadkach, w których typy `ifTrue` i `ifFalse` wyrażenia są różne.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-858">This method allows explicitly unifying the result type of the conditional expression in cases where the types of `ifTrue` and `ifFalse` expressions are not equal.</span></span> <span data-ttu-id="eb4ed-859">Typy obu `ifTrue` i `ifFalse` muszą mieć niejawnie przywoływane odwołanie do typu wyników.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-859">Types of both `ifTrue` and `ifFalse` must be implicitly reference assignable to the result type.</span></span> <span data-ttu-id="eb4ed-860">`type` Może być<xref:System.Void>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-860">The `type` is allowed to be <xref:System.Void>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-861"><see cref="T:System.Linq.Expressions.ConstantExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-861">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Constant (value As Object) As ConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : obj -&gt; System.Linq.Expressions.ConstantExpression" Usage="System.Linq.Expressions.Expression.Constant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="eb4ed-862"><see cref="T:System.Object" /> Aby<see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-862">An <see cref="T:System.Object" /> to set the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-863"><see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> Tworzy właściwość ,którama<see cref="T:System.Linq.Expressions.ConstantExpression" /> ustawioną określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-863">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property set to the specified value.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-864">A <see cref="T:System.Linq.Expressions.ConstantExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> ma<see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-864">A <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> and the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-865">Właściwość będąca wynikiem <xref:System.Linq.Expressions.ConstantExpression> jest `value`równa typowi. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-865">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ConstantExpression> is equal to the type of `value`.</span></span> <span data-ttu-id="eb4ed-866">Jeśli `value` jest `null`, jest<xref:System.Linq.Expressions.Expression.Type%2A> równa <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-866">If `value` is `null`, <xref:System.Linq.Expressions.Expression.Type%2A> is equal to <xref:System.Object>.</span></span>  
  
 <span data-ttu-id="eb4ed-867">Aby przedstawić `null`, można również <xref:System.Linq.Expressions.Expression.Constant%28System.Object%2CSystem.Type%29> użyć metody, za pomocą której można jawnie określić typ.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-867">To represent `null`, you can also use the <xref:System.Linq.Expressions.Expression.Constant%28System.Object%2CSystem.Type%29> method, with which you can explicitly specify the type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-868">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które reprezentuje wartość stałą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-868">The following code example shows how to create an expression that represents a constant value.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#4)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConstantExpression Constant (object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConstantExpression Constant(object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConstantExpression ^ Constant(System::Object ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Constant : obj * Type -&gt; System.Linq.Expressions.ConstantExpression" Usage="System.Linq.Expressions.Expression.Constant (value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="eb4ed-869"><see cref="T:System.Object" /> Aby<see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-869">An <see cref="T:System.Object" /> to set the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-870">A <see cref="T:System.Type" /> , aby <see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-870">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-871">Tworzy obiekt <see cref="T:System.Linq.Expressions.ConstantExpression" /> , który <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> ma właściwości <see cref="P:System.Linq.Expressions.Expression.Type" /> i ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-871">Creates a <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-872"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> A, który <see cref="P:System.Linq.Expressions.Expression.Type" /> ma<see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.ConstantExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-872">A <see cref="T:System.Linq.Expressions.ConstantExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Constant" /> and the <see cref="P:System.Linq.Expressions.ConstantExpression.Value" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-873">Ta metoda może być przydatna do reprezentowania wartości typów dopuszczających wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-873">This method can be useful for representing values of nullable types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-874">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które reprezentuje stałą typu dopuszczającego wartość null i ustawić jej wartość na `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-874">The following code example shows how to create an expression that represents a constant of the nullable type and set its value to `null`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#22)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-875"><paramref name="type" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-875"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-876"><paramref name="value" />nie <see langword="null" /> jest i <paramref name="type" /> nie można jej przypisać <paramref name="value" />z typu dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-876"><paramref name="value" /> is not <see langword="null" /> and <paramref name="type" /> is not assignable from the dynamic type of <paramref name="value" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Continue">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-877">Tworzy instrukcję <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentującą kontynuację.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-877">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Continue(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Continue (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Continue(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberSignature Language="F#" Value="static member Continue : System.Linq.Expressions.LabelTarget -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Continue target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-878"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-878">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-879">Tworzy instrukcję <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentującą kontynuację.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-879">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-880">A <see cref="T:System.Linq.Expressions.GotoExpression" /> o <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> wartości równejContinue<paramref name="target" />, Właściwośćustawionana,awartośćnull,któramazostaćprzeniesionadoetykietydocelowejpoprzejściu.<see cref="P:System.Linq.Expressions.GotoExpression.Target" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-880">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-881">W poniższym przykładzie pokazano, jak utworzyć wyrażenie pętli, które używa <xref:System.Linq.Expressions.Expression.Continue%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-881">The following example demonstrates how to create a loop expression that uses the <xref:System.Linq.Expressions.Expression.Continue%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#46](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#46)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#46)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Continue(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Continue(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Continue : System.Linq.Expressions.LabelTarget * Type -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Continue (target, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-882"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-882">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-883"><see cref="T:System.Type" /> Aby<see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-883">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-884">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję Continue o określonym typie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-884">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a continue statement with the specified type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-885">A <see cref="T:System.Linq.Expressions.GotoExpression" /> o <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> wartości <see cref="P:System.Linq.Expressions.Expression.Type" /> równej <paramref name="type" />Kontynuuj <paramref name="target" />, Właściwośćustawionana,właściwośćustawionana,iwartośćnulldoprzesłaniadoetykietydocelowej<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-885">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-886">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację konwersji typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-886">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a type conversion operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Convert(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Convert(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Convert : System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Convert (expression, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-887"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-887">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-888">A <see cref="T:System.Type" /> , aby <see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-888">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-889">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację konwersji typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-889">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a type conversion operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-890"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> A, który <see cref="P:System.Linq.Expressions.Expression.Type" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.UnaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-890">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-891">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-891">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-892"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> Właściwość jest`false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-892">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="eb4ed-893">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> to. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-893">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="eb4ed-894">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-894">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-895">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-895">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-896">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-896">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-897">`expression`Jeśli. Typ lub `type` jest typem zdefiniowanym przez użytkownika, który definiuje niejawny lub jawny operator <xref:System.Reflection.MethodInfo> konwersji, który reprezentuje operator jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-897">If either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-898">W przeciwnym razie:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-898">Otherwise:</span></span>  
  
    -   <span data-ttu-id="eb4ed-899">Jeśli oba `expression`te elementy. Typ i `type` reprezentuje typy liczbowe lub logiczne, lub dopuszczające wartości null lub niedopuszczające null typy wyliczeniowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-899">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="eb4ed-900">`expression`Jeśli. Typ lub `type` jest typem referencyjnym, z `expression`którego istnieje jawne opakowanie, rozpakowywanie lub konwersja odwołania. Wpisz do `type`, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-900">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-901">Podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-901">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-902">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-902">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-903">Jeśli `expression`. Typ można przypisać do typu argumentu metody implementującej, a zwracany typ metody implementującej jest możliwy do przypisania do `type`, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-903">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="eb4ed-904">Jeśli jedno lub oba z `expression`. Wpisz lub `type` jest typem wartości null, a odpowiednie typy wartości, które nie są dopuszczane do wartości null, są równe typem argumentu i typem zwracanym metody implementującej odpowiednio, węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-904">If one or both of `expression`.Type or `type` is a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="eb4ed-905">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-905">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-906">Jeśli oba `expression`te elementy. Typ i `type` nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-906">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="eb4ed-907">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-907">Otherwise the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-908">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące operację konwersji typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-908">The following code example shows how to create an expression that represents a type conversion operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#23)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-909"><paramref name="expression" />lub <paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-909"><paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-910">Nie zdefiniowano operatora konwersji między <paramref name="expression" />. Wpisz i <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-910">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Convert(class System.Linq.Expressions.Expression expression, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Convert(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Convert : System.Linq.Expressions.Expression * Type * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Convert (expression, type, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-911"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-911">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-912">A <see cref="T:System.Type" /> , aby <see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-912">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-913">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-913">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-914">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację konwersji, dla której określono metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-914">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation for which the implementing method is specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-915">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> <see cref="P:System.Linq.Expressions.Expression.Type" /> <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-915">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Convert" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, <see cref="P:System.Linq.Expressions.Expression.Type" />, and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-916">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-916">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-917"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> Właściwość jest`false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-917">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="eb4ed-918">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> to. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-918">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="eb4ed-919">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-919">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-920">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-920">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-921">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-921">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-922">Jeśli metoda nie `null`jest, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-922">If method is not `null`, it is the implementing method.</span></span> <span data-ttu-id="eb4ed-923">Musi reprezentować metodę inną niż void `static` (`Shared` w Visual Basic), która przyjmuje jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-923">It must represent a non-void, `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
-   <span data-ttu-id="eb4ed-924">W przeciwnym razie, `expression`Jeśli. Typ lub `type` jest typem zdefiniowanym przez użytkownika, który definiuje niejawny lub jawny operator <xref:System.Reflection.MethodInfo> konwersji, który reprezentuje operator jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-924">Otherwise, if either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-925">W przeciwnym razie:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-925">Otherwise:</span></span>  
  
    -   <span data-ttu-id="eb4ed-926">Jeśli oba `expression`te elementy. Typ i `type` reprezentuje typy liczbowe lub logiczne, lub dopuszczające wartości null lub niedopuszczające null typy wyliczeniowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-926">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="eb4ed-927">`expression`Jeśli. Typ lub `type` jest typem referencyjnym, z `expression`którego istnieje jawne opakowanie, rozpakowywanie lub konwersja odwołania. Wpisz do `type`, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-927">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-928">Podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-928">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-929">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-929">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-930">Jeśli `expression`. Typ można przypisać do typu argumentu metody implementującej, a zwracany typ metody implementującej jest możliwy do przypisania do `type`, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-930">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="eb4ed-931">W przypadku obu lub obu `expression`tych elementów. Wpisz lub `type` jest typem wartości null, a odpowiednie typy wartości, które nie są dopuszczane do wartości null, są równe typem argumentu i typem zwracanym metody implementującej odpowiednio, węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-931">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="eb4ed-932">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-932">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-933">Jeśli oba `expression`te elementy. Typ i `type` nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-933">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="eb4ed-934">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-934">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-935"><paramref name="expression" />lub <paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-935"><paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-936"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-936"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-937">Nie zdefiniowano operatora konwersji między <paramref name="expression" />. Wpisz i <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-937">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span></span>  
  
<span data-ttu-id="eb4ed-938">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-938">-or-</span></span> 
 <span data-ttu-id="eb4ed-939"><paramref name="expression" />. Nie można przypisać typu do typu argumentu metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-939"><paramref name="expression" />.Type is not assignable to the argument type of the method represented by <paramref name="method" />.</span></span>  
  
<span data-ttu-id="eb4ed-940">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-940">-or-</span></span> 
<span data-ttu-id="eb4ed-941">Typ zwracany metody reprezentowanej przez <paramref name="method" /> nie można przypisać do <paramref name="type" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-941">The return type of the method represented by <paramref name="method" /> is not assignable to <paramref name="type" />.</span></span>  
  
<span data-ttu-id="eb4ed-942">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-942">-or-</span></span> 
 <span data-ttu-id="eb4ed-943"><paramref name="expression" />. Typ lub <paramref name="type" /> jest typem wartości null, a odpowiadający mu typ wartości niedopuszczający wartości null nie jest równy typowi argumentu lub zwracanym typem, metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-943"><paramref name="expression" />.Type or <paramref name="type" /> is a nullable value type and the corresponding non-nullable value type does not equal the argument type or the return type, respectively, of the method represented by <paramref name="method" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="eb4ed-944">Znaleziono więcej niż jedną metodę zgodną <paramref name="method" /> z opisem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-944">More than one method that matches the <paramref name="method" /> description was found.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-945">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację konwersji, która zgłasza wyjątek, jeśli typ docelowy jest przepełniony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-945">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ConvertChecked(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ConvertChecked(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member ConvertChecked : System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.ConvertChecked (expression, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-946"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-946">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-947">A <see cref="T:System.Type" /> , aby <see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-947">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-948">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację konwersji, która zgłasza wyjątek, jeśli typ docelowy jest przepełniony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-948">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-949"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> A, który <see cref="P:System.Linq.Expressions.Expression.Type" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.UnaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-949">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-950">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-950">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-951"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> Właściwość jest`false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-951">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="eb4ed-952">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> to. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-952">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="eb4ed-953">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-953">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-954">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-954">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-955">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-955">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-956">`expression`Jeśli. Typ lub `type` jest typem zdefiniowanym przez użytkownika, który definiuje niejawny lub jawny operator <xref:System.Reflection.MethodInfo> konwersji, który reprezentuje operator jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-956">If either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-957">W przeciwnym razie:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-957">Otherwise:</span></span>  
  
    -   <span data-ttu-id="eb4ed-958">Jeśli oba `expression`te elementy. Typ i `type` reprezentuje typy liczbowe lub logiczne, lub dopuszczające wartości null lub niedopuszczające null typy wyliczeniowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-958">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="eb4ed-959">`expression`Jeśli. Typ lub `type` jest typem referencyjnym, z `expression`którego istnieje jawne opakowanie, rozpakowywanie lub konwersja odwołania. Wpisz do `type`, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-959">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-960">Podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-960">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-961">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-961">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-962">Jeśli `expression`. Typ można przypisać do typu argumentu metody implementującej, a zwracany typ metody implementującej jest możliwy do przypisania do `type`, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-962">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="eb4ed-963">W przypadku obu lub obu `expression`tych elementów. Wpisz lub `type` jest typem wartości null, a odpowiednie typy wartości, które nie są dopuszczane do wartości null, są równe typem argumentu i typem zwracanym metody implementującej odpowiednio, węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-963">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="eb4ed-964">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-964">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-965">Jeśli oba `expression`te elementy. Typ i `type` nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-965">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="eb4ed-966">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-966">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-967"><paramref name="expression" />lub <paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-967"><paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-968">Nie zdefiniowano operatora konwersji między <paramref name="expression" />. Wpisz i <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-968">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression ConvertChecked(class System.Linq.Expressions.Expression expression, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ ConvertChecked(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member ConvertChecked : System.Linq.Expressions.Expression * Type * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.ConvertChecked (expression, type, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-969"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-969">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-970">A <see cref="T:System.Type" /> , aby <see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-970">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-971">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-971">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-972">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację konwersji, która zgłasza wyjątek, jeśli typ docelowy jest przepełniony i dla którego określono metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-972">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a conversion operation that throws an exception if the target type is overflowed and for which the implementing method is specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-973">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> <see cref="P:System.Linq.Expressions.Expression.Type" /> <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-973">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ConvertChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" />, <see cref="P:System.Linq.Expressions.Expression.Type" />, and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-974">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-974">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-975"><xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> Właściwość jest`false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-975">The <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> property is `false`.</span></span> <span data-ttu-id="eb4ed-976">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> to. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-976">If the node is lifted, <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> is `true`.</span></span> <span data-ttu-id="eb4ed-977">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-977">Otherwise, it is `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-978">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-978">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-979">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-979">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-980">Jeśli metoda nie `null`jest, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-980">If method is not `null`, it is the implementing method.</span></span> <span data-ttu-id="eb4ed-981">Musi reprezentować metodę inną niż void `static` (`Shared` w Visual Basic), która przyjmuje jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-981">It must represent a non-void, `static` (`Shared` in Visual Basic) method that takes one argument.</span></span>  
  
-   <span data-ttu-id="eb4ed-982">W przeciwnym razie, `expression`Jeśli. Typ lub `type` jest typem zdefiniowanym przez użytkownika, który definiuje niejawny lub jawny operator <xref:System.Reflection.MethodInfo> konwersji, który reprezentuje operator jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-982">Otherwise, if either `expression`.Type or `type` is a user-defined type that defines an implicit or explicit conversion operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-983">W przeciwnym razie:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-983">Otherwise:</span></span>  
  
    -   <span data-ttu-id="eb4ed-984">Jeśli oba `expression`te elementy. Typ i `type` reprezentuje typy liczbowe lub logiczne, lub dopuszczające wartości null lub niedopuszczające null typy wyliczeniowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-984">If both `expression`.Type and `type` represent numeric or Boolean types, or nullable or non-nullable enumeration types, the implementing method is `null`.</span></span>  
  
    -   <span data-ttu-id="eb4ed-985">`expression`Jeśli. Typ lub `type` jest typem referencyjnym, z `expression`którego istnieje jawne opakowanie, rozpakowywanie lub konwersja odwołania. Wpisz do `type`, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-985">If either `expression`.Type or `type` is a reference type and an explicit boxing, unboxing, or reference conversion exists from `expression`.Type to `type`, the implementing method is `null`.</span></span>  
  
#### <a name="lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-986">Podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-986">Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-987">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-987">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-988">Jeśli `expression`. Typ można przypisać do typu argumentu metody implementującej, a zwracany typ metody implementującej jest możliwy do przypisania do `type`, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-988">If `expression`.Type is assignable to the argument type of the implementing method and the return type of the implementing method is assignable to `type`, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="eb4ed-989">W przypadku obu lub obu `expression`tych elementów. Wpisz lub `type` jest typem wartości null, a odpowiednie typy wartości, które nie są dopuszczane do wartości null, są równe typem argumentu i typem zwracanym metody implementującej odpowiednio, węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-989">If either or both of `expression`.Type or `type` are a nullable value type and the corresponding non-nullable value types are equal to the argument type and the return type of the implementing method respectively, the node is lifted.</span></span>  
  
 <span data-ttu-id="eb4ed-990">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-990">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-991">Jeśli oba `expression`te elementy. Typ i `type` nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-991">If both `expression`.Type and `type` are non-nullable, the node is not lifted.</span></span>  
  
-   <span data-ttu-id="eb4ed-992">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-992">Otherwise the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-993"><paramref name="expression" />lub <paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-993"><paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-994"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-994"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-995">Nie zdefiniowano operatora konwersji między <paramref name="expression" />. Wpisz i <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-995">No conversion operator is defined between <paramref name="expression" />.Type and <paramref name="type" />.</span></span>  
  
<span data-ttu-id="eb4ed-996">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-996">-or-</span></span> 
 <span data-ttu-id="eb4ed-997"><paramref name="expression" />. Nie można przypisać typu do typu argumentu metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-997"><paramref name="expression" />.Type is not assignable to the argument type of the method represented by <paramref name="method" />.</span></span>  
  
<span data-ttu-id="eb4ed-998">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-998">-or-</span></span> 
<span data-ttu-id="eb4ed-999">Typ zwracany metody reprezentowanej przez <paramref name="method" /> nie można przypisać do <paramref name="type" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-999">The return type of the method represented by <paramref name="method" /> is not assignable to <paramref name="type" />.</span></span>  
  
<span data-ttu-id="eb4ed-1000">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1000">-or-</span></span> 
 <span data-ttu-id="eb4ed-1001"><paramref name="expression" />. Typ lub <paramref name="type" /> jest typem wartości null, a odpowiadający mu typ wartości niedopuszczający wartości null nie jest równy typowi argumentu lub zwracanym typem, metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1001"><paramref name="expression" />.Type or <paramref name="type" /> is a nullable value type and the corresponding non-nullable value type does not equal the argument type or the return type, respectively, of the method represented by <paramref name="method" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="eb4ed-1002">Znaleziono więcej niż jedną metodę zgodną <paramref name="method" /> z opisem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1002">More than one method that matches the <paramref name="method" /> description was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DebugInfo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DebugInfoExpression DebugInfo (System.Linq.Expressions.SymbolDocumentInfo document, int startLine, int startColumn, int endLine, int endColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DebugInfoExpression DebugInfo(class System.Linq.Expressions.SymbolDocumentInfo document, int32 startLine, int32 startColumn, int32 endLine, int32 endColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DebugInfo (document As SymbolDocumentInfo, startLine As Integer, startColumn As Integer, endLine As Integer, endColumn As Integer) As DebugInfoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DebugInfoExpression ^ DebugInfo(System::Linq::Expressions::SymbolDocumentInfo ^ document, int startLine, int startColumn, int endLine, int endColumn);" />
      <MemberSignature Language="F#" Value="static member DebugInfo : System.Linq.Expressions.SymbolDocumentInfo * int * int * int * int -&gt; System.Linq.Expressions.DebugInfoExpression" Usage="System.Linq.Expressions.Expression.DebugInfo (document, startLine, startColumn, endLine, endColumn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DebugInfoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Linq.Expressions.SymbolDocumentInfo" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startLine" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startColumn" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="endLine" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="endColumn" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="eb4ed-1003"><see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> Reprezentuje plik źródłowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1003">The <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that represents the source file.</span></span></param>
        <param name="startLine"><span data-ttu-id="eb4ed-1004">Wiersz startowy <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1004">The start line of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span></span> <span data-ttu-id="eb4ed-1005">Musi być większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1005">Must be greater than 0.</span></span></param>
        <param name="startColumn"><span data-ttu-id="eb4ed-1006">Kolumna początkowa tego <see cref="T:System.Linq.Expressions.DebugInfoExpression" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1006">The start column of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span></span> <span data-ttu-id="eb4ed-1007">Musi być większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1007">Must be greater than 0.</span></span></param>
        <param name="endLine"><span data-ttu-id="eb4ed-1008">Linia końcowa tego <see cref="T:System.Linq.Expressions.DebugInfoExpression" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1008">The end line of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span></span> <span data-ttu-id="eb4ed-1009">Musi być większy lub równy wierszowi początkowemu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1009">Must be greater or equal than the start line.</span></span></param>
        <param name="endColumn"><span data-ttu-id="eb4ed-1010">Kolumna końcowa tego <see cref="T:System.Linq.Expressions.DebugInfoExpression" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1010">The end column of this <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span></span> <span data-ttu-id="eb4ed-1011">Jeśli linia końcowa jest taka sama jak linia początkowa, musi być większa lub równa wartości kolumny Start.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1011">If the end line is the same as the start line, it must be greater or equal than the start column.</span></span> <span data-ttu-id="eb4ed-1012">W każdym przypadku musi być większa niż 0.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1012">In any case, must be greater than 0.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1013"><see cref="T:System.Linq.Expressions.DebugInfoExpression" /> Tworzy z określonym zakresem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1013">Creates a <see cref="T:System.Linq.Expressions.DebugInfoExpression" /> with the specified span.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1014">Wystąpienie elementu <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1014">An instance of <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Decrement">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1015">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący zmniejszenie wartości wyrażenia o 1.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1015">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Decrement(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Decrement(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Decrement : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Decrement expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1016"><see cref="T:System.Linq.Expressions.Expression" /> Do zmniejszenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1016">An <see cref="T:System.Linq.Expressions.Expression" /> to decrement.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1017">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący zmniejszenie wartości wyrażenia o 1.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1017">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1018"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący zmniejszenie wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1018">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decremented expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1019">To wyrażenie jest funkcjonalne i nie zmienia wartości przenoszonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1019">This expression is functional and does not change the value of the object passed to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1020">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które odejmuje 1 od danej wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1020">The following code example shows how to create an expression that subtracts 1 from a given value.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#5)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Decrement(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Decrement(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Decrement : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Decrement (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1021"><see cref="T:System.Linq.Expressions.Expression" /> Do zmniejszenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1021">An <see cref="T:System.Linq.Expressions.Expression" /> to decrement.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1022"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1022">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1023">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący zmniejszenie wartości wyrażenia o 1.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1023">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decrementing of the expression by 1.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1024"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący zmniejszenie wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1024">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the decremented expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1025">To wyrażenie jest funkcjonalne i nie zmienia wartości przenoszonego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1025">This expression is functional and does not change the value of the object passed to it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DefaultExpression Default (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DefaultExpression Default(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Default(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DefaultExpression ^ Default(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Default : Type -&gt; System.Linq.Expressions.DefaultExpression" Usage="System.Linq.Expressions.Expression.Default type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DefaultExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-1026">A <see cref="T:System.Type" /> , aby <see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1026">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1027">Tworzy obiekt <see cref="T:System.Linq.Expressions.DefaultExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.Type" /> ma właściwość ustawioną na określony typ.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1027">Creates a <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to the specified type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1028">A <see cref="T:System.Linq.Expressions.DefaultExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> ma<see cref="P:System.Linq.Expressions.Expression.Type" /> Właściwość równą i Właściwość ustawioną na określony typ.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1028">A <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-1029">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które reprezentuje wartość domyślną dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1029">The following code example shows how to create an expression that represents a default value for a given type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#6)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Divide">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1030">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dzielenia arytmetycznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1030">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Divide(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Divide(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Divide (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1031"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1031">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1032"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1032">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1033">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dzielenia arytmetycznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1033">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1034"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1034">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1035">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1035">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1036"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1036">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1037">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1037">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-1038">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1038">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-1039"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1039">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1040">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1040">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1041">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1041">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1042">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1042">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1043"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub reprezentuje`right` Typzdefiniowanyprzezużytkownika,któryprzeciążaoperatordzielenia,oznaczato,żemetodajest<xref:System.Reflection.MethodInfo> metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1043">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the division operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1044">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1044">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1045">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1045">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1046">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1046">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1047">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1047">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1048">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1048">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1049">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1049">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1050">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1050">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1051">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1051">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-1052">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1052">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1053">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1053">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1054">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora dzielenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1054">The type of the node is the result type of the predefined division operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-1055">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1055">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1056">Typ węzła jest typem dopuszczającym wartość null, który odpowiada typowi wyniku wstępnie zdefiniowanego operatora dzielenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1056">The type of the node is the nullable type that corresponds to the result type of the predefined division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1057">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie dzielące jego pierwszy argument przez drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1057">The following code example shows how to create an expression that divides its first argument by its second argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#7)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1058"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1058"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1059">Nie zdefiniowano operatora dzielenia dla elementu <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1059">The division operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Divide(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Divide(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Divide (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1060"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1060">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1061"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1061">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1062">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1062">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1063">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację dzielenia arytmetycznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1063">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic division operation.</span></span> <span data-ttu-id="eb4ed-1064">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1064">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1065">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1065">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Divide" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1066">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1066">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1067"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1067">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1068">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1068">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-1069">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1069">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-1070"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1070">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1071">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1071">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1072">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1072">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1073">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1073">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1074">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1074">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-1075">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje <xref:System.Reflection.MethodInfo> typ zdefiniowany przez użytkownika, który przeciąża operator dzielenia, oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1075">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the division operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1076">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1076">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1077">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1077">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1078">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1078">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1079">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1079">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1080">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1080">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1081">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1081">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1082">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1082">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1083">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1083">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-1084">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1084">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1085">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1085">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1086">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora dzielenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1086">The type of the node is the result type of the predefined division operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-1087">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1087">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1088">Typ węzła jest typem dopuszczającym wartość null, który odpowiada typowi wyniku wstępnie zdefiniowanego operatora dzielenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1088">The type of the node is the nullable type that corresponds to the result type of the predefined division operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1089"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1089"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1090"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1090"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1091"><paramref name="method" />is <see langword="null" /> i operator dzielenia nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1091"><paramref name="method" /> is <see langword="null" /> and the division operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivideAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1092">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania dzielenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1092">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member DivideAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.DivideAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1093"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1093">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1094"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1094">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1095">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania dzielenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1095">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1096"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1096">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member DivideAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.DivideAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1097"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1097">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1098"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1098">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1099">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1099">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1100">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania dzielenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1100">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1101">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1101">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DivideAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression DivideAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ DivideAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member DivideAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.DivideAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1102"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1102">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1103"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1103">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1104">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1104">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-1105">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1105">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1106">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania dzielenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1106">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a division assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1107">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1107">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.DivideAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dynamic">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1108">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1108">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arguments As IEnumerable(Of Expression)) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Dynamic : System.Runtime.CompilerServices.CallSiteBinder * Type * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.Dynamic (binder, returnType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="eb4ed-1109">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1109">The runtime binder for the dynamic operation.</span></span></param>
        <param name="returnType"><span data-ttu-id="eb4ed-1110">Typ wyniku wyrażenia dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1110">The result type of the dynamic expression.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-1111">Argumenty operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1111">The arguments to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1112">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1112">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1113"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A, który <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> równe i ma ustawioną wartość i. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1113">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1114"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> Właściwość wyniku zostanie wywnioskowana z typów argumentów i określonego typu zwracanego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1114">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Dynamic : System.Runtime.CompilerServices.CallSiteBinder * Type * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.Dynamic (binder, returnType, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="eb4ed-1115">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1115">The runtime binder for the dynamic operation.</span></span></param>
        <param name="returnType"><span data-ttu-id="eb4ed-1116">Typ wyniku wyrażenia dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1116">The result type of the dynamic expression.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-1117">Pierwszy argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1117">The first argument to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1118">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1118">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1119"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A, który <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> równe i ma ustawioną wartość i. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1119">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1120"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> Właściwość wyniku zostanie wywnioskowana z typów argumentów i określonego typu zwracanego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1120">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, ParamArray arguments As Expression()) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Dynamic : System.Runtime.CompilerServices.CallSiteBinder * Type * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.Dynamic (binder, returnType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="eb4ed-1121">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1121">The runtime binder for the dynamic operation.</span></span></param>
        <param name="returnType"><span data-ttu-id="eb4ed-1122">Typ wyniku wyrażenia dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1122">The result type of the dynamic expression.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-1123">Argumenty operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1123">The arguments to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1124">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1124">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1125"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A, który <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> równe i ma ustawioną wartość i. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1125">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1126"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> Właściwość wyniku zostanie wywnioskowana z typów argumentów i określonego typu zwracanego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1126">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Dynamic : System.Runtime.CompilerServices.CallSiteBinder * Type * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.Dynamic (binder, returnType, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="eb4ed-1127">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1127">The runtime binder for the dynamic operation.</span></span></param>
        <param name="returnType"><span data-ttu-id="eb4ed-1128">Typ wyniku wyrażenia dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1128">The result type of the dynamic expression.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-1129">Pierwszy argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1129">The first argument to the dynamic operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-1130">Drugi argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1130">The second argument to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1131">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1131">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1132"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A, który <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> równe i ma ustawioną wartość i. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1132">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1133"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> Właściwość wyniku zostanie wywnioskowana z typów argumentów i określonego typu zwracanego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1133">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression, arg2 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Dynamic : System.Runtime.CompilerServices.CallSiteBinder * Type * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.Dynamic (binder, returnType, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="eb4ed-1134">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1134">The runtime binder for the dynamic operation.</span></span></param>
        <param name="returnType"><span data-ttu-id="eb4ed-1135">Typ wyniku wyrażenia dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1135">The result type of the dynamic expression.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-1136">Pierwszy argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1136">The first argument to the dynamic operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-1137">Drugi argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1137">The second argument to the dynamic operation.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-1138">Trzeci argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1138">The third argument to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1139">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1139">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1140"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A, który <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> równe i ma ustawioną wartość i. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1140">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1141"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> Właściwość wyniku zostanie wywnioskowana z typów argumentów i określonego typu zwracanego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1141">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression Dynamic(class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Type returnType, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Dynamic (binder As CallSiteBinder, returnType As Type, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ Dynamic(System::Runtime::CompilerServices::CallSiteBinder ^ binder, Type ^ returnType, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Dynamic : System.Runtime.CompilerServices.CallSiteBinder * Type * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.Dynamic (binder, returnType, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="returnType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="binder"><span data-ttu-id="eb4ed-1142">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1142">The runtime binder for the dynamic operation.</span></span></param>
        <param name="returnType"><span data-ttu-id="eb4ed-1143">Typ wyniku wyrażenia dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1143">The result type of the dynamic expression.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-1144">Pierwszy argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1144">The first argument to the dynamic operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-1145">Drugi argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1145">The second argument to the dynamic operation.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-1146">Trzeci argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1146">The third argument to the dynamic operation.</span></span></param>
        <param name="arg3"><span data-ttu-id="eb4ed-1147">Czwarty argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1147">The fourth argument to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1148">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1148">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1149"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A, który <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> równe i ma ustawioną wartość i. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1149">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" /> and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1150"><xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> Właściwość wyniku zostanie wywnioskowana z typów argumentów i określonego typu zwracanego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1150">The <xref:System.Linq.Expressions.DynamicExpression.DelegateType%2A> property of the result will be inferred from the types of the arguments and the specified return type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ElementInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1151"><see cref="T:System.Linq.Expressions.ElementInit" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1151">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ElementInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ElementInit ElementInit(class System.Reflection.MethodInfo addMethod, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ElementInit (addMethod As MethodInfo, arguments As IEnumerable(Of Expression)) As ElementInit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ElementInit ^ ElementInit(System::Reflection::MethodInfo ^ addMethod, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member ElementInit : System.Reflection.MethodInfo * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.ElementInit" Usage="System.Linq.Expressions.Expression.ElementInit (addMethod, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ElementInit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="addMethod"><span data-ttu-id="eb4ed-1152">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1152">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-1153"><see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> Obiekt <see cref="T:System.Collections.Generic.IEnumerable`1" /> zawierający <see cref="T:System.Linq.Expressions.Expression" /> obiekty, aby ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1153">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to set the <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1154"><see cref="T:System.Linq.Expressions.ElementInit" />Tworzy, <see cref="T:System.Collections.Generic.IEnumerable`1" /> podaną jako drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1154">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />, given an <see cref="T:System.Collections.Generic.IEnumerable`1" /> as the second argument.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1155">Ma właściwości i<see cref="P:System.Linq.Expressions.ElementInit.Arguments" />ustawione na określone wartości. <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> <see cref="T:System.Linq.Expressions.ElementInit" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1155">An <see cref="T:System.Linq.Expressions.ElementInit" /> that has the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> and <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1156">`addMethod` Parametr musi reprezentować metodę wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1156">The `addMethod` parameter must represent an instance method named "Add" (case insensitive).</span></span> <span data-ttu-id="eb4ed-1157">Metoda Add musi mieć taką samą liczbę parametrów jak liczba elementów w `arguments`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1157">The add method must have the same number of parameters as the number of elements in `arguments`.</span></span> <span data-ttu-id="eb4ed-1158">Właściwość każdego elementu w `arguments` elemencie musi być możliwa do przypisania do typu odpowiedniego parametru metody Add, prawdopodobnie po utworzeniu. \*\* <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1158">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element in `arguments` must be assignable to the type of the corresponding parameter of the add method, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-1159">Element zostanie umieszczony w cudzysłowie, jeśli odpowiedni parametr metody jest typu <xref:System.Linq.Expressions.Expression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1159">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-1160">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1160">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-1161">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`arguments`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1161">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1162">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> metody do <xref:System.Linq.Expressions.ElementInit> utworzenia, która reprezentuje wywołanie <xref:System.Collections.Generic.Dictionary%602.Add%2A> metody w celu zainicjowania elementu kolekcji słownika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1162">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.ElementInit> that represents calling the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to initialize an element of a dictionary collection.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#4)]
 [!code-vb[System.Linq.Expressions.Expression#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1163"><paramref name="addMethod" />lub <paramref name="arguments" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1163"><paramref name="addMethod" /> or <paramref name="arguments" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1164">Metoda <paramref name="addMethod" /> reprezentowana nie jest nazwą "Add" (bez uwzględniania wielkości liter).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1164">The method that <paramref name="addMethod" /> represents is not named "Add" (case insensitive).</span></span>  
  
<span data-ttu-id="eb4ed-1165">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1165">-or-</span></span> 
<span data-ttu-id="eb4ed-1166">Metoda, która <paramref name="addMethod" /> reprezentuje, nie jest metodą wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1166">The method that <paramref name="addMethod" /> represents is not an instance method.</span></span>  
  
<span data-ttu-id="eb4ed-1167">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1167">-or-</span></span> 
 <span data-ttu-id="eb4ed-1168"><paramref name="arguments" />nie zawiera takiej samej liczby elementów jak liczba parametrów dla metody, która <paramref name="addMethod" /> reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1168"><paramref name="arguments" /> does not contain the same number of elements as the number of parameters for the method that <paramref name="addMethod" /> represents.</span></span>  
  
<span data-ttu-id="eb4ed-1169">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1169">-or-</span></span> 
<span data-ttu-id="eb4ed-1170">Nie można przypisać <paramref name="arguments" /> <paramref name="addMethod" /> właściwości co najmniej jednego elementu elementu do typu odpowiadającego mu parametru metody, która reprezentuje. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1170">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the method that <paramref name="addMethod" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ElementInit ElementInit(class System.Reflection.MethodInfo addMethod, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ElementInit (addMethod As MethodInfo, ParamArray arguments As Expression()) As ElementInit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ElementInit ^ ElementInit(System::Reflection::MethodInfo ^ addMethod, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member ElementInit : System.Reflection.MethodInfo * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.ElementInit" Usage="System.Linq.Expressions.Expression.ElementInit (addMethod, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ElementInit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="addMethod"><span data-ttu-id="eb4ed-1171">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1171">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-1172">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> ustawiania właściwości równej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1172">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to set the <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1173"><see cref="T:System.Linq.Expressions.ElementInit" />Tworzy, używając tablicy wartości jako drugi argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1173">Creates an <see cref="T:System.Linq.Expressions.ElementInit" />, given an array of values as the second argument.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1174">Ma właściwości i<see cref="P:System.Linq.Expressions.ElementInit.Arguments" />ustawione na określone wartości. <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> <see cref="T:System.Linq.Expressions.ElementInit" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1174">An <see cref="T:System.Linq.Expressions.ElementInit" /> that has the <see cref="P:System.Linq.Expressions.ElementInit.AddMethod" /> and <see cref="P:System.Linq.Expressions.ElementInit.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1175">`addMethod` Parametr musi reprezentować metodę wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1175">The `addMethod` parameter must represent an instance method named "Add" (case insensitive).</span></span> <span data-ttu-id="eb4ed-1176">Metoda Add musi mieć taką samą liczbę parametrów jak liczba elementów w `arguments`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1176">The add method must have the same number of parameters as the number of elements in `arguments`.</span></span> <span data-ttu-id="eb4ed-1177">Właściwość każdego elementu w `arguments` elemencie musi być możliwa do przypisania do typu odpowiedniego parametru metody Add, prawdopodobnie po utworzeniu. \*\* <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1177">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element in `arguments` must be assignable to the type of the corresponding parameter of the add method, possibly after *quoting*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-1178">Element zostanie umieszczony w cudzysłowie, jeśli odpowiedni parametr metody jest typu <xref:System.Linq.Expressions.Expression>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1178">An element will be quoted only if the corresponding method parameter is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-1179">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1179">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-1180">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`arguments`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1180">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1181">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> metody do <xref:System.Linq.Expressions.ElementInit> utworzenia, która reprezentuje wywołanie <xref:System.Collections.Generic.Dictionary%602.Add%2A> metody w celu zainicjowania elementu kolekcji słownika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1181">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ElementInit%28System.Reflection.MethodInfo%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.ElementInit> that represents calling the <xref:System.Collections.Generic.Dictionary%602.Add%2A> method to initialize an element of a dictionary collection.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#4)]
 [!code-vb[System.Linq.Expressions.Expression#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1182"><paramref name="addMethod" />lub <paramref name="arguments" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1182"><paramref name="addMethod" /> or <paramref name="arguments" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1183">Metoda, którą reprezentuje metoda addMethod, nie ma nazwy "Add" (bez uwzględniania wielkości liter).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1183">The method that addMethod represents is not named "Add" (case insensitive).</span></span>  
  
<span data-ttu-id="eb4ed-1184">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1184">-or-</span></span> 
<span data-ttu-id="eb4ed-1185">Metoda, którą reprezentuje metoda addMethod, nie jest metodą wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1185">The method that addMethod represents is not an instance method.</span></span>  
  
<span data-ttu-id="eb4ed-1186">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1186">-or-</span></span> 
<span data-ttu-id="eb4ed-1187">argumenty nie zawierają takiej samej liczby elementów jak liczba parametrów dla metody reprezentowanej przez metodę addMethod.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1187">arguments does not contain the same number of elements as the number of parameters for the method that addMethod represents.</span></span>  
  
<span data-ttu-id="eb4ed-1188">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1188">-or-</span></span> 
<span data-ttu-id="eb4ed-1189">Nie można przypisać <paramref name="arguments" /> <paramref name="addMethod" /> właściwości co najmniej jednego elementu elementu do typu odpowiadającego mu parametru metody, która reprezentuje. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1189">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the method that <paramref name="addMethod" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DefaultExpression Empty ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DefaultExpression Empty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Empty () As DefaultExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DefaultExpression ^ Empty();" />
      <MemberSignature Language="F#" Value="static member Empty : unit -&gt; System.Linq.Expressions.DefaultExpression" Usage="System.Linq.Expressions.Expression.Empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DefaultExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb4ed-1190">Tworzy puste wyrażenie, które ma <see cref="T:System.Void" /> typ.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1190">Creates an empty expression that has <see cref="T:System.Void" /> type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1191">A <see cref="T:System.Linq.Expressions.DefaultExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> <see cref="T:System.Void" />Właściwość równą i Właściwość ustawioną na. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1191">A <see cref="T:System.Linq.Expressions.DefaultExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Default" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <see cref="T:System.Void" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1192">Pustego wyrażenia można użyć w przypadku, gdy jest oczekiwane wyrażenie, ale nie jest wymagana żadna akcja.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1192">An empty expression can be used where an expression is expected but no action is desired.</span></span> <span data-ttu-id="eb4ed-1193">Na przykład, można użyć pustego wyrażenia jako ostatniego wyrażenia w wyrażeniu bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1193">For example, you can use an empty expression as the last expression in a block expression.</span></span> <span data-ttu-id="eb4ed-1194">W tym przypadku zwracaną wartością wyrażenia bloku jest void.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1194">In this case, the block expression's return value is void.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1195">Poniższy przykład kodu pokazuje, jak utworzyć puste wyrażenie i dodać je do wyrażenia bloku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1195">The following code example shows how to create an empty expression and add it to a block expression.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#31)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equal">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1196">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący porównanie równości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1196">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Equal(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equal (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Equal(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Equal : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Equal (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1197"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1197">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1198"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1198">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1199">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący porównanie równości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1199">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1200"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1200">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1201">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1201">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1202"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1202">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1203">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwość jest. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1203">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="eb4ed-1204">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1204">Otherwise, it is `false`.</span></span> <span data-ttu-id="eb4ed-1205">Właściwość jest zawsze `false`. <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1205">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="eb4ed-1206">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1206">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1207">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1207">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1208">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1208">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1209"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub reprezentuje`right` Typzdefiniowanyprzezużytkownika,któryprzeciążaoperatorrówności,tooznacza,żemetodajest<xref:System.Reflection.MethodInfo> metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1209">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the equality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1210">W przeciwnym razie metoda implementująca `null`ma wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1210">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1211">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1211">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1212">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1212">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1213">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1213">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1214">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1214">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1215">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1215">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1216">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1216">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1217">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1217">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1218">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1218">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1219">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1219">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1220">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1220">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1221">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1221">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1222">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1222">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1223">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które sprawdza, czy wartości dwóch argumentów są równe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1223">The following code example shows how to create an expression that checks whether the values of its two arguments are equal.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#8)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1224"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1224"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1225">Nie zdefiniowano operatora równości dla elementu <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1225">The equality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Equal(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equal (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Equal(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Equal : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * bool * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Equal (left, right, liftToNull, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1226"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1226">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1227"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1227">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="liftToNull"><span data-ttu-id="eb4ed-1228"><see langword="true" />Aby ustawić <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> na <see langword="true" />; , aby <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> ustawić wartość .<see langword="false" /> <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1228"><see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1229">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1229">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1230">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący porównanie równości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1230">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an equality comparison.</span></span> <span data-ttu-id="eb4ed-1231">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1231">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1232">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1232">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1233">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1233">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1234"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1234">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1235">Jeśli węzeł <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> zostanie zniesiony, właściwość jest `true` i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> właściwość jest równa `liftToNull`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1235">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="eb4ed-1236">W przeciwnym razie są oba `false`te elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1236">Otherwise, they are both `false`.</span></span> <span data-ttu-id="eb4ed-1237">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1237">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1238">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1238">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1239">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1239">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1240">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1240">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1241">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje <xref:System.Reflection.MethodInfo> typ zdefiniowany przez użytkownika, który przeciąża operator równości, to oznacza metodę implementującą metodę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1241">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the equality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1242">W przeciwnym razie metoda implementująca `null`ma wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1242">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1243">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1243">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1244">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1244">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1245">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1245">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1246">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1246">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1247">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony; Ponadto typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1247">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1248">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1248">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1249">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1249">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1250">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1250">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1251">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1251">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1252">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1252">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1253">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1253">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1254">Typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1254">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1255"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1255"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1256"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1256"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1257"><paramref name="method" />is <see langword="null" /> i operator równości nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1257"><paramref name="method" /> is <see langword="null" /> and the equality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExclusiveOr">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1258">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="XOR" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1258">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOr(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOr (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOr(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member ExclusiveOr : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ExclusiveOr (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1259"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1259">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1260"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1260">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1261">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="XOR" /> przy użyciu <c>op_ExclusiveOr</c> dla typów zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1261">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation, using <c>op_ExclusiveOr</c> for user-defined types.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1262"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1262">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1263">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1263">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1264"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1264">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1265">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1265">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-1266">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1266">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-1267"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1267">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1268">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1268">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1269">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1269">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1270">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1270">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1271"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `XOR` reprezentujetyp<xref:System.Reflection.MethodInfo> zdefiniowany przez użytkownika, który przeciąża operator, oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1271">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the `XOR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1272">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy całkowite lub logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1272">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1273">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1273">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1274">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1274">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1275">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1275">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1276">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1276">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1277">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1277">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1278">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1278">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1279">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1279">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-1280">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1280">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1281">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1281">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1282">Typ węzła jest typem wyniku wstępnie zdefiniowanego `XOR` operatora.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1282">The type of the node is the result type of the predefined `XOR` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-1283">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1283">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1284">Typ węzła jest typem dopuszczającym wartość null, który odpowiada typowi wyniku wstępnie zdefiniowanego `XOR` operatora.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1284">The type of the node is the nullable type that corresponds to the result type of the predefined `XOR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1285">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące logiczną operację XOR.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1285">The following code example shows how to create an expression that represents the logical XOR operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#9)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1286"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1286"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1287">Nie zdefiniowano <paramref name="left" />operatoradlaelementu <see langword="XOR" /> . Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1287">The <see langword="XOR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOr(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOr (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOr(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member ExclusiveOr : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ExclusiveOr (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1288"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1288">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1289"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1289">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1290">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1290">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1291">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="XOR" /> przy użyciu <c>op_ExclusiveOr</c> dla typów zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1291">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="XOR" /> operation, using <c>op_ExclusiveOr</c> for user-defined types.</span></span> <span data-ttu-id="eb4ed-1292">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1292">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1293">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1293">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOr" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1294">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1294">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1295"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1295">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1296">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1296">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-1297">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1297">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-1298"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1298">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1299">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1299">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1300">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1300">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1301">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1301">The following rules determine the chosen implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1302">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1302">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1303">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ <xref:System.Reflection.MethodInfo> zdefiniowany przez użytkownika, który przeciąża `XOR` operator, oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1303">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the `XOR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1304">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy całkowite lub logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1304">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1305">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1305">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1306">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1306">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1307">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1307">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1308">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1308">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1309">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1309">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1310">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1310">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1311">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1311">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-1312">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1312">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1313">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1313">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1314">Typ węzła jest typem wyniku wstępnie zdefiniowanego `XOR` operatora.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1314">The type of the node is the result type of the predefined `XOR` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-1315">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1315">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1316">Typ węzła jest typem dopuszczającym wartość null, który odpowiada typowi wyniku wstępnie zdefiniowanego `XOR` operatora.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1316">The type of the node is the nullable type that corresponds to the result type of the predefined `XOR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1317"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1317"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1318"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1318"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1319"><paramref name="method" />is <see langword="null" /> <paramref name="left" />i operatorniejestzdefiniowanydla.<see langword="XOR" /> Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1319"><paramref name="method" /> is <see langword="null" /> and the <see langword="XOR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExclusiveOrAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1320">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania XOR.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1320">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member ExclusiveOrAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ExclusiveOrAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1321"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1321">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1322"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1322">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1323">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania XOR przy użyciu <c>op_ExclusiveOr</c> dla typów zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1323">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1324"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1324">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member ExclusiveOrAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ExclusiveOrAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1325"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1325">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1326"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1326">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1327">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1327">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1328">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania XOR przy użyciu <c>op_ExclusiveOr</c> dla typów zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1328">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1329">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1329">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveOrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ExclusiveOrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExclusiveOrAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ExclusiveOrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member ExclusiveOrAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ExclusiveOrAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1330"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1330">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1331"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1331">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1332">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1332">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-1333">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1333">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1334">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania XOR przy użyciu <c>op_ExclusiveOr</c> dla typów zdefiniowanych przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1334">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise XOR assignment operation, using <c>op_ExclusiveOr</c> for user-defined types.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1335">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1335">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ExclusiveOrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Field">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1336">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1336">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, System.Reflection.FieldInfo field);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, class System.Reflection.FieldInfo field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, System::Reflection::FieldInfo ^ field);" />
      <MemberSignature Language="F#" Value="static member Field : System.Linq.Expressions.Expression * System.Reflection.FieldInfo -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.Field (expression, field)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="field" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1337"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1337">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span></span> <span data-ttu-id="eb4ed-1338">Dla <see langword="static" /> <paramref name="expression" /> <see langword="null" />(<see langword="Shared" /> w Visual Basic) musi być.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1338">For <see langword="static" /> (<see langword="Shared" /> in Visual Basic), <paramref name="expression" /> must be <see langword="null" />.</span></span></param>
        <param name="field"><span data-ttu-id="eb4ed-1339"><see cref="T:System.Reflection.FieldInfo" /> Aby<see cref="P:System.Linq.Expressions.MemberExpression.Member" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1339">The <see cref="T:System.Reflection.FieldInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1340">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1340">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1341"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> A, który <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> ma<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1341">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> and <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1342">Właściwość będąca wynikiem <xref:System.Linq.Expressions.MemberExpression> <xref:System.Reflection.FieldInfo.FieldType%2A> jest`field`równawłaściwości. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1342">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.FieldInfo.FieldType%2A> property of `field`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1343"><paramref name="field" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1343"><paramref name="field" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-1344">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1344">-or-</span></span> 
<span data-ttu-id="eb4ed-1345">Pole <paramref name="field" /> reprezentowane przez <see langword="null" />nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) i <paramref name="expression" /> ma wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1345">The field represented by <paramref name="field" /> is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1346"><paramref name="expression" />. Nie można przypisać typu do typu deklarującego pola reprezentowanego przez <paramref name="field" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1346"><paramref name="expression" />.Type is not assignable to the declaring type of the field represented by <paramref name="field" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Linq.Expressions.Expression * string -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.Field (expression, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1347">Zawierający pole o nazwie<paramref name="fieldName" />. <see cref="T:System.Linq.Expressions.Expression" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1347">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a field named <paramref name="fieldName" />.</span></span> <span data-ttu-id="eb4ed-1348">Może to mieć wartość null w przypadku pól statycznych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1348">This can be null for static fields.</span></span></param>
        <param name="fieldName"><span data-ttu-id="eb4ed-1349">Nazwa pola do uzyskania dostępu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1349">The name of a field to be accessed.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1350">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do pola, w którym znajduje się nazwa pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1350">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field given the name of the field.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1351">A <see cref="T:System.Linq.Expressions.MemberExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> <paramref name="expression" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.MemberExpression.Member" /> , <see cref="T:System.Reflection.FieldInfo" /> <paramref name="fieldName" />Właściwość ustawiona na, i Właściwość ustawiona na, która reprezentuje pole, które jest oznaczone przez. <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1351">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.FieldInfo" /> that represents the field denoted by <paramref name="fieldName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1352"><xref:System.Linq.Expressions.MemberExpression> <xref:System.Reflection.FieldInfo.FieldType%2A> <xref:System.Reflection.FieldInfo> Właściwość będąca wynikiem jest równa właściwości, która reprezentuje pole, które jest oznaczone przez `fieldName`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1352">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.FieldInfo.FieldType%2A> property of the <xref:System.Reflection.FieldInfo> that represents the field denoted by `fieldName`.</span></span>  
  
 <span data-ttu-id="eb4ed-1353">Ta metoda wyszukuje `expression`. Typ i jego typy podstawowe dla pola, które ma nazwę `fieldName`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1353">This method searches `expression`.Type and its base types for a field that has the name `fieldName`.</span></span> <span data-ttu-id="eb4ed-1354">Pola publiczne mają pierwszeństwo przed polami niepublicznymi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1354">Public fields are given preference over non-public fields.</span></span> <span data-ttu-id="eb4ed-1355">Jeśli zostanie znalezione pasujące pole, ta metoda przekazuje `expression` <xref:System.Reflection.FieldInfo> i reprezentuje to pole jako <xref:System.Linq.Expressions.Expression.Field%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1355">If a matching field is found, this method passes `expression` and the <xref:System.Reflection.FieldInfo> that represents that field to <xref:System.Linq.Expressions.Expression.Field%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1356">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące dostęp do pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1356">The following code example shows how to create an expression that represents accessing a field.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#37)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#37)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1357"><paramref name="expression" />lub <paramref name="fieldName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1357"><paramref name="expression" /> or <paramref name="fieldName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1358">Nie zdefiniowano <paramref name="fieldName" /> pola o nazwie <paramref name="expression" />w. Typ lub jego typy podstawowe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1358">No field named <paramref name="fieldName" /> is defined in <paramref name="expression" />.Type or its base types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, Type type, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Field(class System.Linq.Expressions.Expression expression, class System.Type type, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Field(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Linq.Expressions.Expression * Type * string -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.Field (expression, type, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fieldName" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1359">Zawierający obiekt pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1359">The containing object of the field.</span></span> <span data-ttu-id="eb4ed-1360">Może to mieć wartość null w przypadku pól statycznych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1360">This can be null for static fields.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-1361"><see cref="P:System.Linq.Expressions.Expression.Type" /> Zawiera pole.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1361">The <see cref="P:System.Linq.Expressions.Expression.Type" /> that contains the field.</span></span></param>
        <param name="fieldName"><span data-ttu-id="eb4ed-1362">Pole, do którego ma zostać uzyskany dostęp.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1362">The field to be accessed.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1363">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1363">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a field.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1364">Utworzony <see cref="T:System.Linq.Expressions.MemberExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1364">The created <see cref="T:System.Linq.Expressions.MemberExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionType">
      <MemberSignature Language="C#" Value="public static Type GetActionType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetActionType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActionType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetActionType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberSignature Language="F#" Value="static member GetActionType : Type[] -&gt; Type" Usage="System.Linq.Expressions.Expression.GetActionType typeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs"><span data-ttu-id="eb4ed-1365">Tablica do szesnastu <see cref="T:System.Type" /> obiektów, które określają argumenty typu <see langword="System.Action" /> dla typu delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1365">An array of up to sixteen <see cref="T:System.Type" /> objects that specify the type arguments for the <see langword="System.Action" /> delegate type.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1366">Tworzy obiekt, który reprezentuje ogólny <c>System.</c> typ delegata akcji, który ma określone argumenty typu. <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1366">Creates a <see cref="T:System.Type" /> object that represents a generic <c>System.Action</c> delegate type that has specific type arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1367">Typ obiektu <c>System. Action</c> , który ma określone argumenty typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1367">The type of a <c>System.Action</c> delegate that has the specified type arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1368">`typeArgs` Przykładowo, jeśli elementy reprezentują typy `T1…Tn`, obiekt wyniku <xref:System.Type> reprezentuje skonstruowany typ `System.Action<T1,…,Tn>` delegata w C# lub `System.Action(Of T1,…,Tn)` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1368">As an example, if the elements of `typeArgs` represent the types `T1…Tn`, the resulting <xref:System.Type> object represents the constructed delegate type `System.Action<T1,…,Tn>` in C# or `System.Action(Of T1,…,Tn)` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1369"><paramref name="typeArgs" />zawiera więcej niż szesnaste elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1369"><paramref name="typeArgs" /> contains more than sixteen elements.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1370"><paramref name="typeArgs" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1370"><paramref name="typeArgs" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateType">
      <MemberSignature Language="C#" Value="public static Type GetDelegateType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetDelegateType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetDelegateType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberSignature Language="F#" Value="static member GetDelegateType : Type[] -&gt; Type" Usage="System.Linq.Expressions.Expression.GetDelegateType typeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs"><span data-ttu-id="eb4ed-1371">Argumenty typu delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1371">The type arguments of the delegate.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1372">Pobiera obiekt, który reprezentuje generyczny typ <c>System. Func</c> lub <c>System. Action</c> , który ma określone argumenty typu. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1372">Gets a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic <c>System.Func</c> or <c>System.Action</c> delegate type that has specific type arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1373">Typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1373">The delegate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1374">Argument Last Type Określa zwracany typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1374">The last type argument determines the return type of the delegate.</span></span> <span data-ttu-id="eb4ed-1375">Jeśli żadna z funkcji Func lub akcja nie jest wystarczająco duża, wygeneruje niestandardowy typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1375">If no Func or Action is large enough, it will generate a custom delegate type.</span></span>  
  
 <span data-ttu-id="eb4ed-1376">Podobnie jak w przypadku funkcji Func, ostatni argument jest typem zwracanym.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1376">As with Func, the last argument is the return type.</span></span> <span data-ttu-id="eb4ed-1377">Można ustawić wartość System. void, aby utworzyć akcję.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1377">It can be set to System.Void to produce an Action.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFuncType">
      <MemberSignature Language="C#" Value="public static Type GetFuncType (params Type[] typeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetFuncType(class System.Type[] typeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFuncType (ParamArray typeArgs As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetFuncType(... cli::array &lt;Type ^&gt; ^ typeArgs);" />
      <MemberSignature Language="F#" Value="static member GetFuncType : Type[] -&gt; Type" Usage="System.Linq.Expressions.Expression.GetFuncType typeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeArgs"><span data-ttu-id="eb4ed-1378">Tablica jednej do obiektów siedemnastu <see cref="T:System.Type" /> , która określa argumenty typu <see langword="System.Func" /> dla typu delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1378">An array of one to seventeen <see cref="T:System.Type" /> objects that specify the type arguments for the <see langword="System.Func" /> delegate type.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1379">Tworzy obiekt, który reprezentuje ogólny typ <c>System. Func</c> delegata, który ma określone argumenty typu. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1379">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic <c>System.Func</c> delegate type that has specific type arguments.</span></span> <span data-ttu-id="eb4ed-1380">Argument Last Type Określa zwracany typ utworzonego delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1380">The last type argument specifies the return type of the created delegate.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1381">Typ delegata <c>System. Func</c> , który ma określone argumenty typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1381">The type of a <c>System.Func</c> delegate that has the specified type arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1382">`typeArgs`musi zawierać co najmniej jeden i najwyżej siedemnastu elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1382">`typeArgs` must contain at least one and at most seventeen elements.</span></span>  
  
 <span data-ttu-id="eb4ed-1383">`typeArgs` Przykładowo, jeśli elementy reprezentują typy `T1…Tn`, obiekt wyniku <xref:System.Type> reprezentuje skonstruowany typ `System.Func<T1,…,Tn>` delegata w C# lub `System.Func(Of T1,…,Tn)` w Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1383">As an example, if the elements of `typeArgs` represent the types `T1…Tn`, the resulting <xref:System.Type> object represents the constructed delegate type `System.Func<T1,…,Tn>` in C# or `System.Func(Of T1,…,Tn)` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1384"><paramref name="typeArgs" />zawiera mniej niż jeden lub więcej elementów niż siedemnastu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1384"><paramref name="typeArgs" /> contains fewer than one or more than seventeen elements.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1385"><paramref name="typeArgs" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1385"><paramref name="typeArgs" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Goto">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1386">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję "przejdź do".</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1386">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Goto (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberSignature Language="F#" Value="static member Goto : System.Linq.Expressions.LabelTarget -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Goto target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-1387"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1387">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1388">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję "przejdź do".</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1388">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1389">A <see cref="T:System.Linq.Expressions.GotoExpression" /> z <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> równagoto,właściwośćustawionanaokreślonąwartośćorazwartośćnulldoprzesłaniadoetykietydocelowej<see cref="P:System.Linq.Expressions.GotoExpression.Target" /> po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1389">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to the specified value, and a null value to be passed to the target label upon jumping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-1390">W poniższym przykładzie pokazano, jak utworzyć wyrażenie zawierające <xref:System.Linq.Expressions.GotoExpression> obiekt.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1390">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.GotoExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#45)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#45)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Goto (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberSignature Language="F#" Value="static member Goto : System.Linq.Expressions.LabelTarget * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Goto (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-1391"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1391">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="value"><span data-ttu-id="eb4ed-1392">Wartość, która zostanie przeniesiona do skojarzonej etykiety po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1392">The value that will be passed to the associated label upon jumping.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1393">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję "przejdź do".</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1393">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement.</span></span> <span data-ttu-id="eb4ed-1394">Wartość przeskoczy do etykiety po przejściu można określić.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1394">The value passed to the label upon jumping can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1395">A <see cref="T:System.Linq.Expressions.GotoExpression" /> z <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> <paramref name="value" /> równym goto, <paramref name="target" />Właściwość ustawiona na i do przesłania do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.GotoExpression.Target" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1395">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Goto : System.Linq.Expressions.LabelTarget * Type -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Goto (target, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-1396"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1396">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-1397"><see cref="T:System.Type" /> Aby<see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1397">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1398">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję "przejdź do" o określonym typie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1398">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement with the specified type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1399">A <see cref="T:System.Linq.Expressions.GotoExpression" /> z <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> równa<see cref="P:System.Linq.Expressions.Expression.Type" /> goto, <paramref name="type" />Właściwość ustawiona na określoną wartość, właściwość ustawiona na i wartość null do przesłania do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.GotoExpression.Target" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1399">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to the specified value, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Goto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Goto(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Goto(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Goto : System.Linq.Expressions.LabelTarget * System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Goto (target, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-1400"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1400">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="value"><span data-ttu-id="eb4ed-1401">Wartość, która zostanie przeniesiona do skojarzonej etykiety po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1401">The value that will be passed to the associated label upon jumping.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-1402"><see cref="T:System.Type" /> Aby<see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1402">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1403">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję "przejdź do" o określonym typie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1403">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a "go to" statement with the specified type.</span></span> <span data-ttu-id="eb4ed-1404">Wartość przeskoczy do etykiety po przejściu można określić.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1404">The value passed to the label upon jumping can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1405">A <see cref="T:System.Linq.Expressions.GotoExpression" /> z <see cref="P:System.Linq.Expressions.Expression.Type" /> równa<paramref name="type" />goto, <paramref name="target" />Właściwość ustawiona na, właściwość ustawiona na, i <paramref name="value" /> do do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1405">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Goto, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1406">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący porównywanie numeryczne "większe niż".</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1406">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.GreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1407"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1407">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1408"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1408">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1409">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący porównywanie numeryczne "większe niż".</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1409">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1410"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1410">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1411">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1411">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1412"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1412">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1413">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwość jest. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1413">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="eb4ed-1414">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1414">Otherwise, it is `false`.</span></span> <span data-ttu-id="eb4ed-1415">Właściwość jest zawsze `false`. <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1415">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="eb4ed-1416"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1416">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1417">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1417">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1418">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1418">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1419">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1419">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1420"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator "większe niż", oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1420">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1421">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1421">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1422">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1422">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1423">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1423">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1424">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1424">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1425">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1425">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1426">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1426">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1427">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1427">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1428">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1428">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1429">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1429">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1430">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1430">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1431">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1431">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1432">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1432">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1433">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1433">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1434">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które porównuje dwie liczby całkowite.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1434">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#10)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1435"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1435"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1436">Operator "większe niż" nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1436">The "greater than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThan (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * bool * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.GreaterThan (left, right, liftToNull, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1437"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1437">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1438"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1438">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="liftToNull"><span data-ttu-id="eb4ed-1439"><see langword="true" />Aby ustawić <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> na <see langword="true" />; , aby <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> ustawić wartość .<see langword="false" /> <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1439"><see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1440">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1440">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1441">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący porównywanie numeryczne "większe niż".</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1441">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than" numeric comparison.</span></span> <span data-ttu-id="eb4ed-1442">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1442">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1443">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1443">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1444">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1444">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1445"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1445">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1446">Jeśli węzeł <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> zostanie zniesiony, właściwość jest `true` i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> właściwość jest równa `liftToNull`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1446">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="eb4ed-1447">W przeciwnym razie są oba `false`te elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1447">Otherwise, they are both `false`.</span></span> <span data-ttu-id="eb4ed-1448"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1448">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1449">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1449">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1450">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1450">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1451">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1451">The following rules determine the implementing method for the operation :</span></span>  
  
-   <span data-ttu-id="eb4ed-1452">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1452">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1453">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator "większe niż", <xref:System.Reflection.MethodInfo> oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1453">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1454">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1454">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1455">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1455">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1456">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1456">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1457">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1457">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1458">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1458">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1459">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony; Ponadto typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1459">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1460">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1460">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1461">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1461">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1462">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1462">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1463">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1463">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1464">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1464">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1465">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1465">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1466">Typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1466">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1467"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1467"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1468"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1468"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1469"><paramref name="method" />jest <see langword="null" /> i operator "większe niż" nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1469"><paramref name="method" /> is <see langword="null" /> and the "greater than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1470">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "większe niż lub równe" porównanie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1470">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.GreaterThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1471"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1471">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1472"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1472">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1473">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "większe niż lub równe" porównanie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1473">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1474"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1474">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1475">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1475">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1476"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1476">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1477">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwość jest. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1477">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="eb4ed-1478">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1478">Otherwise, it is `false`.</span></span> <span data-ttu-id="eb4ed-1479">Właściwość jest zawsze `false`. <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1479">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="eb4ed-1480"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1480">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1481">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1481">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1482">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1482">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1483">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1483">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1484"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator "większe niż lub równe", oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1484">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1485">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1485">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1486">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1486">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1487">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1487">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1488">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1488">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1489">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1489">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1490">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1490">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1491">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1491">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1492">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1492">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1493">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1493">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1494">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1494">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1495">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1495">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1496">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1496">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1497">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1497">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1498">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które porównuje dwie liczby całkowite.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1498">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#11)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1499"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1499"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1500">Operator "większe niż lub równe" nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1500">The "greater than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression GreaterThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreaterThanOrEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ GreaterThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * bool * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.GreaterThanOrEqual (left, right, liftToNull, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1501"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1501">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1502"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1502">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="liftToNull"><span data-ttu-id="eb4ed-1503"><see langword="true" />Aby ustawić <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> na <see langword="true" />; , aby <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> ustawić wartość .<see langword="false" /> <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1503"><see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1504">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1504">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1505">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "większe niż lub równe" porównanie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1505">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "greater than or equal" numeric comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1506">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1506">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.GreaterThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1507">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1507">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1508"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1508">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1509">Jeśli węzeł <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> zostanie zniesiony, właściwość jest `true` i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> właściwość jest równa `liftToNull`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1509">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="eb4ed-1510">W przeciwnym razie są oba `false`te elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1510">Otherwise, they are both `false`.</span></span> <span data-ttu-id="eb4ed-1511"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1511">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1512">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1512">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1513">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1513">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1514">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1514">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1515">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1515">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1516">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator " <xref:System.Reflection.MethodInfo> większe niż lub równe", oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1516">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "greater than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1517">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1517">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1518">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1518">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1519">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1519">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1520">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1520">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1521">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1521">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1522">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony; Ponadto typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1522">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1523">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1523">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1524">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1524">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1525">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1525">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1526">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1526">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1527">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1527">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1528">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1528">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1529">Typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1529">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1530"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1530"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1531"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1531"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1532"><paramref name="method" />jest <see langword="null" /> i operator "większe niż lub równe" nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1532"><paramref name="method" /> is <see langword="null" /> and the "greater than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IfThen">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression IfThen (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression IfThen(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IfThen (test As Expression, ifTrue As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ IfThen(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue);" />
      <MemberSignature Language="F#" Value="static member IfThen : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.ConditionalExpression" Usage="System.Linq.Expressions.Expression.IfThen (test, ifTrue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="test"><span data-ttu-id="eb4ed-1533"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1533">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span></span></param>
        <param name="ifTrue"><span data-ttu-id="eb4ed-1534"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1534">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1535">Tworzy element <see cref="T:System.Linq.Expressions.ConditionalExpression" /> reprezentujący blok warunkowy <see langword="if" /> z instrukcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1535">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional block with an <see langword="if" /> statement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1536">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />Właściwość równą i,, właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1536">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, properties set to the specified values.</span></span> <span data-ttu-id="eb4ed-1537">Właściwość jest ustawiona na wyrażenie domyślne i typ wynikowego <see cref="T:System.Linq.Expressions.ConditionalExpression" /> zwracanego przez tę metodę jest <see cref="T:System.Void" />. <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1537">The <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property is set to default expression and the type of the resulting <see cref="T:System.Linq.Expressions.ConditionalExpression" /> returned by this method is <see cref="T:System.Void" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-1538">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące blok warunkowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1538">The following code example shows how to create an expression that represents a conditional block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#32)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IfThenElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConditionalExpression IfThenElse (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConditionalExpression IfThenElse(class System.Linq.Expressions.Expression test, class System.Linq.Expressions.Expression ifTrue, class System.Linq.Expressions.Expression ifFalse) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IfThenElse (test As Expression, ifTrue As Expression, ifFalse As Expression) As ConditionalExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ConditionalExpression ^ IfThenElse(System::Linq::Expressions::Expression ^ test, System::Linq::Expressions::Expression ^ ifTrue, System::Linq::Expressions::Expression ^ ifFalse);" />
      <MemberSignature Language="F#" Value="static member IfThenElse : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.ConditionalExpression" Usage="System.Linq.Expressions.Expression.IfThenElse (test, ifTrue, ifFalse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConditionalExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="test" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ifTrue" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ifFalse" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="test"><span data-ttu-id="eb4ed-1539"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1539">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /> property equal to.</span></span></param>
        <param name="ifTrue"><span data-ttu-id="eb4ed-1540"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1540">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> property equal to.</span></span></param>
        <param name="ifFalse"><span data-ttu-id="eb4ed-1541"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1541">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1542">Tworzy element <see cref="T:System.Linq.Expressions.ConditionalExpression" /> reprezentujący blok warunkowy za <see langword="if" /> pomocą <see langword="else" /> instrukcji i.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1542">Creates a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that represents a conditional block with <see langword="if" /> and <see langword="else" /> statements.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1543">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" /> <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1543">A <see cref="T:System.Linq.Expressions.ConditionalExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Conditional" /> and the <see cref="P:System.Linq.Expressions.ConditionalExpression.Test" />, <see cref="P:System.Linq.Expressions.ConditionalExpression.IfTrue" />, and <see cref="P:System.Linq.Expressions.ConditionalExpression.IfFalse" /> properties set to the specified values.</span></span> <span data-ttu-id="eb4ed-1544">Typ wynikowego <see cref="T:System.Linq.Expressions.ConditionalExpression" /> zwracanego przez tę metodę jest <see cref="T:System.Void" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1544">The type of the resulting <see cref="T:System.Linq.Expressions.ConditionalExpression" /> returned by this method is <see cref="T:System.Void" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-1545">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące blok warunkowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1545">The following code example shows how to create an expression that represents a conditional block.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#33)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Increment">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1546"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy, który reprezentuje zwiększenie wartości wyrażenia o 1.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1546">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression value by 1.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Increment(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Increment(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Increment : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Increment expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1547"><see cref="T:System.Linq.Expressions.Expression" /> Do przyrostu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1547">An <see cref="T:System.Linq.Expressions.Expression" /> to increment.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1548"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy, który reprezentuje zwiększenie wartości wyrażenia o 1.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1548">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression value by 1.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1549">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , która reprezentuje wyrażenie zwiększające wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1549">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incremented expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1550">To wyrażenie jest funkcjonalne i nie zmienia wartości obiektu, który jest do niego przesłany.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1550">This expression is functional and does not change the value of the object that is passed to it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1551">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które reprezentuje operację przyrostu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1551">The following code example shows how to create an expression that represents an increment operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#24)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Increment(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Increment(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Increment : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Increment (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1552"><see cref="T:System.Linq.Expressions.Expression" /> Do przyrostu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1552">An <see cref="T:System.Linq.Expressions.Expression" /> to increment.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1553"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1553">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1554"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy, który reprezentuje zwiększenie wartości wyrażenia o 1.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1554">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incrementing of the expression by 1.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1555">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , która reprezentuje wyrażenie zwiększające wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1555">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the incremented expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1556">To wyrażenie jest funkcjonalne i nie zmienia wartości obiektu, który jest do niego przesłany.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1556">This expression is functional and does not change the value of the object that is passed to it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1557"><see cref="T:System.Linq.Expressions.InvocationExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1557">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.InvocationExpression Invoke(class System.Linq.Expressions.Expression expression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::InvocationExpression ^ Invoke(System::Linq::Expressions::Expression ^ expression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.InvocationExpression" Usage="System.Linq.Expressions.Expression.Invoke (expression, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.InvocationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1558"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje wyrażenie delegata lub lambda, które ma zostać zastosowane.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1558">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the delegate or lambda expression to be applied to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-1559"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Zawiera<see cref="T:System.Linq.Expressions.Expression" /> obiekty, które reprezentują argumenty, do których jest stosowana delegat lub wyrażenie lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1559">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments that the delegate or lambda expression is applied to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1560">Tworzy obiekt <see cref="T:System.Linq.Expressions.InvocationExpression" /> , który ma zastosowanie do listy wyrażeń argumentów delegata lub wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1560">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies a delegate or lambda expression to a list of argument expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1561"><see cref="T:System.Linq.Expressions.InvocationExpression" /> , Który stosuje określony delegat lub wyrażenie lambda do podanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1561">An <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies the specified delegate or lambda expression to the provided arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1562">Właściwość będąca wynikiem <xref:System.Linq.Expressions.InvocationExpression> reprezentuje zwracany typ delegata reprezentowanego przez `expression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1562">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> represents the return type of the delegate that is represented by `expression`.Type.</span></span>  
  
 <span data-ttu-id="eb4ed-1563">Właściwość <xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> będąca <xref:System.Linq.Expressions.InvocationExpression> wynikiem jest pusta, jeśli `arguments` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1563">The <xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="eb4ed-1564">W przeciwnym razie zawiera te same elementy, `arguments` co z tą różnicą <xref:System.Linq.Expressions.Expression> , że niektóre z tych obiektów mogą być ujęte w *cudzysłów*.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1564">Otherwise, it contains the same elements as `arguments` except that some of these <xref:System.Linq.Expressions.Expression> objects may be *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-1565">Element zostanie cytowany tylko wtedy, gdy odpowiedni parametr delegata reprezentowany przez `expression` jest typu. <xref:System.Linq.Expressions.Expression></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1565">An element will be quoted only if the corresponding parameter of the delegate represented by `expression` is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-1566">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1566">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-1567">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`arguments`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1567">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1568">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> metody do <xref:System.Linq.Expressions.InvocationExpression> tworzenia, która reprezentuje wywołanie wyrażenia lambda z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1568">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.InvocationExpression> that represents the invocation of a lambda expression with specified arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#6)]
 [!code-vb[System.Linq.Expressions.Expression#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1569"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1569"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1570"><paramref name="expression" />. Typ nie reprezentuje typu delegata lub <see cref="T:System.Linq.Expressions.Expression`1" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1570"><paramref name="expression" />.Type does not represent a delegate type or an <see cref="T:System.Linq.Expressions.Expression`1" />.</span></span>  
  
<span data-ttu-id="eb4ed-1571">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1571">-or-</span></span> 
<span data-ttu-id="eb4ed-1572">Właściwości elementu nie można przypisać do typu odpowiadającego mu parametru delegata reprezentowanego przez <paramref name="expression" />. <see cref="P:System.Linq.Expressions.Expression.Type" /> <paramref name="arguments" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1572">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the delegate represented by <paramref name="expression" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1573"><paramref name="arguments" />nie zawiera takiej samej liczby elementów jak lista parametrów delegata reprezentowanego przez <paramref name="expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1573"><paramref name="arguments" /> does not contain the same number of elements as the list of parameters for the delegate represented by <paramref name="expression" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.InvocationExpression Invoke(class System.Linq.Expressions.Expression expression, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::InvocationExpression ^ Invoke(System::Linq::Expressions::Expression ^ expression, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.InvocationExpression" Usage="System.Linq.Expressions.Expression.Invoke (expression, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.InvocationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1574">Reprezentuje wyrażenie delegata lub lambda ,któremazostaćzastosowane.<see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1574">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the delegate or lambda expression to be applied.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-1575">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów, która reprezentuje argumenty, do których jest stosowana delegat lub wyrażenie lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1575">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that represent the arguments that the delegate or lambda expression is applied to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1576">Tworzy obiekt <see cref="T:System.Linq.Expressions.InvocationExpression" /> , który ma zastosowanie do listy wyrażeń argumentów delegata lub wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1576">Creates an <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies a delegate or lambda expression to a list of argument expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1577"><see cref="T:System.Linq.Expressions.InvocationExpression" /> , Który stosuje określony delegat lub wyrażenie lambda do podanych argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1577">An <see cref="T:System.Linq.Expressions.InvocationExpression" /> that applies the specified delegate or lambda expression to the provided arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1578">Właściwość będąca wynikiem <xref:System.Linq.Expressions.InvocationExpression> reprezentuje zwracany typ delegata reprezentowanego przez `expression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1578">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> represents the return type of the delegate that is represented by `expression`.Type.</span></span>  
  
 <span data-ttu-id="eb4ed-1579">Właściwość <xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> będąca <xref:System.Linq.Expressions.InvocationExpression> wynikiem jest pusta, jeśli `arguments` jest `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1579">The <xref:System.Linq.Expressions.InvocationExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.InvocationExpression> is empty if `arguments` is `null`.</span></span> <span data-ttu-id="eb4ed-1580">W przeciwnym razie zawiera te same elementy, `arguments` co z tą różnicą <xref:System.Linq.Expressions.Expression> , że niektóre z tych obiektów mogą być ujęte w *cudzysłów*.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1580">Otherwise, it contains the same elements as `arguments` except that some of these <xref:System.Linq.Expressions.Expression> objects may be *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-1581">Element zostanie cytowany tylko wtedy, gdy odpowiedni parametr delegata reprezentowany przez `expression` jest typu. <xref:System.Linq.Expressions.Expression></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1581">An element will be quoted only if the corresponding parameter of the delegate represented by `expression` is of type <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-1582">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1582">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-1583">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`arguments`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1583">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `arguments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1584">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> metody do <xref:System.Linq.Expressions.InvocationExpression> tworzenia, która reprezentuje wywołanie wyrażenia lambda z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1584">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.Invoke%28System.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%5B%5D%29> method to create an <xref:System.Linq.Expressions.InvocationExpression> that represents the invocation of a lambda expression with specified arguments.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#6)]
 [!code-vb[System.Linq.Expressions.Expression#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1585"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1585"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1586"><paramref name="expression" />. Typ nie reprezentuje typu delegata lub <see cref="T:System.Linq.Expressions.Expression`1" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1586"><paramref name="expression" />.Type does not represent a delegate type or an <see cref="T:System.Linq.Expressions.Expression`1" />.</span></span>  
  
<span data-ttu-id="eb4ed-1587">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1587">-or-</span></span> 
<span data-ttu-id="eb4ed-1588">Właściwości elementu nie można przypisać do typu odpowiadającego mu parametru delegata reprezentowanego przez <paramref name="expression" />. <see cref="P:System.Linq.Expressions.Expression.Type" /> <paramref name="arguments" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1588">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the delegate represented by <paramref name="expression" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1589"><paramref name="arguments" />nie zawiera takiej samej liczby elementów jak lista parametrów delegata reprezentowanego przez <paramref name="expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1589"><paramref name="arguments" /> does not contain the same number of elements as the list of parameters for the delegate represented by <paramref name="expression" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsFalse">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1590">Zwraca czy wyrażenie daje w wyniku wartość false.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1590">Returns whether the expression evaluates to false.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsFalse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsFalse(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsFalse(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member IsFalse : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.IsFalse expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1591"><see cref="T:System.Linq.Expressions.Expression" /> Do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1591">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1592">Zwraca czy wyrażenie daje w wyniku wartość false.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1592">Returns whether the expression evaluates to false.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1593">Wystąpienie elementu <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1593">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFalse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsFalse(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsFalse(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member IsFalse : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.IsFalse (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1594"><see cref="T:System.Linq.Expressions.Expression" /> Do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1594">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1595"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1595">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1596">Zwraca czy wyrażenie daje w wyniku wartość false.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1596">Returns whether the expression evaluates to false.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1597">Wystąpienie elementu <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1597">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsTrue">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1598">Zwraca czy wyrażenie ma wartość true.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1598">Returns whether the expression evaluates to true.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsTrue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsTrue(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsTrue(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member IsTrue : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.IsTrue expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1599"><see cref="T:System.Linq.Expressions.Expression" /> Do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1599">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1600">Zwraca czy wyrażenie ma wartość true.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1600">Returns whether the expression evaluates to true.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1601">Wystąpienie elementu <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1601">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrue">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression IsTrue(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ IsTrue(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member IsTrue : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.IsTrue (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-1602"><see cref="T:System.Linq.Expressions.Expression" /> Do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1602">An <see cref="T:System.Linq.Expressions.Expression" /> to evaluate.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1603"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1603">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1604">Zwraca czy wyrażenie ma wartość true.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1604">Returns whether the expression evaluates to true.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1605">Wystąpienie elementu <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1605">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Label">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1606">Tworzy etykietę <see cref="T:System.Linq.Expressions.LabelTarget" /> reprezentującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1606">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label () As LabelTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label();" />
      <MemberSignature Language="F#" Value="static member Label : unit -&gt; System.Linq.Expressions.LabelTarget" Usage="System.Linq.Expressions.Expression.Label " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb4ed-1607">Tworzy element <see cref="T:System.Linq.Expressions.LabelTarget" /> reprezentujący etykietę z typem void i bez nazwy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1607">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with void type and no name.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1608">Nowy <see cref="T:System.Linq.Expressions.LabelTarget" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1608">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-1609">W poniższym przykładzie pokazano, jak utworzyć wyrażenie zawierające <xref:System.Linq.Expressions.LabelTarget> obiekt.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1609">The following example demonstrates how to create an expression that contains a <xref:System.Linq.Expressions.LabelTarget> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#43)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelExpression Label(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (target As LabelTarget) As LabelExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelExpression ^ Label(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberSignature Language="F#" Value="static member Label : System.Linq.Expressions.LabelTarget -&gt; System.Linq.Expressions.LabelExpression" Usage="System.Linq.Expressions.Expression.Label target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-1610">, <see cref="T:System.Linq.Expressions.LabelTarget" /> Z<see cref="T:System.Linq.Expressions.LabelExpression" /> którym zostanie skojarzona.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1610">The <see cref="T:System.Linq.Expressions.LabelTarget" /> which this <see cref="T:System.Linq.Expressions.LabelExpression" /> will be associated with.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1611">Tworzy etykietę <see cref="T:System.Linq.Expressions.LabelExpression" /> reprezentującą bez wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1611">Creates a <see cref="T:System.Linq.Expressions.LabelExpression" /> representing a label without a default value.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1612"><see cref="T:System.Linq.Expressions.LabelExpression" /> Bez wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1612">A <see cref="T:System.Linq.Expressions.LabelExpression" /> without a default value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (name As String) As LabelTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Label : string -&gt; System.Linq.Expressions.LabelTarget" Usage="System.Linq.Expressions.Expression.Label name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="eb4ed-1613">Nazwa etykiety.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1613">The name of the label.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1614">Tworzy element <see cref="T:System.Linq.Expressions.LabelTarget" /> reprezentujący etykietę z typem void i podaną nazwę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1614">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with void type and the given name.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1615">Nowy <see cref="T:System.Linq.Expressions.LabelTarget" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1615">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Label : Type -&gt; System.Linq.Expressions.LabelTarget" Usage="System.Linq.Expressions.Expression.Label type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-1616">Typ wartości, która jest przesyłana podczas przechodzenia do etykiety.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1616">The type of value that is passed when jumping to the label.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1617">Tworzy etykietę <see cref="T:System.Linq.Expressions.LabelTarget" /> reprezentującą dany typ.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1617">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with the given type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1618">Nowy <see cref="T:System.Linq.Expressions.LabelTarget" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1618">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-1619">Poniższy przykład ilustruje sposób używania <xref:System.Linq.Expressions.LabelTarget> obiektu w wyrażeniu pętli.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1619">The following example demonstrates how to use a <xref:System.Linq.Expressions.LabelTarget> object in a loop expression.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelExpression Label(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Label (target As LabelTarget, defaultValue As Expression) As LabelExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelExpression ^ Label(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ defaultValue);" />
      <MemberSignature Language="F#" Value="static member Label : System.Linq.Expressions.LabelTarget * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.LabelExpression" Usage="System.Linq.Expressions.Expression.Label (target, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultValue" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-1620">, <see cref="T:System.Linq.Expressions.LabelTarget" /> Z<see cref="T:System.Linq.Expressions.LabelExpression" /> którym zostanie skojarzona.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1620">The <see cref="T:System.Linq.Expressions.LabelTarget" /> which this <see cref="T:System.Linq.Expressions.LabelExpression" /> will be associated with.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="eb4ed-1621">Wartość tego <see cref="T:System.Linq.Expressions.LabelExpression" /> elementu, gdy etykieta zostanie osiągnięta przy użyciu standardowego przepływu sterowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1621">The value of this <see cref="T:System.Linq.Expressions.LabelExpression" /> when the label is reached through regular control flow.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1622">Tworzy etykietę <see cref="T:System.Linq.Expressions.LabelExpression" /> reprezentującą daną wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1622">Creates a <see cref="T:System.Linq.Expressions.LabelExpression" /> representing a label with the given default value.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1623">A <see cref="T:System.Linq.Expressions.LabelExpression" /> z daną wartością domyślną.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1623">A <see cref="T:System.Linq.Expressions.LabelExpression" /> with the given default value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LabelTarget Label (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LabelTarget Label(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Label(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LabelTarget ^ Label(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Label : Type * string -&gt; System.Linq.Expressions.LabelTarget" Usage="System.Linq.Expressions.Expression.Label (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LabelTarget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-1624">Typ wartości, która jest przesyłana podczas przechodzenia do etykiety.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1624">The type of value that is passed when jumping to the label.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-1625">Nazwa etykiety.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1625">The name of the label.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1626">Tworzy element <see cref="T:System.Linq.Expressions.LabelTarget" /> reprezentujący etykietę o danym typie i nazwie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1626">Creates a <see cref="T:System.Linq.Expressions.LabelTarget" /> representing a label with the given type and name.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1627">Nowy <see cref="T:System.Linq.Expressions.LabelTarget" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1627">The new <see cref="T:System.Linq.Expressions.LabelTarget" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1628">Tworzy drzewo wyrażenia, które reprezentuje wyrażenie lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1628">Creates an expression tree that represents a lambda expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (body, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-1629"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1629">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1630">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1630">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1631"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy po raz pierwszy konstrukcja typu delegata z treści wyrażenia i wyliczalną kolekcję wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1631">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type from the expression body, and an enumerable collection of parameter expressions.</span></span> <span data-ttu-id="eb4ed-1632">Można go użyć, jeśli typ delegata nie jest znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1632">It can be used when the delegate type is not known at compile time.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1633">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1633">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * System.Linq.Expressions.ParameterExpression[] -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (body, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-1634"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1634">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1635">Tablica <see cref="T:System.Linq.Expressions.ParameterExpression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1635">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1636"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy po raz pierwszy konstruowanie typu delegata z treści wyrażenia i tablicy wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1636">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type from the expression body, and an array of parameter expressions.</span></span> <span data-ttu-id="eb4ed-1637">Można go użyć, jeśli typ delegata nie jest znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1637">It can be used when the delegate type is not known at compile time.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1638"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> A, który <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> ma<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.LambdaExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1638">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1639">`parameters` Parametr nie może mieć więcej niż szesnastu elementów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1639">The `parameters` parameter must not have more than sixteen elements.</span></span>  
  
 <span data-ttu-id="eb4ed-1640">Elementy `parameters` musi być odwołaniem równym wyrażeniem parametrów w `body`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1640">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="eb4ed-1641">Ta metoda konstruuje odpowiedni typ delegata z jednego z `System.Func` delegatów ogólnych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1641">This method constructs an appropriate delegate type from one of the `System.Func` generic delegates.</span></span> <span data-ttu-id="eb4ed-1642">Następnie przekazuje typ delegata do jednej z <xref:System.Linq.Expressions.ExpressionType.Lambda> metod fabrycznych w celu <xref:System.Linq.Expressions.LambdaExpression>utworzenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1642">It then passes the delegate type to one of the <xref:System.Linq.Expressions.ExpressionType.Lambda> factory methods to create a <xref:System.Linq.Expressions.LambdaExpression>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1643"><paramref name="body" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1643"><paramref name="body" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-1644">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1644">-or-</span></span> 
<span data-ttu-id="eb4ed-1645">Co najmniej jeden element <paramref name="parameters" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1645">One or more elements of <paramref name="parameters" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1646"><paramref name="parameters" />zawiera więcej niż szesnaste elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1646"><paramref name="parameters" /> contains more than sixteen elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * bool * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (body, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-1647"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1647">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1648">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1648">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1649">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1649">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1650"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy po raz pierwszy konstrukcja typu delegata z treści wyrażenia, parametr, który wskazuje, czy Optymalizacja wywołania tail zostanie zastosowana, oraz wyliczalną kolekcję wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1650">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type from the expression body, a parameter that indicates whether tail call optimization will be applied, and an enumerable collection of parameter expressions.</span></span> <span data-ttu-id="eb4ed-1651">Można go użyć, jeśli typ delegata nie jest znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1651">It can be used when the delegate type is not known at compile time.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1652">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1652">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * bool * System.Linq.Expressions.ParameterExpression[] -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (body, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-1653"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1653">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1654">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1654">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1655">Tablica zawierająca <see cref="T:System.Linq.Expressions.ParameterExpression" /> obiekty używane do <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> wypełniania kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1655">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1656"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy po raz pierwszy konstrukcja typu delegata z treści wyrażenia, parametr, który wskazuje, czy Optymalizacja wywołania tail zostanie zastosowana i tablicę wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1656">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type from the expression body, a parameter that indicates whether tail call optimization will be applied, and an array of parameter expressions.</span></span> <span data-ttu-id="eb4ed-1657">Można go użyć, jeśli typ delegata nie jest znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1657">It can be used when the delegate type is not known at compile time.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1658">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1658">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * string * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (body, name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-1659"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1659">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-1660">Nazwa wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1660">The name for the lambda.</span></span> <span data-ttu-id="eb4ed-1661">Używany do emitowania informacji debugowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1661">Used for emitting debug information.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1662">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1662">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1663"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy po raz pierwszy konstruowanie typu delegata z treści wyrażenia, nazwy wyrażenia lambda i wyliczalnej kolekcji wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1663">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type from the expression body, the name for the lambda, and an enumerable collection of parameter expressions.</span></span> <span data-ttu-id="eb4ed-1664">Można go użyć, jeśli typ delegata nie jest znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1664">It can be used when the delegate type is not known at compile time.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1665">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1665">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : Type * System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (delegateType, body, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-1666"><see cref="T:System.Type" /> Reprezentuje sygnaturę delegata dla wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1666">A <see cref="T:System.Type" /> that represents a delegate signature for the lambda.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-1667"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1667">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1668">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1668">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1669"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy miejsce, gdzie typ delegata jest znany w czasie kompilacji, z wyliczalną kolekcją wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1669">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> where the delegate type is known at compile time, with an enumerable collection of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1670">Obiekt, który reprezentuje wyrażenie lambda, które <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma właściwość <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> równą i <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości i i <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> ustawia określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1670">An object that represents a lambda expression which has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1671">Obiekt, który jest zwracany przez tę funkcję, jest typu <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1671">The object that is returned from this function is of type <xref:System.Linq.Expressions.Expression%601>.</span></span> <span data-ttu-id="eb4ed-1672"><xref:System.Linq.Expressions.LambdaExpression> Typ jest używany do reprezentowania zwracanego obiektu, ponieważ konkretny typ wyrażenia lambda nie jest znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1672">The <xref:System.Linq.Expressions.LambdaExpression> type is used to represent the returned object because the concrete type of the lambda expression is not known at compile time.</span></span>  
  
 <span data-ttu-id="eb4ed-1673">Liczba parametrów dla typu delegata reprezentowanego przez`delegateType` musi być równa `parameters`długości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1673">The number of parameters for the delegate type represented by`delegateType` must equal the length of `parameters`.</span></span>  
  
 <span data-ttu-id="eb4ed-1674">Elementy `parameters` musi być odwołaniem równym wyrażeniem parametrów w `body`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1674">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="eb4ed-1675">Właściwość obiektu będącego wynikiem jest `delegateType`równa. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1675">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object is equal to `delegateType`.</span></span> <span data-ttu-id="eb4ed-1676">Jeśli `parameters` jest `null` ,<xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> właściwość obiektu będącego wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1676">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1677">W poniższym przykładzie pokazano, jak utworzyć wyrażenie reprezentujące wyrażenie lambda, które dodaje 1 do porzuconego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1677">The following example demonstrates how to create an expression that represents a lambda expression that adds 1 to the passed argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#42)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1678"><paramref name="delegateType" />lub <paramref name="body" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1678"><paramref name="delegateType" /> or <paramref name="body" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-1679">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1679">-or-</span></span> 
<span data-ttu-id="eb4ed-1680">Co najmniej jeden element w <paramref name="parameters" /> programie <see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1680">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1681"><paramref name="delegateType" />nie reprezentuje typu delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1681"><paramref name="delegateType" /> does not represent a delegate type.</span></span>  
  
<span data-ttu-id="eb4ed-1682">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1682">-or-</span></span> 
 <span data-ttu-id="eb4ed-1683"><paramref name="body" />. Typ reprezentuje typ, którego nie można przypisać do typu zwracanego typu delegata reprezentowanego przez <paramref name="delegateType" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1683"><paramref name="body" />.Type represents a type that is not assignable to the return type of the delegate type represented by <paramref name="delegateType" />.</span></span>  
  
<span data-ttu-id="eb4ed-1684">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1684">-or-</span></span> 
 <span data-ttu-id="eb4ed-1685"><paramref name="parameters" />nie zawiera takiej samej liczby elementów jak lista parametrów dla typu delegata reprezentowanego przez <paramref name="delegateType" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1685"><paramref name="parameters" /> does not contain the same number of elements as the list of parameters for the delegate type represented by <paramref name="delegateType" />.</span></span>  
  
<span data-ttu-id="eb4ed-1686">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1686">-or-</span></span> 
<span data-ttu-id="eb4ed-1687">Właściwość elementu nie jestmożliwa<paramref name="delegateType" />do przypisania z typu odpowiedniego parametru typu delegata reprezentowanego przez. <paramref name="parameters" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1687">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of the delegate type represented by <paramref name="delegateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : Type * System.Linq.Expressions.Expression * System.Linq.Expressions.ParameterExpression[] -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (delegateType, body, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-1688"><see cref="T:System.Type" /> Reprezentuje sygnaturę delegata dla wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1688">A <see cref="T:System.Type" /> that represents a delegate signature for the lambda.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-1689"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1689">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1690">Tablica <see cref="T:System.Linq.Expressions.ParameterExpression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1690">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1691"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy miejsce, gdzie typ delegata jest znany w czasie kompilacji, z tablicą wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1691">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> where the delegate type is known at compile time, with an array of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1692">Obiekt, który reprezentuje wyrażenie lambda, które <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma właściwość <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> równą i <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości i i <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> ustawia określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1692">An object that represents a lambda expression which has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1693">Obiekt, który jest zwracany przez tę funkcję, jest typu <xref:System.Linq.Expressions.Expression%601>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1693">The object that is returned from this function is of type <xref:System.Linq.Expressions.Expression%601>.</span></span> <span data-ttu-id="eb4ed-1694"><xref:System.Linq.Expressions.LambdaExpression> Typ jest używany do reprezentowania zwracanego obiektu, ponieważ konkretny typ wyrażenia lambda nie jest znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1694">The <xref:System.Linq.Expressions.LambdaExpression> type is used to represent the returned object because the concrete type of the lambda expression is not known at compile time.</span></span>  
  
 <span data-ttu-id="eb4ed-1695">Liczba parametrów dla typu delegata reprezentowanego przez `delegateType` musi być równa `parameters`długości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1695">The number of parameters for the delegate type represented by `delegateType` must equal the length of `parameters`.</span></span>  
  
 <span data-ttu-id="eb4ed-1696">Elementy `parameters` musi być odwołaniem równym wyrażeniem parametrów w `body`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1696">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="eb4ed-1697">Właściwość obiektu będącego wynikiem jest `delegateType`równa. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1697">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object is equal to `delegateType`.</span></span> <span data-ttu-id="eb4ed-1698">Jeśli `parameters` jest `null` ,<xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> właściwość obiektu będącego wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1698">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1699"><paramref name="delegateType" />lub <paramref name="body" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1699"><paramref name="delegateType" /> or <paramref name="body" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-1700">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1700">-or-</span></span> 
<span data-ttu-id="eb4ed-1701">Co najmniej jeden element w <paramref name="parameters" /> programie <see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1701">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1702"><paramref name="delegateType" />nie reprezentuje typu delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1702"><paramref name="delegateType" /> does not represent a delegate type.</span></span>  
  
<span data-ttu-id="eb4ed-1703">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1703">-or-</span></span> 
 <span data-ttu-id="eb4ed-1704"><paramref name="body" />. Typ reprezentuje typ, którego nie można przypisać do typu zwracanego typu delegata reprezentowanego przez <paramref name="delegateType" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1704"><paramref name="body" />.Type represents a type that is not assignable to the return type of the delegate type represented by <paramref name="delegateType" />.</span></span>  
  
<span data-ttu-id="eb4ed-1705">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1705">-or-</span></span> 
 <span data-ttu-id="eb4ed-1706"><paramref name="parameters" />nie zawiera takiej samej liczby elementów jak lista parametrów dla typu delegata reprezentowanego przez <paramref name="delegateType" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1706"><paramref name="parameters" /> does not contain the same number of elements as the list of parameters for the delegate type represented by <paramref name="delegateType" />.</span></span>  
  
<span data-ttu-id="eb4ed-1707">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1707">-or-</span></span> 
<span data-ttu-id="eb4ed-1708">Właściwość elementu nie jestmożliwa<paramref name="delegateType" />do przypisania z typu odpowiedniego parametru typu delegata reprezentowanego przez. <paramref name="parameters" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1708">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of the delegate type represented by <paramref name="delegateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * string * bool * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (body, name, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-1709"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1709">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-1710">Nazwa wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1710">The name for the lambda.</span></span> <span data-ttu-id="eb4ed-1711">Używany do emitowania informacji debugowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1711">Used for emitting debug information.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1712">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1712">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1713">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1713">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1714"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy po raz pierwszy konstrukcja typu delegata z treści wyrażenia, nazwę wyrażenia lambda, parametr, który wskazuje, czy Optymalizacja wywołania tail zostanie zastosowana, oraz wyliczalną kolekcję wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1714">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> by first constructing a delegate type from the expression body, the name for the lambda, a parameter that indicates whether tail call optimization will be applied, and an enumerable collection of parameter expressions.</span></span> <span data-ttu-id="eb4ed-1715">Można go użyć, jeśli typ delegata nie jest znany w czasie kompilacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1715">It can be used when the delegate type is not known at compile time.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1716">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1716">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : Type * System.Linq.Expressions.Expression * bool * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (delegateType, body, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-1717"><see cref="P:System.Linq.Expressions.Expression.Type" /> Reprezentujący sygnaturę delegata dla wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1717">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-1718"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1718">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1719">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1719">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1720">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1720">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1721">Tworzy, <see cref="T:System.Linq.Expressions.LambdaExpression" /> gdzie typ delegata jest znany w czasie kompilacji, z parametrem, który wskazuje, czy Optymalizacja wywołania tail zostanie zastosowana, oraz wyliczalną kolekcję wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1721">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> where the delegate type is known at compile time, with a parameter that indicates whether tail call optimization will be applied, and an enumerable collection of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1722">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1722">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : Type * System.Linq.Expressions.Expression * bool * System.Linq.Expressions.ParameterExpression[] -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (delegateType, body, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-1723"><see cref="P:System.Linq.Expressions.Expression.Type" /> Reprezentujący sygnaturę delegata dla wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1723">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-1724"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1724">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1725">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1725">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1726">Tablica zawierająca <see cref="T:System.Linq.Expressions.ParameterExpression" /> obiekty używane do <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> wypełniania kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1726">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1727">Tworzy, <see cref="T:System.Linq.Expressions.LambdaExpression" /> gdzie typ delegata jest znany w czasie kompilacji, z parametrem wskazującym, czy zostanie zastosowana Optymalizacja wywołania tail i tablicą wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1727">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> where the delegate type is known at compile time, with a parameter that indicates whether tail call optimization will be applied, and an array of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1728">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1728">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : Type * System.Linq.Expressions.Expression * string * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (delegateType, body, name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-1729"><see cref="P:System.Linq.Expressions.Expression.Type" /> Reprezentujący sygnaturę delegata dla wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1729">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-1730"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1730">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-1731">Nazwa wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1731">The name for the lambda.</span></span> <span data-ttu-id="eb4ed-1732">Używany do emitowania informacji debugowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1732">Used for emitting debug information.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1733">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1733">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1734"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Tworzy miejsce, gdzie typ delegata jest znany w czasie kompilacji, z nazwą wyrażenia lambda i wyliczalną kolekcją wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1734">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> where the delegate type is known at compile time, with the name for the lambda, and an enumerable collection of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1735">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1735">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LambdaExpression Lambda(class System.Type delegateType, class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda (delegateType As Type, body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As LambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LambdaExpression ^ Lambda(Type ^ delegateType, System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : Type * System.Linq.Expressions.Expression * string * bool * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.LambdaExpression" Usage="System.Linq.Expressions.Expression.Lambda (delegateType, body, name, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-1736"><see cref="P:System.Linq.Expressions.Expression.Type" /> Reprezentujący sygnaturę delegata dla wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1736">A <see cref="P:System.Linq.Expressions.Expression.Type" /> representing the delegate signature for the lambda.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-1737"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1737">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-1738">Nazwa wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1738">The name for the lambda.</span></span> <span data-ttu-id="eb4ed-1739">Używany do emitowania informacji debugowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1739">Used for emitting debug information.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1740">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1740">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1741">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1741">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1742">Tworzy, <see cref="T:System.Linq.Expressions.LambdaExpression" /> gdzie typ delegata jest znany w czasie kompilacji, z nazwą wyrażenia lambda, parametrem, który wskazuje, czy Optymalizacja wywołania tail zostanie zastosowana, oraz wyliczalną kolekcję wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1742">Creates a <see cref="T:System.Linq.Expressions.LambdaExpression" /> where the delegate type is known at compile time, with the name for the lambda, a parameter that indicates whether tail call optimization will be applied, and an enumerable collection of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1743">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma właściwość równą lambda, a <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> właściwości <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i i są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1743">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to Lambda and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.Expression&lt;'Delegate&gt;" Usage="System.Linq.Expressions.Expression.Lambda (body, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="eb4ed-1744">Typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1744">A delegate type.</span></span></typeparam>
        <param name="body"><span data-ttu-id="eb4ed-1745"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1745">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1746">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1746">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1747">Tworzy, <see cref="T:System.Linq.Expressions.Expression`1" /> gdzie typ delegata jest znany w czasie kompilacji, z wyliczalną kolekcją wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1747">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time, with an enumerable collection of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1748">Obiekt <see cref="T:System.Linq.Expressions.Expression`1" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i właściwości iiustawiaokreślonewartości.<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1748">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1749">Liczba parametrów dla typu `TDelegate` delegata musi być równa liczbie elementów w. `parameters`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1749">The number of parameters for the delegate type `TDelegate` must equal the number of elements in `parameters`.</span></span>  
  
 <span data-ttu-id="eb4ed-1750">Elementy `parameters` musi być odwołaniem równym wyrażeniem parametrów w `body`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1750">The elements of `parameters` must be reference equal to the parameter expressions in `body`.</span></span>  
  
 <span data-ttu-id="eb4ed-1751">Właściwość obiektu będącego wynikiem reprezentuje typ `TDelegate`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1751">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object represents the type `TDelegate`.</span></span> <span data-ttu-id="eb4ed-1752">Jeśli `parameters` jest `null` ,<xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> właściwość obiektu będącego wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1752">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1753"><paramref name="body" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1753"><paramref name="body" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-1754">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1754">-or-</span></span> 
<span data-ttu-id="eb4ed-1755">Co najmniej jeden element w <paramref name="parameters" /> programie <see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1755">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1756"><paramref name="TDelegate" />nie jest typem delegowanym.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1756"><paramref name="TDelegate" /> is not a delegate type.</span></span>  
  
<span data-ttu-id="eb4ed-1757">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1757">-or-</span></span> 
 <span data-ttu-id="eb4ed-1758"><paramref name="body" />. Typ reprezentuje typ, którego nie można przypisać do zwracanego typu <paramref name="TDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1758"><paramref name="body" />.Type represents a type that is not assignable to the return type of <paramref name="TDelegate" />.</span></span>  
  
<span data-ttu-id="eb4ed-1759">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1759">-or-</span></span> 
 <span data-ttu-id="eb4ed-1760"><paramref name="parameters" />nie zawiera takiej samej liczby elementów jak lista parametrów dla <paramref name="TDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1760"><paramref name="parameters" /> does not contain the same number of elements as the list of parameters for <paramref name="TDelegate" />.</span></span>  
  
<span data-ttu-id="eb4ed-1761">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1761">-or-</span></span> 
<span data-ttu-id="eb4ed-1762">Właściwość elementu nie jestmożliwa<paramref name="TDelegate" />do przypisania z typu odpowiadającego typu parametru. <paramref name="parameters" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1762">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of <paramref name="TDelegate" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, ParamArray parameters As ParameterExpression()) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * System.Linq.Expressions.ParameterExpression[] -&gt; System.Linq.Expressions.Expression&lt;'Delegate&gt;" Usage="System.Linq.Expressions.Expression.Lambda (body, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="eb4ed-1763">Typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1763">A delegate type.</span></span></typeparam>
        <param name="body"><span data-ttu-id="eb4ed-1764"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1764">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1765">Tablica <see cref="T:System.Linq.Expressions.ParameterExpression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1765">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1766">Tworzy, <see cref="T:System.Linq.Expressions.Expression`1" /> gdzie typ delegata jest znany w czasie kompilacji, z tablicą wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1766">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time, with an array of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1767">Obiekt <see cref="T:System.Linq.Expressions.Expression`1" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i właściwości iiustawiaokreślonewartości.<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1767">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1768">Liczba parametrów dla typu `TDelegate` delegata musi być równa liczbie elementów w. `parameters`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1768">The number of parameters for the delegate type `TDelegate` must equal the number of elements in `parameters`.</span></span>  
  
 <span data-ttu-id="eb4ed-1769">Elementy `parameters` musi być odwołaniem równym wyrażeniem parametrów w`body`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1769">The elements of `parameters` must be reference equal to the parameter expressions in`body`.</span></span>  
  
 <span data-ttu-id="eb4ed-1770">Właściwość obiektu będącego wynikiem reprezentuje typ `TDelegate`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1770">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting object represents the type `TDelegate`.</span></span> <span data-ttu-id="eb4ed-1771">Jeśli `parameters` jest `null` ,<xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> właściwość obiektu będącego wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1771">If `parameters` is `null`, the <xref:System.Linq.Expressions.LambdaExpression.Parameters%2A> property of the resulting object is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1772"><paramref name="body" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1772"><paramref name="body" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-1773">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1773">-or-</span></span> 
<span data-ttu-id="eb4ed-1774">Co najmniej jeden element w <paramref name="parameters" /> programie <see langword="null" />jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1774">One or more elements in <paramref name="parameters" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1775"><paramref name="TDelegate" />nie jest typem delegowanym.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1775"><paramref name="TDelegate" /> is not a delegate type.</span></span>  
  
<span data-ttu-id="eb4ed-1776">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1776">-or-</span></span> 
 <span data-ttu-id="eb4ed-1777"><paramref name="body" />. Typ reprezentuje typ, którego nie można przypisać do zwracanego typu <paramref name="TDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1777"><paramref name="body" />.Type represents a type that is not assignable to the return type of <paramref name="TDelegate" />.</span></span>  
  
<span data-ttu-id="eb4ed-1778">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1778">-or-</span></span> 
 <span data-ttu-id="eb4ed-1779"><paramref name="parameters" />nie zawiera takiej samej liczby elementów jak lista parametrów dla <paramref name="TDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1779"><paramref name="parameters" /> does not contain the same number of elements as the list of parameters for <paramref name="TDelegate" />.</span></span>  
  
<span data-ttu-id="eb4ed-1780">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1780">-or-</span></span> 
<span data-ttu-id="eb4ed-1781">Właściwość elementu nie jestmożliwa<paramref name="TDelegate" />do przypisania z typu odpowiadającego typu parametru. <paramref name="parameters" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1781">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="parameters" /> is not assignable from the type of the corresponding parameter type of <paramref name="TDelegate" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * bool * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.Expression&lt;'Delegate&gt;" Usage="System.Linq.Expressions.Expression.Lambda (body, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="eb4ed-1782">Typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1782">The delegate type.</span></span></typeparam>
        <param name="body"><span data-ttu-id="eb4ed-1783"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1783">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1784">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1784">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1785">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1785">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1786">Tworzy, <see cref="T:System.Linq.Expressions.Expression`1" /> gdzie typ delegata jest znany w czasie kompilacji, z parametrem wskazującym, czy zostanie zastosowana Optymalizacja wywołania tail i wyliczalną kolekcją wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1786">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time, with a parameter that indicates whether tail call optimization will be applied, and an enumerable collection of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1787">Obiekt <see cref="T:System.Linq.Expressions.Expression`1" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i właściwości iiustawiaokreślonewartości.<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1787">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, bool tailCall, params System.Linq.Expressions.ParameterExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, bool tailCall, class System.Linq.Expressions.ParameterExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, tailCall As Boolean, ParamArray parameters As ParameterExpression()) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, bool tailCall, ... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * bool * System.Linq.Expressions.ParameterExpression[] -&gt; System.Linq.Expressions.Expression&lt;'Delegate&gt;" Usage="System.Linq.Expressions.Expression.Lambda (body, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Linq.Expressions.ParameterExpression[]" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="eb4ed-1788">Typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1788">The delegate type.</span></span></typeparam>
        <param name="body"><span data-ttu-id="eb4ed-1789"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1789">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1790">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1790">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1791">Tablica zawierająca <see cref="T:System.Linq.Expressions.ParameterExpression" /> obiekty używane do <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> wypełniania kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1791">An array that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1792">Tworzy, <see cref="T:System.Linq.Expressions.Expression`1" /> gdzie typ delegata jest znany w czasie kompilacji, z parametrem wskazującym, czy zostanie zastosowana Optymalizacja wywołania tail i tablicą wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1792">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time, with a parameter that indicates whether tail call optimization will be applied, and an array of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1793">Obiekt <see cref="T:System.Linq.Expressions.Expression`1" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i właściwości iiustawiaokreślonewartości.<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1793">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, string name, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, name As String, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * string * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.Expression&lt;'Delegate&gt;" Usage="System.Linq.Expressions.Expression.Lambda (body, name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="eb4ed-1794">Typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1794">The delegate type.</span></span></typeparam>
        <param name="body"><span data-ttu-id="eb4ed-1795"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1795">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-1796">Nazwa wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1796">The name of the lambda.</span></span> <span data-ttu-id="eb4ed-1797">Służy do generowania informacji o debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1797">Used for generating debugging information.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1798">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1798">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1799"><see cref="T:System.Linq.Expressions.Expression`1" /> Tworzy miejsce, gdzie typ delegata jest znany w czasie kompilacji, z nazwą wyrażenia lambda i wyliczalną kolekcją wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1799">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time, with the name for the lambda, and an enumerable collection of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1800">Obiekt <see cref="T:System.Linq.Expressions.Expression`1" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i właściwości iiustawiaokreślonewartości.<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1800">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lambda&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;TDelegate&gt; Lambda&lt;TDelegate&gt; (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;!!TDelegate&gt; Lambda&lt;TDelegate&gt;(class System.Linq.Expressions.Expression body, string name, bool tailCall, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Lambda(Of TDelegate) (body As Expression, name As String, tailCall As Boolean, parameters As IEnumerable(Of ParameterExpression)) As Expression(Of TDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static System::Linq::Expressions::Expression&lt;TDelegate&gt; ^ Lambda(System::Linq::Expressions::Expression ^ body, System::String ^ name, bool tailCall, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Linq.Expressions.Expression * string * bool * seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.Expression&lt;'Delegate&gt;" Usage="System.Linq.Expressions.Expression.Lambda (body, name, tailCall, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;TDelegate&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="tailCall" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate"><span data-ttu-id="eb4ed-1801">Typ delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1801">The delegate type.</span></span></typeparam>
        <param name="body"><span data-ttu-id="eb4ed-1802"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1802">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> property equal to.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-1803">Nazwa wyrażenia lambda.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1803">The name of the lambda.</span></span> <span data-ttu-id="eb4ed-1804">Służy do generowania informacji o debugowaniu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1804">Used for generating debugging info.</span></span></param>
        <param name="tailCall"><span data-ttu-id="eb4ed-1805">Wskazuje <see cref="T:System.Boolean" /> , czy Optymalizacja wywołania tail zostanie zastosowana podczas kompilowania utworzonego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1805">A <see cref="T:System.Boolean" /> that indicates if tail call optimization will be applied when compiling the created expression.</span></span></param>
        <param name="parameters"><span data-ttu-id="eb4ed-1806">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1806">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1807">Tworzy, <see cref="T:System.Linq.Expressions.Expression`1" /> gdzie typ delegata jest znany w czasie kompilacji, z nazwą wyrażenia lambda, parametrem wskazującym, czy zostanie zastosowana Optymalizacja wywołania tail i wyliczalną kolekcją wyrażeń parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1807">Creates an <see cref="T:System.Linq.Expressions.Expression`1" /> where the delegate type is known at compile time, with the name for the lambda, a parameter that indicates whether tail call optimization will be applied, and an enumerable collection of parameter expressions.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1808">Obiekt <see cref="T:System.Linq.Expressions.Expression`1" /> , który <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> i właściwości iiustawiaokreślonewartości.<see cref="P:System.Linq.Expressions.LambdaExpression.Body" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1808">An <see cref="T:System.Linq.Expressions.Expression`1" /> that has the <see cref="P:System.Linq.Expressions.LambdaExpression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Lambda" /> and the <see cref="P:System.Linq.Expressions.LambdaExpression.Body" /> and <see cref="P:System.Linq.Expressions.LambdaExpression.Parameters" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftShift">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1809">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przesunięcia w lewo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1809">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShift (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member LeftShift : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LeftShift (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1810"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1810">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1811"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1811">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1812">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przesunięcia w lewo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1812">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1813"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1813">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1814">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1814">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1815"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1815">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1816">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1816">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-1817">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1817">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-1818"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1818">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1819">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1819">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1820">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1820">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1821">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1821">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1822"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator przesunięcia w lewo, to oznacza, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1822">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the left-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1823">W przeciwnym razie `left`, jeśli. Typ jest typem całkowitym (jednym z <xref:System.Byte> <xref:System.Int16>, <xref:System.SByte> <xref:System.UInt16> <xref:System.Int32> ,,<xref:System.UInt32>,,,,, lub odpowiednimi typami dopuszczającymi wartość null) i `right`. <xref:System.Int64> <xref:System.UInt64> Typ to <xref:System.Int32>, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1823">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1824">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1824">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1825">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1825">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1826">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1826">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1827">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1827">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1828">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1828">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1829">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1829">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1830">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1830">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-1831">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1831">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1832">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1832">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1833">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora przesunięcia w lewo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1833">The type of the node is the result type of the predefined left-shift operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-1834">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1834">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1835">Typ węzła jest typem dopuszczającym wartość null, który odpowiada typowi wyniku wstępnie zdefiniowanego operatora przesunięcia w lewo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1835">The type of the node is the nullable type that corresponds to the result type of the predefined left-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1836"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1836"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1837">Operator przesunięcia w lewo nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1837">The left-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShift (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member LeftShift : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LeftShift (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1838"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1838">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1839"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1839">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1840">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1840">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1841">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przesunięcia w lewo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1841">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1842">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1842">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1843">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1843">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1844"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1844">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1845">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1845">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-1846">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1846">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-1847"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1847">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1848">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1848">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1849">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1849">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1850">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1850">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1851">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1851">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-1852">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który <xref:System.Reflection.MethodInfo> przeciąża operator przesunięcia w lewo, oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1852">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the left-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1853">W przeciwnym razie `left`, jeśli. Typ jest typem całkowitym (jednym z <xref:System.Byte> <xref:System.Int16>, <xref:System.SByte> <xref:System.UInt16> <xref:System.Int32> ,,<xref:System.UInt32>,,,,, lub odpowiednimi typami dopuszczającymi wartość null) i `right`. <xref:System.Int64> <xref:System.UInt64> Typ to <xref:System.Int32>, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1853">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1854">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1854">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1855">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1855">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1856">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1856">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1857">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1857">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1858">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1858">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1859">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1859">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1860">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1860">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-1861">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1861">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1862">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1862">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1863">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora przesunięcia w lewo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1863">The type of the node is the result type of the predefined left-shift operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-1864">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1864">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1865">Typ węzła jest typem dopuszczającym wartość null, który odpowiada typowi wyniku wstępnie zdefiniowanego operatora przesunięcia w lewo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1865">The type of the node is the nullable type that corresponds to the result type of the predefined left-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1866"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1866"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1867"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1867"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1868"><paramref name="method" />jest <see langword="null" /> i operator przesunięcia w lewo nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1868"><paramref name="method" /> is <see langword="null" /> and the left-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftShiftAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1869">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania w lewym przesunięciu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1869">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member LeftShiftAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LeftShiftAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1870"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1870">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1871"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1871">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1872">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania w lewym przesunięciu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1872">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1873"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1873">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member LeftShiftAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LeftShiftAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1874"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1874">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1875"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1875">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1876">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1876">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1877">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania w lewym przesunięciu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1877">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1878">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1878">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LeftShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LeftShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member LeftShiftAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LeftShiftAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1879"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1879">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1880"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1880">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1881">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1881">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-1882">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1882">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1883">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania w lewym przesunięciu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1883">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise left-shift assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1884">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1884">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LeftShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1885">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "mniejsze niż" porównywanie numeryczne.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1885">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1886"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1886">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1887"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1887">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1888">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "mniejsze niż" porównywanie numeryczne.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1888">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1889"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1889">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1890">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1890">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1891"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1891">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1892">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwość jest. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1892">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="eb4ed-1893">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1893">Otherwise, it is `false`.</span></span> <span data-ttu-id="eb4ed-1894">Właściwość jest zawsze `false`. <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1894">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="eb4ed-1895"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1895">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1896">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1896">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1897">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1897">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1898">Metoda implementująca dla operacji jest wybierana na podstawie następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1898">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="eb4ed-1899"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator "mniejsze niż", oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1899">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1900">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1900">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1901">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1901">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1902">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1902">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1903">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1903">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1904">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1904">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1905">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1905">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1906">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1906">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1907">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1907">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1908">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1908">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1909">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1909">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1910">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1910">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1911">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1911">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1912">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1912">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1913">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które porównuje dwie liczby całkowite.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1913">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#25)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1914"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1914"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1915">Operator "Less" nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1915">The "less than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThan(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThan (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThan(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * bool * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LessThan (left, right, liftToNull, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1916"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1916">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1917"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1917">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="liftToNull"><span data-ttu-id="eb4ed-1918"><see langword="true" />Aby ustawić <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> na <see langword="true" />; , aby <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> ustawić wartość .<see langword="false" /> <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1918"><see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1919">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1919">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1920">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "mniejsze niż" porównywanie numeryczne.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1920">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than" numeric comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1921">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1921">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThan" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1922">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1922">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1923"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1923">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1924">Jeśli węzeł <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> zostanie zniesiony, właściwość jest `true` i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> właściwość jest równa `liftToNull`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1924">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="eb4ed-1925">W przeciwnym razie są oba `false`te elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1925">Otherwise, they are both `false`.</span></span> <span data-ttu-id="eb4ed-1926"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1926">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1927">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1927">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1928">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1928">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1929">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1929">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1930">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1930">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1931">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator "mniejsze niż", <xref:System.Reflection.MethodInfo> oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1931">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1932">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1932">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1933">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1933">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1934">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1934">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1935">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1935">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1936">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1936">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1937">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony; Ponadto typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1937">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1938">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1938">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1939">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1939">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1940">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1940">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1941">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1941">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1942">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1942">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1943">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1943">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1944">Typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1944">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1945"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1945"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-1946"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1946"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1947"><paramref name="method" />jest <see langword="null" /> i operator "Less" nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1947"><paramref name="method" /> is <see langword="null" /> and the "less than" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-1948">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "mniejsze niż lub równe" porównanie numeryczne.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1948">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a " less than or equal" numeric comparison.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LessThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1949"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1949">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1950"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1950">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1951">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "mniejsze niż lub równe" porównanie numeryczne.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1951">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a " less than or equal" numeric comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1952"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1952">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1953">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1953">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1954"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1954">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1955">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwość jest. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1955">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="eb4ed-1956">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1956">Otherwise, it is `false`.</span></span> <span data-ttu-id="eb4ed-1957">Właściwość jest zawsze `false`. <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1957">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="eb4ed-1958"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1958">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1959">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1959">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1960">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1960">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1961">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1961">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1962"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator "mniejsze lub równe", oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1962">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1963">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1963">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1964">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1964">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1965">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1965">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1966">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1966">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1967">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1967">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1968">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1968">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="eb4ed-1969">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1969">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-1970">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1970">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-1971">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1971">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1972">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1972">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1973">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1973">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-1974">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1974">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-1975">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1975">The type of the node is <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-1976">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które porównuje dwie liczby całkowite.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1976">The following code example shows how to create an expression that compares two integers.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#26)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-1977"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1977"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-1978">Operator "Less" lub "EQUAL" nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1978">The "less than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression LessThanOrEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LessThanOrEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ LessThanOrEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * bool * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.LessThanOrEqual (left, right, liftToNull, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-1979"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1979">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-1980"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1980">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="liftToNull"><span data-ttu-id="eb4ed-1981"><see langword="true" />Aby ustawić <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> na <see langword="true" />; , aby <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> ustawić wartość .<see langword="false" /> <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1981"><see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-1982">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1982">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-1983">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący "mniejsze niż lub równe" porównanie numeryczne.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1983">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a "less than or equal" numeric comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-1984">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-1984">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.LessThanOrEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-1985">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1985">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-1986"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1986">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-1987">Jeśli węzeł <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> zostanie zniesiony, właściwość jest `true` i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> właściwość jest równa `liftToNull`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1987">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="eb4ed-1988">W przeciwnym razie są oba `false`te elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1988">Otherwise, they are both `false`.</span></span> <span data-ttu-id="eb4ed-1989"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1989">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-1990">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1990">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-1991">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1991">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-1992">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1992">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-1993">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1993">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1994">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator " <xref:System.Reflection.MethodInfo> mniejsze lub równe", oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1994">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the "less than or equal" operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-1995">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1995">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-1996">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1996">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-1997">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1997">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-1998">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1998">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-1999">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-1999">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2000">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony; Ponadto typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2000">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2001">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2001">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2002">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2002">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-2003">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2003">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2004">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2004">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2005">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2005">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-2006">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2006">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2007">Typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2007">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2008"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2008"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2009"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2009"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2010"><paramref name="method" />is <see langword="null" /> i operator "mniejsze niż lub równe" nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2010"><paramref name="method" /> is <see langword="null" /> and the "less than or equal" operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ListBind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2011"><see cref="T:System.Linq.Expressions.MemberListBinding" /> Tworzy obiekt.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2011">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (member As MemberInfo, initializers As IEnumerable(Of ElementInit)) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListBind : System.Reflection.MemberInfo * seq&lt;System.Linq.Expressions.ElementInit&gt; -&gt; System.Linq.Expressions.MemberListBinding" Usage="System.Linq.Expressions.Expression.ListBind (member, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="eb4ed-2012">Reprezentuje pole lub właściwość <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> ,abyustawićwłaściwośćrówną.<see cref="T:System.Reflection.MemberInfo" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2012">A <see cref="T:System.Reflection.MemberInfo" /> that represents a field or property to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2013">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ElementInit" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2013">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2014"><see cref="T:System.Linq.Expressions.MemberListBinding" /> Tworzy miejsce, gdzie składowa jest polem lub właściwością.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2014">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> where the member is a field or property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2015"><see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> A, który <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> ma<see cref="P:System.Linq.Expressions.MemberBinding.Member" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberListBinding" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2015">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2016"><paramref name="member" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2016"><paramref name="member" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2017">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2017">-or-</span></span> 
<span data-ttu-id="eb4ed-2018">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2018">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2019"><paramref name="member" />nie reprezentuje pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2019"><paramref name="member" /> does not represent a field or property.</span></span>  
  
<span data-ttu-id="eb4ed-2020">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2020">-or-</span></span> 
<span data-ttu-id="eb4ed-2021">Lub pola lub właściwości<paramref name="member" /> reprezentowanej przez nie implementuje <see cref="T:System.Collections.IEnumerable" />. <see cref="P:System.Reflection.FieldInfo.FieldType" /> <see cref="P:System.Reflection.PropertyInfo.PropertyType" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2021">The <see cref="P:System.Reflection.FieldInfo.FieldType" /> or <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the field or property that <paramref name="member" /> represents does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (member As MemberInfo, ParamArray initializers As ElementInit()) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MemberInfo ^ member, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListBind : System.Reflection.MemberInfo * System.Linq.Expressions.ElementInit[] -&gt; System.Linq.Expressions.MemberListBinding" Usage="System.Linq.Expressions.Expression.ListBind (member, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="eb4ed-2022">Reprezentuje pole lub właściwość <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> ,abyustawićwłaściwośćrówną.<see cref="T:System.Reflection.MemberInfo" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2022">A <see cref="T:System.Reflection.MemberInfo" /> that represents a field or property to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2023">Tablica <see cref="T:System.Linq.Expressions.ElementInit" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2023">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2024"><see cref="T:System.Linq.Expressions.MemberListBinding" /> Tworzy miejsce, gdzie składowa jest polem lub właściwością.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2024">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> where the member is a field or property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2025"><see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> A, który <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> ma<see cref="P:System.Linq.Expressions.MemberBinding.Member" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberListBinding" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2025">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2026"><paramref name="member" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2026"><paramref name="member" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2027">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2027">-or-</span></span> 
<span data-ttu-id="eb4ed-2028">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2028">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2029"><paramref name="member" />nie reprezentuje pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2029"><paramref name="member" /> does not represent a field or property.</span></span>  
  
<span data-ttu-id="eb4ed-2030">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2030">-or-</span></span> 
<span data-ttu-id="eb4ed-2031">Lub pola lub właściwości<paramref name="member" /> reprezentowanej przez nie implementuje <see cref="T:System.Collections.IEnumerable" />. <see cref="P:System.Reflection.FieldInfo.FieldType" /> <see cref="P:System.Reflection.PropertyInfo.PropertyType" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2031">The <see cref="P:System.Reflection.FieldInfo.FieldType" /> or <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the field or property that <paramref name="member" /> represents does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MethodInfo propertyAccessor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (propertyAccessor As MethodInfo, initializers As IEnumerable(Of ElementInit)) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MethodInfo ^ propertyAccessor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListBind : System.Reflection.MethodInfo * seq&lt;System.Linq.Expressions.ElementInit&gt; -&gt; System.Linq.Expressions.MemberListBinding" Usage="System.Linq.Expressions.Expression.ListBind (propertyAccessor, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor"><span data-ttu-id="eb4ed-2032"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2032">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2033">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ElementInit" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2033">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2034"><see cref="T:System.Linq.Expressions.MemberListBinding" /> Tworzy na podstawie określonej metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2034">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> based on a specified property accessor method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2035">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> , który <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> ma <see cref="T:System.Reflection.MemberInfo" /> <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> <paramref name="propertyAccessor" />Właściwość równą <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, właściwość ustawiona na, która reprezentuje właściwość, która jest używana w i wypełnia elementy <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> <paramref name="initializers" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2035">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.MemberInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> populated with the elements of <paramref name="initializers" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2036"><paramref name="propertyAccessor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2036"><paramref name="propertyAccessor" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2037">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2037">-or-</span></span> 
<span data-ttu-id="eb4ed-2038">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2038">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2039"><paramref name="propertyAccessor" />nie reprezentuje metody akcesora właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2039"><paramref name="propertyAccessor" /> does not represent a property accessor method.</span></span>  
  
<span data-ttu-id="eb4ed-2040">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2040">-or-</span></span> 
<span data-ttu-id="eb4ed-2041">Właściwość, której Metoda reprezentowana przez <paramref name="propertyAccessor" /> dostęp nie implementuje <see cref="T:System.Collections.IEnumerable" />. <see cref="P:System.Reflection.PropertyInfo.PropertyType" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2041">The <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the property that the method represented by <paramref name="propertyAccessor" /> accesses does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ListBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberListBinding ListBind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ListBind (propertyAccessor As MethodInfo, ParamArray initializers As ElementInit()) As MemberListBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberListBinding ^ ListBind(System::Reflection::MethodInfo ^ propertyAccessor, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListBind : System.Reflection.MethodInfo * System.Linq.Expressions.ElementInit[] -&gt; System.Linq.Expressions.MemberListBinding" Usage="System.Linq.Expressions.Expression.ListBind (propertyAccessor, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberListBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyAccessor"><span data-ttu-id="eb4ed-2042"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2042">A <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2043">Tablica <see cref="T:System.Linq.Expressions.ElementInit" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2043">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2044"><see cref="T:System.Linq.Expressions.MemberListBinding" /> Tworzy obiekt na podstawie określonej metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2044">Creates a <see cref="T:System.Linq.Expressions.MemberListBinding" /> object based on a specified property accessor method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2045">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> , który <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> ma <see cref="T:System.Reflection.MemberInfo" /> <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> <paramref name="propertyAccessor" />Właściwość równą <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, właściwość ustawiona na, która reprezentuje właściwość, która jest używana w i wypełnia elementy <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> <paramref name="initializers" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2045">A <see cref="T:System.Linq.Expressions.MemberListBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.ListBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.MemberInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberListBinding.Initializers" /> populated with the elements of <paramref name="initializers" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2046"><paramref name="propertyAccessor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2046"><paramref name="propertyAccessor" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2047">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2047">-or-</span></span> 
<span data-ttu-id="eb4ed-2048">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2048">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2049"><paramref name="propertyAccessor" />nie reprezentuje metody akcesora właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2049"><paramref name="propertyAccessor" /> does not represent a property accessor method.</span></span>  
  
<span data-ttu-id="eb4ed-2050">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2050">-or-</span></span> 
<span data-ttu-id="eb4ed-2051">Właściwość, której Metoda reprezentowana przez <paramref name="propertyAccessor" /> dostęp nie implementuje <see cref="T:System.Collections.IEnumerable" />. <see cref="P:System.Reflection.PropertyInfo.PropertyType" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2051">The <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> of the property that the method represented by <paramref name="propertyAccessor" /> accesses does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ListInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2052"><see cref="T:System.Linq.Expressions.ListInitExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2052">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ElementInit&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListInit : System.Linq.Expressions.NewExpression * seq&lt;System.Linq.Expressions.ElementInit&gt; -&gt; System.Linq.Expressions.ListInitExpression" Usage="System.Linq.Expressions.Expression.ListInit (newExpression, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ElementInit&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression"><span data-ttu-id="eb4ed-2053">A <see cref="T:System.Linq.Expressions.NewExpression" /> , aby <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2053">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2054">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.ElementInit" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2054">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2055">Tworzy element <see cref="T:System.Linq.Expressions.ListInitExpression" /> , który używa <see cref="T:System.Linq.Expressions.ElementInit" /> określonych obiektów do zainicjowania kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2055">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses specified <see cref="T:System.Linq.Expressions.ElementInit" /> objects to initialize a collection.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2056"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> A, który <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> ma<see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.ListInitExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2056">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2057">Właściwość musi reprezentować typ, który implementuje <xref:System.Collections.IEnumerable>. <xref:System.Linq.Expressions.Expression.Type%2A> `newExpression`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2057">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="eb4ed-2058">Właściwość będąca wynikiem <xref:System.Linq.Expressions.ListInitExpression> jest równa `newExpression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2058">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2059">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> metody do <xref:System.Linq.Expressions.ListInitExpression> utworzenia, która reprezentuje inicjalizację nowego wystąpienia słownika z dwiema parami klucz-wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2059">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> method to create a <xref:System.Linq.Expressions.ListInitExpression> that represents the initialization of a new dictionary instance with two key-value pairs.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#7)]
 [!code-vb[System.Linq.Expressions.Expression#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2060"><paramref name="newExpression" />lub <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2060"><paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2061">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2061">-or-</span></span> 
<span data-ttu-id="eb4ed-2062">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2062">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2063"><paramref name="newExpression" />. Typ nie implementuje <see cref="T:System.Collections.IEnumerable" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2063"><paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListInit : System.Linq.Expressions.NewExpression * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.ListInitExpression" Usage="System.Linq.Expressions.Expression.ListInit (newExpression, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression"><span data-ttu-id="eb4ed-2064">A <see cref="T:System.Linq.Expressions.NewExpression" /> , aby <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2064">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2065">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2065">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2066"><see cref="T:System.Linq.Expressions.ListInitExpression" /> Tworzy, który używa metody o nazwie "Add", aby dodać elementy do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2066">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a method named "Add" to add elements to a collection.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2067">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> ma<see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2067">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2068">Właściwość musi reprezentować typ, który implementuje <xref:System.Collections.IEnumerable>. <xref:System.Linq.Expressions.Expression.Type%2A> `newExpression`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2068">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="eb4ed-2069">Aby można było użyć tego przeciążenia <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.Expression%7D%29>,. `newExpression` Typ lub jego typ podstawowy muszą deklarować pojedynczą metodę o nazwie "Add" (bez uwzględniania wielkości liter), która przyjmuje dokładnie jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2069">In order to use this overload of <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Collections.Generic.IEnumerable%7BSystem.Linq.Expressions.Expression%7D%29>, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="eb4ed-2070">Typ argumentu musi być możliwy do przypisania z typu reprezentowanego przez <xref:System.Linq.Expressions.Expression.Type%2A> Właściwość pierwszego `initializers`elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2070">The type of the argument must be assignable from the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of the first element of `initializers`.</span></span>  
  
 <span data-ttu-id="eb4ed-2071">Właściwość zwracanego <xref:System.Linq.Expressions.ListInitExpression> elementu zawiera jeden element `initializers`typu <xref:System.Linq.Expressions.ElementInit> dla każdego elementu. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2071">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="eb4ed-2072">Właściwość każdego elementu jest kolekcją pojedynczą, która `initializers`zawiera odpowiedni element. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> <xref:System.Linq.Expressions.ElementInit.Arguments%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2072">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="eb4ed-2073">Właściwość każdego elementu reprezentuje metodę Add, która została wykryta. `newExpression` <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> Typ lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2073">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> represents the add method that was discovered on `newExpression`.Type or its base type.</span></span>  
  
 <span data-ttu-id="eb4ed-2074">Właściwość będąca wynikiem <xref:System.Linq.Expressions.ListInitExpression> jest równa `newExpression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2074">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2075"><paramref name="newExpression" />lub <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2075"><paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2076">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2076">-or-</span></span> 
<span data-ttu-id="eb4ed-2077">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2077">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2078"><paramref name="newExpression" />. Typ nie implementuje <see cref="T:System.Collections.IEnumerable" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2078"><paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2079">Nie istnieje metoda wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter) <paramref name="newExpression" />zadeklarowanej w elemencie. Typ lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2079">There is no instance method named "Add" (case insensitive) declared in <paramref name="newExpression" />.Type or its base type.</span></span>  
  
<span data-ttu-id="eb4ed-2080">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2080">-or-</span></span> 
<span data-ttu-id="eb4ed-2081">Metoda Add dla <paramref name="newExpression" />. Typ lub jego typ podstawowy nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2081">The add method on <paramref name="newExpression" />.Type or its base type does not take exactly one argument.</span></span>  
  
<span data-ttu-id="eb4ed-2082">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2082">-or-</span></span> 
<span data-ttu-id="eb4ed-2083">Typu reprezentowanego przez <see cref="P:System.Linq.Expressions.Expression.Type" /> Właściwość pierwszego <paramref name="initializers" /> elementu nie można przypisać do typu argumentu metody <paramref name="newExpression" />Add. Typ lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2083">The type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of the first element of <paramref name="initializers" /> is not assignable to the argument type of the add method on <paramref name="newExpression" />.Type or its base type.</span></span>  
  
<span data-ttu-id="eb4ed-2084">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2084">-or-</span></span> 
<span data-ttu-id="eb4ed-2085">W systemie <paramref name="newExpression" />istnieje więcej niż jedna metoda zgodna z argumentami o nazwie "Add" (bez uwzględniania wielkości liter). Typ i/lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2085">More than one argument-compatible method named "Add" (case-insensitive) exists on <paramref name="newExpression" />.Type and/or its base type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.ElementInit[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.ElementInit[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::ElementInit ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListInit : System.Linq.Expressions.NewExpression * System.Linq.Expressions.ElementInit[] -&gt; System.Linq.Expressions.ListInitExpression" Usage="System.Linq.Expressions.Expression.ListInit (newExpression, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.ElementInit[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression"><span data-ttu-id="eb4ed-2086">A <see cref="T:System.Linq.Expressions.NewExpression" /> , aby <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2086">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2087">Tablica <see cref="T:System.Linq.Expressions.ElementInit" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2087">An array of <see cref="T:System.Linq.Expressions.ElementInit" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2088">Tworzy element <see cref="T:System.Linq.Expressions.ListInitExpression" /> , który używa <see cref="T:System.Linq.Expressions.ElementInit" /> określonych obiektów do zainicjowania kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2088">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses specified <see cref="T:System.Linq.Expressions.ElementInit" /> objects to initialize a collection.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2089"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> A, który <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> ma<see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.ListInitExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2089">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2090">Właściwość musi reprezentować typ, który implementuje <xref:System.Collections.IEnumerable>. <xref:System.Linq.Expressions.Expression.Type%2A> `newExpression`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2090">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="eb4ed-2091">Właściwość będąca wynikiem <xref:System.Linq.Expressions.ListInitExpression> jest równa `newExpression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2091">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2092">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> metody do <xref:System.Linq.Expressions.ListInitExpression> utworzenia, która reprezentuje inicjalizację nowego wystąpienia słownika z dwiema parami klucz-wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2092">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.ElementInit%5B%5D%29> method to create a <xref:System.Linq.Expressions.ListInitExpression> that represents the initialization of a new dictionary instance with two key-value pairs.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#7)]
 [!code-vb[System.Linq.Expressions.Expression#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2093"><paramref name="newExpression" />lub <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2093"><paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2094">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2094">-or-</span></span> 
<span data-ttu-id="eb4ed-2095">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2095">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2096"><paramref name="newExpression" />. Typ nie implementuje <see cref="T:System.Collections.IEnumerable" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2096"><paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListInit : System.Linq.Expressions.NewExpression * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.ListInitExpression" Usage="System.Linq.Expressions.Expression.ListInit (newExpression, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression"><span data-ttu-id="eb4ed-2097">A <see cref="T:System.Linq.Expressions.NewExpression" /> , aby <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2097">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2098">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2098">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2099"><see cref="T:System.Linq.Expressions.ListInitExpression" /> Tworzy, który używa metody o nazwie "Add", aby dodać elementy do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2099">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a method named "Add" to add elements to a collection.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2100">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> ma<see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2100">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2101">Właściwość musi reprezentować typ, który implementuje <xref:System.Collections.IEnumerable>. <xref:System.Linq.Expressions.Expression.Type%2A> `newExpression`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2101">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="eb4ed-2102">Aby można było użyć tego przeciążenia <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.Expression%5B%5D%29>,. `newExpression` Typ lub jego typ podstawowy muszą deklarować pojedynczą metodę o nazwie "Add" (bez uwzględniania wielkości liter), która przyjmuje dokładnie jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2102">In order to use this overload of <xref:System.Linq.Expressions.Expression.ListInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.Expression%5B%5D%29>, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="eb4ed-2103">Typ argumentu musi być możliwy do przypisania z typu reprezentowanego przez <xref:System.Linq.Expressions.Expression.Type%2A> Właściwość pierwszego `initializers`elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2103">The type of the argument must be assignable from the type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of the first element of `initializers`.</span></span>  
  
 <span data-ttu-id="eb4ed-2104">Właściwość zwracanego <xref:System.Linq.Expressions.ListInitExpression> elementu zawiera jeden element `initializers`typu <xref:System.Linq.Expressions.ElementInit> dla każdego elementu. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2104">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="eb4ed-2105">Właściwość każdego elementu jest kolekcją pojedynczą, która `initializers`zawiera odpowiedni element. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> <xref:System.Linq.Expressions.ElementInit.Arguments%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2105">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="eb4ed-2106">Właściwość każdego elementu reprezentuje metodę Add, która została wykryta. `newExpression` <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> Typ lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2106">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> represents the add method that was discovered on `newExpression`.Type or its base type.</span></span>  
  
 <span data-ttu-id="eb4ed-2107">Właściwość będąca wynikiem <xref:System.Linq.Expressions.ListInitExpression> jest równa `newExpression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2107">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2108"><paramref name="newExpression" />lub <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2108"><paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2109">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2109">-or-</span></span> 
<span data-ttu-id="eb4ed-2110">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2110">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2111"><paramref name="newExpression" />. Typ nie implementuje <see cref="T:System.Collections.IEnumerable" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2111"><paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2112">Nie istnieje metoda wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter) <paramref name="newExpression" />zadeklarowanej w elemencie. Typ lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2112">There is no instance method named "Add" (case insensitive) declared in <paramref name="newExpression" />.Type or its base type.</span></span>  
  
<span data-ttu-id="eb4ed-2113">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2113">-or-</span></span> 
<span data-ttu-id="eb4ed-2114">Metoda Add dla <paramref name="newExpression" />. Typ lub jego typ podstawowy nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2114">The add method on <paramref name="newExpression" />.Type or its base type does not take exactly one argument.</span></span>  
  
<span data-ttu-id="eb4ed-2115">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2115">-or-</span></span> 
<span data-ttu-id="eb4ed-2116">Typu reprezentowanego przez <see cref="P:System.Linq.Expressions.Expression.Type" /> Właściwość pierwszego <paramref name="initializers" /> elementu nie można przypisać do typu argumentu metody <paramref name="newExpression" />Add. Typ lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2116">The type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of the first element of <paramref name="initializers" /> is not assignable to the argument type of the add method on <paramref name="newExpression" />.Type or its base type.</span></span>  
  
<span data-ttu-id="eb4ed-2117">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2117">-or-</span></span> 
<span data-ttu-id="eb4ed-2118">W systemie <paramref name="newExpression" />istnieje więcej niż jedna metoda zgodna z argumentami o nazwie "Add" (bez uwzględniania wielkości liter). Typ i/lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2118">More than one argument-compatible method named "Add" (case-insensitive) exists on <paramref name="newExpression" />.Type and/or its base type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Reflection.MethodInfo addMethod, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Reflection::MethodInfo ^ addMethod, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListInit : System.Linq.Expressions.NewExpression * System.Reflection.MethodInfo * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.ListInitExpression" Usage="System.Linq.Expressions.Expression.ListInit (newExpression, addMethod, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression"><span data-ttu-id="eb4ed-2119">A <see cref="T:System.Linq.Expressions.NewExpression" /> , aby <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2119">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span></span></param>
        <param name="addMethod"><span data-ttu-id="eb4ed-2120"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter), która dodaje element do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2120">A <see cref="T:System.Reflection.MethodInfo" /> that represents an instance method named "Add" (case insensitive), that adds an element to a collection.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2121">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2121">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2122"><see cref="T:System.Linq.Expressions.ListInitExpression" /> Tworzy, który używa określonej metody do dodawania elementów do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2122">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a specified method to add elements to a collection.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2123">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> ma<see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2123">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2124">Właściwość musi reprezentować typ, który implementuje <xref:System.Collections.IEnumerable>. <xref:System.Linq.Expressions.Expression.Type%2A> `newExpression`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2124">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="eb4ed-2125">Jeśli `addMethod` jest `null`, .`newExpression` Typ lub jego typ podstawowy muszą deklarować pojedynczą metodę o nazwie "Add" (bez uwzględniania wielkości liter), która przyjmuje dokładnie jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2125">If `addMethod` is `null`, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="eb4ed-2126">Jeśli `addMethod` nie jest `null`, musi reprezentować metodę wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter), która ma dokładnie jeden parametr.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2126">If `addMethod` is not `null`, it must represent an instance method named "Add" (case insensitive) that has exactly one parameter.</span></span> <span data-ttu-id="eb4ed-2127">Typ reprezentowany przez <xref:System.Linq.Expressions.Expression.Type%2A> właściwość każdego `initializers` elementu musi być możliwy do przypisania do typu argumentu metody Add.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2127">The type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must be assignable to the argument type of the add method.</span></span>  
  
 <span data-ttu-id="eb4ed-2128">Właściwość zwracanego <xref:System.Linq.Expressions.ListInitExpression> elementu zawiera jeden element `initializers`typu <xref:System.Linq.Expressions.ElementInit> dla każdego elementu. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2128">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="eb4ed-2129">Właściwość każdego elementu jest kolekcją pojedynczą, która `initializers`zawiera odpowiedni element. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> <xref:System.Linq.Expressions.ElementInit.Arguments%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2129">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="eb4ed-2130">Właściwość każdego elementu jest równa `addMethod`. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> <xref:System.Linq.Expressions.ElementInit.AddMethod%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2130">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is equal to `addMethod`.</span></span>  
  
 <span data-ttu-id="eb4ed-2131">Właściwość będąca wynikiem <xref:System.Linq.Expressions.ListInitExpression> jest równa `newExpression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2131">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2132"><paramref name="newExpression" />lub <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2132"><paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2133">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2133">-or-</span></span> 
<span data-ttu-id="eb4ed-2134">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2134">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2135"><paramref name="newExpression" />. Typ nie implementuje <see cref="T:System.Collections.IEnumerable" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2135"><paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span>  
  
<span data-ttu-id="eb4ed-2136">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2136">-or-</span></span> 
 <span data-ttu-id="eb4ed-2137"><paramref name="addMethod" />nie jest <see langword="null" /> i nie reprezentuje metody wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter), która przyjmuje dokładnie jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2137"><paramref name="addMethod" /> is not <see langword="null" /> and it does not represent an instance method named "Add" (case insensitive) that takes exactly one argument.</span></span>  
  
<span data-ttu-id="eb4ed-2138">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2138">-or-</span></span> 
 <span data-ttu-id="eb4ed-2139"><paramref name="addMethod" />nie <see langword="null" /> jest, a typ reprezentowany <see cref="P:System.Linq.Expressions.Expression.Type" /> przez właściwość <paramref name="initializers" /> co najmniej jednego elementu nie może zostać przypisany do typu argumentu metody, która <paramref name="addMethod" /> reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2139"><paramref name="addMethod" /> is not <see langword="null" /> and the type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="initializers" /> is not assignable to the argument type of the method that <paramref name="addMethod" /> represents.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2140"><paramref name="addMethod" />nie <see langword="null" /> jest ani metoda wystąpienia o nazwie "Add", która ma jeden argument zgodny z typem <paramref name="newExpression" />istnieje w. Typ lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2140"><paramref name="addMethod" /> is <see langword="null" /> and no instance method named "Add" that takes one type-compatible argument exists on <paramref name="newExpression" />.Type or its base type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ListInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ListInitExpression ListInit(class System.Linq.Expressions.NewExpression newExpression, class System.Reflection.MethodInfo addMethod, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ListInitExpression ^ ListInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Reflection::MethodInfo ^ addMethod, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member ListInit : System.Linq.Expressions.NewExpression * System.Reflection.MethodInfo * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.ListInitExpression" Usage="System.Linq.Expressions.Expression.ListInit (newExpression, addMethod, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ListInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="addMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression"><span data-ttu-id="eb4ed-2141">A <see cref="T:System.Linq.Expressions.NewExpression" /> , aby <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2141">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property equal to.</span></span></param>
        <param name="addMethod"><span data-ttu-id="eb4ed-2142"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę wystąpienia, która przyjmuje jeden argument, który dodaje element do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2142">A <see cref="T:System.Reflection.MethodInfo" /> that represents an instance method that takes one argument, that adds an element to a collection.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2143">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2143">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.ListInitExpression.Initializers" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2144"><see cref="T:System.Linq.Expressions.ListInitExpression" /> Tworzy, który używa określonej metody do dodawania elementów do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2144">Creates a <see cref="T:System.Linq.Expressions.ListInitExpression" /> that uses a specified method to add elements to a collection.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2145">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> ma<see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2145">A <see cref="T:System.Linq.Expressions.ListInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ListInit" /> and the <see cref="P:System.Linq.Expressions.ListInitExpression.NewExpression" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2146">Właściwość musi reprezentować typ, który implementuje <xref:System.Collections.IEnumerable>. <xref:System.Linq.Expressions.Expression.Type%2A> `newExpression`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2146">The <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression` must represent a type that implements <xref:System.Collections.IEnumerable>.</span></span>  
  
 <span data-ttu-id="eb4ed-2147">Jeśli `addMethod` jest `null`, .`newExpression` Typ lub jego typ podstawowy muszą deklarować pojedynczą metodę o nazwie "Add" (bez uwzględniania wielkości liter), która przyjmuje dokładnie jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2147">If `addMethod` is `null`, `newExpression`.Type or its base type must declare a single method named "Add" (case insensitive) that takes exactly one argument.</span></span> <span data-ttu-id="eb4ed-2148">Jeśli `addMethod` nie jest `null`, musi reprezentować metodę wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter), która ma dokładnie jeden parametr.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2148">If `addMethod` is not `null`, it must represent an instance method named "Add" (case insensitive) that has exactly one parameter.</span></span> <span data-ttu-id="eb4ed-2149">Typ reprezentowany przez <xref:System.Linq.Expressions.Expression.Type%2A> właściwość każdego `initializers` elementu musi być możliwy do przypisania do typu argumentu metody Add.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2149">The type represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must be assignable to the argument type of the add method.</span></span>  
  
 <span data-ttu-id="eb4ed-2150">Właściwość zwracanego <xref:System.Linq.Expressions.ListInitExpression> elementu zawiera jeden element `initializers`typu <xref:System.Linq.Expressions.ElementInit> dla każdego elementu. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2150">The <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> property of the returned <xref:System.Linq.Expressions.ListInitExpression> contains one element of type <xref:System.Linq.Expressions.ElementInit> for each element of `initializers`.</span></span> <span data-ttu-id="eb4ed-2151">Właściwość każdego elementu jest kolekcją pojedynczą, która `initializers`zawiera odpowiedni element. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> <xref:System.Linq.Expressions.ElementInit.Arguments%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2151">The <xref:System.Linq.Expressions.ElementInit.Arguments%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is a singleton collection that contains the corresponding element of `initializers`.</span></span> <span data-ttu-id="eb4ed-2152">Właściwość każdego elementu jest równa `addMethod`. <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> <xref:System.Linq.Expressions.ElementInit.AddMethod%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2152">The <xref:System.Linq.Expressions.ElementInit.AddMethod%2A> property of each element of <xref:System.Linq.Expressions.ListInitExpression.Initializers%2A> is equal to `addMethod`.</span></span>  
  
 <span data-ttu-id="eb4ed-2153">Właściwość będąca wynikiem <xref:System.Linq.Expressions.ListInitExpression> jest równa `newExpression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2153">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.ListInitExpression> is equal to `newExpression`.Type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2154"><paramref name="newExpression" />lub <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2154"><paramref name="newExpression" /> or <paramref name="initializers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2155">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2155">-or-</span></span> 
<span data-ttu-id="eb4ed-2156">Co najmniej jeden element <paramref name="initializers" />. <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2156">One or more elements of <paramref name="initializers" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2157"><paramref name="newExpression" />. Typ nie implementuje <see cref="T:System.Collections.IEnumerable" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2157"><paramref name="newExpression" />.Type does not implement <see cref="T:System.Collections.IEnumerable" />.</span></span>  
  
<span data-ttu-id="eb4ed-2158">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2158">-or-</span></span> 
 <span data-ttu-id="eb4ed-2159"><paramref name="addMethod" />nie jest <see langword="null" /> i nie reprezentuje metody wystąpienia o nazwie "Add" (bez uwzględniania wielkości liter), która przyjmuje dokładnie jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2159"><paramref name="addMethod" /> is not <see langword="null" /> and it does not represent an instance method named "Add" (case insensitive) that takes exactly one argument.</span></span>  
  
<span data-ttu-id="eb4ed-2160">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2160">-or-</span></span> 
 <span data-ttu-id="eb4ed-2161"><paramref name="addMethod" />nie <see langword="null" /> jest, a typ reprezentowany <see cref="P:System.Linq.Expressions.Expression.Type" /> przez właściwość <paramref name="initializers" /> co najmniej jednego elementu nie może zostać przypisany do typu argumentu metody, która <paramref name="addMethod" /> reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2161"><paramref name="addMethod" /> is not <see langword="null" /> and the type represented by the <see cref="P:System.Linq.Expressions.Expression.Type" /> property of one or more elements of <paramref name="initializers" /> is not assignable to the argument type of the method that <paramref name="addMethod" /> represents.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2162"><paramref name="addMethod" />nie <see langword="null" /> jest ani metoda wystąpienia o nazwie "Add", która ma jeden argument zgodny z typem <paramref name="newExpression" />istnieje w. Typ lub jego typ podstawowy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2162"><paramref name="addMethod" /> is <see langword="null" /> and no instance method named "Add" that takes one type-compatible argument exists on <paramref name="newExpression" />.Type or its base type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Loop">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2163"><see cref="T:System.Linq.Expressions.LoopExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2163">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body);" />
      <MemberSignature Language="F#" Value="static member Loop : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.LoopExpression" Usage="System.Linq.Expressions.Expression.Loop body" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-2164">Treść pętli.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2164">The body of the loop.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2165"><see cref="T:System.Linq.Expressions.LoopExpression" /> Tworzy z podaną treścią.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2165">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2166">Utworzony <see cref="T:System.Linq.Expressions.LoopExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2166">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.LabelTarget break) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression, break As LabelTarget) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::LabelTarget ^ break);" />
      <MemberSignature Language="F#" Value="static member Loop : System.Linq.Expressions.Expression * System.Linq.Expressions.LabelTarget -&gt; System.Linq.Expressions.LoopExpression" Usage="System.Linq.Expressions.Expression.Loop (body, break)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="break" Type="System.Linq.Expressions.LabelTarget" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-2167">Treść pętli.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2167">The body of the loop.</span></span></param>
        <param name="break"><span data-ttu-id="eb4ed-2168">Element docelowy Break używany przez treść pętli.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2168">The break target used by the loop body.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2169">Tworzy element <see cref="T:System.Linq.Expressions.LoopExpression" /> z podaną treścią i elementem docelowym Break.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2169">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body and break target.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2170">Utworzony <see cref="T:System.Linq.Expressions.LoopExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2170">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-2171">W poniższym przykładzie pokazano, jak utworzyć wyrażenie bloku zawierające <xref:System.Linq.Expressions.LoopExpression> obiekt.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2171">The following example demonstrates how to create a block expression that contains a <xref:System.Linq.Expressions.LoopExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#44)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#44)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Loop">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break, System.Linq.Expressions.LabelTarget continue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.LoopExpression Loop(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.LabelTarget break, class System.Linq.Expressions.LabelTarget continue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Loop (body As Expression, break As LabelTarget, continue As LabelTarget) As LoopExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::LoopExpression ^ Loop(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::LabelTarget ^ break, System::Linq::Expressions::LabelTarget ^ continue);" />
      <MemberSignature Language="F#" Value="static member Loop : System.Linq.Expressions.Expression * System.Linq.Expressions.LabelTarget * System.Linq.Expressions.LabelTarget -&gt; System.Linq.Expressions.LoopExpression" Usage="System.Linq.Expressions.Expression.Loop (body, break, continue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.LoopExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="break" Type="System.Linq.Expressions.LabelTarget" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="continue" Type="System.Linq.Expressions.LabelTarget" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-2172">Treść pętli.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2172">The body of the loop.</span></span></param>
        <param name="break"><span data-ttu-id="eb4ed-2173">Element docelowy Break używany przez treść pętli.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2173">The break target used by the loop body.</span></span></param>
        <param name="continue"><span data-ttu-id="eb4ed-2174">Element docelowy kontynuacji używany przez treść pętli.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2174">The continue target used by the loop body.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2175"><see cref="T:System.Linq.Expressions.LoopExpression" /> Tworzy z podaną treścią.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2175">Creates a <see cref="T:System.Linq.Expressions.LoopExpression" /> with the given body.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2176">Utworzony <see cref="T:System.Linq.Expressions.LoopExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2176">The created <see cref="T:System.Linq.Expressions.LoopExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeBinary">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2177"><see cref="T:System.Linq.Expressions.BinaryExpression" /> Tworzy przez wywołanie odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2177">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> by calling the appropriate factory method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member MakeBinary : System.Linq.Expressions.ExpressionType * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MakeBinary (binaryType, left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="binaryType"><span data-ttu-id="eb4ed-2178"><see cref="T:System.Linq.Expressions.ExpressionType" /> Określa typ operacji binarnej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2178">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span></span></param>
        <param name="left"><span data-ttu-id="eb4ed-2179"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje lewy operand.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2179">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2180"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje prawy operand.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2180">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2181"><see cref="T:System.Linq.Expressions.BinaryExpression" />Tworzy, za pomocą lewego i prawego operandu, przez wywołanie odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2181">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left and right operands, by calling an appropriate factory method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2182"><see cref="T:System.Linq.Expressions.BinaryExpression" /> Wynika to z wywołania odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2182">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2183">Parametr określa metodę fabryki <xref:System.Linq.Expressions.BinaryExpression> wywoływaną przez tę metodę. `binaryType`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2183">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method calls.</span></span> <span data-ttu-id="eb4ed-2184">Na przykład, jeśli `binaryType` jest <xref:System.Linq.Expressions.ExpressionType.Subtract>, ta metoda wywołuje <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2184">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2185">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.MakeBinary%28System.Linq.Expressions.ExpressionType%2CSystem.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%29> metody w celu <xref:System.Linq.Expressions.BinaryExpression> utworzenia, która reprezentuje odejmowanie jednej liczby z innego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2185">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.MakeBinary%28System.Linq.Expressions.ExpressionType%2CSystem.Linq.Expressions.Expression%2CSystem.Linq.Expressions.Expression%29> method to create a <xref:System.Linq.Expressions.BinaryExpression> that represents the subtraction of one number from another.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#8)]
 [!code-vb[System.Linq.Expressions.Expression#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2186"><paramref name="binaryType" />nie odpowiada węzłowi wyrażenia binarnego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2186"><paramref name="binaryType" /> does not correspond to a binary expression node.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2187"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2187"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member MakeBinary : System.Linq.Expressions.ExpressionType * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * bool * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MakeBinary (binaryType, left, right, liftToNull, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="binaryType"><span data-ttu-id="eb4ed-2188"><see cref="T:System.Linq.Expressions.ExpressionType" /> Określa typ operacji binarnej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2188">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span></span></param>
        <param name="left"><span data-ttu-id="eb4ed-2189"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje lewy operand.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2189">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2190"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje prawy operand.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2190">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span></span></param>
        <param name="liftToNull"><span data-ttu-id="eb4ed-2191"><see langword="true" />Aby ustawić <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> na <see langword="true" />; , aby <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> ustawić wartość .<see langword="false" /> <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2191"><see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2192">A <see cref="T:System.Reflection.MethodInfo" /> , która określa metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2192">A <see cref="T:System.Reflection.MethodInfo" /> that specifies the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2193">Tworzy, <see cref="T:System.Linq.Expressions.BinaryExpression" />na podstawie lewego operandu, prawy operand i metodę implementującą, wywołując odpowiednią metodę fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2193">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left operand, right operand and implementing method, by calling the appropriate factory method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2194"><see cref="T:System.Linq.Expressions.BinaryExpression" /> Wynika to z wywołania odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2194">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2195">Parametr określa metodę fabryki <xref:System.Linq.Expressions.BinaryExpression> , która będzie wywoływana przez tę metodę. `binaryType`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2195">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method will call.</span></span> <span data-ttu-id="eb4ed-2196">Na przykład, jeśli `binaryType` jest <xref:System.Linq.Expressions.ExpressionType.Subtract>, ta metoda wywołuje <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2196">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span> <span data-ttu-id="eb4ed-2197">Parametry `liftToNull` i`method` są ignorowane, Jeśli odpowiednia metoda fabryki nie ma odpowiadającego mu parametru.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2197">The `liftToNull` and `method` parameters are ignored if the appropriate factory method does not have a corresponding parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2198"><paramref name="binaryType" />nie odpowiada węzłowi wyrażenia binarnego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2198"><paramref name="binaryType" /> does not correspond to a binary expression node.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2199"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2199"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeBinary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MakeBinary(valuetype System.Linq.Expressions.ExpressionType binaryType, class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeBinary (binaryType As ExpressionType, left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member MakeBinary : System.Linq.Expressions.ExpressionType * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * bool * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MakeBinary (binaryType, left, right, liftToNull, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" />
      </Parameters>
      <Docs>
        <param name="binaryType"><span data-ttu-id="eb4ed-2200"><see cref="T:System.Linq.Expressions.ExpressionType" /> Określa typ operacji binarnej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2200">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of binary operation.</span></span></param>
        <param name="left"><span data-ttu-id="eb4ed-2201"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje lewy operand.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2201">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the left operand.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2202"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje prawy operand.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2202">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the right operand.</span></span></param>
        <param name="liftToNull"><span data-ttu-id="eb4ed-2203"><see langword="true" />Aby ustawić <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> na <see langword="true" />; , aby <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> ustawić wartość .<see langword="false" /> <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2203"><see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2204">A <see cref="T:System.Reflection.MethodInfo" /> , która określa metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2204">A <see cref="T:System.Reflection.MethodInfo" /> that specifies the implementing method.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-2205"><see cref="T:System.Linq.Expressions.LambdaExpression" /> Reprezentujący funkcję konwersji typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2205">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> that represents a type conversion function.</span></span> <span data-ttu-id="eb4ed-2206">Ten parametr jest używany tylko w <paramref name="binaryType" /> przypadku <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> przypisania złożonego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2206">This parameter is used only if <paramref name="binaryType" /> is <see cref="F:System.Linq.Expressions.ExpressionType.Coalesce" /> or compound assignment.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2207">Tworzy, <see cref="T:System.Linq.Expressions.BinaryExpression" />na podstawie lewego operandu, prawego operandu, implementując metodę i funkcję konwersji typu, wywołując odpowiednią metodę fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2207">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" />, given the left operand, right operand, implementing method and type conversion function, by calling the appropriate factory method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2208"><see cref="T:System.Linq.Expressions.BinaryExpression" /> Wynika to z wywołania odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2208">The <see cref="T:System.Linq.Expressions.BinaryExpression" /> that results from calling the appropriate factory method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2209">Parametr określa metodę fabryki <xref:System.Linq.Expressions.BinaryExpression> , która będzie wywoływana przez tę metodę. `binaryType`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2209">The `binaryType` parameter determines which <xref:System.Linq.Expressions.BinaryExpression> factory method this method will call.</span></span> <span data-ttu-id="eb4ed-2210">Na przykład, jeśli `binaryType` jest <xref:System.Linq.Expressions.ExpressionType.Subtract>, ta metoda wywołuje <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2210">For example, if `binaryType` is <xref:System.Linq.Expressions.ExpressionType.Subtract>, this method invokes <xref:System.Linq.Expressions.Expression.Subtract%2A>.</span></span> <span data-ttu-id="eb4ed-2211">Parametry i `method` `liftToNull` są`conversion` ignorowane, Jeśli odpowiednia metoda fabryki nie ma odpowiadającego mu parametru.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2211">The `liftToNull`, `method` and `conversion` parameters are ignored if the appropriate factory method does not have a corresponding parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2212"><paramref name="binaryType" />nie odpowiada węzłowi wyrażenia binarnego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2212"><paramref name="binaryType" /> does not correspond to a binary expression node.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2213"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2213"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeCatchBlock">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.CatchBlock MakeCatchBlock (Type type, System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.CatchBlock MakeCatchBlock(class System.Type type, class System.Linq.Expressions.ParameterExpression variable, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::CatchBlock ^ MakeCatchBlock(Type ^ type, System::Linq::Expressions::ParameterExpression ^ variable, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ filter);" />
      <MemberSignature Language="F#" Value="static member MakeCatchBlock : Type * System.Linq.Expressions.ParameterExpression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.CatchBlock" Usage="System.Linq.Expressions.Expression.MakeCatchBlock (type, variable, body, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.CatchBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="variable" Type="System.Linq.Expressions.ParameterExpression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="filter" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-2214">Ta wartość zostanie<see cref="P:System.Linq.Expressions.Expression.Type" />obsłużyć. <see cref="T:System.Exception" /> <see cref="T:System.Linq.Expressions.CatchBlock" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2214">The <see cref="P:System.Linq.Expressions.Expression.Type" /> of <see cref="T:System.Exception" /> this <see cref="T:System.Linq.Expressions.CatchBlock" /> will handle.</span></span></param>
        <param name="variable"><span data-ttu-id="eb4ed-2215"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Reprezentuje odwołanie<see cref="T:System.Exception" /> do obiektu przechwytywanego przez ten program obsługi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2215">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> representing a reference to the <see cref="T:System.Exception" /> object caught by this handler.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-2216">Treść instrukcji catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2216">The body of the catch statement.</span></span></param>
        <param name="filter"><span data-ttu-id="eb4ed-2217">Treść <see cref="T:System.Exception" /> filtru.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2217">The body of the <see cref="T:System.Exception" /> filter.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2218">Tworzy element <see cref="T:System.Linq.Expressions.CatchBlock" /> reprezentujący instrukcję catch z określonymi elementami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2218">Creates a <see cref="T:System.Linq.Expressions.CatchBlock" /> representing a catch statement with the specified elements.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2219">Utworzony <see cref="T:System.Linq.Expressions.CatchBlock" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2219">The created <see cref="T:System.Linq.Expressions.CatchBlock" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2220">`type`musi mieć wartość różną od null i być zgodne z `variable` typem elementu (jeśli jest dostarczany).</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2220">`type` must be non-null and match the type of `variable` (if it is supplied).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeDynamic">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2221">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2221">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arguments As IEnumerable(Of Expression)) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member MakeDynamic : Type * System.Runtime.CompilerServices.CallSiteBinder * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.MakeDynamic (delegateType, binder, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-2222">Typ delegata używany przez <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2222">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span></span></param>
        <param name="binder"><span data-ttu-id="eb4ed-2223">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2223">The runtime binder for the dynamic operation.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-2224">Argumenty operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2224">The arguments to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2225">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2225">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2226"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A,któryma<see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />równe i ma wartość, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />i <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma ustawioną określoną wartość. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2226">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0);" />
      <MemberSignature Language="F#" Value="static member MakeDynamic : Type * System.Runtime.CompilerServices.CallSiteBinder * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.MakeDynamic (delegateType, binder, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-2227">Typ delegata używany przez <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2227">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span></span></param>
        <param name="binder"><span data-ttu-id="eb4ed-2228">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2228">The runtime binder for the dynamic operation.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-2229">Argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2229">The argument to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2230">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podany <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> i jeden argument.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2230">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and one argument.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2231"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A,któryma<see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />równe i ma wartość, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />i <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma ustawioną określoną wartość. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2231">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, ParamArray arguments As Expression()) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member MakeDynamic : Type * System.Runtime.CompilerServices.CallSiteBinder * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.MakeDynamic (delegateType, binder, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-2232">Typ delegata używany przez <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2232">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span></span></param>
        <param name="binder"><span data-ttu-id="eb4ed-2233">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2233">The runtime binder for the dynamic operation.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-2234">Argumenty operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2234">The arguments to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2235">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2235">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2236"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A,któryma<see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />równe i ma wartość, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />i <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma ustawioną określoną wartość. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2236">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1);" />
      <MemberSignature Language="F#" Value="static member MakeDynamic : Type * System.Runtime.CompilerServices.CallSiteBinder * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.MakeDynamic (delegateType, binder, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-2237">Typ delegata używany przez <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2237">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span></span></param>
        <param name="binder"><span data-ttu-id="eb4ed-2238">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2238">The runtime binder for the dynamic operation.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-2239">Pierwszy argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2239">The first argument to the dynamic operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-2240">Drugi argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2240">The second argument to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2241">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez podane <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> i dwa argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2241">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and two arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2242"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A,któryma<see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />równe i ma wartość, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />i <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma ustawioną określoną wartość. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2242">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression, arg2 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2);" />
      <MemberSignature Language="F#" Value="static member MakeDynamic : Type * System.Runtime.CompilerServices.CallSiteBinder * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.MakeDynamic (delegateType, binder, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-2243">Typ delegata używany przez <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2243">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span></span></param>
        <param name="binder"><span data-ttu-id="eb4ed-2244">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2244">The runtime binder for the dynamic operation.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-2245">Pierwszy argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2245">The first argument to the dynamic operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-2246">Drugi argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2246">The second argument to the dynamic operation.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-2247">Trzeci argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2247">The third argument to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2248">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez dostarczone <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> i trzy argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2248">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and three arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2249"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A,któryma<see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />równe i ma wartość, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />i <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma ustawioną określoną wartość. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2249">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeDynamic">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.DynamicExpression MakeDynamic(class System.Type delegateType, class System.Runtime.CompilerServices.CallSiteBinder binder, class System.Linq.Expressions.Expression arg0, class System.Linq.Expressions.Expression arg1, class System.Linq.Expressions.Expression arg2, class System.Linq.Expressions.Expression arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeDynamic (delegateType As Type, binder As CallSiteBinder, arg0 As Expression, arg1 As Expression, arg2 As Expression, arg3 As Expression) As DynamicExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::DynamicExpression ^ MakeDynamic(Type ^ delegateType, System::Runtime::CompilerServices::CallSiteBinder ^ binder, System::Linq::Expressions::Expression ^ arg0, System::Linq::Expressions::Expression ^ arg1, System::Linq::Expressions::Expression ^ arg2, System::Linq::Expressions::Expression ^ arg3);" />
      <MemberSignature Language="F#" Value="static member MakeDynamic : Type * System.Runtime.CompilerServices.CallSiteBinder * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.DynamicExpression" Usage="System.Linq.Expressions.Expression.MakeDynamic (delegateType, binder, arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.DynamicExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Runtime.CompilerServices.CallSiteBinder" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg0" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg1" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg2" Type="System.Linq.Expressions.Expression" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arg3" Type="System.Linq.Expressions.Expression" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="delegateType"><span data-ttu-id="eb4ed-2250">Typ delegata używany przez <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2250">The type of the delegate used by the <see cref="T:System.Runtime.CompilerServices.CallSite" />.</span></span></param>
        <param name="binder"><span data-ttu-id="eb4ed-2251">Spinacz środowiska uruchomieniowego dla operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2251">The runtime binder for the dynamic operation.</span></span></param>
        <param name="arg0"><span data-ttu-id="eb4ed-2252">Pierwszy argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2252">The first argument to the dynamic operation.</span></span></param>
        <param name="arg1"><span data-ttu-id="eb4ed-2253">Drugi argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2253">The second argument to the dynamic operation.</span></span></param>
        <param name="arg2"><span data-ttu-id="eb4ed-2254">Trzeci argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2254">The third argument to the dynamic operation.</span></span></param>
        <param name="arg3"><span data-ttu-id="eb4ed-2255">Czwarty argument operacji dynamicznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2255">The fourth argument to the dynamic operation.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2256">Tworzy element <see cref="T:System.Linq.Expressions.DynamicExpression" /> reprezentujący operację dynamiczną powiązaną przez dostarczone <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> i cztery argumenty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2256">Creates a <see cref="T:System.Linq.Expressions.DynamicExpression" /> that represents a dynamic operation bound by the provided <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> and four arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2257"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> A,któryma<see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />równe i ma wartość, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />i <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> ma ustawioną określoną wartość. <see cref="T:System.Linq.Expressions.DynamicExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2257">A <see cref="T:System.Linq.Expressions.DynamicExpression" /> that has <see cref="P:System.Linq.Expressions.Expression.NodeType" /> equal to <see cref="F:System.Linq.Expressions.ExpressionType.Dynamic" /> and has the <see cref="P:System.Linq.Expressions.DynamicExpression.DelegateType" />, <see cref="P:System.Linq.Expressions.DynamicExpression.Binder" />, and <see cref="P:System.Linq.Expressions.DynamicExpression.Arguments" /> set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeGoto">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression MakeGoto (System.Linq.Expressions.GotoExpressionKind kind, System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression MakeGoto(valuetype System.Linq.Expressions.GotoExpressionKind kind, class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ MakeGoto(System::Linq::Expressions::GotoExpressionKind kind, System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member MakeGoto : System.Linq.Expressions.GotoExpressionKind * System.Linq.Expressions.LabelTarget * System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.MakeGoto (kind, target, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Linq.Expressions.GotoExpressionKind" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="kind"><span data-ttu-id="eb4ed-2258"><see cref="T:System.Linq.Expressions.GotoExpressionKind" /> z <see cref="T:System.Linq.Expressions.GotoExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2258">The <see cref="T:System.Linq.Expressions.GotoExpressionKind" /> of the <see cref="T:System.Linq.Expressions.GotoExpression" />.</span></span></param>
        <param name="target"><span data-ttu-id="eb4ed-2259"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2259">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="value"><span data-ttu-id="eb4ed-2260">Wartość, która zostanie przeniesiona do skojarzonej etykiety po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2260">The value that will be passed to the associated label upon jumping.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-2261"><see cref="T:System.Type" /> Aby<see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2261">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2262">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący skok określonego <see cref="T:System.Linq.Expressions.GotoExpressionKind" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2262">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a jump of the specified <see cref="T:System.Linq.Expressions.GotoExpressionKind" />.</span></span> <span data-ttu-id="eb4ed-2263">Można również określić wartość przekazaną do etykiety przy przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2263">The value passed to the label upon jumping can also be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2264"><see cref="T:System.Linq.Expressions.GotoExpression" /> A<paramref name="kind" />równa, Właściwośćustawiona<paramref name="target" />na, Właściwośćustawiona<paramref name="type" />na i<paramref name="value" /> do przesłania do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.Expression.Type" /> <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2264">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to <paramref name="kind" />, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeIndex">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression MakeIndex (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression MakeIndex(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeIndex (instance As Expression, indexer As PropertyInfo, arguments As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ MakeIndex(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member MakeIndex : System.Linq.Expressions.Expression * System.Reflection.PropertyInfo * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.IndexExpression" Usage="System.Linq.Expressions.Expression.MakeIndex (instance, indexer, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-2265">Obiekt, do którego należy właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2265">The object to which the property belongs.</span></span> <span data-ttu-id="eb4ed-2266">Jeśli właściwość jest <see langword="static" /> (<see langword="shared" /> w Visual Basic) powinna mieć wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2266">It should be null if the property is <see langword="static" /> (<see langword="shared" /> in Visual Basic).</span></span></param>
        <param name="indexer"><span data-ttu-id="eb4ed-2267"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje właściwość do indeksowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2267">An <see cref="T:System.Linq.Expressions.Expression" /> representing the property to index.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-2268"><c>&lt;Wyrażenie"&gt; IEnumerable</c> " (<c>wyrażenie)</c> w Visual Basic), które zawiera argumenty, które zostaną użyte do indeksowania właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2268">An <c>IEnumerable&lt;Expression&gt;</c> (<c>IEnumerable (Of Expression)</c> in Visual Basic) that contains the arguments that will be used to index the property.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2269">Tworzy element <see cref="T:System.Linq.Expressions.IndexExpression" /> reprezentujący dostęp do indeksowanej właściwości w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2269">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> that represents accessing an indexed property in an object.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2270">Utworzony <see cref="T:System.Linq.Expressions.IndexExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2270">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeMemberAccess">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression MakeMemberAccess (System.Linq.Expressions.Expression expression, System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression MakeMemberAccess(class System.Linq.Expressions.Expression expression, class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ MakeMemberAccess(System::Linq::Expressions::Expression ^ expression, System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="static member MakeMemberAccess : System.Linq.Expressions.Expression * System.Reflection.MemberInfo -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.MakeMemberAccess (expression, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2271"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje obiekt, do którego należy element członkowski.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2271">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the object that the member belongs to.</span></span> <span data-ttu-id="eb4ed-2272">Może to mieć wartość null w przypadku statycznych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2272">This can be null for static members.</span></span></param>
        <param name="member"><span data-ttu-id="eb4ed-2273"><see cref="T:System.Reflection.MemberInfo" /> Zawiera opis pola lub właściwości, które mają być dostępne.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2273">The <see cref="T:System.Reflection.MemberInfo" /> that describes the field or property to be accessed.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2274">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2274">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing either a field or a property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2275"><see cref="T:System.Linq.Expressions.MemberExpression" /> Wynika to z wywołania odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2275">The <see cref="T:System.Linq.Expressions.MemberExpression" /> that results from calling the appropriate factory method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2276">Tej metody można użyć do utworzenia <xref:System.Linq.Expressions.MemberExpression> , która reprezentuje dostęp do pola lub właściwości, w zależności od `member`typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2276">This method can be used to create a <xref:System.Linq.Expressions.MemberExpression> that represents accessing either a field or a property, depending on the type of `member`.</span></span> <span data-ttu-id="eb4ed-2277">Jeśli `member` jest typu <xref:System.Reflection.FieldInfo>, <xref:System.Linq.Expressions.Expression.Field%2A> Ta<xref:System.Linq.Expressions.MemberExpression>metoda wywołuje, aby utworzyć.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2277">If `member` is of type <xref:System.Reflection.FieldInfo>, this method calls <xref:System.Linq.Expressions.Expression.Field%2A> to create the <xref:System.Linq.Expressions.MemberExpression>.</span></span> <span data-ttu-id="eb4ed-2278">Jeśli `member` jest typu <xref:System.Reflection.PropertyInfo>, <xref:System.Linq.Expressions.Expression.Property%2A> Ta<xref:System.Linq.Expressions.MemberExpression>metoda wywołuje, aby utworzyć.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2278">If `member` is of type <xref:System.Reflection.PropertyInfo>, this method calls <xref:System.Linq.Expressions.Expression.Property%2A> to create the <xref:System.Linq.Expressions.MemberExpression>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2279"><paramref name="member" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2279"><paramref name="member" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2280"><paramref name="member" />nie reprezentuje pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2280"><paramref name="member" /> does not represent a field or property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTry">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression MakeTry (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, System.Linq.Expressions.Expression fault, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt; handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression MakeTry(class System.Type type, class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally, class System.Linq.Expressions.Expression fault, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.CatchBlock&gt; handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ MakeTry(Type ^ type, System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally, System::Linq::Expressions::Expression ^ fault, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberSignature Language="F#" Value="static member MakeTry : Type * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.CatchBlock&gt; -&gt; System.Linq.Expressions.TryExpression" Usage="System.Linq.Expressions.Expression.MakeTry (type, body, finally, fault, handlers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="handlers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.CatchBlock&gt;" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-2281">Typ wyniku wyrażenia try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2281">The result type of the try expression.</span></span> <span data-ttu-id="eb4ed-2282">Jeśli wartość jest równa null, treść i wszystkie programy obsługi muszą mieć identyczny typ.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2282">If null, body and all handlers must have identical type.</span></span></param>
        <param name="body"><span data-ttu-id="eb4ed-2283">Treść bloku try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2283">The body of the try block.</span></span></param>
        <param name="finally"><span data-ttu-id="eb4ed-2284">Treść bloku finally.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2284">The body of the finally block.</span></span> <span data-ttu-id="eb4ed-2285">Przekaż wartość null, jeśli blok try nie ma skojarzonego bloku finally.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2285">Pass null if the try block has no finally block associated with it.</span></span></param>
        <param name="fault"><span data-ttu-id="eb4ed-2286">Treść bloku błędu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2286">The body of the fault block.</span></span> <span data-ttu-id="eb4ed-2287">Przekaż wartość null, jeśli blok try nie ma skojarzonego z nim bloku błędu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2287">Pass null if the try block has no fault block associated with it.</span></span></param>
        <param name="handlers"><span data-ttu-id="eb4ed-2288">Kolekcja <see cref="T:System.Linq.Expressions.CatchBlock" />s reprezentująca instrukcje catch, które mają być skojarzone z blokiem try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2288">A collection of <see cref="T:System.Linq.Expressions.CatchBlock" />s representing the catch statements to be associated with the try block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2289">Tworzy element <see cref="T:System.Linq.Expressions.TryExpression" /> reprezentujący blok try z określonymi elementami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2289">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with the specified elements.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2290">Utworzony <see cref="T:System.Linq.Expressions.TryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2290">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeUnary">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2291"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy przez wywołanie odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2291">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> by calling the appropriate factory method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeUnary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression MakeUnary(valuetype System.Linq.Expressions.ExpressionType unaryType, class System.Linq.Expressions.Expression operand, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ MakeUnary(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression ^ operand, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member MakeUnary : System.Linq.Expressions.ExpressionType * System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.MakeUnary (unaryType, operand, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="unaryType"><span data-ttu-id="eb4ed-2292"><see cref="T:System.Linq.Expressions.ExpressionType" /> Określa typ operacji jednoargumentowej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2292">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of unary operation.</span></span></param>
        <param name="operand"><span data-ttu-id="eb4ed-2293"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje operand.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2293">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the operand.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-2294">Określa typ do przekonwertowania na <see langword="null" /> (jeśli nie dotyczy). <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2294">The <see cref="T:System.Type" /> that specifies the type to be converted to (pass <see langword="null" /> if not applicable).</span></span></param>
        <summary><span data-ttu-id="eb4ed-2295">Tworzy, <see cref="T:System.Linq.Expressions.UnaryExpression" />na podstawie operandu, wywołanie odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2295">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" />, given an operand, by calling the appropriate factory method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2296"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Wynika to z wywołania odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2296">The <see cref="T:System.Linq.Expressions.UnaryExpression" /> that results from calling the appropriate factory method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2297">Parametr określa metodę fabryki <xref:System.Linq.Expressions.UnaryExpression> wywoływaną przez tę metodę. `unaryType`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2297">The `unaryType` parameter determines which <xref:System.Linq.Expressions.UnaryExpression> factory method this method calls.</span></span> <span data-ttu-id="eb4ed-2298">Na przykład, jeśli `unaryType` jest <xref:System.Linq.Expressions.ExpressionType.Convert>równe, ta metoda wywołuje <xref:System.Linq.Expressions.Expression.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2298">For example, if `unaryType` is equal to <xref:System.Linq.Expressions.ExpressionType.Convert>, this method invokes <xref:System.Linq.Expressions.Expression.Convert%2A>.</span></span> <span data-ttu-id="eb4ed-2299">`type`Parametr jest ignorowany, jeśli nie ma zastosowania do metody fabryki, która jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2299">The `type`parameter is ignored if it does not apply to the factory method that is called.</span></span>  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2300"><paramref name="operand" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2300"><paramref name="operand" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2301"><paramref name="unaryType" />nie odpowiada jednoargumentowym węzłem wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2301"><paramref name="unaryType" /> does not correspond to a unary expression node.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MakeUnary">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression MakeUnary(valuetype System.Linq.Expressions.ExpressionType unaryType, class System.Linq.Expressions.Expression operand, class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ MakeUnary(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression ^ operand, Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member MakeUnary : System.Linq.Expressions.ExpressionType * System.Linq.Expressions.Expression * Type * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.MakeUnary (unaryType, operand, type, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unaryType" Type="System.Linq.Expressions.ExpressionType" />
        <Parameter Name="operand" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="unaryType"><span data-ttu-id="eb4ed-2302"><see cref="T:System.Linq.Expressions.ExpressionType" /> Określa typ operacji jednoargumentowej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2302">The <see cref="T:System.Linq.Expressions.ExpressionType" /> that specifies the type of unary operation.</span></span></param>
        <param name="operand"><span data-ttu-id="eb4ed-2303"><see cref="T:System.Linq.Expressions.Expression" /> Reprezentuje operand.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2303">An <see cref="T:System.Linq.Expressions.Expression" /> that represents the operand.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-2304">Określa typ do przekonwertowania na <see langword="null" /> (jeśli nie dotyczy). <see cref="T:System.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2304">The <see cref="T:System.Type" /> that specifies the type to be converted to (pass <see langword="null" /> if not applicable).</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2305"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2305">The <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2306">Tworzy obiekt <see cref="T:System.Linq.Expressions.UnaryExpression" />, na podstawie operandu i metody implementującej, wywołując odpowiednią metodę fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2306">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" />, given an operand and implementing method, by calling the appropriate factory method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2307"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Wynika to z wywołania odpowiedniej metody fabryki.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2307">The <see cref="T:System.Linq.Expressions.UnaryExpression" /> that results from calling the appropriate factory method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2308">Parametr określa metodę fabryki <xref:System.Linq.Expressions.UnaryExpression> wywoływaną przez tę metodę. `unaryType`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2308">The `unaryType` parameter determines which <xref:System.Linq.Expressions.UnaryExpression> factory method this method calls.</span></span> <span data-ttu-id="eb4ed-2309">Na przykład, jeśli `unaryType` jest <xref:System.Linq.Expressions.ExpressionType.Convert>równe, ta metoda wywołuje <xref:System.Linq.Expressions.Expression.Convert%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2309">For example, if `unaryType` is equal to <xref:System.Linq.Expressions.ExpressionType.Convert>, this method invokes <xref:System.Linq.Expressions.Expression.Convert%2A>.</span></span> <span data-ttu-id="eb4ed-2310">Parametry `type` i`method` są ignorowane, jeśli nie mają zastosowania do metody fabryki, która jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2310">The `type` and `method` parameters are ignored if they do not apply to the factory method that is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2311"><paramref name="operand" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2311"><paramref name="operand" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2312"><paramref name="unaryType" />nie odpowiada jednoargumentowym węzłem wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2312"><paramref name="unaryType" /> does not correspond to a unary expression node.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberBind">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2313">Tworzy element <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> reprezentujący cykliczne Inicjowanie elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2313">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (member As MemberInfo, bindings As IEnumerable(Of MemberBinding)) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberSignature Language="F#" Value="static member MemberBind : System.Reflection.MemberInfo * seq&lt;System.Linq.Expressions.MemberBinding&gt; -&gt; System.Linq.Expressions.MemberMemberBinding" Usage="System.Linq.Expressions.Expression.MemberBind (member, bindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="eb4ed-2314"><see cref="T:System.Reflection.MemberInfo" /> Aby<see cref="P:System.Linq.Expressions.MemberBinding.Member" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2314">The <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span></span></param>
        <param name="bindings"><span data-ttu-id="eb4ed-2315">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.MemberBinding" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2315">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2316">Tworzy element <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> reprezentujący cykliczne Inicjowanie elementów członkowskich pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2316">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a field or property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2317"><see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> A, który <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> ma<see cref="P:System.Linq.Expressions.MemberBinding.Member" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberMemberBinding" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2317">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2318">`member` Parametr musi reprezentować pole lub właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2318">The `member` parameter must represent a field or property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2319"><paramref name="member" />lub <paramref name="bindings" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2319"><paramref name="member" /> or <paramref name="bindings" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2320"><paramref name="member" />nie reprezentuje pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2320"><paramref name="member" /> does not represent a field or property.</span></span>  
  
<span data-ttu-id="eb4ed-2321">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2321">-or-</span></span> 
<span data-ttu-id="eb4ed-2322">Właściwość elementu nie reprezentuje składowej typu pola lub właściwości <paramref name="member" /> reprezentowanej przez. <paramref name="bindings" /> <see cref="P:System.Linq.Expressions.MemberBinding.Member" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2322">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the field or property that <paramref name="member" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MemberInfo member, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (member As MemberInfo, ParamArray bindings As MemberBinding()) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MemberInfo ^ member, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberSignature Language="F#" Value="static member MemberBind : System.Reflection.MemberInfo * System.Linq.Expressions.MemberBinding[] -&gt; System.Linq.Expressions.MemberMemberBinding" Usage="System.Linq.Expressions.Expression.MemberBind (member, bindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="eb4ed-2323"><see cref="T:System.Reflection.MemberInfo" /> Aby<see cref="P:System.Linq.Expressions.MemberBinding.Member" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2323">The <see cref="T:System.Reflection.MemberInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property equal to.</span></span></param>
        <param name="bindings"><span data-ttu-id="eb4ed-2324">Tablica <see cref="T:System.Linq.Expressions.MemberBinding" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2324">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2325">Tworzy element <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> reprezentujący cykliczne Inicjowanie elementów członkowskich pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2325">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a field or property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2326"><see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> A, który <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> ma<see cref="P:System.Linq.Expressions.MemberBinding.Member" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberMemberBinding" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2326">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" /> and the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2327">`member` Parametr musi reprezentować pole lub właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2327">The `member` parameter must represent a field or property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2328"><paramref name="member" />lub <paramref name="bindings" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2328"><paramref name="member" /> or <paramref name="bindings" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2329"><paramref name="member" />nie reprezentuje pola lub właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2329"><paramref name="member" /> does not represent a field or property.</span></span>  
  
<span data-ttu-id="eb4ed-2330">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2330">-or-</span></span> 
<span data-ttu-id="eb4ed-2331">Właściwość elementu nie reprezentuje składowej typu pola lub właściwości <paramref name="member" /> reprezentowanej przez. <paramref name="bindings" /> <see cref="P:System.Linq.Expressions.MemberBinding.Member" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2331">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the field or property that <paramref name="member" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MethodInfo propertyAccessor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (propertyAccessor As MethodInfo, bindings As IEnumerable(Of MemberBinding)) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MethodInfo ^ propertyAccessor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberSignature Language="F#" Value="static member MemberBind : System.Reflection.MethodInfo * seq&lt;System.Linq.Expressions.MemberBinding&gt; -&gt; System.Linq.Expressions.MemberMemberBinding" Usage="System.Linq.Expressions.Expression.MemberBind (propertyAccessor, bindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyAccessor"><span data-ttu-id="eb4ed-2332"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2332">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span></span></param>
        <param name="bindings"><span data-ttu-id="eb4ed-2333">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.MemberBinding" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2333">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2334">Tworzy element <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> reprezentujący cykliczne Inicjowanie elementów członkowskich, do których uzyskuje się dostęp przy użyciu metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2334">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member that is accessed by using a property accessor method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2335">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> , który <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> ma <see cref="T:System.Reflection.PropertyInfo" /> <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> <paramref name="propertyAccessor" />Właściwość równą <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, właściwość ustawiona na, która reprezentuje właściwość, do której uzyskano dostęp w, i właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.MemberBinding.Member" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2335">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2336"><paramref name="propertyAccessor" />lub <paramref name="bindings" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2336"><paramref name="propertyAccessor" /> or <paramref name="bindings" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2337"><paramref name="propertyAccessor" />nie reprezentuje metody akcesora właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2337"><paramref name="propertyAccessor" /> does not represent a property accessor method.</span></span>  
  
<span data-ttu-id="eb4ed-2338">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2338">-or-</span></span> 
<span data-ttu-id="eb4ed-2339">Właściwość elementu nie reprezentuje elementu członkowskiego typu właściwości, do którego uzyskuje dostęp Metoda, która <paramref name="propertyAccessor" /> reprezentuje. <paramref name="bindings" /> <see cref="P:System.Linq.Expressions.MemberBinding.Member" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2339">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the property accessed by the method that <paramref name="propertyAccessor" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MemberBind">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberMemberBinding MemberBind(class System.Reflection.MethodInfo propertyAccessor, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MemberBind (propertyAccessor As MethodInfo, ParamArray bindings As MemberBinding()) As MemberMemberBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberMemberBinding ^ MemberBind(System::Reflection::MethodInfo ^ propertyAccessor, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberSignature Language="F#" Value="static member MemberBind : System.Reflection.MethodInfo * System.Linq.Expressions.MemberBinding[] -&gt; System.Linq.Expressions.MemberMemberBinding" Usage="System.Linq.Expressions.Expression.MemberBind (propertyAccessor, bindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberMemberBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyAccessor"><span data-ttu-id="eb4ed-2340"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2340">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span></span></param>
        <param name="bindings"><span data-ttu-id="eb4ed-2341">Tablica <see cref="T:System.Linq.Expressions.MemberBinding" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2341">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2342">Tworzy element <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> reprezentujący cykliczne Inicjowanie elementów członkowskich, do których uzyskuje się dostęp przy użyciu metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2342">Creates a <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that represents the recursive initialization of members of a member that is accessed by using a property accessor method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2343">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> , który <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> ma <see cref="T:System.Reflection.PropertyInfo" /> <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> <paramref name="propertyAccessor" />Właściwość równą <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, właściwość ustawiona na, która reprezentuje właściwość, do której uzyskano dostęp w, i właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.MemberBinding.Member" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2343">A <see cref="T:System.Linq.Expressions.MemberMemberBinding" /> that has the <see cref="P:System.Linq.Expressions.MemberBinding.BindingType" /> property equal to <see cref="F:System.Linq.Expressions.MemberBindingType.MemberBinding" />, the <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />, and <see cref="P:System.Linq.Expressions.MemberMemberBinding.Bindings" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2344"><paramref name="propertyAccessor" />lub <paramref name="bindings" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2344"><paramref name="propertyAccessor" /> or <paramref name="bindings" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2345"><paramref name="propertyAccessor" />nie reprezentuje metody akcesora właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2345"><paramref name="propertyAccessor" /> does not represent a property accessor method.</span></span>  
  
<span data-ttu-id="eb4ed-2346">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2346">-or-</span></span> 
<span data-ttu-id="eb4ed-2347">Właściwość elementu nie reprezentuje elementu członkowskiego typu właściwości, do którego uzyskuje dostęp Metoda, która <paramref name="propertyAccessor" /> reprezentuje. <paramref name="bindings" /> <see cref="P:System.Linq.Expressions.MemberBinding.Member" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2347">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type of the property accessed by the method that <paramref name="propertyAccessor" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemberInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2348">Reprezentuje wyrażenie, które tworzy nowy obiekt i inicjuje właściwość obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2348">Represents an expression that creates a new object and initializes a property of the object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemberInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt; bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberInitExpression MemberInit(class System.Linq.Expressions.NewExpression newExpression, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.MemberBinding&gt; bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberInitExpression ^ MemberInit(System::Linq::Expressions::NewExpression ^ newExpression, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberSignature Language="F#" Value="static member MemberInit : System.Linq.Expressions.NewExpression * seq&lt;System.Linq.Expressions.MemberBinding&gt; -&gt; System.Linq.Expressions.MemberInitExpression" Usage="System.Linq.Expressions.Expression.MemberInit (newExpression, bindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="bindings" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.MemberBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="newExpression"><span data-ttu-id="eb4ed-2349">A <see cref="T:System.Linq.Expressions.NewExpression" /> , aby <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2349">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> property equal to.</span></span></param>
        <param name="bindings"><span data-ttu-id="eb4ed-2350">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.MemberBinding" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2350">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2351">Reprezentuje wyrażenie, które tworzy nowy obiekt i inicjuje właściwość obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2351">Represents an expression that creates a new object and initializes a property of the object.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2352"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> A, który <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> ma<see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberInitExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2352">A <see cref="T:System.Linq.Expressions.MemberInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> and the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2353">Właściwość będąca wynikiem <xref:System.Linq.Expressions.MemberInitExpression> <xref:System.Linq.Expressions.Expression.Type%2A> jest`newExpression`równawłaściwości. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2353">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberInitExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2354">Poniższy przykład ilustruje wyrażenie, które tworzy nowy obiekt i inicjuje właściwość obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2354">The following example demonstrates an expression that creates a new object and initializes a property of the object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#40](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#40)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2355"><paramref name="newExpression" />lub <paramref name="bindings" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2355"><paramref name="newExpression" /> or <paramref name="bindings" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2356">Właściwość elementu nie reprezentuje składowej typu, który <paramref name="newExpression" />. <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> <paramref name="bindings" /> Typ reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2356">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type that <paramref name="newExpression" />.Type represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MemberInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, params System.Linq.Expressions.MemberBinding[] bindings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberInitExpression MemberInit(class System.Linq.Expressions.NewExpression newExpression, class System.Linq.Expressions.MemberBinding[] bindings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberInitExpression ^ MemberInit(System::Linq::Expressions::NewExpression ^ newExpression, ... cli::array &lt;System::Linq::Expressions::MemberBinding ^&gt; ^ bindings);" />
      <MemberSignature Language="F#" Value="static member MemberInit : System.Linq.Expressions.NewExpression * System.Linq.Expressions.MemberBinding[] -&gt; System.Linq.Expressions.MemberInitExpression" Usage="System.Linq.Expressions.Expression.MemberInit (newExpression, bindings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberInitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="System.Linq.Expressions.NewExpression" />
        <Parameter Name="bindings" Type="System.Linq.Expressions.MemberBinding[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="newExpression"><span data-ttu-id="eb4ed-2357">A <see cref="T:System.Linq.Expressions.NewExpression" /> , aby <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2357">A <see cref="T:System.Linq.Expressions.NewExpression" /> to set the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> property equal to.</span></span></param>
        <param name="bindings"><span data-ttu-id="eb4ed-2358">Tablica <see cref="T:System.Linq.Expressions.MemberBinding" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2358">An array of <see cref="T:System.Linq.Expressions.MemberBinding" /> objects to use to populate the <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2359"><see cref="T:System.Linq.Expressions.MemberInitExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2359">Creates a <see cref="T:System.Linq.Expressions.MemberInitExpression" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2360"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> A, który <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> ma<see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberInitExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2360">A <see cref="T:System.Linq.Expressions.MemberInitExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberInit" /> and the <see cref="P:System.Linq.Expressions.MemberInitExpression.NewExpression" /> and <see cref="P:System.Linq.Expressions.MemberInitExpression.Bindings" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2361">Właściwość będąca wynikiem <xref:System.Linq.Expressions.MemberInitExpression> <xref:System.Linq.Expressions.Expression.Type%2A> jest`newExpression`równawłaściwości. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2361">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberInitExpression> is equal to the <xref:System.Linq.Expressions.Expression.Type%2A> property of `newExpression`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2362">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.MemberInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.MemberBinding%5B%5D%29> metody w celu <xref:System.Linq.Expressions.MemberInitExpression> utworzenia, która reprezentuje inicjalizację dwóch elementów członkowskich nowego obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2362">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.MemberInit%28System.Linq.Expressions.NewExpression%2CSystem.Linq.Expressions.MemberBinding%5B%5D%29> method to create a <xref:System.Linq.Expressions.MemberInitExpression> that represents the initialization of two members of a new object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#9)]
 [!code-vb[System.Linq.Expressions.Expression#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2363"><paramref name="newExpression" />lub <paramref name="bindings" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2363"><paramref name="newExpression" /> or <paramref name="bindings" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2364">Właściwość elementu nie reprezentuje składowej typu, który <paramref name="newExpression" />. <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> <paramref name="bindings" /> Typ reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2364">The <see cref="P:System.Linq.Expressions.MemberBinding.Member" /> property of an element of <paramref name="bindings" /> does not represent a member of the type that <paramref name="newExpression" />.Type represents.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Modulo">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2365">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący liczbę operacji pozostałej arytmetycznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2365">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Modulo(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Modulo (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Modulo(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Modulo : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Modulo (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2366"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2366">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2367"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2367">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2368">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący liczbę operacji pozostałej arytmetycznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2368">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2369"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2369">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2370">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2370">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2371"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2371">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2372">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2372">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2373">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2373">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-2374"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2374">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2375">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2375">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2376">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2376">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2377">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2377">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2378"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub reprezentuje`right` Typzdefiniowanyprzezużytkownika,któryprzeciążaoperatormodulo,tooznacza,żemetodajest<xref:System.Reflection.MethodInfo> metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2378">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the modulus operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2379">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2379">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2380">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2380">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2381">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2381">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2382">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2382">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2383">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2383">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2384">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2384">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2385">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2385">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2386">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2386">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2387">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2387">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2388">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2388">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2389">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora modułu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2389">The type of the node is the result type of the predefined modulus operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-2390">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2390">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2391">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora modułu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2391">The type of the node is the nullable type that corresponds to the result type of the predefined modulus operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2392"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2392"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2393">Operator modulo nie jest zdefiniowany dla <paramref name="left" />elementu. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2393">The modulus operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Modulo(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Modulo (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Modulo(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Modulo : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Modulo (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2394"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2394">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2395"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2395">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2396">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2396">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2397">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący liczbę operacji pozostałej arytmetycznej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2397">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic remainder operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2398">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2398">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Modulo" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2399">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2399">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2400"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2400">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2401">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2401">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2402">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2402">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-2403"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2403">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2404">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2404">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2405">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2405">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2406">Metoda implementująca dla operacji jest wybierana na podstawie następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2406">The implementing method for the operation is chosen based on the following rules:</span></span>  
  
-   <span data-ttu-id="eb4ed-2407">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2407">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-2408">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje <xref:System.Reflection.MethodInfo> typ zdefiniowany przez użytkownika, który przeciąża operator modulo, to oznacza, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2408">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the modulus operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2409">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2409">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2410">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2410">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2411">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2411">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2412">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2412">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2413">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2413">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2414">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2414">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2415">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2415">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2416">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2416">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2417">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2417">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2418">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2418">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2419">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora modułu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2419">The type of the node is the result type of the predefined modulus operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-2420">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2420">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2421">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora modułu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2421">The type of the node is the nullable type that corresponds to the result type of the predefined modulus operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2422"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2422"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2423"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2423"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2424"><paramref name="method" />is <see langword="null" /> i operator modulo nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2424"><paramref name="method" /> is <see langword="null" /> and the modulus operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ModuloAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2425">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący resztę operacji przypisania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2425">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member ModuloAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ModuloAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2426"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2426">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2427"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2427">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2428">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący resztę operacji przypisania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2428">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2429"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2429">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member ModuloAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ModuloAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2430"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2430">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2431"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2431">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2432">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2432">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2433">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący resztę operacji przypisania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2433">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2434">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2434">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuloAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ModuloAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModuloAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ModuloAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member ModuloAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ModuloAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2435"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2435">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2436"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2436">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2437">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2437">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-2438">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2438">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2439">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący resztę operacji przypisania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2439">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a remainder assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2440">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2440">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.ModuloAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2441">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację mnożenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2441">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Multiply(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Multiply(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2442"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2442">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2443"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2443">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2444">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację mnożenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2444">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2445"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2445">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2446">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2446">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2447"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2447">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2448">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2448">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2449">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2449">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-2450"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2450">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2451">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2451">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2452">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2452">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2453">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2453">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2454"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator mnożenia, to oznacza, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2454">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2455">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2455">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2456">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2456">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2457">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2457">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2458">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2458">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2459">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2459">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2460">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2460">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2461">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2461">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2462">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2462">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2463">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2463">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2464">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2464">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2465">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2465">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-2466">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2466">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2467">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2467">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2468">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie, które mnoży dwie wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2468">The following code example shows how to create an expression that multiplies two values.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#27)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2469"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2469"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2470">Nie zdefiniowano operatora mnożenia dla elementu <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2470">The multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Multiply(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Multiply(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Multiply (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2471"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2471">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2472"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2472">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2473">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2473">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2474">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację mnożenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2474">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2475">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2475">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Multiply" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2476">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2476">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2477"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2477">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2478">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2478">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2479">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2479">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-2480"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2480">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2481">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2481">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2482">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2482">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2483">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2483">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2484">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2484">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-2485">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, <xref:System.Reflection.MethodInfo> który przeciąża operator mnożenia, to oznacza metodę implementującą metodę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2485">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2486">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2486">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2487">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2487">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2488">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2488">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2489">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2489">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2490">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2490">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2491">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2491">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2492">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2492">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2493">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2493">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2494">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2494">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2495">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2495">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2496">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2496">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-2497">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2497">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2498">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2498">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2499"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2499"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2500"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2500"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2501"><paramref name="method" />jest <see langword="null" /> i operator mnożenia nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2501"><paramref name="method" /> is <see langword="null" /> and the multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2502">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania mnożenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2502">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member MultiplyAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MultiplyAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2503"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2503">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2504"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2504">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2505">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania mnożenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2505">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2506"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2506">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member MultiplyAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MultiplyAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2507"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2507">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2508"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2508">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2509">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2509">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2510">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania mnożenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2510">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2511">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2511">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member MultiplyAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MultiplyAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2512"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2512">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2513"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2513">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2514">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2514">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-2515">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2515">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2516">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania mnożenia, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2516">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2517">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2517">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2518">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania mnożenia, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2518">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member MultiplyAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MultiplyAssignChecked (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2519"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2519">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2520"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2520">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2521">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania mnożenia, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2521">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2522"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2522">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member MultiplyAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MultiplyAssignChecked (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2523"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2523">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2524"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2524">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2525">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2525">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2526">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania mnożenia, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2526">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2527">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2527">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member MultiplyAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MultiplyAssignChecked (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2528"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2528">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2529"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2529">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2530">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2530">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-2531">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2531">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2532">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania mnożenia, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2532">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a multiplication assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2533">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2533">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2534">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację mnożenia arytmetycznego, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2534">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member MultiplyChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MultiplyChecked (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2535"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2535">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2536"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2536">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2537">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację mnożenia arytmetycznego, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2537">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2538"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2538">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2539">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2539">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2540"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2540">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2541">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2541">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2542">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2542">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-2543"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2543">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2544">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2544">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2545">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2545">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2546">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2546">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2547"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator mnożenia, to oznacza, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2547">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2548">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2548">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2549">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2549">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2550">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2550">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2551">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2551">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2552">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2552">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2553">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2553">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2554">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2554">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2555">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2555">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2556">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2556">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2557">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2557">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2558">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2558">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-2559">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2559">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2560">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2560">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2561"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2561"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2562">Nie zdefiniowano operatora mnożenia dla elementu <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2562">The multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MultiplyChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression MultiplyChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ MultiplyChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member MultiplyChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.MultiplyChecked (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2563"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2563">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2564"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2564">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2565">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2565">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2566">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację mnożenia arytmetycznego, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2566">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic multiplication operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2567">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2567">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MultiplyChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2568">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2568">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2569"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2569">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2570">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2570">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2571">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2571">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-2572"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2572">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2573">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2573">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2574">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2574">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2575">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2575">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2576">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2576">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-2577">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, <xref:System.Reflection.MethodInfo> który przeciąża operator mnożenia, to oznacza metodę implementującą metodę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2577">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the multiplication operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2578">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2578">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2579">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2579">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2580">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2580">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2581">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2581">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2582">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2582">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2583">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2583">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2584">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2584">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2585">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2585">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2586">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2586">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2587">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2587">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2588">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2588">The type of the node is the result type of the predefined multiplication operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-2589">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2589">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2590">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2590">The type of the node is the nullable type that corresponds to the result type of the predefined multiplication operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2591"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2591"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2592"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2592"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2593"><paramref name="method" />jest <see langword="null" /> i operator mnożenia nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2593"><paramref name="method" /> is <see langword="null" /> and the multiplication operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Negate">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2594">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący arytmetyczną operację negacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2594">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Negate(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Negate(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Negate expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2595"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2595">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2596">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący arytmetyczną operację negacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2596">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2597">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2597">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2598">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2598">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2599"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2599">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2600">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2600">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2601">W przeciwnym razie są one fałszywe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2601">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2602">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2602">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2603">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2603">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2604">Jeśli `expression`. Typ jest typem zdefiniowanym przez użytkownika, który definiuje jednoargumentowy operator minus <xref:System.Reflection.MethodInfo> , który reprezentuje operatora to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2604">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2605">W przeciwnym razie `expression`, jeśli. Typ jest typem liczbowym, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2605">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2606">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2606">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2607">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2607">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2608">Jeśli `expression`. Typ jest możliwy do przypisania do typu argumentu metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2608">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2609">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2609">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2610">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2610">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2611">`expression`. Typ jest typem wartości null, a odpowiedni typ wartości niedopuszczający wartości null jest równy typowi argumentu metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2611">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2612">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2612">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2613">Jeśli jest `null`to metoda implementująca, typ węzła to `expression`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2613">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="eb4ed-2614">Jeśli `expression`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2614">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2615">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2615">Otherwise, the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2616">W poniższym przykładzie pokazano, jak utworzyć wyrażenie reprezentujące arytmetyczną operację negacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2616">The following example demonstrates how to create an expression that represents an arithmetic negation operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#50](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#50)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#50](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2617"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2617"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2618">Jednoargumentowy operator minus nie jest zdefiniowany <paramref name="expression" />dla. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2618">The unary minus operator is not defined for <paramref name="expression" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Negate(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Negate(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Negate (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2619"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2619">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2620">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2620">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2621">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący arytmetyczną operację negacji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2621">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2622"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> A, który <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.UnaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2622">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Negate" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2623">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2623">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2624"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2624">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2625">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2625">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2626">W przeciwnym razie są one fałszywe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2626">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2627">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2627">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2628">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2628">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2629">Jeśli `method` `static` `Shared` nie `null` jest, i reprezentuje metodę inną niż void (w Visual Basic), która przyjmuje jeden argument, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2629">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-2630">Jeśli `expression`. Typ jest typem zdefiniowanym przez użytkownika, który definiuje jednoargumentowy operator minus <xref:System.Reflection.MethodInfo> , który reprezentuje operatora to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2630">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2631">W przeciwnym razie `expression`, jeśli. Typ jest typem liczbowym, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2631">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2632">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2632">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2633">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2633">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2634">Jeśli `expression`. Typ jest możliwy do przypisania do typu argumentu metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2634">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2635">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2635">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2636">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2636">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2637">`expression`. Typ jest typem wartości null, a odpowiedni typ wartości niedopuszczający wartości null jest równy typowi argumentu metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2637">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2638">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2638">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2639">Jeśli jest `null`to metoda implementująca, typ węzła to `expression`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2639">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="eb4ed-2640">Jeśli `expression`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2640">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2641">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2641">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2642"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2642"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2643"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2643"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2644"><paramref name="method" />is <see langword="null" /> i operator jednoargumentowy minus nie jest zdefiniowany <paramref name="expression" />dla. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2644"><paramref name="method" /> is <see langword="null" /> and the unary minus operator is not defined for <paramref name="expression" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-2645">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2645">-or-</span></span> 
 <span data-ttu-id="eb4ed-2646"><paramref name="expression" />. Typ (lub odpowiedni typ niedopuszczający wartości null, jeśli jest typem wartości null), nie można przypisać do typu argumentu metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2646"><paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NegateChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2647">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący arytmetyczną operację negacji, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2647">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NegateChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression NegateChecked(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ NegateChecked(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member NegateChecked : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.NegateChecked expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2648"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2648">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2649">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący arytmetyczną operację negacji, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2649">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2650">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2650">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2651">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2651">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2652"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2652">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2653">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2653">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2654">W przeciwnym razie są one fałszywe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2654">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2655">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2655">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2656">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2656">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2657">Jeśli `expression`. Typ jest typem zdefiniowanym przez użytkownika, który definiuje jednoargumentowy operator minus <xref:System.Reflection.MethodInfo> , który reprezentuje operatora to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2657">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2658">W przeciwnym razie `expression`, jeśli. Typ jest typem liczbowym, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2658">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2659">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2659">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2660">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2660">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2661">Jeśli `expression`. Typ jest możliwy do przypisania do typu argumentu metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2661">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2662">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2662">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2663">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2663">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2664">`expression`. Typ jest typem wartości null, a odpowiedni typ wartości niedopuszczający wartości null jest równy typowi argumentu metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2664">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2665">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2665">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2666">Jeśli jest `null`to metoda implementująca, typ węzła to `expression`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2666">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="eb4ed-2667">Jeśli `expression`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2667">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2668">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2668">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2669"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2669"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2670">Jednoargumentowy operator minus nie jest zdefiniowany <paramref name="expression" />dla. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2670">The unary minus operator is not defined for <paramref name="expression" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NegateChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression NegateChecked(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ NegateChecked(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member NegateChecked : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.NegateChecked (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2671"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2671">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2672">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2672">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2673">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący arytmetyczną operację negacji, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2673">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an arithmetic negation operation that has overflow checking.</span></span> <span data-ttu-id="eb4ed-2674">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2674">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2675"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> A, który <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.UnaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2675">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NegateChecked" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2676">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2676">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2677"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2677">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2678">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2678">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2679">W przeciwnym razie są one fałszywe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2679">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2680">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2680">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2681">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2681">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2682">Jeśli `method` `static` `Shared` nie `null` jest, i reprezentuje metodę inną niż void (w Visual Basic), która przyjmuje jeden argument, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2682">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-2683">Jeśli `expression`. Typ jest typem zdefiniowanym przez użytkownika, który definiuje jednoargumentowy operator minus <xref:System.Reflection.MethodInfo> , który reprezentuje operatora to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2683">If `expression`.Type is a user-defined type that defines the unary minus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2684">W przeciwnym razie `expression`, jeśli. Typ jest typem liczbowym, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2684">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2685">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2685">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2686">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2686">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2687">Jeśli `expression`. Typ jest możliwy do przypisania do typu argumentu metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2687">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2688">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2688">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2689">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2689">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2690">`expression`. Typ jest typem wartości null, a odpowiedni typ wartości niedopuszczający wartości null jest równy typowi argumentu metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2690">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2691">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2691">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2692">Jeśli jest `null`to metoda implementująca, typ węzła to `expression`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2692">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="eb4ed-2693">Jeśli `expression`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2693">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2694">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2694">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2695"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2695"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2696"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2696"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2697"><paramref name="method" />is <see langword="null" /> i operator jednoargumentowy minus nie jest zdefiniowany <paramref name="expression" />dla. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2697"><paramref name="method" /> is <see langword="null" /> and the unary minus operator is not defined for <paramref name="expression" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-2698">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2698">-or-</span></span> 
 <span data-ttu-id="eb4ed-2699"><paramref name="expression" />. Typ (lub odpowiedni typ niedopuszczający wartości null, jeśli jest typem wartości null), nie można przypisać do typu argumentu metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2699"><paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2700"><see cref="T:System.Linq.Expressions.NewExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2700">Creates a <see cref="T:System.Linq.Expressions.NewExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor);" />
      <MemberSignature Language="F#" Value="static member New : System.Reflection.ConstructorInfo -&gt; System.Linq.Expressions.NewExpression" Usage="System.Linq.Expressions.Expression.New constructor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="constructor"><span data-ttu-id="eb4ed-2701"><see cref="T:System.Reflection.ConstructorInfo" /> Aby<see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2701">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2702">Tworzy element <see cref="T:System.Linq.Expressions.NewExpression" /> reprezentujący wywoływanie określonego konstruktora, który nie przyjmuje argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2702">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor that takes no arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2703">A <see cref="T:System.Linq.Expressions.NewExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.New" /> ma<see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2703">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2704">Właściwości <xref:System.Linq.Expressions.NewExpression.Arguments%2A> <xref:System.Linq.Expressions.NewExpression> i <xref:System.Linq.Expressions.NewExpression.Members%2A> wypływające są puste kolekcje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2704">The <xref:System.Linq.Expressions.NewExpression.Arguments%2A> and <xref:System.Linq.Expressions.NewExpression.Members%2A> properties of the resulting <xref:System.Linq.Expressions.NewExpression> are empty collections.</span></span> <span data-ttu-id="eb4ed-2705">Właściwość reprezentuje typ deklarujący konstruktora reprezentowanego przez `constructor`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2705">The <xref:System.Linq.Expressions.Expression.Type%2A> property represents the declaring type of the constructor represented by `constructor`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2706"><paramref name="constructor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2706"><paramref name="constructor" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2707">Konstruktor, który <paramref name="constructor" /> reprezentuje, zawiera co najmniej jeden parametr.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2707">The constructor that <paramref name="constructor" /> represents has at least one parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member New : Type -&gt; System.Linq.Expressions.NewExpression" Usage="System.Linq.Expressions.Expression.New type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-2708">A <see cref="T:System.Type" /> , który ma konstruktora, który nie przyjmuje argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2708">A <see cref="T:System.Type" /> that has a constructor that takes no arguments.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2709">Tworzy element <see cref="T:System.Linq.Expressions.NewExpression" /> reprezentujący wywoływanie konstruktora bez parametrów określonego typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2709">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the parameterless constructor of the specified type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2710">Obiekt <see cref="T:System.Linq.Expressions.NewExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.New" /> <see cref="T:System.Reflection.ConstructorInfo" /> Właściwość równą i właściwość, która reprezentuje konstruktora bez parametrów dla określonego typu. <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2710">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property set to the <see cref="T:System.Reflection.ConstructorInfo" /> that represents the constructor without parameters for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2711">`type` Parametr musi reprezentować typ, który ma Konstruktor bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2711">The `type` parameter must represent a type that has a constructor without parameters.</span></span>  
  
 <span data-ttu-id="eb4ed-2712">Właściwości <xref:System.Linq.Expressions.NewExpression.Arguments%2A> <xref:System.Linq.Expressions.NewExpression> i <xref:System.Linq.Expressions.NewExpression.Members%2A> wypływające są puste kolekcje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2712">The <xref:System.Linq.Expressions.NewExpression.Arguments%2A> and <xref:System.Linq.Expressions.NewExpression.Members%2A> properties of the resulting <xref:System.Linq.Expressions.NewExpression> are empty collections.</span></span> <span data-ttu-id="eb4ed-2713"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest równa `type`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2713">The <xref:System.Linq.Expressions.Expression.Type%2A> property is equal to `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2714">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.New%28System.Type%29> metody w celu <xref:System.Linq.Expressions.NewExpression> utworzenia, która reprezentuje konstruowanie nowego wystąpienia obiektu słownika przez wywołanie konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2714">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.New%28System.Type%29> method to create a <xref:System.Linq.Expressions.NewExpression> that represents constructing a new instance of a dictionary object by calling the constructor without parameters.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#10)]
 [!code-vb[System.Linq.Expressions.Expression#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2715"><paramref name="type" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2715"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2716">Typ <paramref name="type" /> reprezentujący nie ma konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2716">The type that <paramref name="type" /> represents does not have a constructor without parameters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression)) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Reflection.ConstructorInfo * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.NewExpression" Usage="System.Linq.Expressions.Expression.New (constructor, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="constructor"><span data-ttu-id="eb4ed-2717"><see cref="T:System.Reflection.ConstructorInfo" /> Aby<see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2717">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-2718">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2718">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2719">Tworzy element <see cref="T:System.Linq.Expressions.NewExpression" /> reprezentujący wywoływanie określonego konstruktora z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2719">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2720"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.New" /> A, który <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.NewExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2720">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> and <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2721">Parametr musi zawierać taką samą liczbę elementów jak liczba parametrów dla konstruktora reprezentowanego przez `constructor`. `arguments`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2721">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="eb4ed-2722">Jeśli `arguments` jest `null`, <xref:System.Linq.Expressions.NewExpression> jest<xref:System.Linq.Expressions.NewExpression.Arguments%2A> uznawana za pusty, a właściwość będąca wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2722">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="eb4ed-2723">Właściwość będąca wynikiem <xref:System.Linq.Expressions.NewExpression> reprezentuje typ deklarujący konstruktora reprezentowanego przez `constructor`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2723">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="eb4ed-2724"><xref:System.Linq.Expressions.NewExpression.Members%2A> Właściwość jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2724">The <xref:System.Linq.Expressions.NewExpression.Members%2A> property is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2725"><paramref name="constructor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2725"><paramref name="constructor" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2726">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2726">-or-</span></span> 
<span data-ttu-id="eb4ed-2727">Element <paramref name="arguments" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2727">An element of <paramref name="arguments" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2728">Parametr nie zawiera takiej samej liczby elementów jak liczba parametrów dla konstruktora, który <paramref name="constructor" /> reprezentuje. <paramref name="arguments" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2728">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span></span>  
  
<span data-ttu-id="eb4ed-2729">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2729">-or-</span></span> 
<span data-ttu-id="eb4ed-2730">Właściwość elementu nie <paramref name="constructor" /> może zostać przypisana do typu odpowiadającego mu parametru konstruktora, który reprezentuje. <paramref name="arguments" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2730">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, ParamArray arguments As Expression()) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Reflection.ConstructorInfo * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.NewExpression" Usage="System.Linq.Expressions.Expression.New (constructor, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="constructor"><span data-ttu-id="eb4ed-2731"><see cref="T:System.Reflection.ConstructorInfo" /> Aby<see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2731">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-2732">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2732">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2733">Tworzy element <see cref="T:System.Linq.Expressions.NewExpression" /> reprezentujący wywoływanie określonego konstruktora z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2733">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2734"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.New" /> A, który <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> ma<see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.NewExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2734">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> and <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2735">Parametr musi zawierać taką samą liczbę elementów jak liczba parametrów dla konstruktora reprezentowanego przez `constructor`. `arguments`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2735">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="eb4ed-2736">Jeśli `arguments` jest `null`, <xref:System.Linq.Expressions.NewExpression> jest<xref:System.Linq.Expressions.NewExpression.Arguments%2A> uznawana za pusty, a właściwość będąca wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2736">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="eb4ed-2737">Właściwość będąca wynikiem <xref:System.Linq.Expressions.NewExpression> reprezentuje typ deklarujący konstruktora reprezentowanego przez `constructor`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2737">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="eb4ed-2738"><xref:System.Linq.Expressions.NewExpression.Members%2A> Właściwość jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2738">The <xref:System.Linq.Expressions.NewExpression.Members%2A> property is an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2739"><paramref name="constructor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2739"><paramref name="constructor" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2740">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2740">-or-</span></span> 
<span data-ttu-id="eb4ed-2741">Element <paramref name="arguments" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2741">An element of <paramref name="arguments" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2742">Długość <paramref name="arguments" /> jest równa liczbie parametrów konstruktora, który <paramref name="constructor" /> reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2742">The length of <paramref name="arguments" /> does match the number of parameters for the constructor that <paramref name="constructor" /> represents.</span></span>  
  
<span data-ttu-id="eb4ed-2743">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2743">-or-</span></span> 
<span data-ttu-id="eb4ed-2744">Właściwość elementu nie <paramref name="constructor" /> może zostać przypisana do typu odpowiadającego mu parametru konstruktora, który reprezentuje. <paramref name="arguments" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2744">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments, System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt; members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.MemberInfo&gt; members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression), members As IEnumerable(Of MemberInfo)) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments, System::Collections::Generic::IEnumerable&lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberSignature Language="F#" Value="static member New : System.Reflection.ConstructorInfo * seq&lt;System.Linq.Expressions.Expression&gt; * seq&lt;System.Reflection.MemberInfo&gt; -&gt; System.Linq.Expressions.NewExpression" Usage="System.Linq.Expressions.Expression.New (constructor, arguments, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.MemberInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="constructor"><span data-ttu-id="eb4ed-2745"><see cref="T:System.Reflection.ConstructorInfo" /> Aby<see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2745">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-2746">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2746">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span></span></param>
        <param name="members"><span data-ttu-id="eb4ed-2747">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.NewExpression.Members" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Reflection.MemberInfo" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2747">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Reflection.MemberInfo" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Members" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2748">Tworzy element <see cref="T:System.Linq.Expressions.NewExpression" /> reprezentujący wywoływanie określonego konstruktora z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2748">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span></span> <span data-ttu-id="eb4ed-2749">Określono elementy członkowskie, które uzyskują dostęp do zainicjowanego konstruktora pól.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2749">The members that access the constructor initialized fields are specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2750">A <see cref="T:System.Linq.Expressions.NewExpression" /> <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.New" /> , który ma <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> <see cref="P:System.Linq.Expressions.NewExpression.Members" /> Właściwość równą i, oraz właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2750">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> and <see cref="P:System.Linq.Expressions.NewExpression.Members" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2751">Parametr musi zawierać taką samą liczbę elementów jak liczba parametrów dla konstruktora reprezentowanego przez `constructor`. `arguments`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2751">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="eb4ed-2752">Jeśli `arguments` jest `null`, <xref:System.Linq.Expressions.NewExpression> jest<xref:System.Linq.Expressions.NewExpression.Arguments%2A> uznawana za pusty, a właściwość będąca wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2752">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="eb4ed-2753">Jeśli `members` ma `null`wartość <xref:System.Linq.Expressions.NewExpression> , <xref:System.Linq.Expressions.NewExpression.Members%2A> Właściwość będąca wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2753">If `members` is `null`, the <xref:System.Linq.Expressions.NewExpression.Members%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span> <span data-ttu-id="eb4ed-2754">Jeśli `members` `arguments` `null`nie `null`jest, musi mieć taką samą liczbę elementów jak i każdy element nie może być.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2754">If `members` is not `null`, it must have the same number of elements as `arguments` and each element must not be `null`.</span></span> <span data-ttu-id="eb4ed-2755">Każdy element elementu `members` musi <xref:System.Reflection.PropertyInfo>być <xref:System.Reflection.FieldInfo> `constructor`lub <xref:System.Reflection.MethodInfo> reprezentujący element członkowski wystąpienia w typie deklarującym konstruktora reprezentowanego przez.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2755">Each element of `members` must be a <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.FieldInfo> or <xref:System.Reflection.MethodInfo> that represents an instance member on the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="eb4ed-2756">Jeśli reprezentuje właściwość, właściwość musi mieć `get` akcesor.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2756">If it represents a property, the property must have a `get` accessor.</span></span> <span data-ttu-id="eb4ed-2757">Odpowiadający element `arguments` dla każdego `members` elementu obiektu musi mieć <xref:System.Linq.Expressions.Expression.Type%2A> Właściwość reprezentującą typ, który `members` można przypisać do typu elementu członkowskiego reprezentowanego przez element.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2757">The corresponding element of `arguments` for each element of `members` must have a <xref:System.Linq.Expressions.Expression.Type%2A> property that represents a type that is assignable to the type of the member that the `members` element represents.</span></span>  
  
 <span data-ttu-id="eb4ed-2758">Właściwość będąca wynikiem <xref:System.Linq.Expressions.NewExpression> reprezentuje typ deklarujący konstruktora, który `constructor` reprezentuje. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2758">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor that `constructor` represents.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2759"><paramref name="constructor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2759"><paramref name="constructor" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2760">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2760">-or-</span></span> 
<span data-ttu-id="eb4ed-2761">Element <paramref name="arguments" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2761">An element of <paramref name="arguments" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2762">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2762">-or-</span></span> 
<span data-ttu-id="eb4ed-2763">Element <paramref name="members" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2763">An element of <paramref name="members" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2764">Parametr nie zawiera takiej samej liczby elementów jak liczba parametrów dla konstruktora, który <paramref name="constructor" /> reprezentuje. <paramref name="arguments" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2764">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span></span>  
  
<span data-ttu-id="eb4ed-2765">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2765">-or-</span></span> 
<span data-ttu-id="eb4ed-2766">Właściwość elementu nie <paramref name="constructor" /> może zostać przypisana do typu odpowiadającego mu parametru konstruktora, który reprezentuje. <paramref name="arguments" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2766">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span></span>  
  
<span data-ttu-id="eb4ed-2767">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2767">-or-</span></span> 
<span data-ttu-id="eb4ed-2768">Parametr nie ma takiej samej liczby elementów jak <paramref name="arguments" />. <paramref name="members" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2768">The <paramref name="members" /> parameter does not have the same number of elements as <paramref name="arguments" />.</span></span>  
  
<span data-ttu-id="eb4ed-2769">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2769">-or-</span></span> 
<span data-ttu-id="eb4ed-2770">Element <paramref name="arguments" /> <paramref name="members" />ma właściwość, która reprezentuje typ, który nie jest możliwy do przypisania do typu elementu członkowskiego reprezentowanego przez odpowiadający mu element elementu. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2770">An element of <paramref name="arguments" /> has a <see cref="P:System.Linq.Expressions.Expression.Type" /> property that represents a type that is not assignable to the type of the member that is represented by the corresponding element of <paramref name="members" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments, params System.Reflection.MemberInfo[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewExpression New(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments, class System.Reflection.MemberInfo[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function New (constructor As ConstructorInfo, arguments As IEnumerable(Of Expression), ParamArray members As MemberInfo()) As NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewExpression ^ New(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments, ... cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ members);" />
      <MemberSignature Language="F#" Value="static member New : System.Reflection.ConstructorInfo * seq&lt;System.Linq.Expressions.Expression&gt; * System.Reflection.MemberInfo[] -&gt; System.Linq.Expressions.NewExpression" Usage="System.Linq.Expressions.Expression.New (constructor, arguments, members)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
        <Parameter Name="members" Type="System.Reflection.MemberInfo[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="constructor"><span data-ttu-id="eb4ed-2771"><see cref="T:System.Reflection.ConstructorInfo" /> Aby<see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2771">The <see cref="T:System.Reflection.ConstructorInfo" /> to set the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /> property equal to.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-2772">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2772">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> collection.</span></span></param>
        <param name="members"><span data-ttu-id="eb4ed-2773">Tablica <see cref="T:System.Reflection.MemberInfo" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.NewExpression.Members" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2773">An array of <see cref="T:System.Reflection.MemberInfo" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewExpression.Members" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2774">Tworzy element <see cref="T:System.Linq.Expressions.NewExpression" /> reprezentujący wywoływanie określonego konstruktora z określonymi argumentami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2774">Creates a <see cref="T:System.Linq.Expressions.NewExpression" /> that represents calling the specified constructor with the specified arguments.</span></span> <span data-ttu-id="eb4ed-2775">Elementy członkowskie, które mają dostęp do zainicjowanego konstruktora pól, są określone jako tablica.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2775">The members that access the constructor initialized fields are specified as an array.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2776">A <see cref="T:System.Linq.Expressions.NewExpression" /> <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.New" /> , który ma <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> <see cref="P:System.Linq.Expressions.NewExpression.Members" /> Właściwość równą i, oraz właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.NewExpression.Constructor" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2776">A <see cref="T:System.Linq.Expressions.NewExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.New" /> and the <see cref="P:System.Linq.Expressions.NewExpression.Constructor" />, <see cref="P:System.Linq.Expressions.NewExpression.Arguments" /> and <see cref="P:System.Linq.Expressions.NewExpression.Members" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2777">Parametr musi zawierać taką samą liczbę elementów jak liczba parametrów dla konstruktora reprezentowanego przez `constructor`. `arguments`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2777">The `arguments` parameter must contain the same number of elements as the number of parameters for the constructor represented by `constructor`.</span></span> <span data-ttu-id="eb4ed-2778">Jeśli `arguments` jest `null`, <xref:System.Linq.Expressions.NewExpression> jest<xref:System.Linq.Expressions.NewExpression.Arguments%2A> uznawana za pusty, a właściwość będąca wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2778">If `arguments` is `null`, it is considered empty, and the <xref:System.Linq.Expressions.NewExpression.Arguments%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span>  
  
 <span data-ttu-id="eb4ed-2779">Jeśli `members` ma `null`wartość <xref:System.Linq.Expressions.NewExpression> , <xref:System.Linq.Expressions.NewExpression.Members%2A> Właściwość będąca wynikiem jest pustą kolekcją.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2779">If `members` is `null`, the <xref:System.Linq.Expressions.NewExpression.Members%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> is an empty collection.</span></span> <span data-ttu-id="eb4ed-2780">Jeśli `members` `arguments` `null`nie `null`jest, musi mieć taką samą liczbę elementów jak i każdy element nie może być.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2780">If `members` is not `null`, it must have the same number of elements as `arguments` and each element must not be `null`.</span></span> <span data-ttu-id="eb4ed-2781">Każdy element elementu `members` musi <xref:System.Reflection.PropertyInfo>być <xref:System.Reflection.FieldInfo> `constructor`lub <xref:System.Reflection.MethodInfo> reprezentujący element członkowski wystąpienia w typie deklarującym konstruktora reprezentowanego przez.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2781">Each element of `members` must be a <xref:System.Reflection.PropertyInfo>, <xref:System.Reflection.FieldInfo> or <xref:System.Reflection.MethodInfo> that represents an instance member on the declaring type of the constructor represented by `constructor`.</span></span> <span data-ttu-id="eb4ed-2782">Jeśli reprezentuje właściwość, właściwość musi mieć możliwość pobrania wartości skojarzonego pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2782">If it represents a property, the property must be able to retrieve the value of the associated field.</span></span> <span data-ttu-id="eb4ed-2783">Odpowiadający element `arguments` dla każdego `members` elementu obiektu musi mieć <xref:System.Linq.Expressions.Expression.Type%2A> Właściwość reprezentującą typ, który `members` można przypisać do typu elementu członkowskiego reprezentowanego przez element.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2783">The corresponding element of `arguments` for each element of `members` must have a <xref:System.Linq.Expressions.Expression.Type%2A> property that represents a type that is assignable to the type of the member that the `members` element represents.</span></span>  
  
 <span data-ttu-id="eb4ed-2784">Właściwość będąca wynikiem <xref:System.Linq.Expressions.NewExpression> reprezentuje typ deklarujący konstruktora, który `constructor` reprezentuje. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2784">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewExpression> represents the declaring type of the constructor that `constructor` represents.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2785"><paramref name="constructor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2785"><paramref name="constructor" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2786">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2786">-or-</span></span> 
<span data-ttu-id="eb4ed-2787">Element <paramref name="arguments" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2787">An element of <paramref name="arguments" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2788">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2788">-or-</span></span> 
<span data-ttu-id="eb4ed-2789">Element <paramref name="members" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2789">An element of <paramref name="members" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2790">Parametr nie zawiera takiej samej liczby elementów jak liczba parametrów dla konstruktora, który <paramref name="constructor" /> reprezentuje. <paramref name="arguments" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2790">The <paramref name="arguments" /> parameter does not contain the same number of elements as the number of parameters for the constructor that <paramref name="constructor" /> represents.</span></span>  
  
<span data-ttu-id="eb4ed-2791">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2791">-or-</span></span> 
<span data-ttu-id="eb4ed-2792">Właściwość elementu nie <paramref name="constructor" /> może zostać przypisana do typu odpowiadającego mu parametru konstruktora, który reprezentuje. <paramref name="arguments" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2792">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="arguments" /> is not assignable to the type of the corresponding parameter of the constructor that <paramref name="constructor" /> represents.</span></span>  
  
<span data-ttu-id="eb4ed-2793">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2793">-or-</span></span> 
<span data-ttu-id="eb4ed-2794">Parametr nie ma takiej samej liczby elementów jak <paramref name="arguments" />. <paramref name="members" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2794">The <paramref name="members" /> parameter does not have the same number of elements as <paramref name="arguments" />.</span></span>  
  
<span data-ttu-id="eb4ed-2795">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2795">-or-</span></span> 
<span data-ttu-id="eb4ed-2796">Element <paramref name="arguments" /> <paramref name="members" />ma właściwość, która reprezentuje typ, który nie jest możliwy do przypisania do typu elementu członkowskiego reprezentowanego przez odpowiadający mu element elementu. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2796">An element of <paramref name="arguments" /> has a <see cref="P:System.Linq.Expressions.Expression.Type" /> property that represents a type that is not assignable to the type of the member that is represented by the corresponding element of <paramref name="members" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewArrayBounds">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2797">Tworzy element <see cref="T:System.Linq.Expressions.NewArrayExpression" /> reprezentujący tworzenie tablicy, która ma określoną rangę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2797">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewArrayBounds">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayBounds(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayBounds(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ bounds);" />
      <MemberSignature Language="F#" Value="static member NewArrayBounds : Type * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.NewArrayExpression" Usage="System.Linq.Expressions.Expression.NewArrayBounds (type, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bounds" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-2798"><see cref="T:System.Type" /> Reprezentujący typ elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2798">A <see cref="T:System.Type" /> that represents the element type of the array.</span></span></param>
        <param name="bounds"><span data-ttu-id="eb4ed-2799">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2799">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2800">Tworzy element <see cref="T:System.Linq.Expressions.NewArrayExpression" /> reprezentujący tworzenie tablicy, która ma określoną rangę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2800">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2801">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> ma<see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2801">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2802">Właściwość będąca wynikiem <xref:System.Linq.Expressions.NewArrayExpression> reprezentuje typ tablicy, której ranga jest `bounds` równa długości i której typem elementu jest `type`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2802">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is equal to the length of `bounds` and whose element type is `type`.</span></span>  
  
 <span data-ttu-id="eb4ed-2803"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość każdego`bounds` elementu musi reprezentować typ całkowity.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2803">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `bounds` must represent an integral type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2804">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> metody w celu utworzenia drzewa wyrażenia, które reprezentuje tablicę ciągów, która ma rangę 2.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2804">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> method to create an expression tree that represents creating a string array that has a rank of 2.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#2)]
 [!code-vb[System.Linq.Expressions.Expression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2805"><paramref name="type" />lub <paramref name="bounds" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2805"><paramref name="type" /> or <paramref name="bounds" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2806">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2806">-or-</span></span> 
<span data-ttu-id="eb4ed-2807">Element <paramref name="bounds" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2807">An element of <paramref name="bounds" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2808"><see cref="P:System.Linq.Expressions.Expression.Type" /> Właściwość<paramref name="bounds" /> elementu nie reprezentuje typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2808">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="bounds" /> does not represent an integral type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewArrayBounds">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, params System.Linq.Expressions.Expression[] bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayBounds(class System.Type type, class System.Linq.Expressions.Expression[] bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayBounds(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ bounds);" />
      <MemberSignature Language="F#" Value="static member NewArrayBounds : Type * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.NewArrayExpression" Usage="System.Linq.Expressions.Expression.NewArrayBounds (type, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="bounds" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-2809"><see cref="T:System.Type" /> Reprezentujący typ elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2809">A <see cref="T:System.Type" /> that represents the element type of the array.</span></span></param>
        <param name="bounds"><span data-ttu-id="eb4ed-2810">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2810">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2811">Tworzy element <see cref="T:System.Linq.Expressions.NewArrayExpression" /> reprezentujący tworzenie tablicy, która ma określoną rangę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2811">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating an array that has a specified rank.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2812">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> ma<see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2812">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayBounds" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2813">Właściwość będąca wynikiem <xref:System.Linq.Expressions.NewArrayExpression> reprezentuje typ tablicy, której ranga jest `bounds` równa długości i której typem elementu jest `type`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2813">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is equal to the length of `bounds` and whose element type is `type`.</span></span>  
  
 <span data-ttu-id="eb4ed-2814"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość każdego`bounds` elementu musi reprezentować typ całkowity.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2814">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `bounds` must represent an integral type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2815">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> metody w celu utworzenia drzewa wyrażenia, które reprezentuje tablicę ciągów, która ma rangę 2.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2815">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayBounds%2A> method to create an expression tree that represents creating a string array that has a rank of 2.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#2)]
 [!code-vb[System.Linq.Expressions.Expression#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2816"><paramref name="type" />lub <paramref name="bounds" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2816"><paramref name="type" /> or <paramref name="bounds" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2817">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2817">-or-</span></span> 
<span data-ttu-id="eb4ed-2818">Element <paramref name="bounds" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2818">An element of <paramref name="bounds" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2819"><see cref="P:System.Linq.Expressions.Expression.Type" /> Właściwość<paramref name="bounds" /> elementu nie reprezentuje typu całkowitego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2819">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="bounds" /> does not represent an integral type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewArrayInit">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2820">Tworzy element <see cref="T:System.Linq.Expressions.NewArrayExpression" /> reprezentujący tworzenie jednowymiarowej tablicy i Inicjowanie jej z listy elementów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2820">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewArrayInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayInit(class System.Type type, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayInit(Type ^ type, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member NewArrayInit : Type * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.NewArrayExpression" Usage="System.Linq.Expressions.Expression.NewArrayInit (type, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializers" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-2821"><see cref="T:System.Type" /> Reprezentujący typ elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2821">A <see cref="T:System.Type" /> that represents the element type of the array.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2822">Zawiera <see cref="T:System.Collections.Generic.IEnumerable`1" /> <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> obiekty, które mają być używane do wypełniania kolekcji. <see cref="T:System.Linq.Expressions.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2822">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2823">Tworzy element <see cref="T:System.Linq.Expressions.NewArrayExpression" /> reprezentujący tworzenie jednowymiarowej tablicy i Inicjowanie jej z listy elementów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2823">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2824">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> ma<see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2824">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2825">Właściwość każdego `type`elementu musi reprezentować typ, który można przypisać do typu reprezentowanego przez, prawdopodobnie po cudzysłowie. \*\* `initializers` <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2825">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must represent a type that is assignable to the type represented by `type`, possibly after it is *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-2826">Element zostanie ujęty w cudzysłów tylko `type` wtedy <xref:System.Linq.Expressions.Expression>, gdy jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2826">An element will be quoted only if `type` is <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-2827">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2827">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-2828">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`initializers`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2828">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `initializers`.</span></span>  
  
 <span data-ttu-id="eb4ed-2829">Właściwość będąca wynikiem <xref:System.Linq.Expressions.NewArrayExpression> reprezentuje typ tablicy, której ranga to 1 i którego typem elementu jest `type`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2829">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is 1 and whose element type is `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2830">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> metody w celu utworzenia drzewa wyrażenia, które reprezentuje tworzenie jednowymiarowej tablicy ciągów, która jest inicjowana za pomocą listy wyrażeń ciągów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2830">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> method to create an expression tree that represents creating a one-dimensional string array that is initialized with a list of string expressions.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#1)]
 [!code-vb[System.Linq.Expressions.Expression#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2831"><paramref name="type" />lub <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2831"><paramref name="type" /> or <paramref name="initializers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2832">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2832">-or-</span></span> 
<span data-ttu-id="eb4ed-2833">Element <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2833">An element of <paramref name="initializers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2834">Właściwość elementu reprezentuje typ, którego nie można przypisać do typu, który <paramref name="type" /> reprezentuje. <paramref name="initializers" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2834">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="initializers" /> represents a type that is not assignable to the type that <paramref name="type" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewArrayInit">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, params System.Linq.Expressions.Expression[] initializers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.NewArrayExpression NewArrayInit(class System.Type type, class System.Linq.Expressions.Expression[] initializers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::NewArrayExpression ^ NewArrayInit(Type ^ type, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ initializers);" />
      <MemberSignature Language="F#" Value="static member NewArrayInit : Type * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.NewArrayExpression" Usage="System.Linq.Expressions.Expression.NewArrayInit (type, initializers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.NewArrayExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializers" Type="System.Linq.Expressions.Expression[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-2835"><see cref="T:System.Type" /> Reprezentujący typ elementu tablicy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2835">A <see cref="T:System.Type" /> that represents the element type of the array.</span></span></param>
        <param name="initializers"><span data-ttu-id="eb4ed-2836">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2836">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2837">Tworzy element <see cref="T:System.Linq.Expressions.NewArrayExpression" /> reprezentujący tworzenie jednowymiarowej tablicy i Inicjowanie jej z listy elementów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2837">Creates a <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that represents creating a one-dimensional array and initializing it from a list of elements.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2838">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> ma<see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2838">A <see cref="T:System.Linq.Expressions.NewArrayExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NewArrayInit" /> and the <see cref="P:System.Linq.Expressions.NewArrayExpression.Expressions" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2839">Właściwość każdego `type`elementu musi reprezentować typ, który można przypisać do typu reprezentowanego przez, prawdopodobnie po cudzysłowie. \*\* `initializers` <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2839">The <xref:System.Linq.Expressions.Expression.Type%2A> property of each element of `initializers` must represent a type that is assignable to the type represented by `type`, possibly after it is *quoted*.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="eb4ed-2840">Element zostanie ujęty w cudzysłów tylko `type` wtedy <xref:System.Linq.Expressions.Expression>, gdy jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2840">An element will be quoted only if `type` is <xref:System.Linq.Expressions.Expression>.</span></span> <span data-ttu-id="eb4ed-2841">QUOTE oznacza, że element jest opakowany <xref:System.Linq.Expressions.ExpressionType.Quote> w węźle.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2841">Quoting means the element is wrapped in a <xref:System.Linq.Expressions.ExpressionType.Quote> node.</span></span> <span data-ttu-id="eb4ed-2842">Węzeł <xref:System.Linq.Expressions.UnaryExpression> , <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> którego`initializers`właściwość jest elementem elementu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2842">The resulting node is a <xref:System.Linq.Expressions.UnaryExpression> whose <xref:System.Linq.Expressions.UnaryExpression.Operand%2A> property is the element of `initializers`.</span></span>  
  
 <span data-ttu-id="eb4ed-2843">Właściwość będąca wynikiem <xref:System.Linq.Expressions.NewArrayExpression> reprezentuje typ tablicy, której ranga to 1 i którego typem elementu jest `type`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2843">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.NewArrayExpression> represents an array type whose rank is 1 and whose element type is `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2844">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> metody w celu utworzenia drzewa wyrażenia, które reprezentuje tworzenie jednowymiarowej tablicy ciągów, która jest inicjowana za pomocą listy wyrażeń ciągów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2844">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.NewArrayInit%2A> method to create an expression tree that represents creating a one-dimensional string array that is initialized with a list of string expressions.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#1)]
 [!code-vb[System.Linq.Expressions.Expression#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2845"><paramref name="type" />lub <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2845"><paramref name="type" /> or <paramref name="initializers" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-2846">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2846">-or-</span></span> 
<span data-ttu-id="eb4ed-2847">Element <paramref name="initializers" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2847">An element of <paramref name="initializers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2848">Właściwość elementu reprezentuje typ, którego nie można przypisać do typu <paramref name="type" />. <see cref="P:System.Linq.Expressions.Expression.Type" /> <paramref name="initializers" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2848">The <see cref="P:System.Linq.Expressions.Expression.Type" /> property of an element of <paramref name="initializers" /> represents a type that is not assignable to the type <paramref name="type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.ExpressionType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Linq.Expressions.ExpressionType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NodeType As ExpressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::ExpressionType NodeType { System::Linq::Expressions::ExpressionType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Linq.Expressions.ExpressionType" Usage="System.Linq.Expressions.Expression.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ExpressionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2849">Pobiera typ <see cref="T:System.Linq.Expressions.Expression" />węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2849">Gets the node type of this <see cref="T:System.Linq.Expressions.Expression" />.</span></span></summary>
        <value><span data-ttu-id="eb4ed-2850">Jedna z <see cref="T:System.Linq.Expressions.ExpressionType" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2850">One of the <see cref="T:System.Linq.Expressions.ExpressionType" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2851">Właściwość zawiera bardziej wyspecjalizowany opis typu, <xref:System.Linq.Expressions.Expression> a nie tylko jego typ pochodny. <xref:System.Linq.Expressions.Expression.NodeType%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2851">The <xref:System.Linq.Expressions.Expression.NodeType%2A> property provides a more specialized description of an <xref:System.Linq.Expressions.Expression> than just its derived type.</span></span> <span data-ttu-id="eb4ed-2852">Na przykład, <xref:System.Linq.Expressions.BinaryExpression> można użyć do reprezentowania wielu różnych rodzajów wyrażeń binarnych, takich jak operacja dzielenia lub operacji "większe niż".</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2852">For example, a <xref:System.Linq.Expressions.BinaryExpression> can be used to represent many different kinds of binary expressions, such as a division operation or a "greater than" operation.</span></span> <span data-ttu-id="eb4ed-2853">Właściwość będzie zawierać opis tych <xref:System.Linq.Expressions.ExpressionType.Divide> wyrażeń binarnych odpowiednio <xref:System.Linq.Expressions.ExpressionType.GreaterThan>do i. <xref:System.Linq.Expressions.Expression.NodeType%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2853">The <xref:System.Linq.Expressions.Expression.NodeType%2A> property would describe these binary expressions as <xref:System.Linq.Expressions.ExpressionType.Divide> and <xref:System.Linq.Expressions.ExpressionType.GreaterThan>, respectively.</span></span>  
  
 <span data-ttu-id="eb4ed-2854">Statyczny typ CLR wyrażenia, które <xref:System.Linq.Expressions.Expression> reprezentuje obiekt, jest reprezentowany <xref:System.Linq.Expressions.Expression.Type%2A> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2854">The static CLR type of the expression that the <xref:System.Linq.Expressions.Expression> object represents is represented by the <xref:System.Linq.Expressions.Expression.Type%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Not">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2855">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację dopełnienia bitowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2855">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Not(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Not(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Not : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Not expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2856"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2856">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2857">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację dopełnienia bitowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2857">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2858">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2858">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2859">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2859">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2860"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2860">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2861">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2861">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2862">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2862">Otherwise, they are `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2863">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2863">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2864">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2864">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2865">Jeśli `expression`. Typ jest typem zdefiniowanym przez użytkownika, który definiuje jednoargumentowy operator not <xref:System.Reflection.MethodInfo> , który reprezentuje ten operator jako metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2865">If `expression`.Type is a user-defined type that defines the unary not operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2866">W przeciwnym razie `expression`, jeśli. Typ jest typu liczbowego lub logicznego, Metoda implementująca `null`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2866">Otherwise, if `expression`.Type is a numeric or Boolean type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2867">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2867">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2868">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2868">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2869">Jeśli `expression`. Typ jest możliwy do przypisania do typu argumentu metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2869">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2870">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2870">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2871">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2871">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2872">`expression`. Typ jest typem wartości null, a odpowiedni typ nie dopuszczający wartości null jest równy typowi argumentu metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2872">`expression`.Type is a nullable value type and the corresponding non-nullable type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2873">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2873">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2874">Jeśli jest `null`to metoda implementująca, typ węzła to `expression`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2874">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="eb4ed-2875">Jeśli `expression`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2875">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2876">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2876">Otherwise, the node is lifted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-2877">W poniższym przykładzie pokazano, jak utworzyć wyrażenie reprezentujące logiczne nie operację.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2877">The following example demonstrates how to create an expression that represents a logical NOT operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#51](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#51)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#51](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2878"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2878"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2879">Nie zdefiniowano operatora jednoargumentowego not <paramref name="expression" />dla elementu. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2879">The unary not operator is not defined for <paramref name="expression" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Not(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Not(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Not : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Not (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2880"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2880">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2881">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2881">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2882">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący operację dopełnienia bitowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2882">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a bitwise complement operation.</span></span> <span data-ttu-id="eb4ed-2883">Można określić metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2883">The implementing method can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2884"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> A, który <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.UnaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2884">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Not" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2885">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2885">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2886"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2886">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2887">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2887">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2888">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2888">Otherwise, they are `false`.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2889">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2889">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2890">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2890">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2891">Jeśli `method` `static` `Shared` nie `null` jest, i reprezentuje metodę inną niż void (w Visual Basic), która przyjmuje jeden argument, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2891">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-2892">Jeśli `expression`. Typ jest typem zdefiniowanym przez użytkownika, który definiuje jednoargumentowy operator not <xref:System.Reflection.MethodInfo> , który reprezentuje ten operator jako metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2892">If `expression`.Type is a user-defined type that defines the unary not operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2893">W przeciwnym razie `expression`, jeśli. Typ jest typem liczbowym, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2893">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2894">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2894">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2895">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2895">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2896">Jeśli `expression`. Typ jest możliwy do przypisania do typu argumentu metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2896">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2897">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2897">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2898">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2898">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2899">`expression`. Typ jest typem wartości null, a odpowiedni typ wartości niedopuszczający wartości null jest równy typowi argumentu metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2899">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2900">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2900">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-2901">Jeśli jest `null`to metoda implementująca, typ węzła to `expression`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2901">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="eb4ed-2902">Jeśli `expression`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2902">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2903">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2903">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2904"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2904"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2905"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2905"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2906"><paramref name="method" />is <see langword="null" /> i operator jednoargumentowy nie jest zdefiniowany dla <paramref name="expression" />elementu. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2906"><paramref name="method" /> is <see langword="null" /> and the unary not operator is not defined for <paramref name="expression" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-2907">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2907">-or-</span></span> 
 <span data-ttu-id="eb4ed-2908"><paramref name="expression" />. Typ (lub odpowiedni typ niedopuszczający wartości null, jeśli jest typem wartości null), nie można przypisać do typu argumentu metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2908"><paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NotEqual">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2909"><see cref="T:System.Linq.Expressions.BinaryExpression" /> Tworzy, który reprezentuje porównanie nierówności.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2909">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression NotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ NotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member NotEqual : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.NotEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2910"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2910">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2911"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2911">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2912"><see cref="T:System.Linq.Expressions.BinaryExpression" /> Tworzy, który reprezentuje porównanie nierówności.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2912">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2913"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2913">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2914">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2914">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2915"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2915">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2916">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwość jest. `true`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2916">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true`.</span></span> <span data-ttu-id="eb4ed-2917">W przeciwnym razie jest `false`to.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2917">Otherwise, it is `false`.</span></span> <span data-ttu-id="eb4ed-2918">Właściwość jest zawsze `false`. <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2918">The <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is always `false`.</span></span> <span data-ttu-id="eb4ed-2919"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2919">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2920">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2920">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2921">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2921">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2922">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2922">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2923"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator nierówności, oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2923">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the inequality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2924">W przeciwnym razie metoda implementująca `null`ma wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2924">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2925">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2925">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2926">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2926">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2927">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2927">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2928">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2928">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2929">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła <xref:System.Boolean>:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2929">If the following two conditions are satisfied, the node is lifted and the type of the node is <xref:System.Boolean>:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2930">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2930">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2931">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2931">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-2932">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2932">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2933">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2933">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2934">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2934">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-2935">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2935">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2936">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2936">The type of the node is <xref:System.Boolean>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2937"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2937"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2938">Nie zdefiniowano operatora nierówności dla elementu <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2938">The inequality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression NotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, bool liftToNull, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotEqual (left As Expression, right As Expression, liftToNull As Boolean, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ NotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, bool liftToNull, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member NotEqual : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * bool * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.NotEqual (left, right, liftToNull, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="liftToNull" Type="System.Boolean" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2939"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2939">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2940"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2940">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="liftToNull"><span data-ttu-id="eb4ed-2941"><see langword="true" />Aby ustawić <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> na <see langword="true" />; , aby <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> ustawić wartość .<see langword="false" /> <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2941"><see langword="true" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="true" />; <see langword="false" /> to set <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" /> to <see langword="false" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2942">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2942">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2943"><see cref="T:System.Linq.Expressions.BinaryExpression" /> Tworzy, który reprezentuje porównanie nierówności.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2943">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an inequality comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2944">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2944">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.IsLiftedToNull" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2945">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2945">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2946"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2946">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2947">Jeśli węzeł <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> zostanie zniesiony, właściwość jest `true` i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> właściwość jest równa `liftToNull`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2947">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> property is `true` and the <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> property is equal to `liftToNull`.</span></span> <span data-ttu-id="eb4ed-2948">W przeciwnym razie są oba `false`te elementy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2948">Otherwise, they are both `false`.</span></span> <span data-ttu-id="eb4ed-2949"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2949">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2950">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2950">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2951">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2951">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2952">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2952">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2953">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2953">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2954">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który <xref:System.Reflection.MethodInfo> przeciąża operator nierówności, to oznacza metodę implementującą metodę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2954">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the inequality operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2955">W przeciwnym razie metoda implementująca `null`ma wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2955">Otherwise, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2956">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2956">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2957">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2957">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2958">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2958">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2959">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2959">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2960">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony; Ponadto typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2960">If the following two conditions are satisfied, the node is lifted; also, the type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2961">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2961">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-2962">Zwracany typ metody implementującej to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2962">The return type of the implementing method is <xref:System.Boolean>.</span></span>  
  
 <span data-ttu-id="eb4ed-2963">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2963">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2964">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2964">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2965">Typ węzła to <xref:System.Boolean>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2965">The type of the node is <xref:System.Boolean>.</span></span>  
  
-   <span data-ttu-id="eb4ed-2966">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2966">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-2967">Typ <xref:System.Boolean> węzła dopuszcza wartość null, jeśli `liftToNull` jest `true` lub <xref:System.Boolean> Jeśli `liftToNull` jest `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2967">The type of the node is nullable <xref:System.Boolean> if `liftToNull` is `true` or <xref:System.Boolean> if `liftToNull` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-2968"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2968"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-2969"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2969"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-2970"><paramref name="method" />jest <see langword="null" /> i operator nierówności nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2970"><paramref name="method" /> is <see langword="null" /> and the inequality operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnesComplement">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2971">Zwraca wyrażenie reprezentujące te uzupełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2971">Returns the expression representing the ones complement.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression OnesComplement(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ OnesComplement(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member OnesComplement : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.OnesComplement expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2972">A <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2972">An <see cref="T:System.Linq.Expressions.Expression" />.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2973">Zwraca wyrażenie reprezentujące te uzupełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2973">Returns the expression representing the ones complement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2974">Wystąpienie elementu <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2974">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression OnesComplement(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ OnesComplement(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member OnesComplement : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.OnesComplement (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-2975">A <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2975">An <see cref="T:System.Linq.Expressions.Expression" />.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-2976"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2976">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2977">Zwraca wyrażenie reprezentujące te uzupełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2977">Returns the expression representing the ones complement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2978">Wystąpienie elementu <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2978">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Or">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-2979">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="OR" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2979">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Or(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Or(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Or : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Or (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-2980"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2980">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-2981"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2981">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-2982">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="OR" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2982">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-2983"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-2983">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-2984">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2984">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-2985"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2985">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-2986">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2986">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-2987">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2987">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-2988"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2988">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-2989">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2989">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-2990">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2990">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-2991">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2991">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-2992"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `OR` reprezentuje<xref:System.Reflection.MethodInfo>Typ zdefiniowany przez użytkownika, który przeciąża operator bitowy, to oznacza, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2992">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2993">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy całkowite lub logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2993">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-2994">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2994">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-2995">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2995">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-2996">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2996">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-2997">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2997">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-2998">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2998">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-2999">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-2999">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3000">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3000">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3001">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3001">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3002">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3002">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3003">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora bitowego `OR` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3003">The type of the node is the result type of the predefined bitwise `OR` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3004">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3004">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3005">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego `OR` operatora bitowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3005">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `OR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3006">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące logiczne lub operację.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3006">The following code example shows how to create an expression that represents a logical OR operation.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#28)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3007"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3007"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3008">Nie zdefiniowano operatora bitowego <see langword="OR" /> dla elementu. <paramref name="left" /> Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3008">The bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Or(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Or (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Or(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Or : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Or (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3009"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3009">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3010"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3010">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3011">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3011">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3012">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową <see langword="OR" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3012">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise <see langword="OR" /> operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3013">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3013">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Or" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3014">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3014">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3015"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3015">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3016">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3016">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3017">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3017">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3018"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3018">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3019">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3019">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3020">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3020">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3021">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3021">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3022">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3022">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3023">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` `OR` reprezentuje<xref:System.Reflection.MethodInfo> typ zdefiniowany przez użytkownika, który przeciąża operator bitowy, to oznacza metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3023">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3024">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy całkowite lub logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3024">Otherwise, if `left`.Type and `right`.Type are integral or Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3025">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3025">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3026">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3026">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3027">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3027">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3028">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3028">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3029">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3029">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3030">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3030">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3031">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3031">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3032">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3032">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3033">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3033">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3034">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora bitowego `OR` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3034">The type of the node is the result type of the predefined bitwise `OR` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3035">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3035">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3036">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego `OR` operatora bitowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3036">The type of the node is the nullable type that corresponds to the result type of the predefined bitwise `OR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3037"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3037"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3038"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3038"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3039"><paramref name="method" />jest <see langword="null" /> i operatorem <see langword="OR" /> bitowym nie jest zdefiniowany <paramref name="left" />dla. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3039"><paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3040">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową lub przypisanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3040">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member OrAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.OrAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3041"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3041">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3042"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3042">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3043">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową lub przypisanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3043">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3044"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3044">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member OrAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.OrAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3045"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3045">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3046"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3046">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3047">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3047">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3048">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową lub przypisanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3048">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3049">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3049">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member OrAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.OrAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3050"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3050">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3051"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3051">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3052">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3052">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-3053">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3053">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3054">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację bitową lub przypisanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3054">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise OR assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3055">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3055">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrElse">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3056">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację warunkową <see langword="OR" /> , która oblicza drugi operand tylko wtedy, gdy <see langword="false" />pierwszy operator szacuje wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3056">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operator evaluates to <see langword="false" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrElse(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrElse (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrElse(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member OrElse : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.OrElse (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3057"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3057">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3058"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3058">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3059">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację warunkową <see langword="OR" /> , która oblicza drugi operand tylko wtedy, gdy <see langword="false" />pierwszy operand zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3059">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3060"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3060">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3061">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3061">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3062"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3062">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3063">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3063">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3064">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3064">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3065"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3065">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3066">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3066">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3067">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3067">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3068">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3068">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3069"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `OR` reprezentuje<xref:System.Reflection.MethodInfo>Typ zdefiniowany przez użytkownika, który przeciąża operator bitowy, to oznacza, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3069">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="eb4ed-3070">Operator warunkowy `OR` nie może być przeciążony w C# ani Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3070">The conditional `OR` operator cannot be overloaded in C# or Visual Basic.</span></span> <span data-ttu-id="eb4ed-3071">Operator warunkowy `OR` jest jednak oceniany przy użyciu operatora bitowego `OR` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3071">However, the conditional `OR` operator is evaluated by using the bitwise `OR` operator.</span></span> <span data-ttu-id="eb4ed-3072">W ten sposób zdefiniowane przez użytkownika Przeciążenie operatora bitowego `OR` może być metodą implementującą dla tego typu węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3072">Thus, a user-defined overload of the bitwise `OR` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="eb4ed-3073">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3073">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3074">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3074">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3075">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3075">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3076">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3076">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3077">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3077">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3078">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3078">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3079">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3079">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3080">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3080">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3081">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3081">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3082">`left`. Wpisz i `right`. Typ jest tym samym typem Boolean.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3082">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="eb4ed-3083">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3083">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3084">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora warunkowego `OR` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3084">The type of the node is the result type of the predefined conditional `OR` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3085">Jeśli `left`. Wpisz i `right`. Typ dopuszcza wartość null, węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3085">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3086">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego `OR` operatora warunkowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3086">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `OR` operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3087">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie reprezentujące operację logiczną `OR` , która oblicza drugi operand tylko wtedy, gdy pierwszy operand zwraca wartość. `false`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3087">The following code example shows how to create an expression that represents a logical `OR` operation that evaluates the second operand only if the first operand evaluates to `false`.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#29)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3088"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3088"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3089">Nie zdefiniowano operatora bitowego <see langword="OR" /> dla elementu. <paramref name="left" /> Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3089">The bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-3090">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3090">-or-</span></span> 
 <span data-ttu-id="eb4ed-3091"><paramref name="left" />. Wpisz i <paramref name="right" />. Typ nie jest tym samym typem Boolean.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3091"><paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrElse">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression OrElse(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrElse (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ OrElse(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member OrElse : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.OrElse (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3092"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3092">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3093"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3093">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3094">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3094">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3095">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację warunkową <see langword="OR" /> , która oblicza drugi operand tylko wtedy, gdy <see langword="false" />pierwszy operand zwraca wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3095">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a conditional <see langword="OR" /> operation that evaluates the second operand only if the first operand evaluates to <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3096">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3096">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.OrElse" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3097">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3097">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3098"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3098">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3099">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3099">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3100">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3100">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3101"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3101">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3102">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3102">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3103">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3103">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3104">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3104">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3105">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3105">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-3106">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` `OR` reprezentuje<xref:System.Reflection.MethodInfo> typ zdefiniowany przez użytkownika, który przeciąża operator bitowy, to oznacza metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3106">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the bitwise `OR` operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="eb4ed-3107">Operator warunkowy `OR` nie może być przeciążony w C# ani Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3107">The conditional `OR` operator cannot be overloaded in C# or Visual Basic.</span></span> <span data-ttu-id="eb4ed-3108">Operator warunkowy `OR` jest jednak oceniany przy użyciu operatora bitowego `OR` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3108">However, the conditional `OR` operator is evaluated by using the bitwise `OR` operator.</span></span> <span data-ttu-id="eb4ed-3109">W ten sposób zdefiniowane przez użytkownika Przeciążenie operatora bitowego `OR` może być metodą implementującą dla tego typu węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3109">Thus, a user-defined overload of the bitwise `OR` operator can be the implementing method for this node type.</span></span>  
  
-   <span data-ttu-id="eb4ed-3110">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy logiczne, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3110">Otherwise, if `left`.Type and `right`.Type are Boolean types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3111">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3111">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3112">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3112">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3113">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3113">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3114">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3114">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3115">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3115">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3116">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3116">`left`.Type and `right`.Type are both value types of which at least one is nullable, and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3117">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3117">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3118">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3118">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3119">`left`. Wpisz i `right`. Typ jest tym samym typem Boolean.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3119">`left`.Type and `right`.Type are the same Boolean type.</span></span>  
  
-   <span data-ttu-id="eb4ed-3120">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3120">If `left`.Type and `right`.Type are non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3121">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora warunkowego `OR` .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3121">The type of the node is the result type of the predefined conditional `OR` operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3122">Jeśli `left`. Wpisz i `right`. Typ dopuszcza wartość null, węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3122">If `left`.Type and `right`.Type are nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3123">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego `OR` operatora warunkowego.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3123">The type of the node is the nullable type that corresponds to the result type of the predefined conditional `OR` operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3124"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3124"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3125"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3125"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3126"><paramref name="method" />jest <see langword="null" /> i operatorem <see langword="OR" /> bitowym nie jest zdefiniowany <paramref name="left" />dla. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3126"><paramref name="method" /> is <see langword="null" /> and the bitwise <see langword="OR" /> operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-3127">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3127">-or-</span></span> 
 <span data-ttu-id="eb4ed-3128"><paramref name="method" />jest <see langword="null" /> i <paramref name="left" />. Wpisz i <paramref name="right" />. Typ nie jest tym samym typem Boolean.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3128"><paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and <paramref name="right" />.Type are not the same Boolean type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parameter">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3129"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Tworzy węzeł, który może służyć do identyfikowania parametru lub zmiennej w drzewie wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3129">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Parameter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Parameter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Parameter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Parameter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Parameter : Type -&gt; System.Linq.Expressions.ParameterExpression" Usage="System.Linq.Expressions.Expression.Parameter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-3130">Typ parametru lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3130">The type of the parameter or variable.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3131"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Tworzy węzeł, który może służyć do identyfikowania parametru lub zmiennej w drzewie wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3131">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3132"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Węzeł o określonej nazwie i typie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3132">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-3133">Poniższy przykład pokazuje, jak utworzyć <xref:System.Linq.Expressions.MethodCallExpression> obiekt, który drukuje wartość <xref:System.Linq.Expressions.ParameterExpression> obiektu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3133">The following example demonstrates how to create a <xref:System.Linq.Expressions.MethodCallExpression> object that prints the value of a <xref:System.Linq.Expressions.ParameterExpression> object.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#49](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#49)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#49](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Parameter (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Parameter(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Parameter(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Parameter : Type * string -&gt; System.Linq.Expressions.ParameterExpression" Usage="System.Linq.Expressions.Expression.Parameter (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-3134">Typ parametru lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3134">The type of the parameter or variable.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-3135">Nazwa parametru lub zmiennej używana tylko do celów debugowania lub drukowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3135">The name of the parameter or variable, used for debugging or printing purpose only.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3136"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Tworzy węzeł, który może służyć do identyfikowania parametru lub zmiennej w drzewie wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3136">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3137"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Parameter" /> A, który <see cref="P:System.Linq.Expressions.ParameterExpression.Name" /> ma<see cref="P:System.Linq.Expressions.Expression.Type" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.ParameterExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3137">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Parameter" /> and the <see cref="P:System.Linq.Expressions.Expression.Type" /> and <see cref="P:System.Linq.Expressions.ParameterExpression.Name" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3138"><paramref name="type" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3138"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostDecrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3139">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący przypisanie wyrażenia, po którym następuje kolejne zmniejszenie o 1 pierwotne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3139">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostDecrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostDecrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member PostDecrementAssign : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.PostDecrementAssign expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3140"><see cref="T:System.Linq.Expressions.Expression" /> Do zastosowania operacji na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3140">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3141">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący przypisanie wyrażenia, po którym następuje kolejne zmniejszenie o 1 pierwotne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3141">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3142"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wynikowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3142">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostDecrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostDecrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member PostDecrementAssign : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.PostDecrementAssign (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3143"><see cref="T:System.Linq.Expressions.Expression" /> Do zastosowania operacji na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3143">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3144"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3144">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3145">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący przypisanie wyrażenia, po którym następuje kolejne zmniejszenie o 1 pierwotne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3145">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent decrement by 1 of the original expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3146"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wynikowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3146">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PostIncrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3147">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący przypisanie wyrażenia, po którym następuje kolejne zwiększenie o 1 pierwotne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3147">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PostIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostIncrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostIncrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member PostIncrementAssign : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.PostIncrementAssign expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3148"><see cref="T:System.Linq.Expressions.Expression" /> Do zastosowania operacji na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3148">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3149">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący przypisanie wyrażenia, po którym następuje kolejne zwiększenie o 1 pierwotne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3149">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3150"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wynikowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3150">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PostIncrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PostIncrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member PostIncrementAssign : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.PostIncrementAssign (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3151"><see cref="T:System.Linq.Expressions.Expression" /> Do zastosowania operacji na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3151">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3152"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3152">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3153">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący przypisanie wyrażenia, po którym następuje kolejne zwiększenie o 1 pierwotne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3153">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the assignment of the expression followed by a subsequent increment by 1 of the original expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3154"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wynikowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3154">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Power">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3155">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący podnoszenie liczby do potęgi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3155">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Power(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Power (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Power(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Power : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Power (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3156"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3156">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3157"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3157">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3158">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący podnoszenie liczby do potęgi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3158">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3159"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3159">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3160">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3160">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3161"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3161">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3162">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3162">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3163">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3163">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3164"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3164">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3165">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3165">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3166">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3166">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3167">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3167">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3168"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator wykładniczy, oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3168">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the exponentiation operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3169">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typ jest obu <xref:System.Double>, Metoda implementująca to <xref:System.Math.Pow%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3169">Otherwise, if `left`.Type and `right`.Type are both <xref:System.Double>, the implementing method is <xref:System.Math.Pow%2A>.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3170">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3170">Node Type and Lifted versus Non-Lifted</span></span>  
  
-   <span data-ttu-id="eb4ed-3171">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3171">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3172">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3172">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3173">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3173">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3174">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3174">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3175">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3175">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3176"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3176"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3177">Nie zdefiniowano operatora potęgowania dla elementu <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3177">The exponentiation operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-3178">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3178">-or-</span></span> 
 <span data-ttu-id="eb4ed-3179"><paramref name="left" />. Wpisz i/lub <paramref name="right" />. Typ nie <see cref="T:System.Double" />jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3179"><paramref name="left" />.Type and/or <paramref name="right" />.Type are not <see cref="T:System.Double" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Power(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Power (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Power(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Power : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Power (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3180"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3180">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3181"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3181">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3182">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3182">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3183">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący podnoszenie liczby do potęgi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3183">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising a number to a power.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3184">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3184">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Power" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3185">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3185">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3186"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3186">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3187">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3187">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3188">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3188">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3189"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3189">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3190">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3190">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3191">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3191">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3192">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3192">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3193">Jeśli `method` nie jest `null` i reprezentuje metodę, `static` która nie jest typu void`Shared` (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3193">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3194">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, <xref:System.Reflection.MethodInfo> który przeciąża operator wykładniczy, oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3194">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the exponentiation operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3195">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typ jest obu <xref:System.Double>, Metoda implementująca to <xref:System.Math.Pow%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3195">Otherwise, if `left`.Type and `right`.Type are both <xref:System.Double>, the implementing method is <xref:System.Math.Pow%2A>.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3196">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3196">Node Type and Lifted versus Non-Lifted</span></span>  
  
-   <span data-ttu-id="eb4ed-3197">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3197">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3198">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3198">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3199">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3199">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3200">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3200">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3201">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3201">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3202"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3202"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3203"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3203"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3204"><paramref name="method" />is <see langword="null" /> i operator wykładniczy nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3204"><paramref name="method" /> is <see langword="null" /> and the exponentiation operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-3205">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3205">-or-</span></span> 
 <span data-ttu-id="eb4ed-3206"><paramref name="method" />jest <see langword="null" /> i <paramref name="left" />. Wpisz i/lub <paramref name="right" />. Typ nie <see cref="T:System.Double" />jest.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3206"><paramref name="method" /> is <see langword="null" /> and <paramref name="left" />.Type and/or <paramref name="right" />.Type are not <see cref="T:System.Double" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="PowerAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3207">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący generowanie wyrażenia do potęgi i przypisywanie wyniku z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3207">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member PowerAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.PowerAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3208"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3208">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3209"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3209">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3210">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący generowanie wyrażenia do potęgi i przypisywanie wyniku z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3210">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3211"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3211">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member PowerAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.PowerAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3212"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3212">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3213"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3213">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3214">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3214">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3215">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący generowanie wyrażenia do potęgi i przypisywanie wyniku z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3215">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3216">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3216">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PowerAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression PowerAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowerAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ PowerAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member PowerAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.PowerAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3217"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3217">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3218"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3218">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3219">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3219">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-3220">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3220">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3221">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący generowanie wyrażenia do potęgi i przypisywanie wyniku z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3221">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents raising an expression to a power and assigning the result back to the expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3222">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3222">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.PowerAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PreDecrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3223"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy, która zmniejsza wyrażenie o 1 i przypisuje wynik z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3223">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PreDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreDecrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreDecrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member PreDecrementAssign : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.PreDecrementAssign expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3224"><see cref="T:System.Linq.Expressions.Expression" /> Do zastosowania operacji na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3224">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3225"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy, która zmniejsza wyrażenie o 1 i przypisuje wynik z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3225">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3226"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wynikowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3226">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreDecrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreDecrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreDecrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member PreDecrementAssign : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.PreDecrementAssign (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3227"><see cref="T:System.Linq.Expressions.Expression" /> Do zastosowania operacji na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3227">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3228"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3228">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3229"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy, która zmniejsza wyrażenie o 1 i przypisuje wynik z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3229">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that decrements the expression by 1 and assigns the result back to the expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3230"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wynikowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3230">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PreIncrementAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3231"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy program, który zwiększa wyrażenie o 1 i przypisuje wynik z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3231">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PreIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreIncrementAssign(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreIncrementAssign(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member PreIncrementAssign : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.PreIncrementAssign expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3232"><see cref="T:System.Linq.Expressions.Expression" /> Do zastosowania operacji na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3232">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3233"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy program, który zwiększa wyrażenie o 1 i przypisuje wynik z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3233">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3234"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wynikowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3234">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreIncrementAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression PreIncrementAssign(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ PreIncrementAssign(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member PreIncrementAssign : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.PreIncrementAssign (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3235"><see cref="T:System.Linq.Expressions.Expression" /> Do zastosowania operacji na.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3235">An <see cref="T:System.Linq.Expressions.Expression" /> to apply the operations on.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3236"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3236">A <see cref="T:System.Reflection.MethodInfo" /> that represents the implementing method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3237"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy program, który zwiększa wyrażenie o 1 i przypisuje wynik z powrotem do wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3237">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that increments the expression by 1 and assigns the result back to the expression.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3238"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wynikowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3238">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the resultant expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3239">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3239">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo propertyAccessor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo propertyAccessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ propertyAccessor);" />
      <MemberSignature Language="F#" Value="static member Property : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.Property (expression, propertyAccessor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyAccessor" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3240"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3240">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span></span> <span data-ttu-id="eb4ed-3241">Może to mieć wartość null w przypadku właściwości statycznych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3241">This can be null for static properties.</span></span></param>
        <param name="propertyAccessor"><span data-ttu-id="eb4ed-3242"><see cref="T:System.Reflection.MethodInfo" /> Reprezentuje metodę metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3242">The <see cref="T:System.Reflection.MethodInfo" /> that represents a property accessor method.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3243">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do właściwości przy użyciu metody akcesora właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3243">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property by using a property accessor method.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3244">A <see cref="T:System.Linq.Expressions.MemberExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> <see cref="T:System.Reflection.PropertyInfo" /> <paramref name="propertyAccessor" />Właściwość równą <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, <paramref name="expression" /> Właściwość ustawiona na i Właściwość ustawiona na, która reprezentuje właściwość, która jest używana w. <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3244">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property accessed in <paramref name="propertyAccessor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3245">Właściwość będąca wynikiem <xref:System.Linq.Expressions.MemberExpression> <xref:System.Reflection.PropertyInfo.PropertyType%2A> jest<xref:System.Linq.Expressions.MemberExpression.Member%2A>równawłaściwości. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3245">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of <xref:System.Linq.Expressions.MemberExpression.Member%2A>.</span></span>  
  
 <span data-ttu-id="eb4ed-3246">`propertyAccessor` Jeśli metoda reprezentowana przez is jest `static` (`Shared` w Visual Basic), `expression` może być. `null`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3246">If the method represented by `propertyAccessor` is `static` (`Shared` in Visual Basic), `expression` can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3247"><paramref name="propertyAccessor" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3247"><paramref name="propertyAccessor" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-3248">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3248">-or-</span></span> 
<span data-ttu-id="eb4ed-3249">Metoda, która <paramref name="propertyAccessor" /> reprezentuje nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) i <paramref name="expression" /> ma <see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3249">The method that <paramref name="propertyAccessor" /> represents is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3250"><paramref name="expression" />. Nie można przypisać typu do typu deklarującego metody reprezentowanej przez <paramref name="propertyAccessor" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3250"><paramref name="expression" />.Type is not assignable to the declaring type of the method represented by <paramref name="propertyAccessor" />.</span></span>  
  
<span data-ttu-id="eb4ed-3251">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3251">-or-</span></span> 
<span data-ttu-id="eb4ed-3252">Metoda, która <paramref name="propertyAccessor" /> reprezentuje, nie jest metodą metody dostępu do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3252">The method that <paramref name="propertyAccessor" /> represents is not a property accessor method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.PropertyInfo property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Reflection.PropertyInfo property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::Reflection::PropertyInfo ^ property);" />
      <MemberSignature Language="F#" Value="static member Property : System.Linq.Expressions.Expression * System.Reflection.PropertyInfo -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.Property (expression, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="property" Type="System.Reflection.PropertyInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3253"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3253">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property equal to.</span></span> <span data-ttu-id="eb4ed-3254">Może to mieć wartość null w przypadku właściwości statycznych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3254">This can be null for static properties.</span></span></param>
        <param name="property"><span data-ttu-id="eb4ed-3255"><see cref="T:System.Reflection.PropertyInfo" /> Aby<see cref="P:System.Linq.Expressions.MemberExpression.Member" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3255">The <see cref="T:System.Reflection.PropertyInfo" /> to set the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3256">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3256">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3257"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> A, który <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> ma<see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.MemberExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3257">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> and the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> and <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3258">Właściwość będąca wynikiem <xref:System.Linq.Expressions.MemberExpression> <xref:System.Reflection.PropertyInfo.PropertyType%2A> jest<xref:System.Linq.Expressions.MemberExpression.Member%2A>równawłaściwości. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3258">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of <xref:System.Linq.Expressions.MemberExpression.Member%2A>.</span></span>  
  
 <span data-ttu-id="eb4ed-3259">`property` Jeśli właściwość reprezentowana przez is jest `static` (`Shared` w Visual Basic), `expression` może być. `null`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3259">If the property represented by `property` is `static` (`Shared` in Visual Basic), `expression` can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3260"><paramref name="property" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3260"><paramref name="property" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb4ed-3261">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3261">-or-</span></span> 
<span data-ttu-id="eb4ed-3262">Właściwość, która <paramref name="property" /> reprezentuje nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) i <paramref name="expression" /> ma <see langword="null" />wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3262">The property that <paramref name="property" /> represents is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic) and <paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3263"><paramref name="expression" />. Nie można przypisać typu do typu deklarującego właściwości, która <paramref name="property" /> reprezentuje.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3263"><paramref name="expression" />.Type is not assignable to the declaring type of the property that <paramref name="property" /> represents.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member Property : System.Linq.Expressions.Expression * string -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.Property (expression, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3264">Zawierający właściwość o nazwie<paramref name="propertyName" />. <see cref="T:System.Linq.Expressions.Expression" /> <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3264">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a property named <paramref name="propertyName" />.</span></span> <span data-ttu-id="eb4ed-3265">Może to być <see langword="null" /> dla właściwości statycznych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3265">This can be <see langword="null" /> for static properties.</span></span></param>
        <param name="propertyName"><span data-ttu-id="eb4ed-3266">Nazwa właściwości do uzyskania dostępu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3266">The name of a property to be accessed.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3267">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3267">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3268">A <see cref="T:System.Linq.Expressions.MemberExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> <paramref name="expression" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.MemberExpression.Member" /> , <see cref="T:System.Reflection.PropertyInfo" /> <paramref name="propertyName" />Właściwość ustawiona na, i Właściwość ustawiona na, która reprezentuje właściwość, która jest oznaczona przez. <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3268">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> that represents the property denoted by <paramref name="propertyName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3269"><xref:System.Linq.Expressions.MemberExpression> <xref:System.Reflection.PropertyInfo.PropertyType%2A> <xref:System.Reflection.PropertyInfo> Właściwość będąca wynikiem jest równa właściwości, która reprezentuje właściwość, która jest oznaczona przez `propertyName`. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3269">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property of the <xref:System.Reflection.PropertyInfo> that represents the property denoted by `propertyName`.</span></span>  
  
 <span data-ttu-id="eb4ed-3270">Ta metoda wyszukuje `expression`. Typ i jego typy podstawowe dla właściwości, która ma nazwę `propertyName`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3270">This method searches `expression`.Type and its base types for a property that has the name `propertyName`.</span></span> <span data-ttu-id="eb4ed-3271">Właściwości publiczne mają pierwszeństwo przed niepublicznymi właściwościami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3271">Public properties are given preference over non-public properties.</span></span> <span data-ttu-id="eb4ed-3272">Jeśli zostanie znaleziona zgodna właściwość, ta metoda przekazuje `expression` <xref:System.Reflection.PropertyInfo> i reprezentuje tę właściwość do <xref:System.Linq.Expressions.Expression.Property%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3272">If a matching property is found, this method passes `expression` and the <xref:System.Reflection.PropertyInfo> that represents that property to <xref:System.Linq.Expressions.Expression.Property%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3273">Poniższy przykład pokazuje, jak utworzyć wyrażenie reprezentujące dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3273">The following example shows how to create an expression that represents accessing a property.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#38](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#38)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3274"><paramref name="expression" />lub <paramref name="propertyName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3274"><paramref name="expression" /> or <paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3275">Nie zdefiniowano <paramref name="propertyName" /> właściwości o nazwie <paramref name="expression" />w. Typ lub jego typy podstawowe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3275">No property named <paramref name="propertyName" /> is defined in <paramref name="expression" />.Type or its base types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, indexer As PropertyInfo, arguments As IEnumerable(Of Expression)) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Property : System.Linq.Expressions.Expression * System.Reflection.PropertyInfo * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.IndexExpression" Usage="System.Linq.Expressions.Expression.Property (instance, indexer, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-3276">Obiekt, do którego należy właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3276">The object to which the property belongs.</span></span> <span data-ttu-id="eb4ed-3277">Jeśli właściwość jest statyczna/współdzielona, musi mieć wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3277">If the property is static/shared, it must be null.</span></span></param>
        <param name="indexer"><span data-ttu-id="eb4ed-3278"><see cref="T:System.Reflection.PropertyInfo" /> Reprezentuje właściwość do indeksowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3278">The <see cref="T:System.Reflection.PropertyInfo" /> that represents the property to index.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-3279"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Obiekty,któresą<see cref="T:System.Linq.Expressions.Expression" /> używane do indeksowania właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3279">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3280">Tworzy element <see cref="T:System.Linq.Expressions.IndexExpression" /> reprezentujący dostęp do właściwości indeksowanej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3280">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3281">Utworzony <see cref="T:System.Linq.Expressions.IndexExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3281">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, class System.Reflection.PropertyInfo indexer, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, indexer As PropertyInfo, ParamArray arguments As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::Reflection::PropertyInfo ^ indexer, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Property : System.Linq.Expressions.Expression * System.Reflection.PropertyInfo * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.IndexExpression" Usage="System.Linq.Expressions.Expression.Property (instance, indexer, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indexer" Type="System.Reflection.PropertyInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-3282">Obiekt, do którego należy właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3282">The object to which the property belongs.</span></span> <span data-ttu-id="eb4ed-3283">Jeśli właściwość jest statyczna/współdzielona, musi mieć wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3283">If the property is static/shared, it must be null.</span></span></param>
        <param name="indexer"><span data-ttu-id="eb4ed-3284"><see cref="T:System.Reflection.PropertyInfo" /> Reprezentuje właściwość do indeksowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3284">The <see cref="T:System.Reflection.PropertyInfo" /> that represents the property to index.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-3285">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów, która jest używana do indeksowania właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3285">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3286">Tworzy element <see cref="T:System.Linq.Expressions.IndexExpression" /> reprezentujący dostęp do właściwości indeksowanej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3286">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3287">Utworzony <see cref="T:System.Linq.Expressions.IndexExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3287">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, string propertyName, params System.Linq.Expressions.Expression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.IndexExpression Property(class System.Linq.Expressions.Expression instance, string propertyName, class System.Linq.Expressions.Expression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Property (instance As Expression, propertyName As String, ParamArray arguments As Expression()) As IndexExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::IndexExpression ^ Property(System::Linq::Expressions::Expression ^ instance, System::String ^ propertyName, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Property : System.Linq.Expressions.Expression * string * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.IndexExpression" Usage="System.Linq.Expressions.Expression.Property (instance, propertyName, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.IndexExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="propertyName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arguments" Type="System.Linq.Expressions.Expression[]" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="eb4ed-3288">Obiekt, do którego należy właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3288">The object to which the property belongs.</span></span> <span data-ttu-id="eb4ed-3289">Jeśli właściwość jest statyczna/współdzielona, musi mieć wartość null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3289">If the property is static/shared, it must be null.</span></span></param>
        <param name="propertyName"><span data-ttu-id="eb4ed-3290">Nazwa indeksatora.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3290">The name of the indexer.</span></span></param>
        <param name="arguments"><span data-ttu-id="eb4ed-3291">Tablica <see cref="T:System.Linq.Expressions.Expression" /> obiektów, która jest używana do indeksowania właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3291">An array of <see cref="T:System.Linq.Expressions.Expression" /> objects that are used to index the property.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3292">Tworzy element <see cref="T:System.Linq.Expressions.IndexExpression" /> reprezentujący dostęp do właściwości indeksowanej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3292">Creates an <see cref="T:System.Linq.Expressions.IndexExpression" /> representing the access to an indexed property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3293">Utworzony <see cref="T:System.Linq.Expressions.IndexExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3293">The created <see cref="T:System.Linq.Expressions.IndexExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, Type type, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression Property(class System.Linq.Expressions.Expression expression, class System.Type type, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ Property(System::Linq::Expressions::Expression ^ expression, Type ^ type, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member Property : System.Linq.Expressions.Expression * Type * string -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.Property (expression, type, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="propertyName" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3294">Obiekt zawierający właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3294">The containing object of the property.</span></span> <span data-ttu-id="eb4ed-3295">Może to mieć wartość null w przypadku właściwości statycznych.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3295">This can be null for static properties.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-3296"><see cref="P:System.Linq.Expressions.Expression.Type" /> Zawiera właściwość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3296">The <see cref="P:System.Linq.Expressions.Expression.Type" /> that contains the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="eb4ed-3297">Właściwość, do której ma zostać uzyskany dostęp.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3297">The property to be accessed.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3298"><see cref="T:System.Linq.Expressions.MemberExpression" /> Tworzy dostęp do właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3298">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> accessing a property.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3299">Utworzony <see cref="T:System.Linq.Expressions.MemberExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3299">The created <see cref="T:System.Linq.Expressions.MemberExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyOrField">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.MemberExpression PropertyOrField (System.Linq.Expressions.Expression expression, string propertyOrFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.MemberExpression PropertyOrField(class System.Linq.Expressions.Expression expression, string propertyOrFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::MemberExpression ^ PropertyOrField(System::Linq::Expressions::Expression ^ expression, System::String ^ propertyOrFieldName);" />
      <MemberSignature Language="F#" Value="static member PropertyOrField : System.Linq.Expressions.Expression * string -&gt; System.Linq.Expressions.MemberExpression" Usage="System.Linq.Expressions.Expression.PropertyOrField (expression, propertyOrFieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.MemberExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="propertyOrFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3300">, Który <see cref="T:System.Linq.Expressions.Expression" />zawierawłaściwość lub pole o nazwie <paramref name="propertyOrFieldName" />. <see cref="P:System.Linq.Expressions.Expression.Type" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3300">An <see cref="T:System.Linq.Expressions.Expression" /> whose <see cref="P:System.Linq.Expressions.Expression.Type" /> contains a property or field named <paramref name="propertyOrFieldName" />.</span></span> <span data-ttu-id="eb4ed-3301">Może to mieć wartość null w przypadku statycznych elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3301">This can be null for static members.</span></span></param>
        <param name="propertyOrFieldName"><span data-ttu-id="eb4ed-3302">Nazwa właściwości lub pola do uzyskania dostępu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3302">The name of a property or field to be accessed.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3303">Tworzy element <see cref="T:System.Linq.Expressions.MemberExpression" /> reprezentujący dostęp do właściwości lub pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3303">Creates a <see cref="T:System.Linq.Expressions.MemberExpression" /> that represents accessing a property or field.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3304">A <see cref="T:System.Linq.Expressions.MemberExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" /> <paramref name="expression" /> Właściwośćrówną<see cref="P:System.Linq.Expressions.MemberExpression.Member" /> , <see cref="T:System.Reflection.PropertyInfo" /> <see cref="T:System.Reflection.FieldInfo" /> Właściwość ustawiona na, i Właściwość ustawiona na lub, która reprezentuje właściwość lub pole <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> wskazywane przez <paramref name="propertyOrFieldName" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3304">A <see cref="T:System.Linq.Expressions.MemberExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.MemberAccess" />, the <see cref="P:System.Linq.Expressions.MemberExpression.Expression" /> property set to <paramref name="expression" />, and the <see cref="P:System.Linq.Expressions.MemberExpression.Member" /> property set to the <see cref="T:System.Reflection.PropertyInfo" /> or <see cref="T:System.Reflection.FieldInfo" /> that represents the property or field denoted by <paramref name="propertyOrFieldName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3305"><xref:System.Reflection.FieldInfo.FieldType%2A> <xref:System.Reflection.PropertyInfo.PropertyType%2A> <xref:System.Reflection.PropertyInfo> `propertyOrFieldName`Właściwość będąca wynikiem <xref:System.Linq.Expressions.MemberExpression> jest równa lub właściwości lub<xref:System.Reflection.FieldInfo>(odpowiednio), która reprezentuje właściwość lub pole oznaczone przez. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3305">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.MemberExpression> is equal to the <xref:System.Reflection.PropertyInfo.PropertyType%2A> or <xref:System.Reflection.FieldInfo.FieldType%2A> properties of the <xref:System.Reflection.PropertyInfo> or <xref:System.Reflection.FieldInfo>, respectively, that represents the property or field denoted by `propertyOrFieldName`.</span></span>  
  
 <span data-ttu-id="eb4ed-3306">Ta metoda wyszukuje `expression`. Typ i jego typy podstawowe dla właściwości lub pola, które ma nazwę `propertyOrFieldName`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3306">This method searches `expression`.Type and its base types for a property or field that has the name `propertyOrFieldName`.</span></span> <span data-ttu-id="eb4ed-3307">Właściwości publiczne i pola mają pierwszeństwo przed niepublicznymi właściwościami i polami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3307">Public properties and fields are given preference over non-public properties and fields.</span></span> <span data-ttu-id="eb4ed-3308">Ponadto właściwości mają pierwszeństwo przed polami.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3308">Also, properties are given preference over fields.</span></span> <span data-ttu-id="eb4ed-3309">Jeśli zostanie znaleziona zgodna właściwość lub pole, ta metoda przekazuje `expression` <xref:System.Reflection.PropertyInfo> i lub <xref:System.Reflection.FieldInfo> reprezentuje tę właściwość lub pole odpowiednio do <xref:System.Linq.Expressions.Expression.Property%2A> lub <xref:System.Linq.Expressions.Expression.Field%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3309">If a matching property or field is found, this method passes `expression` and the <xref:System.Reflection.PropertyInfo> or <xref:System.Reflection.FieldInfo> that represents that property or field to <xref:System.Linq.Expressions.Expression.Property%2A> or <xref:System.Linq.Expressions.Expression.Field%2A>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3310">Poniższy przykład pokazuje, jak utworzyć wyrażenie reprezentujące dostęp do właściwości lub pola.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3310">The following example shows how to create an expression that represents accessing a property or field.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#39)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#39)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3311"><paramref name="expression" />lub <paramref name="propertyOrFieldName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3311"><paramref name="expression" /> or <paramref name="propertyOrFieldName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3312">Nie zdefiniowano właściwości ani <paramref name="propertyOrFieldName" /> pola o nazwie <paramref name="expression" />w elemencie. Typ lub jego typy podstawowe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3312">No property or field named <paramref name="propertyOrFieldName" /> is defined in <paramref name="expression" />.Type or its base types.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Quote">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Quote (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Quote(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Quote(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member Quote : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Quote expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3313"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3313">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3314">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący wyrażenie, które ma stałą wartość typu <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3314">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an expression that has a constant value of type <see cref="T:System.Linq.Expressions.Expression" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3315">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Quote" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3315">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Quote" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3316">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> reprezentuje typ <xref:System.Linq.Expressions.Expression%601>skonstruowany, gdzie argument typu jest typem reprezentowane przez `expression`. <xref:System.Linq.Expressions.Expression.Type%2A> Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3316">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> represents the constructed type <xref:System.Linq.Expressions.Expression%601>, where the type argument is the type represented by `expression`.Type.</span></span> <span data-ttu-id="eb4ed-3317"><xref:System.Linq.Expressions.UnaryExpression.Method%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3317">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property is `null`.</span></span> <span data-ttu-id="eb4ed-3318">Oba <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> i <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> są .`false`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3318">Both <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> are `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3319"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3319"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression Reduce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Reduce() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Reduce" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Reduce () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::Expressions::Expression ^ Reduce();" />
      <MemberSignature Language="F#" Value="abstract member Reduce : unit -&gt; System.Linq.Expressions.Expression&#xA;override this.Reduce : unit -&gt; System.Linq.Expressions.Expression" Usage="expression.Reduce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb4ed-3320">Redukuje ten węzeł do prostszego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3320">Reduces this node to a simpler expression.</span></span> <span data-ttu-id="eb4ed-3321">Jeśli redukcja zwróci wartość true, powinna zwracać prawidłowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3321">If CanReduce returns true, this should return a valid expression.</span></span> <span data-ttu-id="eb4ed-3322">Ta metoda może zwrócić inny węzeł, który musi zostać zmniejszony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3322">This method can return another node which itself must be reduced.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3323">Zredukowane wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3323">The reduced expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceAndCheck">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression ReduceAndCheck ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression ReduceAndCheck() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReduceAndCheck" />
      <MemberSignature Language="VB.NET" Value="Public Function ReduceAndCheck () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ ReduceAndCheck();" />
      <MemberSignature Language="F#" Value="member this.ReduceAndCheck : unit -&gt; System.Linq.Expressions.Expression" Usage="expression.ReduceAndCheck " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb4ed-3324">Redukuje ten węzeł do prostszego wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3324">Reduces this node to a simpler expression.</span></span> <span data-ttu-id="eb4ed-3325">Jeśli redukcja zwróci wartość true, powinna zwracać prawidłowe wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3325">If CanReduce returns true, this should return a valid expression.</span></span> <span data-ttu-id="eb4ed-3326">Ta metoda może zwrócić inny węzeł, który musi zostać zmniejszony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3326">This method can return another node which itself must be reduced.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3327">Zredukowane wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3327">The reduced expression.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3328">W przeciwieństwie do zmniejszenia, ta metoda sprawdza, czy zredukowany węzeł spełnia pewne niewarianty.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3328">Unlike Reduce, this method checks that the reduced node satisfies certain invariants.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReduceExtensions">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression ReduceExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Linq.Expressions.Expression ReduceExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReduceExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function ReduceExtensions () As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ ReduceExtensions();" />
      <MemberSignature Language="F#" Value="member this.ReduceExtensions : unit -&gt; System.Linq.Expressions.Expression" Usage="expression.ReduceExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb4ed-3329">Redukuje wyrażenie do znanego typu węzła (który nie jest węzłem rozszerzenia) lub po prostu zwraca wyrażenie, jeśli jest już znanym typem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3329">Reduces the expression to a known node type (that is not an Extension node) or just returns the expression if it is already a known type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3330">Zredukowane wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3330">The reduced expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ReferenceEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ReferenceEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ReferenceEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member ReferenceEqual : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ReferenceEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3331"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3331">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3332"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3332">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3333">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący porównanie równości odwołań.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3333">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a reference equality comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3334"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3334">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Equal" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferenceNotEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression ReferenceNotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression ReferenceNotEqual(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceNotEqual (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ ReferenceNotEqual(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member ReferenceNotEqual : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.ReferenceNotEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3335"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3335">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3336"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3336">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3337">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący porównanie nierówności.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3337">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a reference inequality comparison.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3338"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3338">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.NotEqual" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rethrow">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3339">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący ponowne zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3339">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rethrow">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Rethrow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Rethrow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Rethrow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Rethrow () As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Rethrow();" />
      <MemberSignature Language="F#" Value="static member Rethrow : unit -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Rethrow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb4ed-3340">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący ponowne zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3340">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3341"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący ponowne zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3341">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rethrow">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Rethrow (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Rethrow(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Rethrow(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Rethrow(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Rethrow : Type -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Rethrow type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-3342">Nowe <see cref="T:System.Type" /> wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3342">The new <see cref="T:System.Type" /> of the expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3343">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący ponowne zgłoszenie wyjątku dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3343">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception with a given type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3344"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący ponowne zgłoszenie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3344">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a rethrowing of an exception.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Return">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3345">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję return.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3345">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Return (target As LabelTarget) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target);" />
      <MemberSignature Language="F#" Value="static member Return : System.Linq.Expressions.LabelTarget -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Return target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-3346"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3346">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3347">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję return.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3347">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3348">A <see cref="T:System.Linq.Expressions.GotoExpression" /> z <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> równą<paramref name="target" />Return, właściwość ustawioną na i wartość null do przesłania do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.GotoExpression.Target" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3348">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Return, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and a null value to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Return (target As LabelTarget, value As Expression) As GotoExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value);" />
      <MemberSignature Language="F#" Value="static member Return : System.Linq.Expressions.LabelTarget * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Return (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-3349"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3349">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="value"><span data-ttu-id="eb4ed-3350">Wartość, która zostanie przeniesiona do skojarzonej etykiety po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3350">The value that will be passed to the associated label upon jumping.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3351">Tworzy element <see cref="T:System.Linq.Expressions.GotoExpression" /> reprezentujący instrukcję return.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3351">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement.</span></span> <span data-ttu-id="eb4ed-3352">Wartość przeskoczy do etykiety po przejściu można określić.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3352">The value passed to the label upon jumping can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3353">A <see cref="T:System.Linq.Expressions.GotoExpression" /> o <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> wartościrównej<paramref name="value" /> Continue, <paramref name="target" />Właściwość ustawiona na i do przesłania do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.GotoExpression.Target" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3353">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-3354">W poniższym przykładzie pokazano, jak utworzyć wyrażenie zawierające <xref:System.Linq.Expressions.Expression.Return%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3354">The following example demonstrates how to create an expression that contains the <xref:System.Linq.Expressions.Expression.Return%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#43)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#43)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Return : System.Linq.Expressions.LabelTarget * Type -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Return (target, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-3355"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3355">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-3356"><see cref="T:System.Type" /> Aby<see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3356">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3357"><see cref="T:System.Linq.Expressions.GotoExpression" /> Tworzy reprezentowanie instrukcji return z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3357">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement with the specified type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3358">A <see cref="T:System.Linq.Expressions.GotoExpression" /> z <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> <see cref="P:System.Linq.Expressions.Expression.Type" /> <paramref name="type" />równej Return<paramref name="target" />, właściwość ustawiona na, właściwość ustawiona na i wartość null do przesłania do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.GotoExpression.Target" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3358">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Return, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and a null value to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.GotoExpression Return(class System.Linq.Expressions.LabelTarget target, class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::GotoExpression ^ Return(System::Linq::Expressions::LabelTarget ^ target, System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Return : System.Linq.Expressions.LabelTarget * System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.GotoExpression" Usage="System.Linq.Expressions.Expression.Return (target, value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.GotoExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Linq.Expressions.LabelTarget" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="eb4ed-3359"><see cref="T:System.Linq.Expressions.LabelTarget" /> Przeskoczydo<see cref="T:System.Linq.Expressions.GotoExpression" /> .</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3359">The <see cref="T:System.Linq.Expressions.LabelTarget" /> that the <see cref="T:System.Linq.Expressions.GotoExpression" /> will jump to.</span></span></param>
        <param name="value"><span data-ttu-id="eb4ed-3360">Wartość, która zostanie przeniesiona do skojarzonej etykiety po przejściu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3360">The value that will be passed to the associated label upon jumping.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-3361"><see cref="T:System.Type" /> Aby<see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3361">An <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3362"><see cref="T:System.Linq.Expressions.GotoExpression" /> Tworzy reprezentowanie instrukcji return z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3362">Creates a <see cref="T:System.Linq.Expressions.GotoExpression" /> representing a return statement with the specified type.</span></span> <span data-ttu-id="eb4ed-3363">Wartość przeskoczy do etykiety po przejściu można określić.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3363">The value passed to the label upon jumping can be specified.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3364">A <see cref="T:System.Linq.Expressions.GotoExpression" /> z <see cref="P:System.Linq.Expressions.Expression.Type" /> <paramref name="value" /> <paramref name="type" />równej wartości Kontynuuj<paramref name="target" />, właściwość ustawiona na, właściwość ustawiona na, i do do etykiety docelowej po przejściu. <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3364">A <see cref="T:System.Linq.Expressions.GotoExpression" /> with <see cref="P:System.Linq.Expressions.GotoExpression.Kind" /> equal to Continue, the <see cref="P:System.Linq.Expressions.GotoExpression.Target" /> property set to <paramref name="target" />, the <see cref="P:System.Linq.Expressions.Expression.Type" /> property set to <paramref name="type" />, and <paramref name="value" /> to be passed to the target label upon jumping.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RightShift">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3365">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przesunięcia w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3365">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShift (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member RightShift : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.RightShift (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3366"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3366">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3367"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3367">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3368">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przesunięcia w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3368">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3369"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3369">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3370">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3370">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3371"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3371">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3372">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3372">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3373">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3373">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3374"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3374">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3375">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3375">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3376">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3376">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3377">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3377">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3378"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator przesunięcia w prawo, to oznacza, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3378">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the right-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3379">W przeciwnym razie `left`, jeśli. Typ jest typem całkowitym (jednym z <xref:System.Byte> <xref:System.Int16>, <xref:System.SByte> <xref:System.UInt16> <xref:System.Int32> ,,<xref:System.UInt32>,,,,, lub odpowiednimi typami dopuszczającymi wartość null) i `right`. <xref:System.Int64> <xref:System.UInt64> Typ to <xref:System.Int32>, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3379">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3380">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3380">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3381">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3381">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3382">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3382">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3383">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3383">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3384">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3384">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3385">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3385">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3386">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3386">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3387">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3387">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3388">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3388">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3389">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora przesunięcia w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3389">The type of the node is the result type of the predefined right-shift operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3390">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3390">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3391">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora przesunięcia w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3391">The type of the node is the nullable type that corresponds to the result type of the predefined right-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3392"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3392"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3393">Operator przesunięcia w prawo nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3393">The right-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShift(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShift (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShift(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member RightShift : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.RightShift (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3394"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3394">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3395"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3395">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3396">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3396">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3397">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przesunięcia w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3397">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3398">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3398">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShift" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3399">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3399">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3400"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3400">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3401">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3401">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3402">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3402">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3403"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3403">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3404">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3404">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3405">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3405">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3406">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3406">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3407">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3407">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-3408">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, który <xref:System.Reflection.MethodInfo> przeciąża operator przesunięcia w prawo, to oznacza, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3408">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the right-shift operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3409">W przeciwnym razie `left`, jeśli. Typ jest typem całkowitym (jednym z <xref:System.Byte> <xref:System.Int16>, <xref:System.SByte> <xref:System.UInt16> <xref:System.Int32> ,,<xref:System.UInt32>,,,,, lub odpowiednimi typami dopuszczającymi wartość null) i `right`. <xref:System.Int64> <xref:System.UInt64> Typ to <xref:System.Int32>, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3409">Otherwise, if `left`.Type is an integral type (one of <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, or the corresponding nullable types) and `right`.Type is <xref:System.Int32>, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3410">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3410">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3411">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3411">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3412">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3412">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3413">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3413">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3414">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3414">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3415">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3415">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3416">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3416">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3417">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3417">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3418">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3418">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3419">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora przesunięcia w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3419">The type of the node is the result type of the predefined right-shift operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3420">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3420">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3421">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora przesunięcia w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3421">The type of the node is the nullable type that corresponds to the result type of the predefined right-shift operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3422"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3422"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3423"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3423"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3424"><paramref name="method" />is <see langword="null" /> i operator przesunięcia w prawo nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3424"><paramref name="method" /> is <see langword="null" /> and the right-shift operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RightShiftAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3425">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3425">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member RightShiftAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.RightShiftAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3426"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3426">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3427"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3427">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3428">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3428">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3429"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3429">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member RightShiftAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.RightShiftAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3430"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3430">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3431"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3431">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3432">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3432">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3433">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3433">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3434">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3434">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightShiftAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression RightShiftAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ RightShiftAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member RightShiftAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.RightShiftAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3435"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3435">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3436"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3436">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3437">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3437">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-3438">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3438">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3439">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący bitową operację przypisywania w prawo.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3439">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a bitwise right-shift assignment operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3440">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3440">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RightShiftAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RuntimeVariables">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3441">Tworzy wystąpienie <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3441">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables(class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.ParameterExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RuntimeVariables (variables As IEnumerable(Of ParameterExpression)) As RuntimeVariablesExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::RuntimeVariablesExpression ^ RuntimeVariables(System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member RuntimeVariables : seq&lt;System.Linq.Expressions.ParameterExpression&gt; -&gt; System.Linq.Expressions.RuntimeVariablesExpression" Usage="System.Linq.Expressions.Expression.RuntimeVariables variables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.RuntimeVariablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.ParameterExpression&gt;" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="variables"><span data-ttu-id="eb4ed-3442">Kolekcja <see cref="T:System.Linq.Expressions.ParameterExpression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3442">A collection of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3443">Tworzy wystąpienie <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3443">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3444">Wystąpienie <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> , które <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> ma<see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3444">An instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> and the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> property set to the specified value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeVariables">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (params System.Linq.Expressions.ParameterExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables(class System.Linq.Expressions.ParameterExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RuntimeVariables (ParamArray variables As ParameterExpression()) As RuntimeVariablesExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::RuntimeVariablesExpression ^ RuntimeVariables(... cli::array &lt;System::Linq::Expressions::ParameterExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member RuntimeVariables : System.Linq.Expressions.ParameterExpression[] -&gt; System.Linq.Expressions.RuntimeVariablesExpression" Usage="System.Linq.Expressions.Expression.RuntimeVariables variables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.RuntimeVariablesExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Linq.Expressions.ParameterExpression[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="variables"><span data-ttu-id="eb4ed-3445">Tablica <see cref="T:System.Linq.Expressions.ParameterExpression" /> obiektów do użycia w celu <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> wypełnienia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3445">An array of <see cref="T:System.Linq.Expressions.ParameterExpression" /> objects to use to populate the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> collection.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3446">Tworzy wystąpienie <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3446">Creates an instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3447">Wystąpienie <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> , które <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> ma<see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3447">An instance of <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.RuntimeVariables" /> and the <see cref="P:System.Linq.Expressions.RuntimeVariablesExpression.Variables" /> property set to the specified value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3448">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację odejmowania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3448">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Subtract(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Subtract(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Subtract (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3449"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3449">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3450">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3450">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3451">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację odejmowania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3451">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3452"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3452">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3453">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3453">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3454"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3454">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3455">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3455">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3456">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3456">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3457"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3457">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3458">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3458">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3459">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3459">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3460">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3460">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3461"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator odejmowania, oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3461">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3462">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3462">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3463">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3463">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3464">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3464">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3465">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3465">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3466">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3466">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3467">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3467">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3468">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3468">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3469">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3469">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3470">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3470">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3471">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3471">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3472">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora odejmowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3472">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3473">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3473">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3474">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora odejmowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3474">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3475">Poniższy przykład kodu pokazuje, jak utworzyć wyrażenie odjęcie argumentu od pierwszego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3475">The following code example shows how to create an expression that subtracts the argument from the first argument.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#30)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3476"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3476"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3477">Nie zdefiniowano operatora odejmowania dla elementu <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3477">The subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression Subtract(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ Subtract(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.Subtract (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3478">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3478">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3479">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3479">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3480">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3480">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3481">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację odejmowania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3481">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3482">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3482">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.Subtract" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3483">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3483">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3484"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3484">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3485">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3485">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3486">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3486">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3487"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3487">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3488">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3488">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3489">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3489">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3490">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3490">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3491">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3491">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-3492">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, <xref:System.Reflection.MethodInfo> który przeciąża operator odejmowania, oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3492">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3493">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3493">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3494">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3494">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3495">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3495">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3496">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3496">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3497">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3497">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3498">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3498">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3499">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3499">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3500">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3500">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3501">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3501">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3502">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3502">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3503">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora odejmowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3503">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3504">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3504">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3505">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora odejmowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3505">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3506"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3506"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3507"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3507"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3508"><paramref name="method" />jest <see langword="null" /> i operator odejmowania nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3508"><paramref name="method" /> is <see langword="null" /> and the subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractAssign">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3509">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania odejmowania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3509">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member SubtractAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.SubtractAssign (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3510"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3510">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3511"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3511">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3512">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania odejmowania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3512">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3513"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3513">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member SubtractAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.SubtractAssign (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3514"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3514">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3515"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3515">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3516">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3516">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3517">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania odejmowania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3517">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3518">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3518">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssign">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssign(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssign (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssign(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member SubtractAssign : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.SubtractAssign (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3519"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3519">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3520"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3520">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3521">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3521">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-3522">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3522">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3523">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania odejmowania, która nie ma sprawdzania przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3523">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that does not have overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3524">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3524">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssign" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractAssignChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3525">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania odejmowania, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3525">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member SubtractAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.SubtractAssignChecked (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3526"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3526">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3527"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3527">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3528">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania odejmowania, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3528">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3529"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3529">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member SubtractAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.SubtractAssignChecked (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3530"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3530">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3531"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3531">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3532">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3532">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3533">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania odejmowania, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3533">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3534">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3534">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtractAssignChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractAssignChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method, class System.Linq.Expressions.LambdaExpression conversion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractAssignChecked (left As Expression, right As Expression, method As MethodInfo, conversion As LambdaExpression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractAssignChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method, System::Linq::Expressions::LambdaExpression ^ conversion);" />
      <MemberSignature Language="F#" Value="static member SubtractAssignChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.LambdaExpression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.SubtractAssignChecked (left, right, method, conversion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="conversion" Type="System.Linq.Expressions.LambdaExpression" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3535"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3535">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3536"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3536">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3537">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3537">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <param name="conversion"><span data-ttu-id="eb4ed-3538">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3538">A <see cref="T:System.Linq.Expressions.LambdaExpression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3539">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący operację przypisywania odejmowania, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3539">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents a subtraction assignment operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3540">Obiekt <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />Właściwość równą i ,<see cref="P:System.Linq.Expressions.BinaryExpression.Method" />,, i<see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> właściwości ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3540">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractAssignChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Method" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Conversion" /> properties set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubtractChecked">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3541">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację odejmowania, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3541">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubtractChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractChecked (left As Expression, right As Expression) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right);" />
      <MemberSignature Language="F#" Value="static member SubtractChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.SubtractChecked (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3542">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3542">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3543">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3543">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3544">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację odejmowania, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3544">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3545"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> A, który <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ma<see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.BinaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3545">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> and <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3546">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3546">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3547"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3547">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3548">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3548">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3549">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3549">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3550"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3550">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3551">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3551">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3552">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3552">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3553">Następujące reguły określają wybraną metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3553">The following rules determine the selected implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3554"><xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub <xref:System.Reflection.MethodInfo> reprezentuje typ zdefiniowany przez użytkownika, który przeciąża operator odejmowania, oznacza to, że metoda jest metodą implementującą. `right`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3554">If the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3555">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3555">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3556">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3556">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3557">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3557">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3558">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3558">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3559">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3559">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3560">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3560">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3561">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3561">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3562">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3562">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3563">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3563">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3564">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3564">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3565">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora odejmowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3565">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3566">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3566">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3567">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora odejmowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3567">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3568"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3568"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3569">Nie zdefiniowano operatora odejmowania dla elementu <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3569">The subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubtractChecked">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.BinaryExpression SubtractChecked(class System.Linq.Expressions.Expression left, class System.Linq.Expressions.Expression right, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractChecked (left As Expression, right As Expression, method As MethodInfo) As BinaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::BinaryExpression ^ SubtractChecked(System::Linq::Expressions::Expression ^ left, System::Linq::Expressions::Expression ^ right, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member SubtractChecked : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.BinaryExpression" Usage="System.Linq.Expressions.Expression.SubtractChecked (left, right, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.BinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="right" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="eb4ed-3570">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3570">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /> property equal to.</span></span></param>
        <param name="right"><span data-ttu-id="eb4ed-3571">A <see cref="T:System.Linq.Expressions.Expression" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3571">A <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3572">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3572">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3573">Tworzy element <see cref="T:System.Linq.Expressions.BinaryExpression" /> reprezentujący arytmetyczną operację odejmowania, która ma sprawdzanie przepełnienia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3573">Creates a <see cref="T:System.Linq.Expressions.BinaryExpression" /> that represents an arithmetic subtraction operation that has overflow checking.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3574">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> ma <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Right" /> <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> Właściwość równą i,, i właściwości, i ustawione na określone wartości. <see cref="P:System.Linq.Expressions.BinaryExpression.Left" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3574">A <see cref="T:System.Linq.Expressions.BinaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.SubtractChecked" /> and the <see cref="P:System.Linq.Expressions.BinaryExpression.Left" />, <see cref="P:System.Linq.Expressions.BinaryExpression.Right" />, and <see cref="P:System.Linq.Expressions.BinaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3575">W efekcie <xref:System.Linq.Expressions.BinaryExpression> <xref:System.Linq.Expressions.BinaryExpression.Method%2A> właściwość ma ustawioną metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3575">The resulting <xref:System.Linq.Expressions.BinaryExpression> has the <xref:System.Linq.Expressions.BinaryExpression.Method%2A> property set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3576"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3576">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3577">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3577">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3578">W przeciwnym razie są `false`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3578">Otherwise, they are `false`.</span></span> <span data-ttu-id="eb4ed-3579"><xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> Właściwość jest`null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3579">The <xref:System.Linq.Expressions.BinaryExpression.Conversion%2A> property is `null`.</span></span>  
  
 <span data-ttu-id="eb4ed-3580">Poniższe informacje opisują metodę implementującą, typ węzła i informacje o tym, czy węzeł został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3580">The following information describes the implementing method, the node type, and whether a node is lifted.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3581">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3581">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3582">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3582">The following rules determine the implementing method for the operation :</span></span>  
  
-   <span data-ttu-id="eb4ed-3583">Jeśli `method` `static` `Shared` nie `null` jest i reprezentuje metodę, która nie jest typu void (w Visual Basic), która przyjmuje dwa argumenty, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3583">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes two arguments, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-3584">W przeciwnym razie, <xref:System.Linq.Expressions.Expression.Type%2A> Jeśli właściwość `left` lub `right` reprezentuje typ zdefiniowany przez użytkownika, <xref:System.Reflection.MethodInfo> który przeciąża operator odejmowania, oznacza to, że metoda jest metodą implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3584">Otherwise, if the <xref:System.Linq.Expressions.Expression.Type%2A> property of either `left` or `right` represents a user-defined type that overloads the subtraction operator, the <xref:System.Reflection.MethodInfo> that represents that method is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3585">W przeciwnym razie `left`, jeśli. Wpisz i `right`. Typem są typy liczbowe, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3585">Otherwise, if `left`.Type and `right`.Type are numeric types, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3586">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3586">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3587">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3587">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3588">Jeśli `left`. Wpisz i `right`. Typ można przypisać do odpowiednich typów argumentów metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3588">If `left`.Type and `right`.Type are assignable to the corresponding argument types of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3589">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3589">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3590">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3590">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3591">`left`. Wpisz i `right`. Typ to oba typy wartości, które co najmniej jeden dopuszcza wartość null, a odpowiednie typy niedopuszczające wartości null są równe odpowiednim typom argumentów metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3591">`left`.Type and `right`.Type are both value types of which at least one is nullable and the corresponding non-nullable types are equal to the corresponding argument types of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3592">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3592">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3593">Jeśli metoda implementowania jest `null`:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3593">If the implementing method is `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3594">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3594">If `left`.Type and `right`.Type are both non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3595">Typ węzła jest typem wyniku wstępnie zdefiniowanego operatora odejmowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3595">The type of the node is the result type of the predefined subtraction operator.</span></span>  
  
-   <span data-ttu-id="eb4ed-3596">Jeśli `left`. Wpisz i `right`. Typ nie dopuszcza wartości null, węzeł zostaje zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3596">If `left`.Type and `right`.Type are both nullable, the node is lifted.</span></span> <span data-ttu-id="eb4ed-3597">Typ węzła jest typem dopuszczającym wartość null, który odnosi się do typu wyników wstępnie zdefiniowanego operatora odejmowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3597">The type of the node is the nullable type that corresponds to the result type of the predefined subtraction operator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3598"><paramref name="left" />lub <paramref name="right" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3598"><paramref name="left" /> or <paramref name="right" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3599"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie dwóch argumentów.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3599"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly two arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3600"><paramref name="method" />jest <see langword="null" /> i operator odejmowania nie jest zdefiniowany dla <paramref name="left" />. Wpisz i <paramref name="right" />. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3600"><paramref name="method" /> is <see langword="null" /> and the subtraction operator is not defined for <paramref name="left" />.Type and <paramref name="right" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Switch">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3601">Tworzy element <see cref="T:System.Linq.Expressions.SwitchExpression" /> <see langword="switch" /> reprezentujący instrukcję.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3601">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberSignature Language="F#" Value="static member Switch : System.Linq.Expressions.Expression * System.Linq.Expressions.SwitchCase[] -&gt; System.Linq.Expressions.SwitchExpression" Usage="System.Linq.Expressions.Expression.Switch (switchValue, cases)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue"><span data-ttu-id="eb4ed-3602">Wartość, która ma być testowana względem każdego przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3602">The value to be tested against each case.</span></span></param>
        <param name="cases"><span data-ttu-id="eb4ed-3603">Zestaw przypadków dla tego wyrażenia przełącznika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3603">The set of cases for this switch expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3604">Tworzy element <see cref="T:System.Linq.Expressions.SwitchExpression" /> <see langword="switch" /> reprezentujący instrukcję bez domyślnego przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3604">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement without a default case.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3605">Utworzony <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3605">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3606">Wszystkie <xref:System.Linq.Expressions.SwitchCase> obiekty <xref:System.Linq.Expressions.SwitchExpression> `void`w obiekcie muszą mieć ten sam typ, chyba że ma typ. <xref:System.Linq.Expressions.SwitchExpression></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3606">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="eb4ed-3607">Każdy <xref:System.Linq.Expressions.SwitchCase> obiekt ma niejawną `break` instrukcję, co oznacza, że nie istnieje niejawna pochodząca z jednej etykiety case do innej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3607">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
 <span data-ttu-id="eb4ed-3608">Jeśli `switchValue` nie pasuje do żadnego z tych przypadków, nie zostanie zgłoszony żaden wyjątek.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3608">If `switchValue` does not match any of the cases, no exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3609">W poniższym przykładzie pokazano, jak utworzyć wyrażenie reprezentujące instrukcję Switch bez domyślnego przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3609">The following example demonstrates how to create an expression that represents a switch statement without a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#34)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberSignature Language="F#" Value="static member Switch : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.SwitchCase[] -&gt; System.Linq.Expressions.SwitchExpression" Usage="System.Linq.Expressions.Expression.Switch (switchValue, defaultBody, cases)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue"><span data-ttu-id="eb4ed-3610">Wartość, która ma być testowana względem każdego przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3610">The value to be tested against each case.</span></span></param>
        <param name="defaultBody"><span data-ttu-id="eb4ed-3611">Wynik przełączenia, jeśli <paramref name="switchValue" /> nie jest zgodny z żadnym przypadkiem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3611">The result of the switch if <paramref name="switchValue" /> does not match any of the cases.</span></span></param>
        <param name="cases"><span data-ttu-id="eb4ed-3612">Zestaw przypadków dla tego wyrażenia przełącznika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3612">The set of cases for this switch expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3613">Tworzy element <see cref="T:System.Linq.Expressions.SwitchExpression" /> <see langword="switch" /> reprezentujący instrukcję, która ma przypadek domyślny.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3613">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3614">Utworzony <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3614">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3615">Wszystkie <xref:System.Linq.Expressions.SwitchCase> obiekty <xref:System.Linq.Expressions.SwitchExpression> `void`w obiekcie muszą mieć ten sam typ, chyba że ma typ. <xref:System.Linq.Expressions.SwitchExpression></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3615">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="eb4ed-3616">Każdy <xref:System.Linq.Expressions.SwitchCase> obiekt ma niejawną `break` instrukcję, co oznacza, że nie istnieje niejawna pochodząca z jednej etykiety case do innej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3616">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
 <span data-ttu-id="eb4ed-3617">Jeśli `switchValue` nie pasuje do żadnego z przypadków, domyślnym przypadkiem reprezentowane przez `defaultBody` jest uruchomienie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3617">If `switchValue` does not match any of the cases, the default case represented by `defaultBody` is run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3618">W poniższym przykładzie pokazano, jak utworzyć wyrażenie reprezentujące instrukcję Switch, która ma przypadek domyślny.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3618">The following example demonstrates how to create an expression that represents a switch statement that has a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#35)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt; cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.SwitchCase&gt; cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, comparison As MethodInfo, cases As IEnumerable(Of SwitchCase)) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberSignature Language="F#" Value="static member Switch : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * seq&lt;System.Linq.Expressions.SwitchCase&gt; -&gt; System.Linq.Expressions.SwitchExpression" Usage="System.Linq.Expressions.Expression.Switch (switchValue, defaultBody, comparison, cases)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="switchValue"><span data-ttu-id="eb4ed-3619">Wartość, która ma być testowana względem każdego przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3619">The value to be tested against each case.</span></span></param>
        <param name="defaultBody"><span data-ttu-id="eb4ed-3620">Wynik przełączenia, jeśli <paramref name="switchValue" /> nie jest zgodny z żadnym przypadkiem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3620">The result of the switch if <paramref name="switchValue" /> does not match any of the cases.</span></span></param>
        <param name="comparison"><span data-ttu-id="eb4ed-3621">Metoda porównania równości do użycia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3621">The equality comparison method to use.</span></span></param>
        <param name="cases"><span data-ttu-id="eb4ed-3622">Zestaw przypadków dla tego wyrażenia przełącznika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3622">The set of cases for this switch expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3623">Tworzy element <see cref="T:System.Linq.Expressions.SwitchExpression" /> <see langword="switch" /> reprezentujący instrukcję, która ma przypadek domyślny.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3623">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3624">Utworzony <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3624">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Switch (switchValue As Expression, defaultBody As Expression, comparison As MethodInfo, ParamArray cases As SwitchCase()) As SwitchExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberSignature Language="F#" Value="static member Switch : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.SwitchCase[] -&gt; System.Linq.Expressions.SwitchExpression" Usage="System.Linq.Expressions.Expression.Switch (switchValue, defaultBody, comparison, cases)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="switchValue"><span data-ttu-id="eb4ed-3625">Wartość, która ma być testowana względem każdego przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3625">The value to be tested against each case.</span></span></param>
        <param name="defaultBody"><span data-ttu-id="eb4ed-3626">Wynik przełączenia, jeśli <paramref name="switchValue" /> nie jest zgodny z żadnym przypadkiem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3626">The result of the switch if <paramref name="switchValue" /> does not match any of the cases.</span></span></param>
        <param name="comparison"><span data-ttu-id="eb4ed-3627">Metoda porównania równości do użycia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3627">The equality comparison method to use.</span></span></param>
        <param name="cases"><span data-ttu-id="eb4ed-3628">Zestaw przypadków dla tego wyrażenia przełącznika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3628">The set of cases for this switch expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3629">Tworzy element <see cref="T:System.Linq.Expressions.SwitchExpression" /> <see langword="switch" /> reprezentujący instrukcję, która ma przypadek domyślny.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3629">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3630">Utworzony <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3630">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt; cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Type type, class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.SwitchCase&gt; cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(Type ^ type, System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberSignature Language="F#" Value="static member Switch : Type * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * seq&lt;System.Linq.Expressions.SwitchCase&gt; -&gt; System.Linq.Expressions.SwitchExpression" Usage="System.Linq.Expressions.Expression.Switch (type, switchValue, defaultBody, comparison, cases)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cases" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.SwitchCase&gt;" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-3631">Typ wyniku przełącznika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3631">The result type of the switch.</span></span></param>
        <param name="switchValue"><span data-ttu-id="eb4ed-3632">Wartość, która ma być testowana względem każdego przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3632">The value to be tested against each case.</span></span></param>
        <param name="defaultBody"><span data-ttu-id="eb4ed-3633">Wynik przełączenia, jeśli <paramref name="switchValue" /> nie jest zgodny z żadnym przypadkiem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3633">The result of the switch if <paramref name="switchValue" /> does not match any of the cases.</span></span></param>
        <param name="comparison"><span data-ttu-id="eb4ed-3634">Metoda porównania równości do użycia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3634">The equality comparison method to use.</span></span></param>
        <param name="cases"><span data-ttu-id="eb4ed-3635">Zestaw przypadków dla tego wyrażenia przełącznika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3635">The set of cases for this switch expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3636">Tworzy element <see cref="T:System.Linq.Expressions.SwitchExpression" /> <see langword="switch" /> reprezentujący instrukcję, która ma przypadek domyślny.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3636">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3637">Utworzony <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3637">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, params System.Linq.Expressions.SwitchCase[] cases);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchExpression Switch(class System.Type type, class System.Linq.Expressions.Expression switchValue, class System.Linq.Expressions.Expression defaultBody, class System.Reflection.MethodInfo comparison, class System.Linq.Expressions.SwitchCase[] cases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchExpression ^ Switch(Type ^ type, System::Linq::Expressions::Expression ^ switchValue, System::Linq::Expressions::Expression ^ defaultBody, System::Reflection::MethodInfo ^ comparison, ... cli::array &lt;System::Linq::Expressions::SwitchCase ^&gt; ^ cases);" />
      <MemberSignature Language="F#" Value="static member Switch : Type * System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Reflection.MethodInfo * System.Linq.Expressions.SwitchCase[] -&gt; System.Linq.Expressions.SwitchExpression" Usage="System.Linq.Expressions.Expression.Switch (type, switchValue, defaultBody, comparison, cases)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="switchValue" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultBody" Type="System.Linq.Expressions.Expression" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="comparison" Type="System.Reflection.MethodInfo" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cases" Type="System.Linq.Expressions.SwitchCase[]" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-3638">Typ wyniku przełącznika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3638">The result type of the switch.</span></span></param>
        <param name="switchValue"><span data-ttu-id="eb4ed-3639">Wartość, która ma być testowana względem każdego przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3639">The value to be tested against each case.</span></span></param>
        <param name="defaultBody"><span data-ttu-id="eb4ed-3640">Wynik przełączenia, jeśli <paramref name="switchValue" /> nie jest zgodny z żadnym przypadkiem.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3640">The result of the switch if <paramref name="switchValue" /> does not match any of the cases.</span></span></param>
        <param name="comparison"><span data-ttu-id="eb4ed-3641">Metoda porównania równości do użycia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3641">The equality comparison method to use.</span></span></param>
        <param name="cases"><span data-ttu-id="eb4ed-3642">Zestaw przypadków dla tego wyrażenia przełącznika.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3642">The set of cases for this switch expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3643">Tworzy element <see cref="T:System.Linq.Expressions.SwitchExpression" /> <see langword="switch" /> reprezentujący instrukcję, która ma przypadek domyślny.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3643">Creates a <see cref="T:System.Linq.Expressions.SwitchExpression" /> that represents a <see langword="switch" /> statement that has a default case.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3644">Utworzony <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3644">The created <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SwitchCase">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3645">Tworzy obiekt, który ma być używany <see cref="T:System.Linq.Expressions.SwitchExpression" /> w obiekcie. <see cref="T:System.Linq.Expressions.SwitchCase" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3645">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> object to be used in a <see cref="T:System.Linq.Expressions.SwitchExpression" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SwitchCase">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt; testValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchCase SwitchCase(class System.Linq.Expressions.Expression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Linq.Expressions.Expression&gt; testValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SwitchCase (body As Expression, testValues As IEnumerable(Of Expression)) As SwitchCase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchCase ^ SwitchCase(System::Linq::Expressions::Expression ^ body, System::Collections::Generic::IEnumerable&lt;System::Linq::Expressions::Expression ^&gt; ^ testValues);" />
      <MemberSignature Language="F#" Value="static member SwitchCase : System.Linq.Expressions.Expression * seq&lt;System.Linq.Expressions.Expression&gt; -&gt; System.Linq.Expressions.SwitchCase" Usage="System.Linq.Expressions.Expression.SwitchCase (body, testValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchCase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="testValues" Type="System.Collections.Generic.IEnumerable&lt;System.Linq.Expressions.Expression&gt;" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-3646">Treść przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3646">The body of the case.</span></span></param>
        <param name="testValues"><span data-ttu-id="eb4ed-3647">Wartości testowe przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3647">The test values of the case.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3648">Tworzy obiekt, który ma być używany <see cref="T:System.Linq.Expressions.SwitchExpression" /> w obiekcie. <see cref="T:System.Linq.Expressions.SwitchCase" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3648">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> object to be used in a <see cref="T:System.Linq.Expressions.SwitchExpression" /> object.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3649">Utworzony <see cref="T:System.Linq.Expressions.SwitchCase" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3649">The created <see cref="T:System.Linq.Expressions.SwitchCase" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3650">Wszystkie <xref:System.Linq.Expressions.SwitchCase> obiekty <xref:System.Linq.Expressions.SwitchExpression> `void`w obiekcie muszą mieć ten sam typ, chyba że ma typ. <xref:System.Linq.Expressions.SwitchExpression></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3650">All <xref:System.Linq.Expressions.SwitchCase> objects in a <xref:System.Linq.Expressions.SwitchExpression> object must have the same type, unless the <xref:System.Linq.Expressions.SwitchExpression> has the type `void`.</span></span>  
  
 <span data-ttu-id="eb4ed-3651">Każdy <xref:System.Linq.Expressions.SwitchCase> obiekt ma niejawną `break` instrukcję, co oznacza, że nie istnieje niejawna pochodząca z jednej etykiety case do innej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3651">Each <xref:System.Linq.Expressions.SwitchCase> object has an implicit `break` statement, which means that there is no implicit fall through from one case label to another.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3652">W poniższym przykładzie pokazano, jak utworzyć wyrażenie reprezentujące instrukcję Switch, która ma przypadek domyślny.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3652">The following example demonstrates how to create an expression that represents a switch statement that has a default case.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#35)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchCase">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, params System.Linq.Expressions.Expression[] testValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SwitchCase SwitchCase(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression[] testValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SwitchCase (body As Expression, ParamArray testValues As Expression()) As SwitchCase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SwitchCase ^ SwitchCase(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ testValues);" />
      <MemberSignature Language="F#" Value="static member SwitchCase : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.SwitchCase" Usage="System.Linq.Expressions.Expression.SwitchCase (body, testValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SwitchCase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="testValues" Type="System.Linq.Expressions.Expression[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-3653">Treść przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3653">The body of the case.</span></span></param>
        <param name="testValues"><span data-ttu-id="eb4ed-3654">Wartości testowe przypadku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3654">The test values of the case.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3655">Tworzy do użycia w <see cref="T:System.Linq.Expressions.SwitchExpression" />. <see cref="T:System.Linq.Expressions.SwitchCase" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3655">Creates a <see cref="T:System.Linq.Expressions.SwitchCase" /> for use in a <see cref="T:System.Linq.Expressions.SwitchExpression" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3656">Utworzony <see cref="T:System.Linq.Expressions.SwitchCase" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3656">The created <see cref="T:System.Linq.Expressions.SwitchCase" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SymbolDocument">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3657">Tworzy wystąpienie <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3657">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member SymbolDocument : string -&gt; System.Linq.Expressions.SymbolDocumentInfo" Usage="System.Linq.Expressions.Expression.SymbolDocument fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="eb4ed-3658">A <see cref="T:System.String" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3658">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3659">Tworzy wystąpienie <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3659">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3660">Obiekt <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> , który <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> ma ustawioną określoną wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3660">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> property set to the specified value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language);" />
      <MemberSignature Language="F#" Value="static member SymbolDocument : string * Guid -&gt; System.Linq.Expressions.SymbolDocumentInfo" Usage="System.Linq.Expressions.Expression.SymbolDocument (fileName, language)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="language" Type="System.Guid" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="eb4ed-3661">A <see cref="T:System.String" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3661">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span></span></param>
        <param name="language"><span data-ttu-id="eb4ed-3662">A <see cref="T:System.Guid" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3662">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3663">Tworzy wystąpienie <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3663">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3664">Ma właściwości i<see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" />ustawione na określoną wartość. <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3664">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> properties set to the specified value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language, valuetype System.Guid languageVendor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid, languageVendor As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language, Guid languageVendor);" />
      <MemberSignature Language="F#" Value="static member SymbolDocument : string * Guid * Guid -&gt; System.Linq.Expressions.SymbolDocumentInfo" Usage="System.Linq.Expressions.Expression.SymbolDocument (fileName, language, languageVendor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="language" Type="System.Guid" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="languageVendor" Type="System.Guid" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="eb4ed-3665">A <see cref="T:System.String" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3665">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span></span></param>
        <param name="language"><span data-ttu-id="eb4ed-3666">A <see cref="T:System.Guid" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3666">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="eb4ed-3667">A <see cref="T:System.Guid" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3667">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3668">Tworzy wystąpienie <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3668">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3669">Obiekt <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> , który <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> ma właściwość <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> i <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> i ma ustawioną określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3669">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> properties set to the specified value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolDocument">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.SymbolDocumentInfo SymbolDocument(string fileName, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SymbolDocument (fileName As String, language As Guid, languageVendor As Guid, documentType As Guid) As SymbolDocumentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::SymbolDocumentInfo ^ SymbolDocument(System::String ^ fileName, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="static member SymbolDocument : string * Guid * Guid * Guid -&gt; System.Linq.Expressions.SymbolDocumentInfo" Usage="System.Linq.Expressions.Expression.SymbolDocument (fileName, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.SymbolDocumentInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="language" Type="System.Guid" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="languageVendor" Type="System.Guid" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="documentType" Type="System.Guid" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="eb4ed-3670">A <see cref="T:System.String" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3670">A <see cref="T:System.String" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> equal to.</span></span></param>
        <param name="language"><span data-ttu-id="eb4ed-3671">A <see cref="T:System.Guid" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3671">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> equal to.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="eb4ed-3672">A <see cref="T:System.Guid" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3672">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> equal to.</span></span></param>
        <param name="documentType"><span data-ttu-id="eb4ed-3673">A <see cref="T:System.Guid" /> , aby <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> ustawić wartość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3673">A <see cref="T:System.Guid" /> to set the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3674">Tworzy wystąpienie <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3674">Creates an instance of <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3675">Obiekt <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> , który <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> ma właściwości <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> i <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> i i<see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> ma ustawioną określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3675">A <see cref="T:System.Linq.Expressions.SymbolDocumentInfo" /> that has the <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.FileName" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.Language" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor" /> and <see cref="P:System.Linq.Expressions.SymbolDocumentInfo.DocumentType" /> properties set to the specified value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Throw">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3676">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący Przerzucanie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3676">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Throw(class System.Linq.Expressions.Expression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Throw (value As Expression) As UnaryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Throw(System::Linq::Expressions::Expression ^ value);" />
      <MemberSignature Language="F#" Value="static member Throw : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Throw value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="eb4ed-3677">A <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3677">An <see cref="T:System.Linq.Expressions.Expression" />.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3678">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący Przerzucanie wyjątku.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3678">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3679"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3679">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-3680">Poniższy przykład pokazuje, <xref:System.Linq.Expressions.TryExpression> jak utworzyć obiekt, który <xref:System.Linq.Expressions.Expression.Throw%2A> używa metody.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3680">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that uses the <xref:System.Linq.Expressions.Expression.Throw%2A> method.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#47)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Throw(class System.Linq.Expressions.Expression value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Throw(System::Linq::Expressions::Expression ^ value, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Throw : System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Throw (value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="eb4ed-3681">A <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3681">An <see cref="T:System.Linq.Expressions.Expression" />.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-3682">Nowe <see cref="T:System.Type" /> wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3682">The new <see cref="T:System.Type" /> of the expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3683">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący Przerzucanie wyjątku dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3683">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a throwing of an exception with a given type.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3684"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Reprezentujący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3684">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents the exception.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="expression.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eb4ed-3685">Zwraca tekstową reprezentację <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3685">Returns a textual representation of the <see cref="T:System.Linq.Expressions.Expression" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3686">Tekstowa reprezentacja <see cref="T:System.Linq.Expressions.Expression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3686">A textual representation of the <see cref="T:System.Linq.Expressions.Expression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCatch">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryCatch (System.Linq.Expressions.Expression body, params System.Linq.Expressions.CatchBlock[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryCatch(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.CatchBlock[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCatch (body As Expression, ParamArray handlers As CatchBlock()) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryCatch(System::Linq::Expressions::Expression ^ body, ... cli::array &lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberSignature Language="F#" Value="static member TryCatch : System.Linq.Expressions.Expression * System.Linq.Expressions.CatchBlock[] -&gt; System.Linq.Expressions.TryExpression" Usage="System.Linq.Expressions.Expression.TryCatch (body, handlers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="handlers" Type="System.Linq.Expressions.CatchBlock[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-3687">Treść bloku try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3687">The body of the try block.</span></span></param>
        <param name="handlers"><span data-ttu-id="eb4ed-3688">Tablica zawierająca zero lub więcej <see cref="T:System.Linq.Expressions.CatchBlock" /> wyrażeń reprezentujących instrukcje catch do skojarzenia z blokiem try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3688">The array of zero or more <see cref="T:System.Linq.Expressions.CatchBlock" /> expressions representing the catch statements to be associated with the try block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3689">Tworzy element <see cref="T:System.Linq.Expressions.TryExpression" /> reprezentujący blok try z dowolną liczbą instrukcji catch, a nie błąd ani blok finally.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3689">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with any number of catch statements and neither a fault nor finally block.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3690">Utworzony <see cref="T:System.Linq.Expressions.TryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3690">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-3691">Poniższy przykład pokazuje, jak utworzyć <xref:System.Linq.Expressions.TryExpression> obiekt, który zawiera instrukcję catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3691">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that contains a catch statement.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#47)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#47)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCatchFinally">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryCatchFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, params System.Linq.Expressions.CatchBlock[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryCatchFinally(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally, class System.Linq.Expressions.CatchBlock[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCatchFinally (body As Expression, finally As Expression, ParamArray handlers As CatchBlock()) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryCatchFinally(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally, ... cli::array &lt;System::Linq::Expressions::CatchBlock ^&gt; ^ handlers);" />
      <MemberSignature Language="F#" Value="static member TryCatchFinally : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression * System.Linq.Expressions.CatchBlock[] -&gt; System.Linq.Expressions.TryExpression" Usage="System.Linq.Expressions.Expression.TryCatchFinally (body, finally, handlers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="handlers" Type="System.Linq.Expressions.CatchBlock[]" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-3692">Treść bloku try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3692">The body of the try block.</span></span></param>
        <param name="finally"><span data-ttu-id="eb4ed-3693">Treść bloku finally.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3693">The body of the finally block.</span></span></param>
        <param name="handlers"><span data-ttu-id="eb4ed-3694">Tablica zawierająca zero lub więcej <see cref="T:System.Linq.Expressions.CatchBlock" /> wyrażeń reprezentujących instrukcje catch do skojarzenia z blokiem try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3694">The array of zero or more <see cref="T:System.Linq.Expressions.CatchBlock" /> expressions representing the catch statements to be associated with the try block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3695">Tworzy element <see cref="T:System.Linq.Expressions.TryExpression" /> reprezentujący blok try z dowolną liczbą instrukcji catch i bloku finally.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3695">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with any number of catch statements and a finally block.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3696">Utworzony <see cref="T:System.Linq.Expressions.TryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3696">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eb4ed-3697">Poniższy przykład pokazuje, jak utworzyć <xref:System.Linq.Expressions.TryExpression> obiekt, który zawiera instrukcję catch i instrukcję finally.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3697">The following example demonstrates how to create a <xref:System.Linq.Expressions.TryExpression> object that contains a catch statement and a finally statement.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#48)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFault">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryFault (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression fault);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryFault(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression fault) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFault (body As Expression, fault As Expression) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryFault(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ fault);" />
      <MemberSignature Language="F#" Value="static member TryFault : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.TryExpression" Usage="System.Linq.Expressions.Expression.TryFault (body, fault)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fault" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-3698">Treść bloku try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3698">The body of the try block.</span></span></param>
        <param name="fault"><span data-ttu-id="eb4ed-3699">Treść bloku błędu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3699">The body of the fault block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3700">Tworzy element <see cref="T:System.Linq.Expressions.TryExpression" /> reprezentujący blok try z blokiem błędu i bez instrukcji catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3700">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with a fault block and no catch statements.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3701">Utworzony <see cref="T:System.Linq.Expressions.TryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3701">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryFinally">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TryExpression TryFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TryExpression TryFinally(class System.Linq.Expressions.Expression body, class System.Linq.Expressions.Expression finally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryFinally (body As Expression, finally As Expression) As TryExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TryExpression ^ TryFinally(System::Linq::Expressions::Expression ^ body, System::Linq::Expressions::Expression ^ finally);" />
      <MemberSignature Language="F#" Value="static member TryFinally : System.Linq.Expressions.Expression * System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.TryExpression" Usage="System.Linq.Expressions.Expression.TryFinally (body, finally)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="finally" Type="System.Linq.Expressions.Expression" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="eb4ed-3702">Treść bloku try.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3702">The body of the try block.</span></span></param>
        <param name="finally"><span data-ttu-id="eb4ed-3703">Treść bloku finally.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3703">The body of the finally block.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3704">Tworzy element <see cref="T:System.Linq.Expressions.TryExpression" /> reprezentujący blok try z blokiem finally i bez instrukcji catch.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3704">Creates a <see cref="T:System.Linq.Expressions.TryExpression" /> representing a try block with a finally block and no catch statements.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3705">Utworzony <see cref="T:System.Linq.Expressions.TryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3705">The created <see cref="T:System.Linq.Expressions.TryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetActionType">
      <MemberSignature Language="C#" Value="public static bool TryGetActionType (Type[] typeArgs, out Type actionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetActionType(class System.Type[] typeArgs, [out] class System.Type&amp; actionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetActionType (typeArgs As Type(), ByRef actionType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetActionType(cli::array &lt;Type ^&gt; ^ typeArgs, [Runtime::InteropServices::Out] Type ^ % actionType);" />
      <MemberSignature Language="F#" Value="static member TryGetActionType : Type[] *  -&gt; bool" Usage="System.Linq.Expressions.Expression.TryGetActionType (typeArgs, actionType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="actionType" Type="System.Type" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeArgs"><span data-ttu-id="eb4ed-3706">Tablica typów obiektów, które określają argumenty typu dla typu delegata system. Action.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3706">An array of Type objects that specify the type arguments for the System.Action delegate type.</span></span></param>
        <param name="actionType"><span data-ttu-id="eb4ed-3707">Gdy ta metoda zwraca, zawiera typ ogólny system. Action akcji, który ma określone argumenty typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3707">When this method returns, contains the generic System.Action delegate type that has specific type arguments.</span></span> <span data-ttu-id="eb4ed-3708">Zawiera wartość null, jeśli nie istnieje ogólny system. Action delegat pasujący <paramref name="typeArgs" />do. Ten parametr jest przekazaniem niezainicjowanym.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3708">Contains null if there is no generic System.Action delegate that matches the <paramref name="typeArgs" />.This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3709"><see cref="P:System.Linq.Expressions.Expression.Type" /> Tworzy obiekt, który reprezentuje ogólny system. typ delegata akcji, który ma określone argumenty typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3709">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic System.Action delegate type that has specific type arguments.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3710"><see langword="true" />Jeśli typ elementu delegowanego system. Action został utworzony dla <paramref name="typeArgs" />określonego; w <see langword="false" />przeciwnym razie,.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3710"><see langword="true" /> if generic System.Action delegate type was created for specific <paramref name="typeArgs" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetFuncType">
      <MemberSignature Language="C#" Value="public static bool TryGetFuncType (Type[] typeArgs, out Type funcType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetFuncType(class System.Type[] typeArgs, [out] class System.Type&amp; funcType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetFuncType (typeArgs As Type(), ByRef funcType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetFuncType(cli::array &lt;Type ^&gt; ^ typeArgs, [Runtime::InteropServices::Out] Type ^ % funcType);" />
      <MemberSignature Language="F#" Value="static member TryGetFuncType : Type[] *  -&gt; bool" Usage="System.Linq.Expressions.Expression.TryGetFuncType (typeArgs, funcType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeArgs" Type="System.Type[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="funcType" Type="System.Type" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeArgs"><span data-ttu-id="eb4ed-3711">Tablica typów obiektów, które określają argumenty typu dla typu delegata system. Func.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3711">An array of Type objects that specify the type arguments for the System.Func delegate type.</span></span></param>
        <param name="funcType"><span data-ttu-id="eb4ed-3712">Gdy ta metoda zwraca, zawiera typ delegata system. Func, który ma określone argumenty typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3712">When this method returns, contains the generic System.Func delegate type that has specific type arguments.</span></span> <span data-ttu-id="eb4ed-3713">Zawiera wartość null, jeśli nie istnieje ogólny delegat system. Func pasujący <paramref name="typeArgs" />do. Ten parametr jest przekazaniem niezainicjowanym.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3713">Contains null if there is no generic System.Func delegate that matches the <paramref name="typeArgs" />.This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3714"><see cref="P:System.Linq.Expressions.Expression.Type" /> Tworzy obiekt, który reprezentuje ogólny typ System. Func delegata, który ma określone argumenty typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3714">Creates a <see cref="P:System.Linq.Expressions.Expression.Type" /> object that represents a generic System.Func delegate type that has specific type arguments.</span></span> <span data-ttu-id="eb4ed-3715">Argument Last Type Określa zwracany typ utworzonego delegata.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3715">The last type argument specifies the return type of the created delegate.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3716"><see langword="true" />Jeśli typ delegata system. Func został utworzony dla określonego <paramref name="typeArgs" />elementu; w <see langword="false" />przeciwnym razie,.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3716"><see langword="true" /> if generic System.Func delegate type was created for specific <paramref name="typeArgs" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.Expression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Linq.Expressions.Expression.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3717">Pobiera typ statyczny wyrażenia reprezentowanego przez to <see cref="T:System.Linq.Expressions.Expression" /> wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3717">Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents.</span></span></summary>
        <value><span data-ttu-id="eb4ed-3718"><see cref="T:System.Type" /> Reprezentuje typ statyczny wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3718">The <see cref="T:System.Type" /> that represents the static type of the expression.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3719">Jest to typ węzła drzewa wyrażenia, <xref:System.Linq.Expressions.Expression.Type%2A> natomiast reprezentuje typ statycznego środowiska uruchomieniowego języka wspólnego (CLR) wyrażenia reprezentowanego przez ten węzeł. <xref:System.Linq.Expressions.Expression.NodeType%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3719">The <xref:System.Linq.Expressions.Expression.NodeType%2A> is the type of the expression tree node, whereas the <xref:System.Linq.Expressions.Expression.Type%2A> represents the static common language runtime (CLR) type of the expression that the node represents.</span></span> <span data-ttu-id="eb4ed-3720">Na przykład dwa węzły z różnymi typami węzłów mogą mieć taki sam <xref:System.Linq.Expressions.Expression.Type%2A>sposób, jak pokazano w poniższym przykładzie kodu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3720">For example, two nodes with different node types can have the same <xref:System.Linq.Expressions.Expression.Type%2A>, as shown in the following code example.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.ExpressionDev10#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/cs/program.cs#36)]
 [!code-vb[System.Linq.Expressions.ExpressionDev10#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10/vb/module1.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeAs">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression TypeAs (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression TypeAs(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ TypeAs(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member TypeAs : System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.TypeAs (expression, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3721"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3721">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-3722">A <see cref="T:System.Type" /> , aby <see cref="P:System.Linq.Expressions.Expression.Type" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3722">A <see cref="T:System.Type" /> to set the <see cref="P:System.Linq.Expressions.Expression.Type" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3723">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący jawne odwołanie lub konwersję z opakowaniem, gdzie <see langword="null" /> jest dostarczany, jeśli konwersja nie powiedzie się.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3723">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an explicit reference or boxing conversion where <see langword="null" /> is supplied if the conversion fails.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3724"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.TypeAs" /> A, który <see cref="P:System.Linq.Expressions.Expression.Type" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.UnaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3724">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.TypeAs" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.Expression.Type" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3725">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest `null`. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3725">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is `null`.</span></span> <span data-ttu-id="eb4ed-3726">Właściwości <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> i. `false`</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3726">The <xref:System.Linq.Expressions.UnaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.UnaryExpression.IsLiftedToNull%2A> properties are both `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3727">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.TypeAs%28System.Linq.Expressions.Expression%2CSystem.Type%29> metody w celu <xref:System.Linq.Expressions.UnaryExpression> utworzenia, która reprezentuje konwersję odwołania do niedopuszczających wartości null wyrażenia Integer do wartości null typu Integer.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3727">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.TypeAs%28System.Linq.Expressions.Expression%2CSystem.Type%29> method to create a <xref:System.Linq.Expressions.UnaryExpression> that represents the reference conversion of a non-nullable integer expression to the nullable integer type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#11)]
 [!code-vb[System.Linq.Expressions.Expression#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3728"><paramref name="expression" />lub <paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3728"><paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeEqual">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TypeBinaryExpression TypeEqual (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TypeBinaryExpression TypeEqual(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TypeBinaryExpression ^ TypeEqual(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member TypeEqual : System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.TypeBinaryExpression" Usage="System.Linq.Expressions.Expression.TypeEqual (expression, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TypeBinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3729"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="T:System.Linq.Expressions.Expression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3729">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="T:System.Linq.Expressions.Expression" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-3730">A <see cref="P:System.Linq.Expressions.Expression.Type" /> , aby <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3730">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3731"><see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> Tworzy porównanie tożsamości typu w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3731">Creates a <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> that compares run-time type identity.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3732">Wartość <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> , dla <see cref="P:System.Linq.Expressions.Expression.NodeType" /> której właściwość jest równa <see cref="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" /> i dla której <see cref="T:System.Linq.Expressions.Expression" /> właściwości i <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3732">A <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> for which the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property is equal to <see cref="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)" /> and for which the <see cref="T:System.Linq.Expressions.Expression" /> and <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> properties are set to the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeIs">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.TypeBinaryExpression TypeIs (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.TypeBinaryExpression TypeIs(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::TypeBinaryExpression ^ TypeIs(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member TypeIs : System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.TypeBinaryExpression" Usage="System.Linq.Expressions.Expression.TypeIs (expression, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.TypeBinaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3733"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3733">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> property equal to.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-3734">A <see cref="P:System.Linq.Expressions.Expression.Type" /> , aby <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3734">A <see cref="P:System.Linq.Expressions.Expression.Type" /> to set the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3735"><see cref="T:System.Linq.Expressions.TypeBinaryExpression" />Tworzy.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3735">Creates a <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3736">Wartość <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> , dla <see cref="P:System.Linq.Expressions.Expression.NodeType" /> której właściwość jest równa <see cref="F:System.Linq.Expressions.ExpressionType.TypeIs" /> i dla której <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> właściwości i <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> są ustawione na określone wartości.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3736">A <see cref="T:System.Linq.Expressions.TypeBinaryExpression" /> for which the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property is equal to <see cref="F:System.Linq.Expressions.ExpressionType.TypeIs" /> and for which the <see cref="P:System.Linq.Expressions.TypeBinaryExpression.Expression" /> and <see cref="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand" /> properties are set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3737">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> reprezentuje <xref:System.Boolean>. <xref:System.Linq.Expressions.Expression.Type%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3737">The <xref:System.Linq.Expressions.Expression.Type%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> represents <xref:System.Boolean>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb4ed-3738">Poniższy przykład ilustruje sposób użycia <xref:System.Linq.Expressions.Expression.TypeIs%28System.Linq.Expressions.Expression%2CSystem.Type%29> metody do <xref:System.Linq.Expressions.TypeBinaryExpression> utworzenia, która reprezentuje test typu wartości ciągu dla <xref:System.Int32> typu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3738">The following example demonstrates how to use the <xref:System.Linq.Expressions.Expression.TypeIs%28System.Linq.Expressions.Expression%2CSystem.Type%29> method to create a <xref:System.Linq.Expressions.TypeBinaryExpression> that represents a type test of a string value against the <xref:System.Int32> type.</span></span>  
  
 [!code-csharp[System.Linq.Expressions.Expression#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/CS/Expression.cs#12)]
 [!code-vb[System.Linq.Expressions.Expression#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.Expressions.Expression/VB/Expression.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3739"><paramref name="expression" />lub <paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3739"><paramref name="expression" /> or <paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnaryPlus">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3740"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy element reprezentujący jednoargumentową operację Plus.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3740">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression UnaryPlus(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ UnaryPlus(System::Linq::Expressions::Expression ^ expression);" />
      <MemberSignature Language="F#" Value="static member UnaryPlus : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.UnaryPlus expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3741"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3741">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3742"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy element reprezentujący jednoargumentową operację Plus.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3742">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3743">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> , który <see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i Właściwość ustawioną na określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3743">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property set to the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3744">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3744">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3745"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3745">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3746">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3746">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3747">W przeciwnym razie są one fałszywe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3747">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3748">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3748">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3749">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3749">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3750">Jeśli `expression`. Typ jest typem zdefiniowanym przez użytkownika, który definiuje jednoargumentowy operator plus <xref:System.Reflection.MethodInfo> , który reprezentuje ten operator jako metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3750">If `expression`.Type is a user-defined type that defines the unary plus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3751">W przeciwnym razie `expression`, jeśli. Typ jest typem liczbowym, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3751">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3752">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3752">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3753">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3753">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3754">Jeśli `expression`. Typ jest możliwy do przypisania do typu argumentu metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3754">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3755">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3755">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3756">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3756">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3757">`expression`. Typ jest typem wartości null, a odpowiedni typ wartości niedopuszczający wartości null jest równy typowi argumentu metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3757">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3758">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3758">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3759">Jeśli jest `null`to metoda implementująca, typ węzła to `expression`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3759">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="eb4ed-3760">Jeśli `expression`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3760">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3761">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3761">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3762"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3762"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3763">Jednoargumentowy operator plus nie jest zdefiniowany <paramref name="expression" />dla. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3763">The unary plus operator is not defined for <paramref name="expression" />.Type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression UnaryPlus(class System.Linq.Expressions.Expression expression, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ UnaryPlus(System::Linq::Expressions::Expression ^ expression, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member UnaryPlus : System.Linq.Expressions.Expression * System.Reflection.MethodInfo -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.UnaryPlus (expression, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3764"><see cref="T:System.Linq.Expressions.Expression" /> Aby<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3764">An <see cref="T:System.Linq.Expressions.Expression" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> property equal to.</span></span></param>
        <param name="method"><span data-ttu-id="eb4ed-3765">A <see cref="T:System.Reflection.MethodInfo" /> , aby <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ustawić właściwość równą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3765">A <see cref="T:System.Reflection.MethodInfo" /> to set the <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> property equal to.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3766"><see cref="T:System.Linq.Expressions.UnaryExpression" /> Tworzy element reprezentujący jednoargumentową operację Plus.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3766">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents a unary plus operation.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3767"><see cref="P:System.Linq.Expressions.Expression.NodeType" /> <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> A, który <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> ma<see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> Właściwość równą i właściwości i i ustawia określone wartości. <see cref="T:System.Linq.Expressions.UnaryExpression" /></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3767">A <see cref="T:System.Linq.Expressions.UnaryExpression" /> that has the <see cref="P:System.Linq.Expressions.Expression.NodeType" /> property equal to <see cref="F:System.Linq.Expressions.ExpressionType.UnaryPlus" /> and the <see cref="P:System.Linq.Expressions.UnaryExpression.Operand" /> and <see cref="P:System.Linq.Expressions.UnaryExpression.Method" /> properties set to the specified values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3768">Właściwość będąca wynikiem <xref:System.Linq.Expressions.UnaryExpression> jest ustawiona na metodę implementującą. <xref:System.Linq.Expressions.UnaryExpression.Method%2A></span><span class="sxs-lookup"><span data-stu-id="eb4ed-3768">The <xref:System.Linq.Expressions.UnaryExpression.Method%2A> property of the resulting <xref:System.Linq.Expressions.UnaryExpression> is set to the implementing method.</span></span> <span data-ttu-id="eb4ed-3769"><xref:System.Linq.Expressions.Expression.Type%2A> Właściwość jest ustawiona na typ węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3769">The <xref:System.Linq.Expressions.Expression.Type%2A> property is set to the type of the node.</span></span> <span data-ttu-id="eb4ed-3770">Jeśli węzeł zostanie zniesiony, <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> właściwości i <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> są jednocześnie `true`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3770">If the node is lifted, the <xref:System.Linq.Expressions.BinaryExpression.IsLifted%2A> and <xref:System.Linq.Expressions.BinaryExpression.IsLiftedToNull%2A> properties are both `true`.</span></span> <span data-ttu-id="eb4ed-3771">W przeciwnym razie są one fałszywe.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3771">Otherwise, they are false.</span></span>  
  
#### <a name="implementing-method"></a><span data-ttu-id="eb4ed-3772">Metoda implementująca</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3772">Implementing Method</span></span>  
 <span data-ttu-id="eb4ed-3773">Następujące reguły określają metodę implementującą dla operacji:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3773">The following rules determine the implementing method for the operation:</span></span>  
  
-   <span data-ttu-id="eb4ed-3774">Jeśli `method` `static` `Shared` nie `null` jest, i reprezentuje metodę inną niż void (w Visual Basic), która przyjmuje jeden argument, jest to metoda implementująca dla tego węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3774">If `method` is not `null` and it represents a non-void, `static` (`Shared` in Visual Basic) method that takes one argument, it is the implementing method for the node.</span></span>  
  
-   <span data-ttu-id="eb4ed-3775">Jeśli `expression`. Typ jest typem zdefiniowanym przez użytkownika, który definiuje jednoargumentowy operator plus <xref:System.Reflection.MethodInfo> , który reprezentuje ten operator jako metodę implementującą.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3775">If `expression`.Type is a user-defined type that defines the unary plus operator, the <xref:System.Reflection.MethodInfo> that represents that operator is the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3776">W przeciwnym razie `expression`, jeśli. Typ jest typem liczbowym, Metoda implementująca to `null`.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3776">Otherwise, if `expression`.Type is a numeric type, the implementing method is `null`.</span></span>  
  
#### <a name="node-type-and-lifted-versus-non-lifted"></a><span data-ttu-id="eb4ed-3777">Typ węzła oraz węzły podniesione i niepodniesione</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3777">Node Type and Lifted versus Non-Lifted</span></span>  
 <span data-ttu-id="eb4ed-3778">Jeśli metoda implementująca nie `null`jest:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3778">If the implementing method is not `null`:</span></span>  
  
-   <span data-ttu-id="eb4ed-3779">Jeśli `expression`. Typ jest możliwy do przypisania do typu argumentu metody implementującej, węzeł nie zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3779">If `expression`.Type is assignable to the argument type of the implementing method, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3780">Typ węzła jest typem zwracanym metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3780">The type of the node is the return type of the implementing method.</span></span>  
  
-   <span data-ttu-id="eb4ed-3781">Jeśli spełnione są następujące dwa warunki, węzeł zostanie zniesiony i typ węzła jest typem dopuszczającym wartość null, który odpowiada zwracanym typem metody implementującej:</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3781">If the following two conditions are satisfied, the node is lifted and the type of the node is the nullable type that corresponds to the return type of the implementing method:</span></span>  
  
    -   <span data-ttu-id="eb4ed-3782">`expression`. Typ jest typem wartości null, a odpowiedni typ wartości niedopuszczający wartości null jest równy typowi argumentu metody implementującej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3782">`expression`.Type is a nullable value type and the corresponding non-nullable value type is equal to the argument type of the implementing method.</span></span>  
  
    -   <span data-ttu-id="eb4ed-3783">Typem zwracanym metody implementującej jest typ wartości niedopuszczający wartości null.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3783">The return type of the implementing method is a non-nullable value type.</span></span>  
  
 <span data-ttu-id="eb4ed-3784">Jeśli jest `null`to metoda implementująca, typ węzła to `expression`. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3784">If the implementing method is `null`, the type of the node is `expression`.Type.</span></span> <span data-ttu-id="eb4ed-3785">Jeśli `expression`. Typ nie dopuszcza wartości null, węzeł nie został zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3785">If `expression`.Type is non-nullable, the node is not lifted.</span></span> <span data-ttu-id="eb4ed-3786">W przeciwnym razie węzeł zostanie zniesiony.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3786">Otherwise, the node is lifted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb4ed-3787"><paramref name="expression" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3787"><paramref name="expression" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="eb4ed-3788"><paramref name="method" />nie <see langword="null" /> jest i metoda, która reprezentuje zwraca <see langword="void" />, nie <see langword="static" /> jest (<see langword="Shared" /> w Visual Basic) lub nie przyjmuje dokładnie jednego argumentu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3788"><paramref name="method" /> is not <see langword="null" /> and the method it represents returns <see langword="void" />, is not <see langword="static" /> (<see langword="Shared" /> in Visual Basic), or does not take exactly one argument.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eb4ed-3789"><paramref name="method" />is <see langword="null" /> i operator jednoargumentowy Plus nie jest zdefiniowany <paramref name="expression" />dla. Wprowadź.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3789"><paramref name="method" /> is <see langword="null" /> and the unary plus operator is not defined for <paramref name="expression" />.Type.</span></span>  
  
<span data-ttu-id="eb4ed-3790">—lub—</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3790">-or-</span></span> 
 <span data-ttu-id="eb4ed-3791"><paramref name="expression" />. Typ (lub odpowiedni typ niedopuszczający wartości null, jeśli jest typem wartości null), nie można przypisać do typu argumentu metody reprezentowanej przez <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3791"><paramref name="expression" />.Type (or its corresponding non-nullable type if it is a nullable value type) is not assignable to the argument type of the method represented by <paramref name="method" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unbox">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.UnaryExpression Unbox (System.Linq.Expressions.Expression expression, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.UnaryExpression Unbox(class System.Linq.Expressions.Expression expression, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::UnaryExpression ^ Unbox(System::Linq::Expressions::Expression ^ expression, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Unbox : System.Linq.Expressions.Expression * Type -&gt; System.Linq.Expressions.UnaryExpression" Usage="System.Linq.Expressions.Expression.Unbox (expression, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.UnaryExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="eb4ed-3792"><see cref="T:System.Linq.Expressions.Expression" /> Do Unbox.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3792">An <see cref="T:System.Linq.Expressions.Expression" /> to unbox.</span></span></param>
        <param name="type"><span data-ttu-id="eb4ed-3793">Nowe <see cref="T:System.Type" /> wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3793">The new <see cref="T:System.Type" /> of the expression.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3794">Tworzy element <see cref="T:System.Linq.Expressions.UnaryExpression" /> reprezentujący jawne rozpakowywanie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3794">Creates a <see cref="T:System.Linq.Expressions.UnaryExpression" /> that represents an explicit unboxing.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3795">Wystąpienie elementu <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3795">An instance of <see cref="T:System.Linq.Expressions.UnaryExpression" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Variable">
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eb4ed-3796"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Tworzy węzeł, który może służyć do identyfikowania parametru lub zmiennej w drzewie wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3796">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Variable (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Variable(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Variable(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Variable(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Variable : Type -&gt; System.Linq.Expressions.ParameterExpression" Usage="System.Linq.Expressions.Expression.Variable type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-3797">Typ parametru lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3797">The type of the parameter or variable.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3798"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Tworzy węzeł, który może służyć do identyfikowania parametru lub zmiennej w drzewie wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3798">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3799"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Węzeł o określonej nazwie i typie</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3799">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ParameterExpression Variable (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ParameterExpression Variable(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Linq::Expressions::ParameterExpression ^ Variable(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Variable : Type * string -&gt; System.Linq.Expressions.ParameterExpression" Usage="System.Linq.Expressions.Expression.Variable (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ParameterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="eb4ed-3800">Typ parametru lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3800">The type of the parameter or variable.</span></span></param>
        <param name="name"><span data-ttu-id="eb4ed-3801">Nazwa parametru lub zmiennej.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3801">The name of the parameter or variable.</span></span> <span data-ttu-id="eb4ed-3802">Ta nazwa jest używana tylko do celów debugowania lub drukowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3802">This name is used for debugging or printing purpose only.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3803"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Tworzy węzeł, który może służyć do identyfikowania parametru lub zmiennej w drzewie wyrażenia.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3803">Creates a <see cref="T:System.Linq.Expressions.ParameterExpression" /> node that can be used to identify a parameter or a variable in an expression tree.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3804"><see cref="T:System.Linq.Expressions.ParameterExpression" /> Węzeł o określonej nazwie i typie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3804">A <see cref="T:System.Linq.Expressions.ParameterExpression" /> node with the specified name and type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Linq.Expressions.Expression VisitChildren(class System.Linq.Expressions.ExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function VisitChildren (visitor As ExpressionVisitor) As Expression" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Linq::Expressions::Expression ^ VisitChildren(System::Linq::Expressions::ExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="abstract member VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression&#xA;override this.VisitChildren : System.Linq.Expressions.ExpressionVisitor -&gt; System.Linq.Expressions.Expression" Usage="expression.VisitChildren visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Linq.Expressions.ExpressionVisitor" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="visitor"><span data-ttu-id="eb4ed-3805">Wystąpienie elementu <see cref="T:System.Func`2" />.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3805">An instance of <see cref="T:System.Func`2" />.</span></span></param>
        <summary><span data-ttu-id="eb4ed-3806">Redukuje węzeł, a następnie wywołuje delegata odwiedzających na zmniejszonym wyrażeniu.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3806">Reduces the node and then calls the visitor delegate on the reduced expression.</span></span> <span data-ttu-id="eb4ed-3807">Metoda zgłasza wyjątek, jeśli węzeł nie jest możliwe do zredukowania.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3807">The method throws an exception if the node is not reducible.</span></span></summary>
        <returns><span data-ttu-id="eb4ed-3808">Odwiedzane wyrażenie lub wyrażenie, które powinno zastąpić je w drzewie.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3808">The expression being visited, or an expression which should replace it in the tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb4ed-3809">Zastąp tę metodę, aby zapewnić logikę do przeszukiwania elementów podrzędnych węzła.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3809">Override this method to provide logic to walk the node's children.</span></span> <span data-ttu-id="eb4ed-3810">Typowa implementacja spowoduje wywołanie gościa. Zapoznaj się z każdym elementem podrzędnym, a jeśli którykolwiek z nich się zmieni, zwróć nową kopię samego siebie ze zmodyfikowanymi elementami podrzędnymi.</span><span class="sxs-lookup"><span data-stu-id="eb4ed-3810">A typical implementation will call visitor.Visit on each of its children, and if any of them change, should return a new copy of itself with the modified children.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
