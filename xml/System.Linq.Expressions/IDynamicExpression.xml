<Type Name="IDynamicExpression" FullName="System.Linq.Expressions.IDynamicExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ca99a4317b5e10724ef3865cc5e62176a1ca9b7c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69118272" /></Metadata><TypeSignature Language="C#" Value="public interface IDynamicExpression : System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicExpression implements class System.Linq.Expressions.IArgumentProvider" />
  <TypeSignature Language="DocId" Value="T:System.Linq.Expressions.IDynamicExpression" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicExpression&#xA;Implements IArgumentProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicExpression : System::Linq::Expressions::IArgumentProvider" />
  <TypeSignature Language="F#" Value="type IDynamicExpression = interface&#xA;    interface IArgumentProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Linq.Expressions.IArgumentProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="39d41-101">Zapewnia wewnętrzny interfejs do uzyskiwania dostępu do argumentów węzłów drzewa DynamicExpression oraz funkcji szczegóły i zapisywania.</span><span class="sxs-lookup"><span data-stu-id="39d41-101">Provides an internal interface for accessing the arguments of DynamicExpression tree nodes as well as CallSite and Rewriting functionality.</span></span>  <span data-ttu-id="39d41-102">Nie należy używać tego interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="39d41-102">You should not use this API.</span></span>  <span data-ttu-id="39d41-103">Jest on tylko publiczny z powodu refaktoryzacji biblioteki DLL i istnieje tylko w przypadku wewnętrznych optymalizacji wydajności.</span><span class="sxs-lookup"><span data-stu-id="39d41-103">It is only public due to DLL refactoring and exists only for internal performance optimizations.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCallSite">
      <MemberSignature Language="C#" Value="public object CreateCallSite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateCallSite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IDynamicExpression.CreateCallSite" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCallSite () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateCallSite();" />
      <MemberSignature Language="F#" Value="abstract member CreateCallSite : unit -&gt; obj" Usage="iDynamicExpression.CreateCallSite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39d41-104">Opcjonalnie tworzy szczegóły i zwraca szczegóły dla niewbudowanej pamięci podręcznej DynamicExpression.</span><span class="sxs-lookup"><span data-stu-id="39d41-104">Optionally creates the CallSite and returns the CallSite for the DynamicExpression's polymorphic inline cache.</span></span>  <span data-ttu-id="39d41-105">Tego typu nie należy używać.</span><span class="sxs-lookup"><span data-stu-id="39d41-105">You should not use this type.</span></span>  <span data-ttu-id="39d41-106">Jest on tylko publiczny z powodu refaktoryzacji zestawu i jest używany wewnętrznie do optymalizacji wydajności.</span><span class="sxs-lookup"><span data-stu-id="39d41-106">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span></span></summary>
        <returns><span data-ttu-id="39d41-107">Szczegóły dla polimorficznej, wbudowanej pamięci podręcznej DynamicExpression.</span><span class="sxs-lookup"><span data-stu-id="39d41-107">The CallSite for the DynamicExpression's polymorphic inline cache.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateType">
      <MemberSignature Language="C#" Value="public Type DelegateType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DelegateType" />
      <MemberSignature Language="DocId" Value="P:System.Linq.Expressions.IDynamicExpression.DelegateType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DelegateType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DelegateType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DelegateType : Type" Usage="System.Linq.Expressions.IDynamicExpression.DelegateType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39d41-108">Pobiera typ delegata używany przez szczegóły, który jest typem reguł użytymi w wbudowanej pamięci podręcznej "polimorficzne" wyrażenia dynamicznego.</span><span class="sxs-lookup"><span data-stu-id="39d41-108">Gets the delegate type used by the CallSite, which is the type of the rules used in the dynamic expression's polymorphic inline cache.</span></span></summary>
        <value><span data-ttu-id="39d41-109">Typ delegata używany przez szczegóły.</span><span class="sxs-lookup"><span data-stu-id="39d41-109">The delegate type used by the CallSite.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewrite">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression Rewrite (System.Linq.Expressions.Expression[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Rewrite(class System.Linq.Expressions.Expression[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Rewrite (args As Expression()) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ Rewrite(cli::array &lt;System::Linq::Expressions::Expression ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Rewrite : System.Linq.Expressions.Expression[] -&gt; System.Linq.Expressions.Expression" Usage="iDynamicExpression.Rewrite args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq.Expressions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Linq.Expressions.Expression[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="39d41-110">Argumenty używane do zastępowania tego węzła.</span><span class="sxs-lookup"><span data-stu-id="39d41-110">The arguments used to replace this node.</span></span></param>
        <summary><span data-ttu-id="39d41-111">Ponownie zapisuje ten węzeł, zastępując argumenty wyrażenia dynamicznego podanymi wartościami.</span><span class="sxs-lookup"><span data-stu-id="39d41-111">Rewrites this node replacing the dynamic expression's arguments with the provided values.</span></span>  <span data-ttu-id="39d41-112">Liczba <paramref name="args" /> potrzebnych do dopasowania do liczby bieżących wyrażeń.</span><span class="sxs-lookup"><span data-stu-id="39d41-112">The number of <paramref name="args" /> needs to match the number of the current expression.</span></span>  <span data-ttu-id="39d41-113">Tego typu nie należy używać.</span><span class="sxs-lookup"><span data-stu-id="39d41-113">You should not use this type.</span></span>  <span data-ttu-id="39d41-114">Jest on tylko publiczny z powodu refaktoryzacji zestawu i jest używany wewnętrznie do optymalizacji wydajności.</span><span class="sxs-lookup"><span data-stu-id="39d41-114">It is only public due to assembly refactoring, and it is used internally for performance optimizations.</span></span>  <span data-ttu-id="39d41-115">Ta metoda pomocnika umożliwia ponowne zapisywanie węzłów jako niezależnych od określonej klasy implementacji pochodzącej z DynamicExpression, która jest używana w miejscu wywołania.</span><span class="sxs-lookup"><span data-stu-id="39d41-115">This helper method allows re-writing of nodes to be independent of the specific implementation class deriving from DynamicExpression that is being used at the call site.</span></span></summary>
        <returns><span data-ttu-id="39d41-116">Węzeł ponownie zapisany, ale jeśli nie wprowadzono żadnych zmian, zwraca ten sam węzeł.</span><span class="sxs-lookup"><span data-stu-id="39d41-116">The rewritten node, but if no changes were made, then returns the same node.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
