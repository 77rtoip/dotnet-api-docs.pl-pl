<Type Name="XmlDataSource" FullName="System.Web.UI.WebControls.XmlDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86b729c8a5965965316ecf6ffead7f52ce244e6d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51882183" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataSource extends System.Web.UI.HierarchicalDataSourceControl implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.XmlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataSource&#xA;Inherits HierarchicalDataSourceControl&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataSource : System::Web::UI::HierarchicalDataSourceControl, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type XmlDataSource = class&#xA;    inherit HierarchicalDataSourceControl&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HierarchicalDataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Transforming")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("DataFile")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje źródło danych XML do formantów powiązanych z danymi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#introduction)  
  
-   [Źródła danych XML](#source_of_xml_data)  
  
-   [Aktualizowanie danych XML](#updating_xml_data)  
  
-   [Określanie przekształcenia XSL](#specifying_an_xsl_transformation)  
  
-   [Filtrowanie za pomocą wyrażenia XPath](#filtering_using_an_xpath_expression)  
  
-   [Buforowanie](#caching)  
  
-   [Dodatkowe funkcje](#additional_features)  
  
-   [Obiekt widoku danych](#data_view_object)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.XmlDataSource> Formant jest formant źródła danych, która przedstawia dane XML do formantów powiązanych z danymi. <xref:System.Web.UI.WebControls.XmlDataSource> Kontroli może służyć przez formanty powiązane z danymi do wyświetlania danych zarówno hierarchiczne, jak i tabelarycznym. <xref:System.Web.UI.WebControls.XmlDataSource> Kontroli zazwyczaj służy do wyświetlania z danymi hierarchicznymi XML w scenariuszach w trybie tylko do odczytu. Ponieważ <xref:System.Web.UI.WebControls.XmlDataSource> rozszerza formant <xref:System.Web.UI.HierarchicalDataSourceControl> klasy, działa z danymi hierarchicznymi. <xref:System.Web.UI.WebControls.XmlDataSource> Również kontrolować implementuje <xref:System.Web.UI.IDataSource> interfejs i współpracuje z tabelarycznego, lub styl listy, dane.  
  
> [!NOTE]
>  Ze względów bezpieczeństwa, żaden z <xref:System.Web.UI.WebControls.XmlDataSource> właściwości kontrolki są przechowywane w widoku stanu. Ponieważ jest to technicznie możliwe, do dekodowania zawartości widoku stanu na komputerze klienckim, przechowywanie poufnych informacji o strukturze danych lub jego zawartość może doprowadzić do zagrożenia ujawnieniem informacji. Należy pamiętać, że jeśli potrzebujesz do przechowywania informacji, takich jak <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> właściwości w widoku stanu, można włączyć szyfrowanie w celu ochrony zawartości, ustawiając <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> na `@ Page` dyrektywy.  
  
 Stronie deweloperów <xref:System.Web.UI.WebControls.XmlDataSource> kontrolka do wyświetlenia danych XML przy użyciu formantów powiązanych z danymi.  
  
<a name="source_of_xml_data"></a>   
## <a name="sources-of-xml-data"></a>Źródła danych XML  
 <xref:System.Web.UI.WebControls.XmlDataSource> Zazwyczaj ładuje dane XML z pliku XML, który jest określony przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwości. Dane XML może również przechowywane bezpośrednio kontroli źródła danych w ciągu formularza przy użyciu <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości. Jeśli chcesz do przekształcania danych XML, zanim zostanie wyświetlony przez kontrolkę powiązanych z danymi, możesz podać arkusza stylów arkusza stylów języka XSL (Extensible) transformacji. Zgodnie z danymi XML zwykle załadować z pliku arkusza stylów, wskazywanym przez <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwości, ale można również przechowywać go w postaci ciągu bezpośrednio przy użyciu <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwości.  
  
<a name="updating_xml_data"></a>   
## <a name="updating-xml-data"></a>Aktualizowanie danych XML  
 <xref:System.Web.UI.WebControls.XmlDataSource> Kontroli jest często używana w scenariuszach danych tylko do odczytu którym formant powiązany z danymi wyświetla dane XML. Jednak możesz również użyć <xref:System.Web.UI.WebControls.XmlDataSource> kontroli w celu edycji danych XML. Aby edytować dane XML, należy wywołać <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> metodę, która pobierze <xref:System.Xml.XmlDataDocument> obiekt, który jest reprezentacja danych XML w pamięci. Można użyć modelu obiektów udostępnianych przez <xref:System.Xml.XmlDataDocument> i <xref:System.Xml.XmlNode> obiektów zawiera, lub użyj filtrowania wyrażenia XPath można manipulować danymi w dokumencie. Po dokonaniu zmiany do reprezentacji danych XML w pamięci, możesz zapisać plik na dysku, wywołując <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> metody.  
  
 Istnieją pewne ograniczenia do edycji możliwości <xref:System.Web.UI.WebControls.XmlDataSource> sterowania:  
  
-   Dane XML muszą zostać załadowane z pliku XML, który jest wskazywany przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwość, nie określono kodu XML w tekście <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości.  
  
-   Nie transformację XSLT można określić w <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> lub <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwości.  
  
-   <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Metoda nie zapewnia obsługi jednoczesnych operacji zapisywania przez innego żądania. Jeśli więcej niż jeden użytkownik edytuje plik XML za pomocą <xref:System.Web.UI.WebControls.XmlDataSource>, nie ma żadnej gwarancji, że wszyscy użytkownicy działają w tych samych danych. Istnieje również możliwość dla <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> operację, aby zakończyć się niepowodzeniem ze względu na te same kwestie współbieżności.  
  
<a name="specifying_an_xsl_transformation"></a>   
## <a name="specifying-an-xsl-transformation"></a>Określanie przekształcenia XSL  
 Często wykonywane operacje przeprowadzane przy użyciu danych XML jest przekształcane z jednego zestawu danych XML do innego. <xref:System.Web.UI.WebControls.XmlDataSource> Kontrolka obsługuje Przekształcanie XML za pomocą <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> i <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwości, które określają arkusza stylów XSL do zastosowania z danymi XML, zanim zostanie on przekazany do kontrolki powiązane z danymi, a <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> właściwość, która pozwala na podanie argumentów arkusza stylów XSLT dynamicznych do użycia przez arkusza stylów XSL podczas przekształcania. Jeśli określisz filtrowanie przy użyciu wyrażenie XPath <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> właściwości, zostanie zastosowane po wystąpieniu transformacji.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.XmlDataSource> Klasa używa przestarzałego <xref:System.Xml.Xsl.XslTransform> klasy do wykonania przekształcenia XSL. Jeśli chcesz używać funkcji arkusza stylów, które pojawiły się po <xref:System.Xml.Xsl.XslTransform> klasa została zakończona, ręcznie zastosować przekształcenia przy użyciu <xref:System.Xml.Xsl.XslCompiledTransform> klasy.  
  
<a name="filtering_using_an_xpath_expression"></a>   
## <a name="filtering-using-an-xpath-expression"></a>Filtrowanie za pomocą wyrażenia XPath  
 Domyślnie <xref:System.Web.UI.WebControls.XmlDataSource> kontroli ładuje wszystkie dane XML w pliku XML, identyfikowane przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwości lub znaleziono bezpośrednio w <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości, ale można filtrować dane za pomocą wyrażenia XPath. <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Właściwość obsługuje filtr składni XPath, który zostanie zastosowane po załadowane i transformacji danych XML.  
  
<a name="caching"></a>   
## <a name="caching"></a>Buforowanie  
 Ze względów wydajnościowych buforowanie jest włączone dla <xref:System.Web.UI.WebControls.XmlDataSource> kontroli domyślnie. Otwierania i odczytywania pliku XML na serwerze za każdym razem, gdy żądana strona może zmniejszyć wydajność aplikacji. Buforowanie pozwala zmniejszyć obciążenie przetwarzania na serwerze kosztem pamięci na serwerze sieci Web; w większości przypadków jest to dobry kompromisu. <xref:System.Web.UI.WebControls.XmlDataSource> Automatycznie buforuje dane podczas <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true`i <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> właściwość jest ustawiona na czas w sekundach, przechowywane w pamięci podręcznej danych przed unieważnienia pamięci podręcznej. Możesz użyć <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> dopasować zachowania buforowania danych kontroli źródła.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Dodatkowe funkcje  
 W poniższej tabeli przedstawiono dodatkowe funkcje, które są obsługiwane przez <xref:System.Web.UI.WebControls.XmlDataSource> kontroli.  
  
|Możliwość|Opis|  
|----------------|-----------------|  
|Sortowanie|Nieobsługiwane przez <xref:System.Web.UI.WebControls.XmlDataSource> kontroli.|  
|Filtrowanie|<xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Właściwość może służyć do filtrowania danych XML przy użyciu odpowiedniego wyrażenia XPath.|  
|Stronicowania|Nieobsługiwane przez <xref:System.Web.UI.WebControls.XmlDataSource> kontroli.|  
|Aktualizowanie|Obsługiwane przez manipulowanie <xref:System.Xml.XmlDataDocument> bezpośrednio, a następnie wywołując <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> metody.|  
|Usuwanie|Obsługiwane przez manipulowanie <xref:System.Xml.XmlDataDocument> bezpośrednio, a następnie wywołując <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> metody.|  
|Wstawianie|Obsługiwane przez manipulowanie <xref:System.Xml.XmlDataDocument> bezpośrednio, a następnie wywołując <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> metody.|  
|Buforowanie|Domyślnie włączone, za pomocą <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> właściwość jest ustawiona na 0 (bez ograniczeń czasowych) i <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> właściwością <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>.|  
  
<a name="data_view_object"></a>   
## <a name="data-view-object"></a>Obiekt widoku danych  
 Ponieważ <xref:System.Web.UI.WebControls.XmlDataSource> kontrolka obsługuje formanty powiązane z danymi, które prezentują dane hierarchiczne, jak również formantów, które wyświetlają dane tabelaryczne, kontrola źródła danych obsługuje wiele typów obiektów widoku źródła danych w danych XML. <xref:System.Web.UI.WebControls.XmlDataSource> Kontroli pobiera jeden o nazwie <xref:System.Web.UI.WebControls.XmlDataSourceView> obiektu, gdy jest używane z kontrolki powiązania danych, która zawiera dane tabelaryczne. <xref:System.Web.UI.IDataSource.GetViewNames%2A> Metoda identyfikuje pojedynczego o nazwie Widok. Gdy jest używana przy użyciu kontrolki powiązane z danymi wyświetlającą hierarchiczne dane <xref:System.Web.UI.WebControls.XmlDataSource> kontrolować pobiera <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> dla dowolnego unikatowe ścieżki hierarchicznej przekazany do <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> metody.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:XmlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    DataFile="string"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTransforming="Transforming event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    TransformArgumentList="string"  
    TransformFile="string"  
    Visible="True|False"  
    XPath="string"  
>  
    <Data>string</Data>  
    <Transform>string</Transform>  
</asp:XmlDataSource>  
```  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> kontrolką <xref:System.Web.UI.WebControls.TreeView> formantu, aby wyświetlić dane XML z pliku XML przykładowe. Drugi przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.XmlDataSource> formant z szablonem <xref:System.Web.UI.WebControls.Repeater> formantu, aby wyświetlić dane XML.  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> kontrolką <xref:System.Web.UI.WebControls.TreeView> formantu, aby wyświetlić dane XML. <xref:System.Web.UI.WebControls.XmlDataSource> Ładuje dane XML z pliku XML, identyfikowane przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> formant z szablonem <xref:System.Web.UI.WebControls.Repeater> formantu, aby wyświetlić dane XML. <xref:System.Web.UI.WebControls.Repeater> Używa kontrolki powiązania danych wyrażenie XPath, aby powiązać dane elementy w zawartości XML dokumenty <xref:System.Web.UI.WebControls.XmlDataSource> reprezentuje. Aby uzyskać więcej informacji na temat `XPath` i `XPathSelect` składnia wiązania danych, zobacz <xref:System.Web.UI.XPathBinder> klasy.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>John</firstn>  
         <lastn>Smith</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czas, w sekundach, jaki kontroli źródła danych przechowuje dane, które ją pobierze.</summary>
        <value>Liczba sekund, przez jaką <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli buforuje wyników operacji pobierania danych. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource> Kontroli automatycznie buforuje dane, gdy stosuje się następujące czynności:  
  
-   <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> Właściwość jest ustawiona na `true`.  
  
-   <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Właściwość jest ustawiona na wartość większą niż 0, który wskazuje liczbę sekund, przechowywane w pamięci podręcznej danych przed unieważnienia pamięci podręcznej.  
  
 Wszelkie zmiany do <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości lub zawartości pliku, który zawiera dane XML powoduje, że pamięć podręczna unieważnienia.  
  
 Domyślnie <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> właściwość jest ustawiona na wartość 0, co oznacza nieokreślony pamięci podręcznej, i źródło danych będzie buforować dane, dopóki nie zostanie zmieniony plik XML, który jest zależny od.  
  
 Zachowanie pamięci podręcznej jest regulowane przez kombinację czasu trwania i <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> ustawienie. Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> jest ustawiona na <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>, <xref:System.Web.UI.WebControls.XmlDataSource> buforuje dane na pierwszą operacją pobierania danych w formancie, przechowuje go w pamięci przez czas określony przez <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, a unieważnia go po Czas wygasł. Pamięć podręczna jest następnie odświeżone przy następnej operacji. Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> ustawiono <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, kontrola źródła danych przechowuje dane na pierwszą operacją pobierania danych, ale resetuje przedział czasu, który przechowuje w pamięci podręcznej po każdej kolejnej operacji. Tylko wygaśnie pamięci podręcznej, jeśli nie ma działania przez czas równy <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> od czasu ostatniego pobierania danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak włączyć buforowanie, używając <xref:System.Web.UI.WebControls.XmlDataSource> formantu, aby wyświetlić dane zawarte w pliku XML. Buforowanie jest włączone po <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> jest ustawiona na liczbę sekund, które dane są buforowane przez kontrolę źródła danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zasady wygasania pamięci podręcznej, który jest połączony z czasem trwania pamięci podręcznej do opisania zachowanie buforowania w pamięci podręcznej, który używa kontroli źródła danych.</summary>
        <value>Jedną z <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> wartości. Domyślne ustawienie zasad wygasania pamięci podręcznej jest <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zachowanie pamięci podręcznej jest regulowane przez kombinację <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> ustawienia. Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> ustawiono <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>, <xref:System.Web.UI.WebControls.XmlDataSource> buforuje dane na pierwszą operacją pobierania danych, przechowuje go w pamięci przez czas określony przez <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, a unieważnia go po Czas wygasł. Pamięć podręczna jest następnie odświeżone przy następnej operacji. Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> ustawiono <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, kontrola źródła danych przechowuje dane na pierwszą operacją pobierania danych, ale resetuje przedział czasu, który przechowuje w pamięci podręcznej po każdej kolejnej operacji. Wygaśnięcia pamięci podręcznej tylko wtedy, gdy nie ma działania przez czas równy <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> od czasu ostatniego pobierania danych.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak włączyć buforowanie, używając <xref:System.Web.UI.WebControls.XmlDataSource> formantu, aby wyświetlić dane zawarte w pliku XML. Buforowanie jest włączone po <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> jest ustawiona na liczbę sekund, które dane są buforowane przez kontrolę źródła danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyContext">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyContext : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość klucza pamięci podręcznej do kontroli źródła danych z widoku stanu lub dodaje klucz pamięci podręcznej, aby wyświetlić stan.</summary>
        <value>Wartość klucza pamięci podręcznej lub ciąg pusty, jeśli klucz pamięci podręcznej nie jest w stanie widoku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext%2A> Właściwość pozwala na ręczne utworzenie klucza pamięci podręcznej dla <xref:System.Web.UI.WebControls.XmlDataSource> kontroli. Jest to wymagane, tylko wtedy, gdy przypisujesz obiekt, który zawiera dane XML lub XSLT do kontrolki zamiast określania pliku, który zawiera dane. Podczas przypisywania danych do kontrolki, dane nie służy do generowania klucza pamięci podręcznej. Zamiast tego musisz ręcznie wygenerować klucz pamięci podręcznej unikatowy planowania można zaktualizować obiektu danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia zdefiniowanych przez użytkownika klucza zależność, która jest połączona z wszystkich obiektów pamięci podręcznej danych utworzonych przez formant źródła danych. Wszystkie obiekty w pamięci podręcznej jawnie wygasają po wygaśnięciu klucza.</summary>
        <value>Klucz identyfikujący wszystkich obiektów w pamięci podręcznej utworzone przez <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource> Kontrolka obsługuje buforowanie danych. Gdy dane są buforowane, <xref:System.Web.UI.WebControls.XmlDataSource> pobiera dane z pamięci podręcznej, a nie z jego pliku danych. Po wygaśnięciu pamięci podręcznej, pobiera dane z pliku podstawowego i ponownie zapisuje w pamięci podręcznej danych.  
  
 Możesz ustawić <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> właściwości, aby utworzyć zależność między wszystkie wpisy pamięci podręcznej, utworzone przez <xref:System.Web.UI.WebControls.XmlDataSource> kontroli, jak i klucz. Wszystkie wpisy pamięci podręcznej może unieważnić programowo w dowolnym momencie, według wygaśnięciu klucza.  
  
 Ze względu na właściwości używany do tworzenia <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>, możliwe jest wiele <xref:System.Web.UI.WebControls.XmlDataSource> kontrolki można używać tej samej pamięci podręcznej w scenariuszach, gdzie one załadować te same dane z tego samego pliku XML i przekształcanie plików i mają taką samą <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> i <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>zestawu.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual string Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Data { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bloku danych XML, który powiąże formant źródła danych.</summary>
        <value>Ciąg danych XML w tekście, <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> wiąże formant. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W scenariuszach deklaratywne <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwość jest określony jako właściwość multiline wewnętrzny <xref:System.Web.UI.WebControls.XmlDataSource> obiektu. Właściwości wewnętrznej jest zgodny z danymi XML, ponieważ umożliwia sformatowanie danych XML w dowolny sposób i Ignoruj znak dopełnienia problemów, na przykład uzupełnianie znaków cudzysłowu.  
  
 Jeśli oba <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> i <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwość, pierwszeństwo i dane w pliku XML jest używany zamiast określone w danych XML <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości.  
  
 Jeśli zmienisz wartość <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest wywoływane. Jeśli jest włączone buforowanie, a następnie zmień wartość <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>, unieważnienia pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> formantu, aby wyświetlić zawarte w danych XML wbudowanych <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwość o <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/CS/xmlds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/VB/xmlds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Trwa ładowanie dokumentu.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="DataFile">
      <MemberSignature Language="C#" Value="public virtual string DataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFile : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa nazwę pliku w pliku XML, który wiąże ze źródłem danych.</summary>
        <value>Bezwzględną ścieżkę fizyczną lub względną ścieżkę pliku XML, który zawiera dane, które <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontrolować reprezentuje. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli oba <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> i <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwość, pierwszeństwo i dane w pliku XML jest używany zamiast określone w danych XML <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości.  
  
 Jeśli zmienisz wartość <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwości <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest wywoływane. Jeśli jest włączone buforowanie, a następnie zmień wartość <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>, unieważnienia pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> formantu, aby wyświetlić dane XML zawartych w pliku o <xref:System.Web.UI.WebControls.TreeView> kontroli.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Trwa ładowanie dokumentu.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Data" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontrolka ma włączone buforowanie danych.</summary>
        <value><see langword="true" /> Jeśli do kontroli źródła danych; włączone jest buforowanie danych w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource> Kontroli automatycznie zapisuje w pamięci podręcznej danych podczas <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true`. Domyślnie <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> właściwość jest ustawiona na wartość 0, co oznacza nieokreślony pamięci podręcznej, i źródło danych będzie buforować dane, dopóki nie zostanie zmieniony plik XML, który jest zależny od. Jeśli ustawisz <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> właściwości na wartość większą niż 0, pamięci podręcznej przechowuje dane dla wybranej liczby sekund przed pobraniem nowego zestawu.  
  
 Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> właściwość jest ustawiona, wpisy w pamięci podręcznej nie są automatycznie unieważnione, gdy parametry zmienią się na liście argumentów przekształcenia. W takim przypadku należy napisać kod do unieważnienia pamięci podręcznej, ustawiając <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak włączyć buforowanie, używając <xref:System.Web.UI.WebControls.XmlDataSource> formantu, aby wyświetlić dane zawarte w pliku XML. Buforowanie jest włączone po <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> jest ustawiona na liczbę sekund, które dane są buforowane przez kontrolę źródła danych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetHierarchicalView (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::HierarchicalDataSourceView ^ GetHierarchicalView(System::String ^ viewPath);" />
      <MemberSignature Language="F#" Value="override this.GetHierarchicalView : string -&gt; System.Web.UI.HierarchicalDataSourceView" Usage="xmlDataSource.GetHierarchicalView viewPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath">Wyrażenia XPath, które identyfikuje węzeł, z którego skompilowano bieżącego hierarchiczny widok.</param>
        <summary>Pobiera obiekt widoku źródła danych dla <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli. <paramref name="viewPath" /> Parametr może być wyrażenie XPath.</summary>
        <returns>Zwraca <see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" /> obiekt, który reprezentuje pojedynczy widok danych, rozpoczynając od węzła danych identyfikowane przez <paramref name="viewPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz wywołać <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> metodę, która pobierze <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> obiekt skojarzony z <xref:System.Web.UI.WebControls.XmlDataSource> kontroli. Jeśli określisz `viewPath` wartość <xref:System.Web.UI.WebControls.XmlDataSource> sterowanie powraca obiekt widoku źródła danych, reprezentujący widok w węźle identyfikowane przez `viewPath`, wraz z jego węzłów podrzędnych. Jeśli ustawisz `viewPath` do <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.XmlDataSource> kontrolować kontroli <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> właściwości w celu określenia węzła głównego, z którym można utworzyć widoku źródła danych. Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> ustawiono właściwość <xref:System.Web.UI.WebControls.XmlDataSource> kontroli używa go do zwrócenia widoku źródła danych w taki sam sposób `viewPath` wyrażenie jest używane. Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> nie ustawiono właściwości <xref:System.Web.UI.WebControls.XmlDataSource> sterowanie powraca widoku wszystkich węzłów w danych XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlDocument">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument GetXmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDocument GetXmlDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXmlDocument () As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDocument ^ GetXmlDocument();" />
      <MemberSignature Language="F#" Value="member this.GetXmlDocument : unit -&gt; System.Xml.XmlDocument" Usage="xmlDataSource.GetXmlDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ładuje dane XML do pamięci, bezpośrednio z podstawowym magazynem danych lub z pamięci podręcznej i zwraca go w formie <see cref="T:System.Xml.XmlDataDocument" /> obiektu.</summary>
        <returns><see cref="T:System.Xml.XmlDataDocument" /> Obiekt, który reprezentuje określony w pliku XML <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> właściwości lub w pliku identyfikowane przez <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości, za pomocą dowolnego przekształcenia i <see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" /> zapytań stosowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> metodę bezpośredni dostęp do reprezentacji danych XML w pamięci.  
  
 Możesz manipulować zwracanego <xref:System.Xml.XmlDataDocument> obiektu, a następnie wywołać <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> do utrwalenia zmiany w pliku XML, określonego przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwości. Kilka wymagań dotyczących muszą zostać spełnione przed <xref:System.Xml.XmlDataDocument> można było pomyślnie zapisać obiekt. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> metody.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.XmlDataSource> kontrolką <xref:System.Web.UI.WebControls.TreeView> sterowania do wyświetlania i edytowania danych XML zawartych w pliku XML. Drugi przykład pokazuje sposób użycia <xref:System.Web.UI.WebControls.XmlDataSource> formant z szablonem <xref:System.Web.UI.WebControls.Repeater> sterowania do wyświetlania i edytowania danych XML zawartych w pliku XML.  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> kontrolką <xref:System.Web.UI.WebControls.TreeView> sterowania do wyświetlania i edytowania danych XML zawartych w pliku XML. Danych jest przetwarzany w pamięci przy użyciu <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> metoda za każdym razem, gdy wybierzesz <xref:System.Web.UI.WebControls.TreeView> węzła, a następnie jest zapisywany do pliku XML. Na koniec <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> jest wywoływana w <xref:System.Web.UI.WebControls.TreeView> formantu do odświeżania danych, który jest wyświetlany.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> formant z szablonem <xref:System.Web.UI.WebControls.Repeater> sterowania do wyświetlania i edytowania danych XML zawartych w pliku XML. Jak w poprzednim przykładzie danych jest przetwarzany w pamięci przy użyciu <xref:System.Xml.XmlDataDocument> pobierane przez <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> metody. Na koniec <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> jest wywoływana w <xref:System.Web.UI.WebControls.TreeView> formantu do odświeżania danych, który jest wyświetlany.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 Plik XML w przykładach kodu zawiera następujące dane:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Adres URL jest określona dla <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości; jednak <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> formant nie ma odpowiednich uprawnień do zasobów sieci Web.</exception>
        <exception cref="T:System.NotSupportedException">Adres URL jest określona dla <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości; jednak nie jest adres URL oparty na protokole HTTP.  
  
\- lub — 
Ścieżka względna czasu projektowania nie został zamapowany poprawnie przez projektanta przed użyciem <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli.  
  
\- lub — 
Personifikacja pamięci podręcznej i klienta są włączone. <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> Formant nie obsługuje buforowanie po włączeniu personifikacji klienta.</exception>
        <exception cref="T:System.Web.HttpException">Odmowa dostępu do określonej ścieżki <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości.</exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.Save" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      </Docs>
    </Member>
    <Member MemberName="OnTransforming">
      <MemberSignature Language="C#" Value="protected virtual void OnTransforming (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTransforming(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTransforming (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTransforming(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTransforming : EventArgs -&gt; unit&#xA;override this.OnTransforming : EventArgs -&gt; unit" Usage="xmlDataSource.OnTransforming e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywołuje <see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /> zdarzenie przed <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> formant wykonuje transformacji XSLT w jej danych XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podnoszenie zdarzenia wywołuje program obsługi zdarzeń przez delegata. Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
 <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> Metoda umożliwia również klasy pochodne obsłużyć zdarzenie bez dołączając delegata. Jest to preferowana metoda obsługi zdarzeń w klasie pochodnej.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> kontrolką <xref:System.Web.UI.WebControls.TreeView> formantu, aby wyświetlić przekształconych danych XML. Transformacje XML jest wykonywane przy użyciu arkusza stylów, wskazywanym przez <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwości. Ponadto arkusza stylów używa argumentów przekształcenia, które są przekazywane do kontroli źródła danych w <xref:System.Xml.Xsl.XsltArgumentList> obiektu w czasie wykonywania. Przykład kodu demonstruje sposób przekazywania <xref:System.Xml.Xsl.XsltArgumentList> obiektu do kontroli źródła danych, obsługując <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> zdarzeń z programem obsługi zdarzeń niestandardowych, który jest identyfikowany przez nazwę metody ustawione dla <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> metody.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Transformacje XML odbywa się przy użyciu następujące arkusza stylów.  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Podczas zastępowania <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> w klasie pochodnej, upewnij się wywołać <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> metody klasy bazowej, która zarejestrowana delegaci otrzymają zdarzenie.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="xmlDataSource.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje dane XML obecnie przechowywanych w pamięci przez <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli na dysku, jeśli <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwość jest ustawiona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Web.UI.WebControls.XmlDataSource> formant jest zwykle używany w scenariuszach powiązania danych tylko do odczytu, możesz użyć <xref:System.Web.UI.WebControls.XmlDataSource> formantu do edycji danych XML w podstawowym pliku danych XML. W tych scenariuszach załadowaniu danych XML z pliku XML, <xref:System.Web.UI.WebControls.XmlDataSource> kontroli. Możesz zmodyfikować <xref:System.Xml.XmlDataDocument> w pamięci przy użyciu <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> metody, a następnie zapisz do pliku XML danych przez wywołanie metody <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> metody. Ten można edytować scenariusz XML jest możliwe w przypadku, gdy są spełnione następujące warunki:  
  
-   Dane XML są ładowane z pliku XML, który jest wskazywany przez <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> właściwości określone w danych XML wbudowanych spoza <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> właściwości.  
  
-   Nie transformację XSLT jest określona w <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> lub <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwości.  
  
 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Metoda nie zapewnia obsługi jednoczesnych operacji zapisywania przez innego żądania. Jeśli więcej niż jeden użytkownik edytuje plik XML za pomocą <xref:System.Web.UI.WebControls.XmlDataSource> sterowania, nie ma żadnej gwarancji, że wszyscy użytkownicy działają w tych samych danych. Istnieje również możliwość dla <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> operację, aby zakończyć się niepowodzeniem ze względu na te same kwestie współbieżności.  
  
   
  
## Examples  
 Ten rozdział zawiera dwa przykłady kodu. Pierwszy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> kontrolką <xref:System.Web.UI.WebControls.TreeView> sterowania do wyświetlania i edytowania danych XML zawartych w pliku XML. Drugi przykład kodu pokazuje sposób użycia <xref:System.Web.UI.WebControls.XmlDataSource> formant z szablonem <xref:System.Web.UI.WebControls.Repeater> sterowania do wyświetlania i edytowania danych XML zawartych w pliku XML.  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> kontrolką <xref:System.Web.UI.WebControls.TreeView> sterowania do wyświetlania i edytowania danych XML zawartych w pliku XML. Danych jest przetwarzany w pamięci przy użyciu <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> metoda za każdym razem, gdy wybierzesz <xref:System.Web.UI.WebControls.TreeView> węzła, a następnie jest zapisywany do pliku XML. Na koniec <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> jest wywoływana w <xref:System.Web.UI.WebControls.TreeView> formantu do odświeżania danych, który jest wyświetlany.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> formant z szablonem <xref:System.Web.UI.WebControls.Repeater> sterowania do wyświetlania i edytowania danych XML zawartych w pliku XML. Jak w poprzednim przykładzie danych jest przetwarzany w pamięci przy użyciu <xref:System.Xml.XmlDataDocument> obiekt pobierany przez <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> metody. Na koniec <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> jest wywoływana w <xref:System.Web.UI.WebControls.TreeView> formantu do odświeżania danych, który jest wyświetlany.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 Plik XML w przykładach kodu zawiera następujące dane:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Dane XML został załadowany za pomocą <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> właściwości zamiast <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości.  
  
\- lub — 
Adres URL jest określona dla <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości; jednak <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> formant nie ma odpowiednich uprawnień do zasobów sieci Web.</exception>
        <exception cref="T:System.NotSupportedException">Adres URL jest określona dla <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości; jednak nie jest adres URL oparty na protokole HTTP.  
  
\- lub — 
Ścieżka względna czasu projektowania nie został zamapowany poprawnie przez projektanta przed użyciem <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli.</exception>
        <exception cref="T:System.Web.HttpException">Odmowa dostępu do określonej ścieżki <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości.</exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
        <value><see langword="true" /> Jeśli kolekcja jest kolekcją <see cref="T:System.Collections.IList" /> obiekty; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.XmlDataSource> wystąpienia jest rzutowany na <xref:System.ComponentModel.IListSource> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
        <returns>Implementowanie obiektu <see cref="T:System.Collections.IList" /> może być powiązana ze źródłem danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.XmlDataSource> wystąpienia jest rzutowany na <xref:System.ComponentModel.IListSource> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.XmlDataSource> wystąpienia jest rzutowany na <xref:System.Web.UI.IDataSource> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nazwa widoku do pobrania. Jeśli <see cref="F:System.String.Empty" /> jest określony, domyślny widok <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> jest pobierany formant.</param>
        <summary>Pobiera widok źródła danych o nazwie, które są skojarzone z kontrolą źródła danych.</summary>
        <returns>Zwraca nazwany <see cref="T:System.Web.UI.WebControls.XmlDataSourceView" /> obiekt skojarzony z <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, zobacz <see cref="M:System.Web.UI.IDataSource.GetViewNames" />.</summary>
        <returns>Implementowanie obiektu <see cref="T:System.Collections.ICollection" /> zawierająca nazwy reprezentujący listę widoku obiektów skojarzonych z <see cref="T:System.Web.UI.IDataSource" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Mogą być używane tylko wtedy, gdy <xref:System.Web.UI.WebControls.XmlDataSource> wystąpienia jest rzutowany na <xref:System.Web.UI.IDataSource> interfejsu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual string Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Transform" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Transform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Transform { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bloku danych arkusza stylów języka XSL (Extensible), który określa transformacji XSLT do wykonania na danych XML zarządza <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli.</summary>
        <value>Ciąg XSL, który definiuje transformacje XML do wykonania na danych znajdujących się na tekście <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> lub <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W scenariuszach deklaratywne <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwość jest określony jako właściwość multiline wewnętrzny <xref:System.Web.UI.WebControls.XmlDataSource> obiektu. Właściwości wewnętrznej jest zgodny z danych arkusza stylów XSL, ponieważ pozwala ona do formatu arkusza stylów w dowolny sposób i Ignoruj znak dopełnienia zagadnienia, takie jak uzupełnianie znaków cudzysłowu.  
  
 Jeśli oba <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> i <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwość, pierwszeństwo i dane w pliku arkusza stylów XSL (XSL) jest używana zamiast elementy arkusza stylów, które są określone w <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwości. Jeśli wyrażenie XPath można ustawić przy użyciu <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> właściwości, zostanie zastosowane po transformowanych danych XML.  
  
 Jeśli zmienisz wartość <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwości <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest wywoływane. Jeśli jest włączone buforowanie, a następnie zmień wartość <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, unieważnienia pamięci podręcznej.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.XmlDataSource> Klasa używa przestarzałego <xref:System.Xml.Xsl.XslTransform> klasy do wykonania przekształcenia XSL. Jeśli chcesz używać funkcji arkusza stylów, które pojawiły się po <xref:System.Xml.Xsl.XslTransform> klasa została zakończona, ręcznie zastosować przekształcenia przy użyciu <xref:System.Xml.Xsl.XslCompiledTransform> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> formant z szablonem <xref:System.Web.UI.WebControls.Repeater> formantu, aby wyświetlić przekształconych danych XML. Arkusz stylów, które wykonuje przekształcenie jest zdefiniowane w tekście, <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwości kontroli źródła danych.  
  
  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>Todd</firstn>  
         <lastn>Rowe</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Trwa ładowanie dokumentu.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="TransformArgumentList">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XsltArgumentList TransformArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformArgumentList As XsltArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Xsl::XsltArgumentList ^ TransformArgumentList { System::Xml::Xsl::XsltArgumentList ^ get(); void set(System::Xml::Xsl::XsltArgumentList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformArgumentList : System.Xml.Xsl.XsltArgumentList with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltArgumentList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zawiera listę argumentów XSLT, które są używane wraz z arkusz stylów zdefiniowany przez <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> lub <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> właściwości przekształcenie danych XML.</summary>
        <value><see cref="T:System.Xml.Xsl.XsltArgumentList" /> Obiekt zawierający parametry XSLT i obiekty, które mają być stosowane do danych XML, gdy jest ładowany przez <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> właściwości podczas <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> zdarzenie jest zgłaszane, aby upewnić się, w tym czasie, stosowany transformację XSLT do danych XML są dostępne parametry XSLT.  
  
 Jeśli <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> właściwość jest ustawiona na `true` i <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> właściwość jest ustawiona, wpisy w pamięci podręcznej nie są automatycznie unieważnione, gdy parametry zmienią się na liście argumentów przekształcenia. W takim przypadku należy napisać kod do unieważnienia pamięci podręcznej, ustawiając <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> z <xref:System.Web.UI.WebControls.TreeView> formantu, aby wyświetlić przekształconych danych XML. Transformacje XML jest wykonywane przy użyciu arkusza stylów, wskazywanym przez <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwości. Ponadto arkusza stylów używa argumentów przekształcenia, które są przekazywane do kontroli źródła danych w <xref:System.Xml.Xsl.XsltArgumentList> obiektu w czasie wykonywania. Przykład kodu demonstruje sposób przekazywania <xref:System.Xml.Xsl.XsltArgumentList> do kontroli źródła danych, obsługując <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> zdarzeń za pomocą programu obsługi zdarzeń niestandardowych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Transformacja danych XML jest wykonywane z następujące arkusza stylów.  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="TransformFile">
      <MemberSignature Language="C#" Value="public virtual string TransformFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransformFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TransformFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformFile : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa nazwę pliku pliku arkusza stylów języka XSL (Extensible) (XSL), który definiuje transformacji XSLT do wykonania na danych XML zarządza <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> kontroli.</summary>
        <value>Bezwzględna ścieżka fizyczna lub ścieżka względna pliku arkusza stylów XSL, który definiuje transformacje XML do wykonania na danych znajdujących się na <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> lub <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli oba <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> i <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwości są ustawione, <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwość, pierwszeństwo i dane w pliku arkusza stylów XSL (XSL) jest używana zamiast elementy arkusza stylów, które są określone w <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwości. Jeśli wyrażenie XPath można ustawić przy użyciu <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> właściwości, zostanie zastosowane po transformowanych danych XML.  
  
 Jeśli zmienisz wartość <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> właściwości <xref:System.Web.UI.IDataSource.DataSourceChanged> zdarzenie jest wywoływane. Jeśli jest włączone buforowanie, a następnie zmień wartość <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, unieważnienia pamięci podręcznej.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.XmlDataSource> Klasa używa przestarzałego <xref:System.Xml.Xsl.XslTransform> klasy do wykonania przekształcenia XSL. Jeśli chcesz używać funkcji arkusza stylów, które pojawiły się po <xref:System.Xml.Xsl.XslTransform> klasa została zakończona, ręcznie zastosować przekształcenia przy użyciu <xref:System.Xml.Xsl.XslCompiledTransform> klasy.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> kontroli i <xref:System.Web.UI.WebControls.TreeView> formantu, aby wyświetlić przekształconych danych XML w formularzu sieci Web. Transformacja odbywa się przy użyciu arkusza stylów, wskazywanym przez <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwości. Opcjonalnie możesz podać argumenty przekształcenia przy użyciu arkusza stylów <xref:System.Xml.Xsl.XsltArgumentList>. Aby uzyskać więcej informacji, zobacz <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> właściwości.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/CS/xmlds5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/VB/xmlds5vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Arkusz stylów XSL, które wykonuje przekształcenie XML ma następującą strukturę:  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
     </xsl:attribute>  
     <xsl:attribute name="price">  
       <xsl:value-of select="price"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Trwa ładowanie dokumentu.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="Transforming">
      <MemberSignature Language="C#" Value="public event EventHandler Transforming;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Transforming" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Transforming As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Transforming;" />
      <MemberSignature Language="F#" Value="member this.Transforming : EventHandler " Usage="member this.Transforming : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje przed arkusza stylów, który jest definiowany przez <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> właściwości lub identyfikowane przez <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" /> właściwość jest stosowana do danych XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> zdarzenie, aby ustawić <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> właściwość o <xref:System.Xml.Xsl.XsltArgumentList> obiekt przed <xref:System.Web.UI.WebControls.XmlDataSource> formant wykonuje przekształcenie danych XML.  
  
 Aby uzyskać więcej informacji na temat obsługi zdarzeń, zobacz [Handling and Raising Events](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> kontrolką <xref:System.Web.UI.WebControls.TreeView> formantu, aby wyświetlić przekształconych danych XML. Transformacje XML jest wykonywane przy użyciu arkusza stylów, wskazywanym przez <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> właściwości. Ponadto arkusza stylów używa argumentów przekształcenia, które są przekazywane do kontroli źródła danych w <xref:System.Xml.Xsl.XsltArgumentList> w czasie wykonywania. Przykład kodu demonstruje sposób przekazywania <xref:System.Xml.Xsl.XsltArgumentList> obiektu do kontroli źródła danych, obsługując <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> zdarzeń za pomocą programu obsługi zdarzeń niestandardowych.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Przekształcania danych XML jest wykonywane przy użyciu następujące arkusza stylów:  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public virtual string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa wyrażenie XPath, mają być stosowane do danych XML zawartych <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> właściwości lub przy użyciu pliku XML, wskazywanym przez <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości.</summary>
        <value>Ciąg, który reprezentuje wyrażenie XPath, który może służyć do filtrowania danych, przechowywanych przez <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> właściwości lub przy użyciu pliku XML, wskazywanym przez <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> właściwości. Wartość domyślna to <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat XPath wyrażenia wiązania danych, zobacz [powiązanie kontroli tabelaryczne z kontrolką elementu XmlDataSource](https://msdn.microsoft.com/library/d6bf202f-6454-45fd-9424-e17f6c7eafe8).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Web.UI.WebControls.XmlDataSource> formant z szablonem <xref:System.Web.UI.WebControls.Repeater> formantu, aby wyświetlić dane XML, która została przefiltrowana za pomocą wyrażenia XPath. W tym przykładzie składni XPath jest używana do filtrowania danych XML podczas <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> właściwości kontroli źródła danych jest ustawiony, a także tworzy powiązanie elementów <xref:System.Web.UI.WebControls.Repeater> szablonu kontrolki z danymi XML.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/CS/xmlds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/VB/xmlds8vb.aspx#1)]  
  
 Plik XML, w przykładzie kodu zawiera następujące dane:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Trwa ładowanie dokumentu.</exception>
      </Docs>
    </Member>
  </Members>
</Type>