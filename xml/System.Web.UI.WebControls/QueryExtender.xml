<Type Name="QueryExtender" FullName="System.Web.UI.WebControls.QueryExtender">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37f0a5ae95bbaee1e8c931a6b72efc409ff5d00f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379982" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class QueryExtender : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExtender extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryExtender" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExtender&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExtender : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type QueryExtender = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TargetControlID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Expressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia danych ze źródła danych ma zostać przefiltrowana bez jawnego <see langword="Where" /> klauzuli w źródle danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#Introduction)  
  
-   [Tła](#background)  
  
-   [Opcje filtru](#filter_options)  
  
-   [Zadania](#Tasks)  
  
-   [Składni deklaratywnej](#declarative_syntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 <xref:System.Web.UI.WebControls.QueryExtender> Formant jest używany do tworzenia filtrów dla danych, które są pobierane ze źródła danych bez użycia jawnego `Where` klauzuli w źródle danych. <xref:System.Web.UI.WebControls.QueryExtender> Formant może służyć do określenia filtrowanie przy użyciu składni deklaratywnej.  
  
<a name="background"></a>   
## <a name="background"></a>Tło  
 Filtrowanie wyklucza dane ze źródła danych za pomocą wyświetlania tylko te rekordy, które spełniają określone kryteria. Filtrowanie umożliwia przedstawia różne widoki danych znajdujących się w zestawie danych bez wpływu na dane w zestawie danych.  
  
 Filtrowanie zwykle wymaga utworzenia `Where` klauzuli do zastosowania do polecenia, który odpytuje źródła danych. Jednak `Where` właściwość formantu źródła danych nie może ujawnić pełnej funkcjonalności, która jest dostępna. Na przykład kontroli klasą QueryExtender umożliwia zapytania dotyczącego tabeli przez wyszukiwanie kończyć ciągów na początku lub w dowolnym miejscu w polu .data.  
  
 Do udostępnienia pełnej funkcjonalności, która jest dostępna w składniku LINQ i ułatwiają filtrowania danych, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] zapewnia <xref:System.Web.UI.WebControls.QueryExtender> formantu. <xref:System.Web.UI.WebControls.QueryExtender> Formantu ma następujące zalety:  
  
-   Zapewnia więcej możliwości filtrowania niż zapisu `Where` klauzuli. Na przykład można wyszukiwać tabeli Produkty dla wartości logicznych za pomocą <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> filtru bez pisania zapytania.  
  
-   Umożliwia określanie filtrów przy użyciu tej samej składni <xref:System.Web.UI.WebControls.LinqDataSource> i <xref:System.Web.UI.WebControls.EntityDataSource> formanty i formantów innego źródła danych, które można użyć.  
  
-   Może być używany z <xref:System.Web.UI.WebControls.LinqDataSource> formantu, z <xref:System.Web.UI.WebControls.EntityDataSource> kontroli, lub ze źródłami danych innych firm.  
  
<a name="filter_options"></a>   
## <a name="filter-options"></a>Opcje filtru  
 <xref:System.Web.UI.WebControls.QueryExtender> Sterowanie obsługuje różne opcje, które mogą być używane do filtrowania danych. Formant umożliwia wyszukiwanie ciągów, Wyszukaj wartości liczbowe w określonym zakresie i porównywania wartości właściwości w tabela, która ma określoną wartość. Formant umożliwia również posortować dane i podaj zapytań niestandardowych.  
  
 Te opcje są przekazywane jako wyrażenia LINQ w <xref:System.Web.UI.WebControls.QueryExtender> formantu. <xref:System.Web.UI.WebControls.QueryExtender> Formantu obsługuje również wyrażeń, które są specyficzne dla [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] danych dynamicznych aplikacji.  
  
 W poniższej tabeli wymieniono opcje, które umożliwiają filtrowanie danych w <xref:System.Web.UI.WebControls.QueryExtender> formantu.  
  
|Wyrażenie|Opis|  
|----------------|-----------------|  
|<xref:System.Web.DynamicData.ControlFilterExpression>|(Tylko dla danych dynamicznych) Tworzy zapytanie bazy danych przy użyciu klucza danych wybranego w kontroli źródła z danymi.<br /><br /> Aby uzyskać informacje o tym, jak użyć tej opcji filtrowania, zobacz [jak: Filtr tabeli wierszy przy użyciu wartości z tabeli nadrzędnej w danych dynamicznych](http://msdn.microsoft.com/library/a5566986-7c30-4e71-b4a4-81cd16095749).|  
|<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|Określa wyrażenie zdefiniowane przez użytkownika dla źródła danych. Wyrażenie LINQ niestandardowe można wywołać w obsłudze zdarzeń.|  
|<xref:System.Web.DynamicData.DynamicFilterExpression>|(Tylko dla danych dynamicznych) Tworzy zapytanie bazy danych przy użyciu określonego <xref:System.Web.DynamicData.DynamicFilter> formantu.<br /><br /> Aby uzyskać informacje o tym, jak użyć tej opcji filtrowania, zobacz [jak: Filtr tabeli wierszy za pomocą klucza obcego w danych dynamicznych](http://msdn.microsoft.com/library/b774e56a-a5b9-41b7-b114-699313ef2056).|  
|<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|Określa wyrażenie LINQ zdefiniowane przez użytkownika dla źródła danych. Wyrażenie, które jest wywoływane w metodzie.|  
|<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|Stosuje wyrażenie sortowania do <xref:System.Linq.IQueryable> obiektu źródła danych. Po zastosowaniu <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> wartości, należy zastosować dodatkowe operacji, określając <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> wartość.|  
|<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|Porównuje właściwości wartości danych pola i właściwości, które są określone w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji.|  
|<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|Określa, czy wartość jest większa lub mniejsza niż określona wartość lub czy wartość jest między dwiema wartościami.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|Porównuje wartości w polu lub pola do określonej wartości ciągu.|  
  
 Umożliwiają one <xref:System.Web.UI.WebControls.QueryExtender> opcje pojedynczo lub można łączyć je, aby zapewnić złożone filtrowanie na stronie sieci Web. Aby uzyskać więcej informacji, zobacz [informacje o formancie serwera sieci Web klasą QueryExtender](http://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702). [Wskazówki: Filtrowanie danych na stronie sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)  
  
<a name="Tasks"></a>   
## <a name="tasks"></a>Zadania  
 Poniższa tabela przedstawia zadania, które pokazują, jak używać <xref:System.Web.UI.WebControls.QueryExtender> sterowania, aby odfiltrować dane.  
  
|dokument|Zadanie|  
|--------------|----------|  
|[Wskazówki: Filtrowanie danych na stronie sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)|Przedstawia sposób użycia filtru opcji <xref:System.Web.UI.WebControls.QueryExtender> zawiera kontrolki.|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:QueryExtender   
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBiding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="UnLoad event hadler"  
    Runat="server"  
    TargetControlID="string"  
    Visible="True|False"  
>  
        <asp:ControlFilterExpression   
            ControlD="string"  
            Column="string">   
        </asp:ControlFilterExpression>  
        <asp:DynamicFilterExpression  
            ControlD="string"  
        </asp:DynamicFilterExpression>  
        <asp:CustomExpression="string"  
            OnQuerying="OnQerying event handler">  
        </asp:CustomExpression>  
        <asp:OrderByExpression="string"  
            DataField="string"  
            Direction="string">  
            <asp:ThenByExpression  
                 DataField="string"  
                 Direction="string"  
            </asp:ThenBy>  
        </asp:OrderByExpression>  
        <asp:PropertyExpression="string">  
                <!-- child controls -->  
        </asp:PropertyExpression  
        >  
        <asp:RangeExpression="integer"  
            Datafield="string"  
            MaxType="Exclusive|Inclusive|None"  
            MinType="Exclusive|Inclusive|None">  
                <!--child controls-->  
        </asp:RangeExpression>  
        <asp:SearchExpression="string"  
            ComparisonType="CurrentCulture|CurrentCultureIgnoreCase|  
                InavariantCulture|InvariantCultureIgnoreCase|  
                Ordinal|OrdinalIgnoreCase"  
            DataField="string"  
            SearchType="Contains|EndsWith|StartsWith">  
                <!--child controls-->  
        </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Web.UI.WebControls.QueryExtender> formantu, aby zapewnić funkcji wyszukiwania na stronie sieci Web. <xref:System.Web.UI.WebControls.QueryExtender> Formant używa tekst, który został wprowadzony w `TextBoxSearch` formantu do wyszukiwania zawartości w kolumnach tabeli Produkty w danych, która jest zwracana z ProductName i Supplier.CompanyName <xref:System.Web.UI.WebControls.LinqDataSource> formantu. <xref:System.Web.UI.WebControls.Expressions.SearchExpression> Obiekt jest używany do wykonywania wyszukiwania. <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> Właściwość określa pól danych do wyszukiwania. <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> Właściwość określa typ wyszukiwania do wykonania. <xref:System.Web.UI.WebControls.ControlParameter> Element Określa formant zawierający tekst, który ma używać do wyszukiwania. Ten przykładowy kod jest częścią większego przykładu znajduje się w [wskazówki: filtrowanie danych w strony sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:SearchExpression DataFields="ProductName, Supplier.CompanyName"   
        SearchType="StartsWith">  
    <asp:ControlParameter ControlID="TextBoxSearch" />  
  </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
 Poniższy przykład przedstawia użycie <xref:System.Web.UI.WebControls.QueryExtender> formantu, aby wyszukać strony sieci Web dla wartości w określonym zakresie. <xref:System.Web.UI.WebControls.QueryExtender> Kontroli używa wartości, które zostały wprowadzone w `TextBoxFrom` i `TextBoxTo` służy do wyszukiwania wartości w kolumnach tabeli Produkty w danych, która jest zwracana z ProductName i Supplier.CompanyName <xref:System.Web.UI.WebControls.LinqDataSource> formantu . <xref:System.Web.UI.WebControls.ControlParameter> Element określa kontrolek pole tekstowe, które zawierają maksymalne i minimalne wartości z zakresu wyszukiwania. <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> i <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> właściwości określają, że maksymalne i minimalne wartości muszą być zawarte w danych, która jest zwracana. Ten przykładowy kod jest częścią większego przykładu udostępnionego w [wskazówki: filtrowanie danych w strony sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:RangeExpression DataField="UnitPrice" MinType="Inclusive"   
        MaxType="Inclusive">  
    <asp:ControlParameter ControlID="TextBoxFrom" />  
    <asp:ControlParameter ControlID="TexBoxTo" />  
  </asp:RangeExpression>  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.SearchType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.QueryExtender" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.IQueryableDataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSource As IQueryableDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::IQueryableDataSource ^ DataSource { System::Web::UI::WebControls::IQueryableDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Web.UI.WebControls.IQueryableDataSource" Usage="System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IQueryableDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera formantu źródła danych (<see cref="T:System.Web.UI.IDataSource" /> obiektu) do użycia dla zapytania.</summary>
        <value>Formant źródła danych do użycia dla zapytania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender> Sterowanie obsługuje <xref:System.Web.UI.WebControls.LinqDataSource> i <xref:System.Web.UI.WebControls.EntityDataSource> kontrolki.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" /> Jest właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wyrażeń, które są stosowane do <see cref="T:System.Web.UI.IDataSource" /> formantu.</summary>
        <value>Kolekcja wyrażeń, które są stosowane do kontroli źródła danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="queryExtender.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Obiekt reprezentujący stan <see cref="T:System.Web.UI.WebControls.QueryExtender" /> formantu.</param>
        <summary>Ładuje stan wartości <see cref="T:System.Web.UI.WebControls.QueryExtender" /> formant, który musi zostać utrwalony.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInit : EventArgs -&gt; unit&#xA;override this.OnInit : EventArgs -&gt; unit" Usage="queryExtender.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Występuje, gdy nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.QueryExtender" /> klasy został zainicjowany.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="queryExtender.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan widoku <see cref="T:System.Web.UI.WebControls.QueryExtender" /> formantu.</summary>
        <returns>Obiekt zawierający zapisany stan <see cref="T:System.Web.UI.WebControls.QueryExtender" /> formantu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControlID">
      <MemberSignature Language="C#" Value="public virtual string TargetControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TargetControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TargetControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetControlID : string with get, set" Usage="System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator <see cref="T:System.Web.UI.IDataSource" /> formant do użycia dla zapytania.</summary>
        <value>Identyfikator danych źródłowych formant do użycia dla zapytania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="queryExtender.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmiany stanu widoku <see cref="T:System.Web.UI.WebControls.QueryExtender" /> , aby zmiany mogą być przechowywane w <see cref="T:System.Web.UI.StateBag" /> obiekt dla formantu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>