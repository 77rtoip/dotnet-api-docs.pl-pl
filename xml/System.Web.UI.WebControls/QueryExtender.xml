<Type Name="QueryExtender" FullName="System.Web.UI.WebControls.QueryExtender">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2badb999d7a70d9ef0f0d24c6b2aa9bfbef874f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69389770" /></Metadata><TypeSignature Language="C#" Value="public class QueryExtender : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExtender extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryExtender" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExtender&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExtender : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type QueryExtender = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TargetControlID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Expressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia filtrowanie danych ze źródła danych bez jawnej <see langword="Where" /> klauzuli w źródle danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W tym temacie:  
  
-   [Wprowadzenie](#Introduction)  
  
-   [Tło](#background)  
  
-   [Opcje filtru](#filter_options)  
  
-   [Zadania](#Tasks)  
  
-   [Składnia deklaracyjne](#declarative_syntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Wprowadzenie  
 Kontrolka służy do tworzenia filtrów dla danych pobieranych ze źródła danych bez używania klauzuli Explicit `Where` w źródle danych. <xref:System.Web.UI.WebControls.QueryExtender> <xref:System.Web.UI.WebControls.QueryExtender> Kontrolka może służyć do określania filtrowania przy użyciu składni deklaratywnej.  
  
<a name="background"></a>   
## <a name="background"></a>Tło  
 Filtrowanie wyklucza dane ze źródła danych, wyświetlając tylko te rekordy, które spełniają określone kryteria. Filtrowanie pozwala przedstawić różne widoki danych znajdujących się w zestawie danych bez wpływu na dane w zestawie danych.  
  
 Filtrowanie zwykle wymaga utworzenia `Where` klauzuli, która ma zostać zastosowana do polecenia, które wysyła zapytanie do źródła danych. `Where` Jednak Właściwość kontroli źródła danych może nie uwidaczniać pełnej dostępnej funkcjonalności. Na przykład kontrolka QueryExtender umożliwia wykonywanie zapytań względem tabeli przez wyszukiwanie ciągów na początku, na końcu lub w dowolnym miejscu w polu Data.  
  
 Aby udostępnić pełną funkcjonalność, która jest dostępna w LINQ i aby ułatwić filtrowanie danych, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] <xref:System.Web.UI.WebControls.QueryExtender> zapewnia kontrolę. <xref:System.Web.UI.WebControls.QueryExtender> Kontrolka ma następujące zalety:  
  
-   Zapewnia bogatsze środowisko filtrowania niż pisanie `Where` klauzuli. Na przykład można wyszukiwać w tabeli Products wartości logiczne przy użyciu <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> filtra bez pisania zapytania.  
  
-   Umożliwia określenie filtrów za pomocą tej samej składni dla <xref:System.Web.UI.WebControls.LinqDataSource> formantów i <xref:System.Web.UI.WebControls.EntityDataSource> i dla innych kontrolek źródła danych, które mogą być używane.  
  
-   Może być używany z <xref:System.Web.UI.WebControls.LinqDataSource> formantem, <xref:System.Web.UI.WebControls.EntityDataSource> z kontrolką lub źródłami danych innych firm.  
  
<a name="filter_options"></a>   
## <a name="filter-options"></a>Opcje filtru  
 <xref:System.Web.UI.WebControls.QueryExtender> Kontrolka obsługuje różne opcje, których można użyć do filtrowania danych. Kontrolka umożliwia wyszukiwanie ciągów, wyszukiwanie wartości liczbowych w określonym zakresie i porównywanie wartości właściwości w tabeli z określoną wartością. Kontrolka umożliwia również sortowanie danych i dostarczanie niestandardowych zapytań.  
  
 Te opcje są dostępne jako wyrażenia LINQ w <xref:System.Web.UI.WebControls.QueryExtender> kontrolce. Formant obsługuje również wyrażenia, które są specyficzne dla [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] dynamicznych aplikacji danych. <xref:System.Web.UI.WebControls.QueryExtender>  
  
 W poniższej tabeli wymieniono opcje, których można użyć do filtrowania danych w <xref:System.Web.UI.WebControls.QueryExtender> formancie.  
  
|Wyrażenie|Opis|  
|----------------|-----------------|  
|<xref:System.Web.DynamicData.ControlFilterExpression>|(Tylko dane dynamiczne) Kompiluje zapytanie bazy danych przy użyciu klucza danych wybranego w kontrolce powiązanej z danymi źródłowymi.<br /><br /> Aby uzyskać informacje o sposobach korzystania z tej opcji filtru [, zobacz How to: Filtrowanie wierszy tabeli przy użyciu wartości z tabeli nadrzędnej w danych](https://msdn.microsoft.com/library/a5566986-7c30-4e71-b4a4-81cd16095749)dynamicznych.|  
|<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|Określa zdefiniowane przez użytkownika wyrażenie dla źródła danych. Niestandardowe wyrażenie LINQ może być wywoływane w programie obsługi zdarzeń.|  
|<xref:System.Web.DynamicData.DynamicFilterExpression>|(Tylko dane dynamiczne) Kompiluje zapytanie bazy danych przy użyciu określonej <xref:System.Web.DynamicData.DynamicFilter> kontrolki.<br /><br /> Aby uzyskać informacje o sposobach korzystania z tej opcji filtru [, zobacz How to: Filtrowanie wierszy tabeli przy użyciu klucza obcego w danych](https://msdn.microsoft.com/library/b774e56a-a5b9-41b7-b114-699313ef2056)dynamicznych.|  
|<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|Określa zdefiniowane przez użytkownika wyrażenie LINQ dla źródła danych. Wyrażenie jest wywoływane w metodzie.|  
|<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|Stosuje wyrażenie sortowania do <xref:System.Linq.IQueryable> obiektu źródła danych. Po zastosowaniu <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> wartości można zastosować dodatkowe operacje sortowania, <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> określając wartość.|  
|<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|Porównuje właściwości pola danych i wartości właściwości, które są określone w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji.|  
|<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|Określa, czy wartość jest większa niż określona wartość lub czy wartość należy do przedziału od dwóch wartości.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|Porównuje wartości w polu lub polach z określoną wartością ciągu.|  
  
 Możesz użyć tych <xref:System.Web.UI.WebControls.QueryExtender> opcji pojedynczo lub połączyć je, aby zapewnić złożone filtrowanie na stronie sieci Web. Aby uzyskać więcej informacji, zobacz [QueryExtender Web Server Control — Omówienie](https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702). [Przewodnik: Filtrowanie danych na stronie sieci Web przy użyciu składni deklaracyjnej](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)  
  
<a name="Tasks"></a>   
## <a name="tasks"></a>Zadania  
 Poniższa tabela zawiera listę zadań, które pokazują, jak <xref:System.Web.UI.WebControls.QueryExtender> używać kontrolki do filtrowania danych.  
  
|dokument|Zadanie|  
|--------------|----------|  
|[Przewodnik: Filtrowanie danych na stronie sieci Web przy użyciu składni deklaracyjnej](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)|Pokazuje, w jaki sposób używać opcji <xref:System.Web.UI.WebControls.QueryExtender> filtru udostępnianych przez formant.|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Składnia deklaracyjna  
  
```  
<asp:QueryExtender   
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBiding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="UnLoad event handler"  
    Runat="server"  
    TargetControlID="string"  
    Visible="True|False"  
>  
        <asp:ControlFilterExpression   
            ControlD="string"  
            Column="string">   
        </asp:ControlFilterExpression>  
        <asp:DynamicFilterExpression  
            ControlD="string"  
        </asp:DynamicFilterExpression>  
        <asp:CustomExpression="string"  
            OnQuerying="OnQuerying event handler">  
        </asp:CustomExpression>  
        <asp:OrderByExpression="string"  
            DataField="string"  
            Direction="string">  
            <asp:ThenByExpression  
                 DataField="string"  
                 Direction="string"  
            </asp:ThenBy>  
        </asp:OrderByExpression>  
        <asp:PropertyExpression="string">  
                <!-- child controls -->  
        </asp:PropertyExpression  
        >  
        <asp:RangeExpression="integer"  
            Datafield="string"  
            MaxType="Exclusive|Inclusive|None"  
            MinType="Exclusive|Inclusive|None">  
                <!--child controls-->  
        </asp:RangeExpression>  
        <asp:SearchExpression="string"  
            ComparisonType="CurrentCulture|CurrentCultureIgnoreCase|  
                InvariantCulture|InvariantCultureIgnoreCase|  
                Ordinal|OrdinalIgnoreCase"  
            DataField="string"  
            SearchType="Contains|EndsWith|StartsWith">  
                <!--child controls-->  
        </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
   
  
## Examples  
 Poniższy przykład pokazuje, <xref:System.Web.UI.WebControls.QueryExtender> jak używać kontrolki do udostępniania funkcji wyszukiwania na stronie sieci Web. Kontrolka używa tekstu wprowadzonego `TextBoxSearch` w kontrolce, aby wyszukać zawartość w kolumnach ProductName i dostawca. NazwaFirmy tabeli Products w danych <xref:System.Web.UI.WebControls.LinqDataSource> , które są zwracane z formantu. <xref:System.Web.UI.WebControls.QueryExtender> <xref:System.Web.UI.WebControls.Expressions.SearchExpression> Obiekt jest używany do przeprowadzenia wyszukiwania. <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> Właściwość określa pola danych do wyszukania. <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> Właściwość określa typ wyszukiwania do wykonania. <xref:System.Web.UI.WebControls.ControlParameter> Element Określa formant, który zawiera tekst, który ma być używany do wyszukiwania. Ten przykład kodu jest częścią większego przykładu, który jest dostępny [w instruktażu: Filtrowanie danych na stronie sieci Web przy użyciu składni](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)deklaracyjnej.  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:SearchExpression DataFields="ProductName, Supplier.CompanyName"   
        SearchType="StartsWith">  
    <asp:ControlParameter ControlID="TextBoxSearch" />  
  </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
 Poniższy przykład pokazuje, <xref:System.Web.UI.WebControls.QueryExtender> jak za pomocą kontrolki przeszukać stronę sieci Web pod kątem wartości w określonym zakresie. Kontrolka używa wartości wprowadzonych `TextBoxFrom` w formantach i `TextBoxTo` , aby wyszukać wartości w kolumnach ProductName i dostawca. NazwaFirmy tabeli Products <xref:System.Web.UI.WebControls.LinqDataSource> w danych zwracanych przez formant. <xref:System.Web.UI.WebControls.QueryExtender> . <xref:System.Web.UI.WebControls.ControlParameter> Element określa kontrolki pola tekstowego, które zawierają wartości minimalne i maksymalne do użycia podczas wyszukiwania zakresu. Właściwości <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> i<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> określają, że wartości minimalne i maksymalne muszą być uwzględnione w zwracanych danych. Ten przykład kodu jest częścią większego przykładu dostępnego [w przewodniku: Filtrowanie danych na stronie sieci Web przy użyciu składni](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)deklaracyjnej.  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:RangeExpression DataField="UnitPrice" MinType="Inclusive"   
        MaxType="Inclusive">  
    <asp:ControlParameter ControlID="TextBoxFrom" />  
    <asp:ControlParameter ControlID="TexBoxTo" />  
  </asp:RangeExpression>  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.SearchType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Web.UI.WebControls.QueryExtender" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.IQueryableDataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSource As IQueryableDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::IQueryableDataSource ^ DataSource { System::Web::UI::WebControls::IQueryableDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Web.UI.WebControls.IQueryableDataSource" Usage="System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IQueryableDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera formant źródła danych (<see cref="T:System.Web.UI.IDataSource" /> Object) do użycia w zapytaniu.</summary>
        <value>Formant źródła danych, który ma być używany w zapytaniu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka obsługuje kontrolki <xref:System.Web.UI.WebControls.EntityDataSource>i. <xref:System.Web.UI.WebControls.LinqDataSource> <xref:System.Web.UI.WebControls.QueryExtender>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" /> Właściwość jest<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wyrażeń, które są stosowane do <see cref="T:System.Web.UI.IDataSource" /> kontrolki.</summary>
        <value>Kolekcja wyrażeń, które są stosowane do kontroli źródła danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="queryExtender.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Obiekt, który reprezentuje stan <see cref="T:System.Web.UI.WebControls.QueryExtender" /> formantu.</param>
        <summary>Ładuje stan wartości w <see cref="T:System.Web.UI.WebControls.QueryExtender" /> kontrolce, która musi być utrwalona.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="queryExtender.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane dotyczące zdarzenia.</param>
        <summary>Występuje, gdy zostanie zainicjowane nowe wystąpienie <see cref="T:System.Web.UI.WebControls.QueryExtender" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="queryExtender.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje bieżący stan <see cref="T:System.Web.UI.WebControls.QueryExtender" /> widoku formantu.</summary>
        <returns>Obiekt, który zawiera zapisany stan <see cref="T:System.Web.UI.WebControls.QueryExtender" /> formantu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControlID">
      <MemberSignature Language="C#" Value="public virtual string TargetControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TargetControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TargetControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetControlID : string with get, set" Usage="System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator formantu, <see cref="T:System.Web.UI.IDataSource" /> który ma być używany w zapytaniu.</summary>
        <value>Identyfikator formantu źródła danych, który ma być używany w zapytaniu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="queryExtender.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Śledzi zmiany <see cref="T:System.Web.UI.WebControls.QueryExtender" /> stanu widoku kontrolki, tak aby zmiany mogły być przechowywane <see cref="T:System.Web.UI.StateBag" /> w obiekcie dla kontrolki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
